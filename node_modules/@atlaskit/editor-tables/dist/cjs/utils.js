"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "addColSpan", {
  enumerable: true,
  get: function get() {
    return _colspan.addColSpan;
  }
});
Object.defineProperty(exports, "addColumn", {
  enumerable: true,
  get: function get() {
    return _addColumn.addColumn;
  }
});
Object.defineProperty(exports, "addColumnAt", {
  enumerable: true,
  get: function get() {
    return _addColumnAt.addColumnAt;
  }
});
Object.defineProperty(exports, "addRow", {
  enumerable: true,
  get: function get() {
    return _addRow.addRow;
  }
});
Object.defineProperty(exports, "addRowAt", {
  enumerable: true,
  get: function get() {
    return _addRowAt.addRowAt;
  }
});
Object.defineProperty(exports, "cellAround", {
  enumerable: true,
  get: function get() {
    return _cells.cellAround;
  }
});
Object.defineProperty(exports, "cellNear", {
  enumerable: true,
  get: function get() {
    return _cells.cellNear;
  }
});
Object.defineProperty(exports, "cellWrapping", {
  enumerable: true,
  get: function get() {
    return _splitCellWithType.cellWrapping;
  }
});
Object.defineProperty(exports, "cloneColumn", {
  enumerable: true,
  get: function get() {
    return _cloneColumn.cloneColumn;
  }
});
Object.defineProperty(exports, "cloneRow", {
  enumerable: true,
  get: function get() {
    return _cloneRow.cloneRow;
  }
});
Object.defineProperty(exports, "cloneTr", {
  enumerable: true,
  get: function get() {
    return _cloneTr.cloneTr;
  }
});
Object.defineProperty(exports, "columnIsHeader", {
  enumerable: true,
  get: function get() {
    return _addColumn.columnIsHeader;
  }
});
Object.defineProperty(exports, "convertArrayOfRowsToTableNode", {
  enumerable: true,
  get: function get() {
    return _reorderUtils.convertArrayOfRowsToTableNode;
  }
});
Object.defineProperty(exports, "convertTableNodeToArrayOfRows", {
  enumerable: true,
  get: function get() {
    return _reorderUtils.convertTableNodeToArrayOfRows;
  }
});
Object.defineProperty(exports, "createTable", {
  enumerable: true,
  get: function get() {
    return _createTable.createTable;
  }
});
Object.defineProperty(exports, "drawCellSelection", {
  enumerable: true,
  get: function get() {
    return _drawCellSelection.drawCellSelection;
  }
});
Object.defineProperty(exports, "emptyCell", {
  enumerable: true,
  get: function get() {
    return _emptyCells.emptyCell;
  }
});
Object.defineProperty(exports, "findCellClosestToPos", {
  enumerable: true,
  get: function get() {
    return _find.findCellClosestToPos;
  }
});
Object.defineProperty(exports, "findCellRectClosestToPos", {
  enumerable: true,
  get: function get() {
    return _find.findCellRectClosestToPos;
  }
});
Object.defineProperty(exports, "findTable", {
  enumerable: true,
  get: function get() {
    return _find.findTable;
  }
});
Object.defineProperty(exports, "findTableClosestToPos", {
  enumerable: true,
  get: function get() {
    return _find.findTableClosestToPos;
  }
});
Object.defineProperty(exports, "fixTables", {
  enumerable: true,
  get: function get() {
    return _fixTables.fixTables;
  }
});
Object.defineProperty(exports, "forEachCellInColumn", {
  enumerable: true,
  get: function get() {
    return _forEachCell.forEachCellInColumn;
  }
});
Object.defineProperty(exports, "forEachCellInRow", {
  enumerable: true,
  get: function get() {
    return _forEachCell.forEachCellInRow;
  }
});
Object.defineProperty(exports, "getCellSelectionRanges", {
  enumerable: true,
  get: function get() {
    return _getCellSelectionRanges.getCellSelectionRanges;
  }
});
Object.defineProperty(exports, "getCellsInColumn", {
  enumerable: true,
  get: function get() {
    return _getCellsInColumn.getCellsInColumn;
  }
});
Object.defineProperty(exports, "getCellsInRow", {
  enumerable: true,
  get: function get() {
    return _getCellsInRow.getCellsInRow;
  }
});
Object.defineProperty(exports, "getCellsInTable", {
  enumerable: true,
  get: function get() {
    return _getCellsInTable.getCellsInTable;
  }
});
Object.defineProperty(exports, "getSelectedCellInfo", {
  enumerable: true,
  get: function get() {
    return _analyticsHelpers.getSelectedCellInfo;
  }
});
Object.defineProperty(exports, "getSelectedTableInfo", {
  enumerable: true,
  get: function get() {
    return _analyticsHelpers.getSelectedTableInfo;
  }
});
Object.defineProperty(exports, "getSelectionRangeInColumn", {
  enumerable: true,
  get: function get() {
    return _getSelectionRangeInColumn.getSelectionRangeInColumn;
  }
});
Object.defineProperty(exports, "getSelectionRangeInRow", {
  enumerable: true,
  get: function get() {
    return _getSelectionRangeInRow.getSelectionRangeInRow;
  }
});
Object.defineProperty(exports, "getSelectionRect", {
  enumerable: true,
  get: function get() {
    return _getSelectionRect.getSelectionRect;
  }
});
Object.defineProperty(exports, "goToNextCell", {
  enumerable: true,
  get: function get() {
    return _goToNextCell.goToNextCell;
  }
});
Object.defineProperty(exports, "handlePaste", {
  enumerable: true,
  get: function get() {
    return _handlePaste.handlePaste;
  }
});
Object.defineProperty(exports, "inSameTable", {
  enumerable: true,
  get: function get() {
    return _tables.inSameTable;
  }
});
Object.defineProperty(exports, "isColumnSelected", {
  enumerable: true,
  get: function get() {
    return _isSelected.isColumnSelected;
  }
});
Object.defineProperty(exports, "isInTable", {
  enumerable: true,
  get: function get() {
    return _tables.isInTable;
  }
});
Object.defineProperty(exports, "isRectSelected", {
  enumerable: true,
  get: function get() {
    return _isSelected.isRectSelected;
  }
});
Object.defineProperty(exports, "isRowSelected", {
  enumerable: true,
  get: function get() {
    return _isSelected.isRowSelected;
  }
});
Object.defineProperty(exports, "isSelectionType", {
  enumerable: true,
  get: function get() {
    return _isSelectionType.isSelectionType;
  }
});
Object.defineProperty(exports, "isTableSelected", {
  enumerable: true,
  get: function get() {
    return _isSelected.isTableSelected;
  }
});
Object.defineProperty(exports, "moveColumn", {
  enumerable: true,
  get: function get() {
    return _moveColumn.moveColumn;
  }
});
Object.defineProperty(exports, "moveRow", {
  enumerable: true,
  get: function get() {
    return _moveRow.moveRow;
  }
});
Object.defineProperty(exports, "nextCell", {
  enumerable: true,
  get: function get() {
    return _cells.nextCell;
  }
});
Object.defineProperty(exports, "normalizeSelection", {
  enumerable: true,
  get: function get() {
    return _normalizeSelection.normalizeSelection;
  }
});
Object.defineProperty(exports, "pointsAtCell", {
  enumerable: true,
  get: function get() {
    return _cells.pointsAtCell;
  }
});
Object.defineProperty(exports, "removeColSpan", {
  enumerable: true,
  get: function get() {
    return _colspan.removeColSpan;
  }
});
Object.defineProperty(exports, "removeColumnAt", {
  enumerable: true,
  get: function get() {
    return _removeColumn.removeColumnAt;
  }
});
Object.defineProperty(exports, "removeColumnClosestToPos", {
  enumerable: true,
  get: function get() {
    return _removeColumn.removeColumnClosestToPos;
  }
});
Object.defineProperty(exports, "removeRowAt", {
  enumerable: true,
  get: function get() {
    return _removeRow.removeRowAt;
  }
});
Object.defineProperty(exports, "removeRowClosestToPos", {
  enumerable: true,
  get: function get() {
    return _removeRow.removeRowClosestToPos;
  }
});
Object.defineProperty(exports, "removeSelectedColumns", {
  enumerable: true,
  get: function get() {
    return _removeColumn.removeSelectedColumns;
  }
});
Object.defineProperty(exports, "removeSelectedRows", {
  enumerable: true,
  get: function get() {
    return _removeRow.removeSelectedRows;
  }
});
Object.defineProperty(exports, "removeTable", {
  enumerable: true,
  get: function get() {
    return _removeTable.removeTable;
  }
});
Object.defineProperty(exports, "replaceSelectedTable", {
  enumerable: true,
  get: function get() {
    return _replaceTable.replaceSelectedTable;
  }
});
Object.defineProperty(exports, "selectColumn", {
  enumerable: true,
  get: function get() {
    return _selectNodes.selectColumn;
  }
});
Object.defineProperty(exports, "selectColumns", {
  enumerable: true,
  get: function get() {
    return _selectNodes.selectColumns;
  }
});
Object.defineProperty(exports, "selectRow", {
  enumerable: true,
  get: function get() {
    return _selectNodes.selectRow;
  }
});
Object.defineProperty(exports, "selectRows", {
  enumerable: true,
  get: function get() {
    return _selectNodes.selectRows;
  }
});
Object.defineProperty(exports, "selectTable", {
  enumerable: true,
  get: function get() {
    return _selectNodes.selectTable;
  }
});
Object.defineProperty(exports, "selectTableClosestToPos", {
  enumerable: true,
  get: function get() {
    return _selectNodes.selectTableClosestToPos;
  }
});
Object.defineProperty(exports, "selectedRect", {
  enumerable: true,
  get: function get() {
    return _selectionRect.selectedRect;
  }
});
Object.defineProperty(exports, "selectionCell", {
  enumerable: true,
  get: function get() {
    return _selectionCell.selectionCell;
  }
});
Object.defineProperty(exports, "setCellAttrs", {
  enumerable: true,
  get: function get() {
    return _setCellAttrs.setCellAttrs;
  }
});
Object.defineProperty(exports, "splitCell", {
  enumerable: true,
  get: function get() {
    return _splitCell.splitCell;
  }
});
Object.defineProperty(exports, "splitCellWithType", {
  enumerable: true,
  get: function get() {
    return _splitCellWithType.splitCellWithType;
  }
});
Object.defineProperty(exports, "tableNodeTypes", {
  enumerable: true,
  get: function get() {
    return _tableNodeTypes.tableNodeTypes;
  }
});
Object.defineProperty(exports, "toggleHeader", {
  enumerable: true,
  get: function get() {
    return _toggleHeader.toggleHeader;
  }
});
var _addColumnAt = require("./utils/add-column-at");
var _addColumn = require("./utils/add-column");
var _addRowAt = require("./utils/add-row-at");
var _addRow = require("./utils/add-row");
var _cells = require("./utils/cells");
var _cloneTr = require("./utils/clone-tr");
var _colspan = require("./utils/colspan");
var _createTable = require("./utils/create-table");
var _drawCellSelection = require("./utils/draw-cell-selection");
var _emptyCells = require("./utils/empty-cells");
var _find = require("./utils/find");
var _fixTables = require("./utils/fix-tables");
var _forEachCell = require("./utils/for-each-cell");
var _getCellSelectionRanges = require("./utils/get-cell-selection-ranges");
var _getCellsInColumn = require("./utils/get-cells-in-column");
var _getCellsInRow = require("./utils/get-cells-in-row");
var _getCellsInTable = require("./utils/get-cells-in-table");
var _getSelectionRangeInColumn = require("./utils/get-selection-range-in-column");
var _getSelectionRangeInRow = require("./utils/get-selection-range-in-row");
var _getSelectionRect = require("./utils/get-selection-rect");
var _goToNextCell = require("./utils/go-to-next-cell");
var _isSelected = require("./utils/is-selected");
var _isSelectionType = require("./utils/is-selection-type");
var _moveColumn = require("./utils/move-column");
var _moveRow = require("./utils/move-row");
var _cloneColumn = require("./utils/clone-column");
var _cloneRow = require("./utils/clone-row");
var _normalizeSelection = require("./utils/normalize-selection");
var _removeColumn = require("./utils/remove-column");
var _removeRow = require("./utils/remove-row");
var _removeTable = require("./utils/remove-table");
var _selectNodes = require("./utils/select-nodes");
var _selectionCell = require("./utils/selection-cell");
var _selectionRect = require("./utils/selection-rect");
var _setCellAttrs = require("./utils/set-cell-attrs");
var _splitCellWithType = require("./utils/split-cell-with-type");
var _splitCell = require("./utils/split-cell");
var _tableNodeTypes = require("./utils/table-node-types");
var _tables = require("./utils/tables");
var _toggleHeader = require("./utils/toggle-header");
var _reorderUtils = require("./utils/reorder-utils");
var _handlePaste = require("./utils/handle-paste");
var _replaceTable = require("./utils/replace-table");
var _analyticsHelpers = require("./utils/analytics-helpers");