"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CellBookmark = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _state = require("@atlaskit/editor-prosemirror/state");
var _tables = require("./utils/tables");
/* eslint-disable @atlaskit/editor/no-re-export */
// Entry file in package.json
var CellBookmark = exports.CellBookmark = /*#__PURE__*/function () {
  function CellBookmark(anchor, head) {
    (0, _classCallCheck2.default)(this, CellBookmark);
    this.anchor = anchor;
    this.head = head;
  }
  return (0, _createClass2.default)(CellBookmark, [{
    key: "map",
    value: function map(mapping) {
      return new CellBookmark(mapping.map(this.anchor), mapping.map(this.head));
    }
  }, {
    key: "resolve",
    value: function resolve(doc) {
      var $anchorCell = doc.resolve(this.anchor);
      var $headCell = doc.resolve(this.head);
      if ($anchorCell.parent.type.spec.tableRole === 'row' && $headCell.parent.type.spec.tableRole === 'row' && $anchorCell.index() < $anchorCell.parent.childCount && $headCell.index() < $headCell.parent.childCount && (0, _tables.inSameTable)($anchorCell, $headCell)) {
        var data = {
          type: 'cell',
          anchor: $anchorCell.pos,
          head: $headCell.pos
        };
        return _state.Selection.fromJSON(doc, data);
      }
      return _state.Selection.near($headCell, 1);
    }
  }]);
}();