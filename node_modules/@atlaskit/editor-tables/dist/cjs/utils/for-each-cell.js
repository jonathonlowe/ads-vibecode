"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.forEachCellInRow = exports.forEachCellInColumn = void 0;
var _state = require("@atlaskit/editor-prosemirror/state");
var _cloneTr = require("./clone-tr");
var _getCellsInColumn = require("./get-cells-in-column");
var _getCellsInRow = require("./get-cells-in-row");
// Returns a new transaction that maps a given `cellTransform` function to each cell in a column at a given `columnIndex`.
// It will set the selection into the last cell of the column if `setCursorToLastCell` param is set to `true`.
var forEachCellInColumn = exports.forEachCellInColumn = function forEachCellInColumn(columnIndex, cellTransform, setCursorToLastCell) {
  return function (tr) {
    var cells = (0, _getCellsInColumn.getCellsInColumn)(columnIndex)(tr.selection);
    if (cells) {
      for (var i = cells.length - 1; i >= 0; i--) {
        tr = cellTransform(cells[i], tr);
      }
      if (setCursorToLastCell) {
        var $pos = tr.doc.resolve(tr.mapping.map(cells[cells.length - 1].pos));
        tr.setSelection(_state.Selection.near($pos));
      }
      return (0, _cloneTr.cloneTr)(tr);
    }
    return tr;
  };
};

// Returns a new transaction that maps a given `cellTransform` function to each cell in a row at a given `rowIndex`.
// It will set the selection into the last cell of the row if `setCursorToLastCell` param is set to `true`.
var forEachCellInRow = exports.forEachCellInRow = function forEachCellInRow(rowIndex, cellTransform, setCursorToLastCell) {
  return function (tr) {
    var cells = (0, _getCellsInRow.getCellsInRow)(rowIndex)(tr.selection);
    if (cells) {
      for (var i = cells.length - 1; i >= 0; i--) {
        tr = cellTransform(cells[i], tr);
      }
      if (setCursorToLastCell) {
        var $pos = tr.doc.resolve(tr.mapping.map(cells[cells.length - 1].pos));
        tr.setSelection(_state.Selection.near($pos));
      }
    }
    return tr;
  };
};