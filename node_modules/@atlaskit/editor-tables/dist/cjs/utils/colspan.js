"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addColSpan = addColSpan;
exports.assertColspan = assertColspan;
exports.removeColSpan = removeColSpan;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function removeColSpan(attrs, pos) {
  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  if (!attrs.colspan) {
    throw new Error('removeColSpan(): attrs.colspan not defined');
  }
  var result = _objectSpread(_objectSpread({}, attrs), {}, {
    colspan: attrs.colspan - n
  });
  if (result.colwidth) {
    result.colwidth = result.colwidth.slice();
    result.colwidth.splice(pos, n);
    if (!result.colwidth.some(function (w) {
      return w > 0;
    })) {
      result.colwidth = undefined;
    }
  }
  return result;
}
function assertColspan(attrs) {
  if (typeof attrs.colspan === 'undefined') {
    throw new Error('addColSpan: attrs.colspan is not defined');
  }
  if (typeof attrs.colspan !== 'number' || Number.isNaN(attrs.colspan) || attrs.colspan < 1) {
    throw new Error("addColSpan: attrs.colspan must be number >= 1, received: ".concat(attrs.colspan));
  }
}

// TODO: ED-26961 - replace "addColSpan" from table plugin with this function
function addColSpan(attrs, pos) {
  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  assertColspan(attrs);
  var result = _objectSpread(_objectSpread({}, attrs), {}, {
    colspan: attrs.colspan + n
  });
  if (result.colwidth) {
    result.colwidth = result.colwidth.slice();
    for (var i = 0; i < n; i++) {
      result.colwidth.splice(pos, 0, 0);
    }
  }
  return result;
}