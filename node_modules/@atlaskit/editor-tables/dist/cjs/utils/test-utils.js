"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addRowBefore = exports.addRowAfter = exports.addColumnBefore = exports.addColumnAfter = void 0;
var _addColumn = require("./add-column");
var _addRow = require("./add-row");
var _selectionRect = require("./selection-rect");
var _tables = require("./tables");
// :: (EditorState, dispatch: ?(tr: Transaction)) → bool
// Add a table row before the selection.
var addRowBefore = exports.addRowBefore = function addRowBefore(state, dispatch) {
  if (!(0, _tables.isInTable)(state)) {
    return false;
  }
  if (dispatch) {
    var rect = (0, _selectionRect.selectedRect)(state);
    dispatch((0, _addRow.addRow)(state.tr, rect, rect.top));
  }
  return true;
};

// :: (EditorState, dispatch: ?(tr: Transaction)) → bool
// Add a table row after the selection.
var addRowAfter = exports.addRowAfter = function addRowAfter(state, dispatch) {
  if (!(0, _tables.isInTable)(state)) {
    return false;
  }
  if (dispatch) {
    var rect = (0, _selectionRect.selectedRect)(state);
    dispatch((0, _addRow.addRow)(state.tr, rect, rect.bottom));
  }
  return true;
};

// :: (EditorState, dispatch: ?(tr: Transaction)) → bool
// Command to add a column before the column with the selection.
var addColumnBefore = exports.addColumnBefore = function addColumnBefore(state, dispatch) {
  if (!(0, _tables.isInTable)(state)) {
    return false;
  }
  if (dispatch) {
    var rect = (0, _selectionRect.selectedRect)(state);
    dispatch((0, _addColumn.addColumn)(state.tr, rect, rect.left));
  }
  return true;
};

// :: (EditorState, dispatch: ?(tr: Transaction)) → bool
// Command to add a column after the column with the selection.
var addColumnAfter = exports.addColumnAfter = function addColumnAfter(state, dispatch) {
  if (!(0, _tables.isInTable)(state)) {
    return false;
  }
  if (dispatch) {
    var rect = (0, _selectionRect.selectedRect)(state);
    dispatch((0, _addColumn.addColumn)(state.tr, rect, rect.right));
  }
  return true;
};