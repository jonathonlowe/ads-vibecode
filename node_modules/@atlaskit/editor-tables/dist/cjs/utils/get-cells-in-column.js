"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getCellsInColumn = void 0;
var _tableMap = require("../table-map");
var _find = require("./find");
// Returns an array of cells in a column(s), where `columnIndex` could be a column index or an array of column indexes.
var getCellsInColumn = exports.getCellsInColumn = function getCellsInColumn(columnIndexes) {
  return function (selection) {
    var table = (0, _find.findTable)(selection);
    if (!table) {
      return;
    }
    var map = _tableMap.TableMap.get(table.node);
    var indexes = Array.isArray(columnIndexes) ? columnIndexes : [columnIndexes];
    return indexes.filter(function (index) {
      return index >= 0 && index <= map.width - 1;
    }).reduce(function (acc, index) {
      var cells = map.cellsInRect({
        left: index,
        right: index + 1,
        top: 0,
        bottom: map.height
      });
      return acc.concat(cells.map(function (nodePos) {
        // Ignored via go/ees005
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        var node = table.node.nodeAt(nodePos);
        var pos = nodePos + table.start;
        return {
          pos: pos,
          start: pos + 1,
          node: node,
          depth: table.depth + 2
        };
      }));
    }, []);
  };
};