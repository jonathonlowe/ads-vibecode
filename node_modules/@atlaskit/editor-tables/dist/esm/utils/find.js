import { findParentNode, findParentNodeClosestToPos } from '@atlaskit/editor-prosemirror/utils';
import { TableMap } from '../table-map';

// Iterates over parent nodes, returning the closest table node.
export var findTable = function findTable(selection) {
  return findParentNode(function (node) {
    return node.type.spec.tableRole && node.type.spec.tableRole === 'table';
  })(selection);
};

// Iterates over parent nodes, returning a table node closest to a given `$pos`.
export var findTableClosestToPos = function findTableClosestToPos($pos) {
  var predicate = function predicate(node) {
    return node.type.spec.tableRole && node.type.spec.tableRole === 'table';
  };
  return findParentNodeClosestToPos($pos, predicate);
};

// Iterates over parent nodes, returning a table cell or a table header node closest to a given `$pos`.
export var findCellClosestToPos = function findCellClosestToPos($pos) {
  var predicate = function predicate(node) {
    return (
      // Ignored via go/ees005
      // eslint-disable-next-line require-unicode-regexp
      node.type.spec.tableRole && /cell/i.test(node.type.spec.tableRole)
    );
  };
  return findParentNodeClosestToPos($pos, predicate);
};

// Returns the rectangle spanning a cell closest to a given `$pos`.
export var findCellRectClosestToPos = function findCellRectClosestToPos($pos) {
  var cell = findCellClosestToPos($pos);
  if (cell) {
    var table = findTableClosestToPos($pos);
    if (table) {
      var map = TableMap.get(table.node);
      var cellPos = cell.pos - table.start;
      return map.rectBetween(cellPos, cellPos);
    }
  }
};