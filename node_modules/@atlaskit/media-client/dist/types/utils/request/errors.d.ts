import { BaseMediaClientError } from '../../models/errors';
import { type RequestErrorReason, type RequestErrorMetadata, type RequestErrorAttributes } from './types';
export declare class RequestError extends BaseMediaClientError<RequestErrorReason, RequestErrorMetadata | undefined, Error | undefined, RequestErrorAttributes> {
    constructor(reason: RequestErrorReason, metadata?: RequestErrorMetadata, innerError?: Error);
    /** Will be deprecated. Use the properties `reason` and `metadata` instead */
    get attributes(): {
        reason: RequestErrorReason;
        method: import("./types").RequestMethod | undefined;
        endpoint: string | undefined;
        mediaRegion: string | undefined;
        mediaEnv: string | undefined;
        attempts: number | undefined;
        clientExhaustedRetries: boolean | undefined;
        statusCode: number | undefined;
        metadata: {
            traceContext: import("@atlaskit/media-common").MediaTraceContext | undefined;
        };
        innerError: Error | undefined;
    };
}
export declare function isRequestError(err: Error): err is RequestError;
