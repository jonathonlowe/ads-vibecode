import { BaseMediaClientError } from '../models/errors';
export type UploaderErrorReason = 'fileSizeExceedsLimit';
export type UploaderErrorAttributes = {
    readonly reason: UploaderErrorReason;
    readonly id: string;
    readonly metadata?: {
        readonly collectionName?: string;
        readonly occurrenceKey?: string;
    };
};
export type UploaderErrorMetadata = {
    readonly id: string;
    readonly collectionName?: string;
    readonly occurrenceKey?: string;
};
export declare class UploaderError extends BaseMediaClientError<UploaderErrorReason, UploaderErrorMetadata, undefined, UploaderErrorAttributes> {
    readonly id: string;
    constructor(reason: UploaderErrorReason, metadata: UploaderErrorMetadata);
    /** Will be deprecated. Use the properties `reason` and `metadata` instead */
    get attributes(): {
        reason: "fileSizeExceedsLimit";
        id: string;
        collectionName: string | undefined;
        occurrenceKey: string | undefined;
    };
}
export declare function isUploaderError(err: Error): err is UploaderError;
