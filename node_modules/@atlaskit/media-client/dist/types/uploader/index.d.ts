import { type ChunkinatorFile } from '@atlaskit/chunkinator';
import { type MediaStore } from '../client/media-store';
import { type MediaTraceContext } from '@atlaskit/media-common';
export type UploadableFile = {
    content: ChunkinatorFile;
    name?: string;
    mimeType?: string;
    collection?: string;
    size?: number;
};
export type UploadableFileUpfrontIds = {
    id: string;
    deferredUploadId: Promise<string>;
    occurrenceKey?: string;
};
export type UploadFileCallbacks = {
    onProgress: (progress: number) => void;
    onUploadFinish: (error?: any) => void;
};
export interface UploadFileResult {
    cancel: () => void;
}
export declare const uploadFile: (file: UploadableFile, store: MediaStore, uploadableFileUpfrontIds: UploadableFileUpfrontIds, callbacks?: UploadFileCallbacks, traceContext?: MediaTraceContext) => UploadFileResult;
