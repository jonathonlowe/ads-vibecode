import { type LRUMap } from 'lru_map';
import { type ReplaySubject } from 'rxjs/ReplaySubject';
import { type FileState } from '@atlaskit/media-state';
export declare class StreamsCache<T> {
    private readonly streams;
    constructor(streams: LRUMap<string, ReplaySubject<T>>);
    has(id: string): boolean;
    set(id: string, stream: ReplaySubject<T>): void;
    get(id: string): ReplaySubject<T> | undefined;
    getOrInsert(id: string, callback: () => ReplaySubject<T>): ReplaySubject<T>;
    removeAll(): void;
    remove(id: string): void;
    get size(): number;
}
export declare const getFileStreamsCache: () => StreamsCache<FileState>;
