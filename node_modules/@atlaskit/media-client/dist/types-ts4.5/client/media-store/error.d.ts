import { BaseMediaClientError } from '../../models/errors';
export type MediaStoreErrorReason = 'failedAuthProvider' | 'tokenExpired' | 'missingInitialAuth' | 'emptyAuth' | 'authProviderTimedOut';
export type MediaStoreErrorAttributes = {
    readonly reason: MediaStoreErrorReason;
    readonly innerError?: Error;
};
export declare class MediaStoreError extends BaseMediaClientError<MediaStoreErrorReason, undefined, Error | undefined, MediaStoreErrorAttributes> {
    constructor(reason: MediaStoreErrorReason, innerError?: Error);
    /** Will be deprecated. Use the properties `reason` and `metadata` instead */
    get attributes(): {
        reason: MediaStoreErrorReason;
        innerError: Error | undefined;
    };
}
export declare function isMediaStoreError(err: Error): err is MediaStoreError;
