import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _regeneratorRuntime from "@babel/runtime/regenerator";
export var StargateClient = /*#__PURE__*/function () {
  function StargateClient(baseUrl) {
    _classCallCheck(this, StargateClient);
    this.baseUrl = baseUrl || '/gateway/api';
  }
  return _createClass(StargateClient, [{
    key: "fetchToken",
    value: function () {
      var _fetchToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(clientId) {
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return fetch("".concat(this.baseUrl, "/media/auth/smartedge"), {
                credentials: 'include',
                headers: {
                  'x-client-id': clientId
                }
              });
            case 2:
              return _context.abrupt("return", _context.sent.json());
            case 3:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function fetchToken(_x) {
        return _fetchToken.apply(this, arguments);
      }
      return fetchToken;
    }()
  }, {
    key: "isTokenExpired",
    value: function isTokenExpired(token) {
      var currentTimeInSeconds = new Date().getTime() / 1000;
      return token.data.iat + token.data.expiresIn - currentTimeInSeconds < 0;
    }
  }]);
}();