"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MEDIA_CDN_MAP = void 0;
exports.mapToMediaCdnUrl = mapToMediaCdnUrl;
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _isCommercial = require("./isCommercial");
var MEDIA_CDN_MAP = exports.MEDIA_CDN_MAP = {
  'api.media.atlassian.com': 'media-cdn.atlassian.com',
  'media.staging.atl-paas.net': 'media-cdn.stg.atlassian.com'
};

// Cloudfront has a hard limit of 8,192 bytes
// https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html
// Assuming other parts of the URL make up a max of ~1000 (in reality it's lower), the token can be ~7000
var MEDIA_TOKEN_LENGTH_LIMIT = 7000;
function mapToMediaCdnUrl(url, token) {
  var _token$length;
  var tokenLength = (_token$length = token === null || token === void 0 ? void 0 : token.length) !== null && _token$length !== void 0 ? _token$length : 0;
  if (!(0, _isCommercial.isCommercial)() || tokenLength > MEDIA_TOKEN_LENGTH_LIMIT) {
    return url;
  }
  // eslint-disable-next-line @atlaskit/platform/no-preconditioning
  if ((0, _platformFeatureFlags.fg)('platform_media_cdn_delivery') && (0, _platformFeatureFlags.fg)('platform_media_cdn_single_host')) {
    try {
      var parsedUrl = new URL(url);
      var cdnHost = MEDIA_CDN_MAP[parsedUrl.host];

      // If no mapping is found, return the original URL
      if (!cdnHost) {
        return url;
      }

      // Replace the host with the CDN host in the original URL
      parsedUrl.host = cdnHost;
      return parsedUrl.toString();
    } catch (error) {
      return url;
    }
  }
  return url;
}