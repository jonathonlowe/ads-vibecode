"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.destroyHasher = exports.createHasher = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _mediaCore = require("@atlaskit/media-core");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var hasher = null;
var sha256Hasher = null;
var destroyHasher = exports.destroyHasher = function destroyHasher() {
  return hasher = null;
};
var createHasher = exports.createHasher = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(algorithm) {
    var numWorkers, _yield$import, SimpleHasher, _yield$import2, WorkerHasher, _yield$import3, _SimpleHasher;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          numWorkers = 3;
          if (!(algorithm === _mediaCore.ChunkHashAlgorithm.Sha256)) {
            _context.next = 11;
            break;
          }
          if (sha256Hasher) {
            _context.next = 8;
            break;
          }
          _context.next = 5;
          return Promise.resolve().then(function () {
            return _interopRequireWildcard(require('./sha256SimpleHasher'));
          });
        case 5:
          _yield$import = _context.sent;
          SimpleHasher = _yield$import.SimpleHasher;
          sha256Hasher = new SimpleHasher();
        case 8:
          return _context.abrupt("return", sha256Hasher);
        case 11:
          if (hasher) {
            _context.next = 27;
            break;
          }
          _context.prev = 12;
          _context.next = 15;
          return Promise.resolve().then(function () {
            return _interopRequireWildcard(require('./workerHasher'));
          });
        case 15:
          _yield$import2 = _context.sent;
          WorkerHasher = _yield$import2.WorkerHasher;
          hasher = new WorkerHasher(numWorkers);
          _context.next = 27;
          break;
        case 20:
          _context.prev = 20;
          _context.t0 = _context["catch"](12);
          _context.next = 24;
          return Promise.resolve().then(function () {
            return _interopRequireWildcard(require('./simpleHasher'));
          });
        case 24:
          _yield$import3 = _context.sent;
          _SimpleHasher = _yield$import3.SimpleHasher;
          hasher = new _SimpleHasher();
        case 27:
          return _context.abrupt("return", hasher);
        case 28:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[12, 20]]);
  }));
  return function createHasher(_x) {
    return _ref.apply(this, arguments);
  };
}();