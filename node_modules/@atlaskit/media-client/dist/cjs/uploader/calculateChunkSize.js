"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fileSizeError = exports.calculateChunkSize = void 0;
var _media = require("../models/media");
var _constants = require("../constants");
var fileSizeError = exports.fileSizeError = 'fileSizeExceedsLimit';

/**
 * This is a helper to dynamically calculate the chunk size for a given file size.
 *
 * @param fileSize The size of a file to calculate the chunk size for.
 * @returns A number of bytes per chunk or Throws an Error if the file size exceeds 2TB
 *
 * @see {@link https://product-fabric.atlassian.net/wiki/spaces/FIL/pages/3221881143/Rule+of+thumb+for+chunk+sizes#Given-the-following-conditions}
 *
 */

var calculateChunkSize = exports.calculateChunkSize = function calculateChunkSize(fileSize) {
  if (fileSize > _constants.MAX_UPLOAD_FILE_SIZE) {
    throw new Error(fileSizeError);
  }
  if (fileSize <= 5 * _media.DATA_UNIT.GB) {
    return 5 * _media.DATA_UNIT.MB;
  }
  if (fileSize > 5 * _media.DATA_UNIT.GB && fileSize <= 50 * _media.DATA_UNIT.GB) {
    return 50 * _media.DATA_UNIT.MB;
  }
  if (fileSize > 50 * _media.DATA_UNIT.GB && fileSize <= 0.95 * _media.DATA_UNIT.TB) {
    return 100 * _media.DATA_UNIT.MB;
  }
  return 210 * _media.DATA_UNIT.MB;
};