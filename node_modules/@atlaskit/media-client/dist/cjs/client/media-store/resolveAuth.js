"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resolveInitialAuth = exports.resolveAuth = exports.DEFAULT_AUTH_PROVIDER_TIMEOUT = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _error = require("./error");
var _setTimeoutPromise = require("../../utils/setTimeoutPromise");
var DEFAULT_AUTH_PROVIDER_TIMEOUT = exports.DEFAULT_AUTH_PROVIDER_TIMEOUT = 10000;
var resolveAuth = exports.resolveAuth = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(authProvider, authContext) {
    var authProviderTimeout,
      auth,
      _args = arguments;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          authProviderTimeout = _args.length > 2 && _args[2] !== undefined ? _args[2] : DEFAULT_AUTH_PROVIDER_TIMEOUT;
          _context.prev = 1;
          _context.next = 4;
          return Promise.race([authProvider(authContext), (0, _setTimeoutPromise.rejectTimeout)(authProviderTimeout, new _error.MediaStoreError('authProviderTimedOut'))]);
        case 4:
          auth = _context.sent;
          _context.next = 12;
          break;
        case 7:
          _context.prev = 7;
          _context.t0 = _context["catch"](1);
          if (!(_context.t0 instanceof _error.MediaStoreError)) {
            _context.next = 11;
            break;
          }
          throw _context.t0;
        case 11:
          throw new _error.MediaStoreError('failedAuthProvider', _context.t0 instanceof Error ? _context.t0 : undefined);
        case 12:
          if (auth) {
            _context.next = 14;
            break;
          }
          throw new _error.MediaStoreError('emptyAuth');
        case 14:
          return _context.abrupt("return", auth);
        case 15:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[1, 7]]);
  }));
  return function resolveAuth(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();
var resolveInitialAuth = exports.resolveInitialAuth = function resolveInitialAuth(auth) {
  if (!auth) {
    throw new _error.MediaStoreError('missingInitialAuth');
  }
  return auth;
};