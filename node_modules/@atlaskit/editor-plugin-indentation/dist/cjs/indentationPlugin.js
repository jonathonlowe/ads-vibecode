"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.indentationPlugin = void 0;
var _adfSchema = require("@atlaskit/adf-schema");
var _indentation = require("@atlaskit/editor-common/indentation");
var _editorCommands = require("./editor-commands");
var _keymap = require("./pm-plugins/keymap");
var indentationPlugin = exports.indentationPlugin = function indentationPlugin(_ref) {
  var _api$analytics, _api$analytics2;
  var api = _ref.api;
  return {
    name: 'indentation',
    marks: function marks() {
      return [{
        name: 'indentation',
        mark: _adfSchema.indentation
      }];
    },
    actions: {
      indentParagraphOrHeading: (0, _editorCommands.getIndentCommand)(api === null || api === void 0 || (_api$analytics = api.analytics) === null || _api$analytics === void 0 ? void 0 : _api$analytics.actions),
      outdentParagraphOrHeading: (0, _editorCommands.getOutdentCommand)(api === null || api === void 0 || (_api$analytics2 = api.analytics) === null || _api$analytics2 === void 0 ? void 0 : _api$analytics2.actions)
    },
    getSharedState: function getSharedState(editorState) {
      var _ref2;
      if (!editorState) {
        return undefined;
      }
      var selection = editorState.tr.selection,
        indentation = editorState.schema.marks.indentation;
      var node = selection.$from.node();
      var indentationMark = node.marks.find(function (mark) {
        return mark.type === indentation;
      });
      return {
        isIndentationAllowed: (0, _editorCommands.isIndentationAllowed)(editorState.schema, node),
        indentDisabled: (_ref2 = (indentationMark === null || indentationMark === void 0 ? void 0 : indentationMark.attrs.level) >= _indentation.MAX_INDENTATION_LEVEL) !== null && _ref2 !== void 0 ? _ref2 : false,
        outdentDisabled: !indentationMark
      };
    },
    pmPlugins: function pmPlugins() {
      return [{
        name: 'indentationKeymap',
        plugin: function plugin() {
          var _api$analytics3;
          return (0, _keymap.keymapPlugin)(api === null || api === void 0 || (_api$analytics3 = api.analytics) === null || _api$analytics3 === void 0 ? void 0 : _api$analytics3.actions);
        }
      }];
    }
  };
};