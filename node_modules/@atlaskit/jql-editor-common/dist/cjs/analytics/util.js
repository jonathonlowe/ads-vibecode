"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useJqlPackageAnalytics = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = require("react");
var _analyticsNext = require("@atlaskit/analytics-next");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var useJqlPackageAnalytics = exports.useJqlPackageAnalytics = function useJqlPackageAnalytics(analyticsSource, packageName, packageVersion, analyticsChannel) {
  var _useAnalyticsEvents = (0, _analyticsNext.useAnalyticsEvents)(),
    createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;
  var createAndFireAnalyticsEvent = (0, _react.useCallback)(function (payload) {
    var event = createAnalyticsEvent(_objectSpread(_objectSpread({}, payload), {}, {
      attributes: _objectSpread(_objectSpread({}, payload.attributes), {}, {
        analyticsSource: analyticsSource,
        packageName: packageName,
        packageVersion: packageVersion
      })
    }));
    event.fire(analyticsChannel);
  }, [createAnalyticsEvent, analyticsSource, packageName, packageVersion, analyticsChannel]);
  return {
    createAndFireAnalyticsEvent: createAndFireAnalyticsEvent
  };
};