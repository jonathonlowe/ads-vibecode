import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
import React from 'react';
import ReactDOM from 'react-dom';
export default function withOuterListeners(Component) {
  return /*#__PURE__*/function (_React$PureComponent) {
    function WithOuterListeners() {
      var _this;
      _classCallCheck(this, WithOuterListeners);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _callSuper(this, WithOuterListeners, [].concat(args));
      _defineProperty(_this, "handleClick", function (evt) {
        var handleClickOutside = _this.props.handleClickOutside;
        if (handleClickOutside) {
          var domNode = ReactDOM.findDOMNode(_this); // eslint-disable-line react/no-find-dom-node

          if (!domNode || evt.target instanceof Node && !domNode.contains(evt.target)) {
            handleClickOutside();
          }
        }
      });
      _defineProperty(_this, "handleKeydown", function (evt) {
        var handleEscapeKeydown = _this.props.handleEscapeKeydown;
        if (handleEscapeKeydown && evt.code === 'Escape') {
          handleEscapeKeydown();
        }
      });
      return _this;
    }
    _inherits(WithOuterListeners, _React$PureComponent);
    return _createClass(WithOuterListeners, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this.props.handleClickOutside) {
          document.addEventListener('click', this.handleClick, false);
        }
        if (this.props.handleEscapeKeydown) {
          document.addEventListener('keydown', this.handleKeydown, false);
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.props.handleClickOutside) {
          document.removeEventListener('click', this.handleClick, false);
        }
        if (this.props.handleEscapeKeydown) {
          document.removeEventListener('keydown', this.handleKeydown, false);
        }
      }
    }, {
      key: "render",
      value: function render() {
        return /*#__PURE__*/React.createElement(Component, this.props);
      }
    }]);
  }(React.PureComponent);
}