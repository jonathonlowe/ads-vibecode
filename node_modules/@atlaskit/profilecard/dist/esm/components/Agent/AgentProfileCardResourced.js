import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
import _regeneratorRuntime from "@babel/runtime/regenerator";
import React, { Suspense, useCallback, useEffect, useMemo, useState } from 'react';
import { useAnalyticsEvents } from '@atlaskit/analytics-next';
import { fireEvent } from '../../util/analytics';
import { getAAIDFromARI } from '../../util/rovoAgentUtils';
import ErrorMessage from '../Error/ErrorMessage';
import { AgentProfileCardWrapper } from './AgentProfileCardWrapper';
import { AgentProfileCardLazy } from './lazyAgentProfileCard';
export var AgentProfileCardResourced = function AgentProfileCardResourced(props) {
  var _useState = useState(),
    _useState2 = _slicedToArray(_useState, 2),
    agentData = _useState2[0],
    setAgentData = _useState2[1];
  var _useState3 = useState(false),
    _useState4 = _slicedToArray(_useState3, 2),
    isLoading = _useState4[0],
    setIsLoading = _useState4[1];
  var _useState5 = useState(),
    _useState6 = _slicedToArray(_useState5, 2),
    error = _useState6[0],
    setError = _useState6[1];
  var _useAnalyticsEvents = useAnalyticsEvents(),
    createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;
  var fireAnalytics = useCallback(function (payload) {
    if (createAnalyticsEvent) {
      fireEvent(createAnalyticsEvent, payload);
    }
  }, [createAnalyticsEvent]);
  var creatorUserId = useMemo(function () {
    return (agentData === null || agentData === void 0 ? void 0 : agentData.creator_type) === 'CUSTOMER' && agentData.creator ? getAAIDFromARI(agentData.creator) : '';
  }, [agentData === null || agentData === void 0 ? void 0 : agentData.creator_type, agentData === null || agentData === void 0 ? void 0 : agentData.creator]);
  var getCreator = useCallback( /*#__PURE__*/function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(creator_type, creator) {
      var creatorInfo;
      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            if (creator) {
              _context.next = 2;
              break;
            }
            return _context.abrupt("return", undefined);
          case 2:
            _context.t0 = creator_type;
            _context.next = _context.t0 === 'SYSTEM' ? 5 : _context.t0 === 'THIRD_PARTY' ? 6 : _context.t0 === 'CUSTOMER' ? 7 : 19;
            break;
          case 5:
            return _context.abrupt("return", {
              type: 'SYSTEM'
            });
          case 6:
            return _context.abrupt("return", {
              type: 'THIRD_PARTY',
              name: creator !== null && creator !== void 0 ? creator : ''
            });
          case 7:
            _context.prev = 7;
            if (!(!creatorUserId || !props.cloudId)) {
              _context.next = 10;
              break;
            }
            return _context.abrupt("return", undefined);
          case 10:
            _context.next = 12;
            return props.resourceClient.getProfile(creatorUserId, props.cloudId, fireAnalytics);
          case 12:
            creatorInfo = _context.sent;
            return _context.abrupt("return", {
              type: 'CUSTOMER',
              name: creatorInfo.fullName,
              profileLink: "/people/".concat(creatorUserId),
              id: creatorUserId
            });
          case 16:
            _context.prev = 16;
            _context.t1 = _context["catch"](7);
            return _context.abrupt("return", undefined);
          case 19:
            return _context.abrupt("return", undefined);
          case 20:
          case "end":
            return _context.stop();
        }
      }, _callee, null, [[7, 16]]);
    }));
    return function (_x, _x2) {
      return _ref.apply(this, arguments);
    };
  }(), [creatorUserId, fireAnalytics, props.cloudId, props.resourceClient]);
  var fetchData = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
    var profileData, agentCreatorInfo;
    return _regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          setIsLoading(true);
          _context2.prev = 1;
          _context2.next = 4;
          return props.resourceClient.getRovoAgentProfile({
            type: 'identity',
            value: props.accountId
          }, fireAnalytics);
        case 4:
          profileData = _context2.sent;
          _context2.next = 7;
          return getCreator(profileData === null || profileData === void 0 ? void 0 : profileData.creator_type, (profileData === null || profileData === void 0 ? void 0 : profileData.creator) || undefined);
        case 7:
          agentCreatorInfo = _context2.sent;
          setAgentData(_objectSpread(_objectSpread({}, profileData), {}, {
            creatorInfo: agentCreatorInfo
          }));
          _context2.next = 14;
          break;
        case 11:
          _context2.prev = 11;
          _context2.t0 = _context2["catch"](1);
          setError(_context2.t0);
        case 14:
          _context2.prev = 14;
          setIsLoading(false);
          return _context2.finish(14);
        case 17:
        case "end":
          return _context2.stop();
      }
    }, _callee2, null, [[1, 11, 14, 17]]);
  })), [fireAnalytics, getCreator, props.accountId, props.resourceClient]);
  useEffect(function () {
    fetchData();
  }, [fetchData]);
  if (error || !isLoading && !agentData) {
    return /*#__PURE__*/React.createElement(AgentProfileCardWrapper, null, /*#__PURE__*/React.createElement(ErrorMessage, {
      reload: function reload() {
        fetchData();
      },
      errorType: error || null,
      fireAnalytics: function fireAnalytics() {}
    }));
  }
  return /*#__PURE__*/React.createElement(Suspense, {
    fallback: null
  }, /*#__PURE__*/React.createElement(AgentProfileCardLazy, {
    agent: agentData,
    isLoading: isLoading,
    hasError: !!error,
    isCreatedByViewingUser: creatorUserId === props.viewingUserId,
    product: props.product,
    onConversationStartersClick: props.onConversationStartersClick,
    onChatClick: props.onChatClick,
    addFlag: props.addFlag,
    resourceClient: props.resourceClient,
    cloudId: props.cloudId
  }));
};