/* CoverImage.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CoverImage = void 0;
require("./CoverImage.compiled.css");
var _runtime = require("@compiled/react/runtime");
var _react = _interopRequireWildcard(require("react"));
var _compiled = require("@atlaskit/primitives/compiled");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var styles = {
  container: "_1reo15vq _18m915vq _1bsb1osq _4t3i1qr7 _kqswh2mm _13liglpi _qrwqglpi _1e0c1txw _1bah1h6o _4cvr1h6o",
  image: "_1bsbnklw _4t3i1wug"
};

/**
 * This is instead of using background-image in CSS as design-system doesn't support that
 */
var CoverImage = exports.CoverImage = function CoverImage(_ref) {
  var src = _ref.src,
    _ref$alt = _ref.alt,
    alt = _ref$alt === void 0 ? '' : _ref$alt;
  var containerRef = (0, _react.useRef)(null);
  var imgRef = (0, _react.useRef)(null);
  return /*#__PURE__*/_react.default.createElement(_compiled.Box, {
    ref: containerRef,
    xcss: styles.container,
    backgroundColor: "color.background.neutral"
  }, /*#__PURE__*/_react.default.createElement(_compiled.Box, {
    as: "img",
    ref: imgRef,
    src: src,
    alt: alt,
    xcss: styles.image
  }));
};