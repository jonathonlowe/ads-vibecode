"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _analytics = require("../util/analytics");
var _performance = require("../util/performance");
var _CachingClient2 = _interopRequireDefault(require("./CachingClient"));
var _errorUtils = require("./errorUtils");
var _getTeamFromAGG = require("./getTeamFromAGG");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var TeamProfileCardClient = exports.default = /*#__PURE__*/function (_CachingClient) {
  function TeamProfileCardClient(options) {
    var _this;
    (0, _classCallCheck2.default)(this, TeamProfileCardClient);
    _this = _callSuper(this, TeamProfileCardClient, [options]);
    _this.options = options;
    return _this;
  }
  (0, _inherits2.default)(TeamProfileCardClient, _CachingClient);
  return (0, _createClass2.default)(TeamProfileCardClient, [{
    key: "makeRequest",
    value: function makeRequest(teamId, _orgId) {
      if (!this.options.gatewayGraphqlUrl) {
        throw new Error('Trying to fetch via gateway with no specified config.gatewayGraphqlUrl');
      }
      return (0, _getTeamFromAGG.getTeamFromAGG)(this.options.gatewayGraphqlUrl, teamId, this.options.cloudId);
    }
  }, {
    key: "getProfile",
    value: function getProfile(teamId, orgId, analytics) {
      var _this2 = this;
      if (!teamId) {
        return Promise.reject(new Error('teamId is missing'));
      }
      var cache = this.getCachedProfile(teamId);
      if (cache) {
        return Promise.resolve(cache);
      }
      return new Promise(function (resolve, reject) {
        var startTime = (0, _performance.getPageTime)();
        if (analytics) {
          analytics((0, _analytics.teamRequestAnalytics)('triggered'));
        }
        _this2.makeRequest(teamId, orgId).then(function (data) {
          if (_this2.cache) {
            _this2.setCachedProfile(teamId, data);
          }
          if (analytics) {
            analytics((0, _analytics.teamRequestAnalytics)('succeeded', {
              duration: (0, _performance.getPageTime)() - startTime,
              gateway: true
            }));
          }
          resolve(data);
        }).catch(function (error) {
          if (analytics) {
            analytics((0, _analytics.teamRequestAnalytics)('failed', _objectSpread(_objectSpread({
              duration: (0, _performance.getPageTime)() - startTime
            }, (0, _errorUtils.getErrorAttributes)(error)), {}, {
              gateway: true
            })));
          }
          reject(error);
        });
      });
    }
  }]);
}(_CachingClient2.default);