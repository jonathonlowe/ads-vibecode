"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactIntlNext = require("react-intl-next");
var _analyticsNext = require("@atlaskit/analytics-next");
var _primitives = require("@atlaskit/primitives");
var _rovoAgentComponents = require("@atlaskit/rovo-agent-components");
var _analytics = require("../../util/analytics");
var _LoadingState = require("../common/LoadingState");
var _Error = require("../Error");
var _Actions = require("./Actions");
var _AgentProfileCardWrapper = require("./AgentProfileCardWrapper");
var _ConversationStarters = require("./ConversationStarters");
var _useAgentActions = require("./hooks/useAgentActions");
var _messages = require("./messages");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var styles = (0, _primitives.xcss)({
  paddingBlockStart: 'space.400',
  paddingInline: 'space.200'
});
var avatarStyles = (0, _primitives.xcss)({
  position: 'absolute',
  top: 'space.300',
  left: 'space.200'
});
var cardContainerStyles = (0, _primitives.xcss)({
  borderRadius: 'border.radius.200',
  boxShadow: 'elevation.shadow.overlay',
  position: 'relative'
});
var AgentProfileCard = function AgentProfileCard(_ref) {
  var _agent$user_defined_c, _agent$external_confi, _agent$external_confi2, _agent$creatorInfo, _agent$creatorInfo2, _agent$creatorInfo3, _agent$creatorInfo4;
  var agent = _ref.agent,
    isLoading = _ref.isLoading,
    isCreatedByViewingUser = _ref.isCreatedByViewingUser,
    cloudId = _ref.cloudId,
    _onChatClick = _ref.onChatClick,
    _ref$product = _ref.product,
    product = _ref$product === void 0 ? 'rovo' : _ref$product,
    hasError = _ref.hasError,
    errorType = _ref.errorType,
    onConversationStartersClick = _ref.onConversationStartersClick,
    resourceClient = _ref.resourceClient,
    addFlag = _ref.addFlag;
  var _useAgentUrlActions = (0, _useAgentActions.useAgentUrlActions)({
      cloudId: cloudId || ''
    }),
    _onEditAgent = _useAgentUrlActions.onEditAgent,
    _onCopyAgent = _useAgentUrlActions.onCopyAgent,
    _onDuplicateAgent = _useAgentUrlActions.onDuplicateAgent,
    onOpenChatFullScreen = _useAgentUrlActions.onOpenChat,
    onConversationStarter = _useAgentUrlActions.onConversationStarter,
    onViewFullProfile = _useAgentUrlActions.onViewFullProfile;
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    isStarred = _useState2[0],
    setIsStarred = _useState2[1];
  var _useState3 = (0, _react.useState)(),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    starCount = _useState4[0],
    setStarCount = _useState4[1];
  var _useIntl = (0, _reactIntlNext.useIntl)(),
    formatMessage = _useIntl.formatMessage;
  var userDefinedConversationStarters = agent === null || agent === void 0 || (_agent$user_defined_c = agent.user_defined_conversation_starters) === null || _agent$user_defined_c === void 0 ? void 0 : _agent$user_defined_c.map(function (starter) {
    return {
      message: starter,
      type: 'user-defined'
    };
  });
  (0, _react.useEffect)(function () {
    setIsStarred(!!(agent !== null && agent !== void 0 && agent.favourite));
    setStarCount(agent === null || agent === void 0 ? void 0 : agent.favourite_count);
  }, [agent === null || agent === void 0 ? void 0 : agent.favourite, agent === null || agent === void 0 ? void 0 : agent.favourite_count]);
  var _useAnalyticsEvents = (0, _analyticsNext.useAnalyticsEvents)(),
    createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;
  var fireAnalytics = (0, _react.useCallback)(function (payload) {
    if (createAnalyticsEvent) {
      (0, _analytics.fireEvent)(createAnalyticsEvent, payload);
    }
  }, [createAnalyticsEvent]);
  var handleSetFavourite = (0, _react.useCallback)( /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          if (!(agent !== null && agent !== void 0 && agent.id)) {
            _context.next = 10;
            break;
          }
          _context.prev = 1;
          _context.next = 4;
          return resourceClient.setFavouriteAgent(agent.id, !isStarred, fireAnalytics);
        case 4:
          if (isStarred) {
            setStarCount(starCount ? starCount - 1 : 0);
          } else {
            setStarCount((starCount || 0) + 1);
          }
          setIsStarred(!isStarred);
          _context.next = 10;
          break;
        case 8:
          _context.prev = 8;
          _context.t0 = _context["catch"](1);
        case 10:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[1, 8]]);
  })), [agent === null || agent === void 0 ? void 0 : agent.id, fireAnalytics, isStarred, resourceClient, starCount]);
  var handleOnDelete = (0, _react.useCallback)( /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {
    return _regenerator.default.wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          if (!agent) {
            _context2.next = 10;
            break;
          }
          _context2.prev = 1;
          _context2.next = 4;
          return resourceClient.deleteAgent(agent.id, fireAnalytics);
        case 4:
          addFlag === null || addFlag === void 0 || addFlag({
            title: formatMessage(_messages.messages.agentDeletedSuccessFlagTitle),
            description: formatMessage(_messages.messages.agentDeletedSuccessFlagDescription, {
              agentName: agent.name
            }),
            type: 'success',
            id: 'ptc-directory.agent-profile.delete-agent-success'
          });
          _context2.next = 10;
          break;
        case 7:
          _context2.prev = 7;
          _context2.t0 = _context2["catch"](1);
          addFlag === null || addFlag === void 0 || addFlag({
            title: formatMessage(_messages.messages.agentDeletedErrorFlagTitle),
            description: formatMessage(_messages.messages.agentDeletedErrorFlagDescription),
            type: 'error',
            id: 'ptc-directory.agent-profile.delete-agent-error'
          });
        case 10:
        case "end":
          return _context2.stop();
      }
    }, _callee2, null, [[1, 7]]);
  })), [addFlag, agent, fireAnalytics, formatMessage, resourceClient]);
  (0, _react.useEffect)(function () {
    if (!isLoading && agent) {
      fireAnalytics((0, _analytics.profileCardRendered)('agent', 'content'));
    }
  }, [agent, fireAnalytics, isLoading]);
  if (isLoading) {
    return /*#__PURE__*/_react.default.createElement(_AgentProfileCardWrapper.AgentProfileCardWrapper, null, /*#__PURE__*/_react.default.createElement(_LoadingState.LoadingState, {
      profileType: "agent",
      fireAnalytics: fireAnalytics
    }));
  }
  if (hasError || !agent) {
    return /*#__PURE__*/_react.default.createElement(_AgentProfileCardWrapper.AgentProfileCardWrapper, null, /*#__PURE__*/_react.default.createElement(_Error.ErrorMessage, {
      errorType: errorType,
      fireAnalytics: fireAnalytics
    }));
  }
  return /*#__PURE__*/_react.default.createElement(_AgentProfileCardWrapper.AgentProfileCardWrapper, null, /*#__PURE__*/_react.default.createElement(_primitives.Box, {
    xcss: cardContainerStyles
  }, /*#__PURE__*/_react.default.createElement(_rovoAgentComponents.AgentBanner, {
    agentId: agent.id,
    agentNamedId: (_agent$external_confi = agent.external_config_reference) !== null && _agent$external_confi !== void 0 ? _agent$external_confi : agent.named_id,
    height: 96,
    agentIdentityAccountId: agent.identity_account_id
  }), /*#__PURE__*/_react.default.createElement(_primitives.Box, {
    xcss: avatarStyles
  }, /*#__PURE__*/_react.default.createElement(_rovoAgentComponents.AgentAvatar, {
    agentId: agent.id,
    agentNamedId: (_agent$external_confi2 = agent.external_config_reference) !== null && _agent$external_confi2 !== void 0 ? _agent$external_confi2 : agent.named_id,
    agentIdentityAccountId: agent.identity_account_id,
    size: "xlarge",
    isForgeAgent: agent.creator_type === 'FORGE' || agent.creator_type === 'THIRD_PARTY',
    forgeAgentIconUrl: agent.icon
  })), /*#__PURE__*/_react.default.createElement(_primitives.Stack, {
    space: "space.100",
    xcss: styles
  }, /*#__PURE__*/_react.default.createElement(_rovoAgentComponents.AgentProfileInfo, {
    agentName: agent.name,
    isStarred: isStarred,
    onStarToggle: handleSetFavourite,
    isHidden: agent.visibility === 'PRIVATE',
    creatorRender: ((_agent$creatorInfo = agent.creatorInfo) === null || _agent$creatorInfo === void 0 ? void 0 : _agent$creatorInfo.type) && /*#__PURE__*/_react.default.createElement(_rovoAgentComponents.AgentProfileCreator, {
      creator: {
        type: (_agent$creatorInfo2 = agent.creatorInfo) === null || _agent$creatorInfo2 === void 0 ? void 0 : _agent$creatorInfo2.type,
        name: ((_agent$creatorInfo3 = agent.creatorInfo) === null || _agent$creatorInfo3 === void 0 ? void 0 : _agent$creatorInfo3.name) || '',
        profileLink: ((_agent$creatorInfo4 = agent.creatorInfo) === null || _agent$creatorInfo4 === void 0 ? void 0 : _agent$creatorInfo4.profileLink) || ''
      },
      isLoading: false,
      onCreatorLinkClick: function onCreatorLinkClick() {}
    }),
    starCountRender: /*#__PURE__*/_react.default.createElement(_rovoAgentComponents.AgentStarCount, {
      starCount: starCount,
      isLoading: false
    }),
    agentDescription: agent.description
  }), /*#__PURE__*/_react.default.createElement(_ConversationStarters.ConversationStarters, {
    isAgentDefault: agent.is_default,
    userDefinedConversationStarters: userDefinedConversationStarters,
    onConversationStarterClick: function onConversationStarterClick(conversationStarter) {
      onConversationStartersClick ? onConversationStartersClick(conversationStarter) : onConversationStarter({
        agentId: agent.id,
        prompt: conversationStarter.message
      });
    }
  })), /*#__PURE__*/_react.default.createElement(_Actions.AgentActions, {
    agent: agent,
    isAgentCreatedByCurrentUser: isCreatedByViewingUser,
    onEditAgent: function onEditAgent() {
      return _onEditAgent(agent.id);
    },
    onCopyAgent: function onCopyAgent() {
      return _onCopyAgent(agent.id);
    },
    onDuplicateAgent: function onDuplicateAgent() {
      return _onDuplicateAgent(agent.id);
    },
    onDeleteAgent: handleOnDelete,
    onChatClick: function onChatClick() {
      return _onChatClick ? _onChatClick() : onOpenChatFullScreen(agent.id, agent.name);
    },
    resourceClient: resourceClient,
    onViewFullProfileClick: function onViewFullProfileClick() {
      return onViewFullProfile(agent.id);
    }
  })));
};
var _default = exports.default = AgentProfileCard;