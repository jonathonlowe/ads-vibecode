"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireWildcard(require("react"));
var _popup = _interopRequireDefault(require("@atlaskit/popup"));
var _constants = require("@atlaskit/theme/constants");
var _analytics = require("../../util/analytics");
var _useProfileInfo2 = require("../../util/useProfileInfo");
var _LoadingState = require("./LoadingState");
var _PopupTrigger = require("./PopupTrigger");
var _ProfileCardWrapper = require("./ProfileCardWrapper");
var _excluded = ["trigger", "ariaLabelledBy", "children", "renderProfileCard", "fetchProfile", "disabledAriaAttributes", "profileCardType", "fireAnalytics"],
  _excluded2 = ["aria-expanded", "aria-haspopup"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var DELAY_MS_SHOW = 800;
var DELAY_MS_HIDE = 200;
function ProfileCardTrigger(_ref) {
  var _popupProps$autoFocus;
  var _trigger = _ref.trigger,
    ariaLabelledBy = _ref.ariaLabelledBy,
    children = _ref.children,
    renderProfileCard = _ref.renderProfileCard,
    fetchProfile = _ref.fetchProfile,
    disabledAriaAttributes = _ref.disabledAriaAttributes,
    profileCardType = _ref.profileCardType,
    fireAnalytics = _ref.fireAnalytics,
    popupProps = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var showDelay = _trigger === 'click' ? 0 : DELAY_MS_SHOW;
  var hideDelay = _trigger === 'click' ? 0 : DELAY_MS_HIDE;
  var showTimer = (0, _react.useRef)(0);
  var hideTimer = (0, _react.useRef)(0);
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    visible = _useState2[0],
    setVisible = _useState2[1];
  var _useProfileInfo = (0, _useProfileInfo2.useProfileInfo)({
      fetchUserProfile: fetchProfile
    }),
    profileData = _useProfileInfo.profileData,
    isLoading = _useProfileInfo.isLoading,
    error = _useProfileInfo.error,
    getProfileData = _useProfileInfo.getProfileData;
  (0, _react.useEffect)(function () {
    return function () {
      clearTimeout(showTimer.current);
      clearTimeout(hideTimer.current);
    };
  }, []);
  var hideProfilecard = (0, _react.useCallback)(function () {
    clearTimeout(showTimer.current);
    clearTimeout(hideTimer.current);
    hideTimer.current = window.setTimeout(function () {
      setVisible(false);
    }, hideDelay);
  }, [hideDelay]);
  var showProfilecard = (0, _react.useCallback)( /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          clearTimeout(hideTimer.current);
          clearTimeout(showTimer.current);
          showTimer.current = window.setTimeout(function () {
            if (!visible) {
              getProfileData === null || getProfileData === void 0 || getProfileData();
              setVisible(true);
              if (fireAnalytics) {
                fireAnalytics((0, _analytics.cardTriggered)(profileCardType, _trigger));
              }
            }
          }, showDelay);
        case 3:
        case "end":
          return _context.stop();
      }
    }, _callee);
  })), [showDelay, visible, getProfileData, fireAnalytics, profileCardType, _trigger]);
  var onMouseEnter = (0, _react.useCallback)(function () {
    showProfilecard();
  }, [showProfilecard]);
  return /*#__PURE__*/_react.default.createElement(_popup.default, (0, _extends2.default)({}, popupProps, {
    isOpen: !!visible,
    onClose: hideProfilecard,
    shouldUseCaptureOnOutsideClick: true,
    autoFocus: (_popupProps$autoFocus = popupProps.autoFocus) !== null && _popupProps$autoFocus !== void 0 ? _popupProps$autoFocus : _trigger === 'click',
    zIndex: _constants.layers.modal(),
    shouldFitContainer: false,
    trigger: function trigger(triggerProps) {
      var _ = triggerProps['aria-expanded'],
        __ = triggerProps['aria-haspopup'],
        restInnerProps = (0, _objectWithoutProperties2.default)(triggerProps, _excluded2);
      return /*#__PURE__*/_react.default.createElement(_PopupTrigger.PopupTrigger, (0, _extends2.default)({}, disabledAriaAttributes ? restInnerProps : triggerProps, {
        ref: triggerProps.ref,
        hideProfilecard: hideProfilecard,
        showProfilecard: showProfilecard,
        children: children,
        ariaLabelledBy: ariaLabelledBy,
        trigger: _trigger
      }));
    },
    content: function content() {
      return (
        /*#__PURE__*/
        // eslint-disable-next-line jsx-a11y/no-static-element-interactions
        _react.default.createElement("div", {
          onMouseEnter: onMouseEnter,
          onMouseLeave: hideProfilecard,
          onFocus: showProfilecard
        }, isLoading ? /*#__PURE__*/_react.default.createElement(_ProfileCardWrapper.ProfileCardWrapper, null, /*#__PURE__*/_react.default.createElement(_LoadingState.LoadingState, {
          fireAnalytics: fireAnalytics,
          profileType: profileCardType
        })) : renderProfileCard({
          profileData: profileData,
          error: error
        }))
      );
    }
  }));
}
var _default = exports.default = ProfileCardTrigger;