"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.OverflowProfileCardButtons = exports.ACTION_OVERFLOW_THRESHOLD = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactIntlNext = require("react-intl-next");
var _customThemeButton = _interopRequireDefault(require("@atlaskit/button/custom-theme-button"));
var _new = require("@atlaskit/button/new");
var _dropdownMenu = _interopRequireWildcard(require("@atlaskit/dropdown-menu"));
var _showMoreHorizontalMore = _interopRequireDefault(require("@atlaskit/icon/core/migration/show-more-horizontal--more"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _messages = _interopRequireDefault(require("../../messages"));
var _Card = require("../../styled/Card");
var _analytics = require("../../util/analytics");
var _excluded = ["triggerRef", "isSelected", "testId"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var ACTION_OVERFLOW_THRESHOLD = exports.ACTION_OVERFLOW_THRESHOLD = 2;
var OverflowProfileCardButtons = exports.OverflowProfileCardButtons = function OverflowProfileCardButtons(props) {
  var intl = (0, _reactIntlNext.useIntl)();
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    setOpen = _useState2[1];
  var actions = props.actions,
    onItemClick = props.onItemClick,
    fireAnalyticsWithDuration = props.fireAnalyticsWithDuration;
  var numActions = actions.length + ACTION_OVERFLOW_THRESHOLD;
  var onOpenChange = (0, _react.useCallback)(function (_ref) {
    var nextOpen = _ref.isOpen;
    setOpen(function (prevOpen) {
      if (nextOpen && !prevOpen) {
        fireAnalyticsWithDuration(function (duration) {
          return (0, _analytics.moreActionsClicked)('user', {
            duration: duration,
            numActions: numActions
          });
        });
      }
      return nextOpen;
    });
  }, [numActions, fireAnalyticsWithDuration]);
  return /*#__PURE__*/_react.default.createElement(_Card.OverflowActionButtonsWrapper, {
    testId: "profilecard-actions-overflow"
  }, /*#__PURE__*/_react.default.createElement(_dropdownMenu.default, {
    onOpenChange: onOpenChange,
    placement: 'bottom-end',
    trigger: function trigger(_ref2) {
      var triggerRef = _ref2.triggerRef,
        isSelected = _ref2.isSelected,
        testId = _ref2.testId,
        providedProps = (0, _objectWithoutProperties2.default)(_ref2, _excluded);
      return (0, _platformFeatureFlags.fg)('ptc_migrate_buttons') ? /*#__PURE__*/_react.default.createElement(_new.IconButton, (0, _extends2.default)({
        type: "button"
      }, providedProps, {
        ref: triggerRef,
        label: intl.formatMessage(_messages.default.profileCardMoreIconLabel),
        icon: _showMoreHorizontalMore.default
      })) : /*#__PURE__*/_react.default.createElement(_customThemeButton.default, (0, _extends2.default)({
        type: "button"
      }, providedProps, {
        ref: triggerRef,
        iconBefore: /*#__PURE__*/_react.default.createElement(_showMoreHorizontalMore.default, {
          color: "currentColor",
          spacing: "spacious",
          label: intl.formatMessage(_messages.default.profileCardMoreIconLabel)
        })
      }));
    }
  }, /*#__PURE__*/_react.default.createElement(_dropdownMenu.DropdownItemGroup, null, actions.map(function (action, index) {
    return /*#__PURE__*/_react.default.createElement(_dropdownMenu.DropdownItem, {
      key: action.id,
      onClick: function onClick(event) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        onItemClick(action, args, event, index);
      },
      href: action.link
    }, action.label);
  }))));
};