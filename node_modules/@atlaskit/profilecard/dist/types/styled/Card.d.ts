import React, { type ReactNode } from 'react';
export declare const CardWrapper: ({ children, role, testId, labelledBy, }: {
    children: ReactNode;
    role?: string | undefined;
    testId?: string | undefined;
    labelledBy?: string | undefined;
}) => React.JSX.Element;
export declare const ProfileImage: ({ children }: {
    children: ReactNode;
}) => React.JSX.Element;
export declare const ActionsFlexSpacer: () => React.JSX.Element;
export declare const KudosBlobAnimationStyle: () => React.JSX.Element;
export declare const KudosBlobAnimation: () => React.JSX.Element;
export declare const AnimationWrapper: ({ children }: {
    children: ReactNode;
}) => React.JSX.Element;
export declare const AnimatedKudosButton: ({ children }: {
    children: ReactNode;
}) => React.JSX.Element;
export declare const ActionButtonGroup: ({ children, testId, }: {
    children: ReactNode;
    testId?: string | undefined;
}) => React.JSX.Element;
export declare const OverflowActionButtonsWrapper: ({ children, testId, }: {
    children: ReactNode;
    testId?: string | undefined;
}) => React.JSX.Element;
export declare const CardContent: ({ children }: {
    children: ReactNode;
}) => React.JSX.Element;
export declare const DetailsGroup: ({ children }: {
    children: ReactNode;
}) => React.JSX.Element;
export declare const DisabledInfo: ({ children }: {
    children: ReactNode;
}) => React.JSX.Element;
export declare const LozengeWrapper: ({ children }: {
    children: ReactNode;
}) => React.JSX.Element;
export declare const CustomLozengeContainer: ({ children }: {
    children: ReactNode;
}) => React.JSX.Element;
export declare const JobTitleLabel: ({ children }: {
    children: ReactNode;
}) => React.JSX.Element;
export declare const AppTitleLabel: ({ children }: {
    children: ReactNode;
}) => React.JSX.Element;
export declare const SpinnerContainer: ({ children, testId }: {
    children: ReactNode;
    testId?: string | undefined;
}) => React.JSX.Element;
interface CardContainerProps {
    isDisabledUser?: boolean;
    withoutElevation?: boolean;
    children: ReactNode;
}
export declare const CardContainer: ({ children, isDisabledUser, withoutElevation, }: CardContainerProps) => React.JSX.Element;
export declare const DetailsLabel: ({ children, extraTopSpace, }: {
    children: ReactNode;
    extraTopSpace?: boolean | undefined;
}) => React.JSX.Element;
export declare const DetailsLabelIcon: ({ children }: {
    children: ReactNode;
}) => React.JSX.Element;
export declare const DetailsLabelText: ({ children }: {
    children: ReactNode;
}) => React.JSX.Element;
export {};
