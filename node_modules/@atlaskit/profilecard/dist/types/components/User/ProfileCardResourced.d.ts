import React from 'react';
import { type AnalyticsEventPayload } from '@atlaskit/analytics-next';
import { type AnalyticsProps, type ProfileCardAction, type ProfileCardClientData, type ProfileCardResourcedProps, type ProfileCardResourcedState, type TeamCentralReportingLinesData } from '../../types';
declare class ProfileCardResourced extends React.PureComponent<ProfileCardResourcedProps & AnalyticsProps, ProfileCardResourcedState> {
    static defaultProps: Partial<ProfileCardResourcedProps>;
    _isMounted: boolean;
    state: ProfileCardResourcedState;
    fireAnalytics: (payload: AnalyticsEventPayload) => void;
    componentDidMount(): void;
    componentDidUpdate(prevProps: ProfileCardResourcedProps): void;
    componentWillUnmount(): void;
    clientFetchProfile: () => void;
    handleClientSuccess(profileData: ProfileCardClientData, reportingLinesData: TeamCentralReportingLinesData, shouldShowGiveKudos: boolean, teamCentralBaseUrl?: string): void;
    handleClientError(err: any): void;
    filterActions: () => ProfileCardAction[];
    openKudosDrawer: () => void;
    closeKudosDrawer: () => void;
    render(): React.ReactNode;
}
export declare const ProfileCardResourcedInternal: typeof ProfileCardResourced;
declare const _default: React.ForwardRefExoticComponent<Pick<Omit<ProfileCardResourcedProps & AnalyticsProps, keyof import("@atlaskit/analytics-next").WithAnalyticsEventsProps>, never> & {
    cloudId?: string | undefined;
    resourceClient?: import("../../types").ProfileClient | undefined;
    actions?: ProfileCardAction[] | undefined;
    position?: import("../../types").ProfilecardTriggerPosition | undefined;
    trigger?: import("../../types").TriggerType | undefined;
    children?: React.ReactNode;
    addFlag?: ((flag: any) => void) | undefined;
    userId?: string | undefined;
    reportingLinesProfileUrl?: string | undefined;
    onReportingLinesClick?: ((user: import("../../types").ReportingLinesUser) => void) | undefined;
} & {} & React.RefAttributes<any>>;
export default _default;
