import { type AnalyticsEventPayload } from '@atlaskit/analytics-next';
import type { ApiClientResponse, ProfileCardClientData, ProfileClientOptions } from '../types';
import CachingClient from './CachingClient';
/**
 * Transform response from GraphQL
 * - Prefix `timestring` with `remoteWeekdayString` depending on `remoteWeekdayIndex`
 * - Remove properties which will be not used later
 * @ignore
 * @param  {object} response
 * @return {object}
 */
export declare const modifyResponse: (response: ApiClientResponse) => ProfileCardClientData;
export declare const buildAggUserQuery: (userId: string) => {
    query: string;
    variables: {
        userId: string;
    };
};
export default class UserProfileCardClient extends CachingClient<any> {
    options: ProfileClientOptions;
    constructor(options: ProfileClientOptions);
    makeRequest(cloudId: string, userId: string): Promise<ProfileCardClientData>;
    getProfile(cloudId: string, userId: string, analytics?: (event: AnalyticsEventPayload) => void): Promise<any>;
}
