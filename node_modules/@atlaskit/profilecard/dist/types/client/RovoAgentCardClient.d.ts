import { type AnalyticsEventPayload } from '@atlaskit/analytics-next';
import type { AgentIdType, AgentPermissions, ProfileClientOptions, RovoAgent } from '../types';
import CachingClient from './CachingClient';
export default class RovoAgentCardClient extends CachingClient<RovoAgent> {
    options: ProfileClientOptions;
    constructor(options: ProfileClientOptions);
    makeRequest(id: AgentIdType, cloudId: string): Promise<RovoAgent>;
    getProfile(id: AgentIdType, analytics?: (event: AnalyticsEventPayload) => void): Promise<RovoAgent>;
    deleteAgent(agentId: string, analytics?: (event: AnalyticsEventPayload) => void): Promise<void>;
    setFavouriteAgent(agentId: string, isFavourite: boolean, analytics?: (event: AnalyticsEventPayload) => void): Promise<void>;
    getPermissions(id: string, fireAnalytics?: (event: AnalyticsEventPayload) => void): Promise<AgentPermissions>;
}
