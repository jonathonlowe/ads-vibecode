"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var styled_components_1 = tslib_1.__importDefault(require("styled-components"));
var colors_1 = require("@atlaskit/theme/colors");
// By default buttons will hide overflow and ellipsis content instead of wrapping.
// This basically turns the button back into inline content
exports.IconStyledButton = styled_components_1.default.span(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["\n  text-align: initial !important;\n  display: inline !important;\n\n  &:hover {\n    /* Remove the text-decoration to match other inline card hover states*/\n    text-decoration: none !important;\n  }\n\n  > span {\n    display: inline;\n    > span {\n      overflow: initial;\n      text-overflow: initial;\n      white-space: initial;\n    }\n  }\n"], ["\n  text-align: initial !important;\n  display: inline !important;\n\n  &:hover {\n    /* Remove the text-decoration to match other inline card hover states*/\n    text-decoration: none !important;\n  }\n\n  > span {\n    display: inline;\n    > span {\n      overflow: initial;\n      text-overflow: initial;\n      white-space: initial;\n    }\n  }\n"])));
exports.NoLinkAppearance = styled_components_1.default.span(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["\n  color: ", ";\n"], ["\n  color: ", ";\n"])), colors_1.N500);
exports.LinkAppearance = styled_components_1.default.span(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["\n  color: ", ";\n"], ["\n  color: ", ";\n"])), colors_1.B400);
var templateObject_1, templateObject_2, templateObject_3;
//# sourceMappingURL=styled.js.map