/** @jsx jsx */
import { useEffect, useState } from 'react';
import { jsx } from '@emotion/core';
import PersonIcon from '@atlaskit/icon/glyph/person';
import ShipIcon from '@atlaskit/icon/glyph/ship';
import { background, N50 } from '@atlaskit/theme/colors';
import { AVATAR_RADIUS, AVATAR_SIZES } from './constants';
const AvatarImage = ({ alt = '', src, appearance, size, testId, }) => {
    const [phase, setPhase] = useState('initial');
    const borderRadius = appearance === 'circle' ? '50%' : `${AVATAR_RADIUS[size]}px`;
    useEffect(() => {
        // check whether there was a problem loading the image
        // if handleLoadError is called we show the default avatar
        let img;
        if (src) {
            setPhase('loading');
            img = new Image();
            img.onload = () => setPhase('loaded');
            img.onerror = () => setPhase('error');
            img.src = src;
        }
        return () => {
            if (img) {
                img.onload = () => { };
                img.onerror = () => { };
            }
        };
    }, [src]);
    if (phase === 'loading' || phase === 'error' || !src) {
        return (jsx("span", { css: {
                backgroundColor: N50,
                borderRadius,
                height: `${AVATAR_SIZES[size]}px`,
                width: `${AVATAR_SIZES[size]}px`,
                '& svg': {
                    height: `${AVATAR_SIZES[size]}px`,
                    width: `${AVATAR_SIZES[size]}px`,
                },
            } }, appearance === 'circle' ? (jsx(PersonIcon, { label: alt, primaryColor: background(), secondaryColor: N50, testId: testId && `${testId}--person` })) : (jsx(ShipIcon, { label: alt, primaryColor: background(), secondaryColor: N50, testId: testId && `${testId}--ship` }))));
    }
    return (jsx("span", { css: {
            backgroundColor: 'transparent',
            backgroundImage: `url(${src})`,
            backgroundPosition: 'center',
            backgroundRepeat: 'no-repeat',
            backgroundSize: 'cover',
            borderRadius,
            display: 'flex',
            flex: '1 1 100%',
            height: '100%',
            width: '100%',
        }, role: "img", "aria-label": alt, "data-testid": testId && `${testId}--image` }));
};
export default AvatarImage;
//# sourceMappingURL=AvatarImage.js.map