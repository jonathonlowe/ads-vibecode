"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/** @jsx jsx */
var core_1 = require("@emotion/core");
var button_1 = tslib_1.__importDefault(require("@atlaskit/button"));
var error_1 = tslib_1.__importDefault(require("@atlaskit/icon/glyph/error"));
var constants_1 = require("@atlaskit/theme/constants");
var colors_1 = require("@atlaskit/theme/colors");
var Frame_1 = require("../components/Frame");
var utils_1 = require("../utils");
var react_intl_1 = require("react-intl");
var messages_1 = require("../../messages");
exports.ErroredView = function (_a) {
    var onRetry = _a.onRetry, _b = _a.isSelected, isSelected = _b === void 0 ? false : _b, testId = _a.testId;
    return (core_1.jsx(Frame_1.Frame, { compact: true, isSelected: isSelected, testId: testId },
        core_1.jsx(error_1.default, { size: "small", primaryColor: colors_1.R300, label: "error-icon" }),
        core_1.jsx("span", { css: {
                fontSize: constants_1.fontSize() + "px",
                marginLeft: utils_1.gs(0.5),
                marginRight: utils_1.gs(0.5),
                display: '-webkit-box',
                overflow: 'hidden',
                textOverflow: 'ellipsis',
                WebkitLineClamp: 1,
                WebkitBoxOrient: 'vertical',
                // Fallback options.
                maxHeight: utils_1.gs(3),
            } },
            core_1.jsx(react_intl_1.FormattedMessage, tslib_1.__assign({}, messages_1.messages.could_not_load_link))),
        core_1.jsx(button_1.default, { testId: "err-view-retry", appearance: "link", spacing: "none", onClick: onRetry },
            core_1.jsx(react_intl_1.FormattedMessage, tslib_1.__assign({}, messages_1.messages.try_again)))));
};
//# sourceMappingURL=ErroredView.js.map