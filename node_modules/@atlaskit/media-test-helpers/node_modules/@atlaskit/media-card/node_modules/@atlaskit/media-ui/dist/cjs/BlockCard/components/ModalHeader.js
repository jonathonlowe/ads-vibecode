"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/** @jsx jsx */
var core_1 = require("@emotion/core");
var react_1 = require("react");
var close_1 = tslib_1.__importDefault(require("@atlaskit/icon/glyph/editor/close"));
var shortcut_1 = tslib_1.__importDefault(require("@atlaskit/icon/glyph/shortcut"));
var button_1 = tslib_1.__importDefault(require("@atlaskit/button"));
var colors_1 = require("@atlaskit/theme/colors");
var react_intl_1 = require("react-intl");
var utils_1 = require("../utils");
var Icon_1 = require("./Icon");
var MetadataList_1 = require("./MetadataList");
var Byline_1 = require("./Byline");
var messages_1 = require("../../messages");
exports.Header = function (_a) {
    var onClose = _a.onClose, title = _a.title, label = _a.label, _b = _a.metadata, metadata = _b === void 0 ? { items: [] } : _b, icon = _a.icon, providerName = _a.providerName, url = _a.url, download = _a.download, byline = _a.byline, onViewActionClick = _a.onViewActionClick, onDownloadActionClick = _a.onDownloadActionClick;
    return (core_1.jsx("div", { style: {
            paddingLeft: utils_1.gs(3),
            paddingRight: utils_1.gs(3),
            paddingBottom: utils_1.gs(2),
            paddingTop: utils_1.gs(2),
        } },
        core_1.jsx("div", { style: {
                display: 'flex',
                justifyContent: 'space-between',
                alignItems: 'baseline',
                borderBottom: "1px solid " + colors_1.N30A,
            } },
            core_1.jsx("div", null,
                core_1.jsx("div", { css: { display: 'flex' } },
                    icon && core_1.jsx(Icon_1.Icon, tslib_1.__assign({}, icon)),
                    core_1.jsx("div", { css: { paddingLeft: utils_1.gs(2), paddingBottom: utils_1.gs(2) } },
                        core_1.jsx("h3", null, title),
                        core_1.jsx("div", { css: { color: colors_1.N100 } }, (metadata.items.length && (core_1.jsx(MetadataList_1.MetadataList, { items: metadata.items }))) || core_1.jsx(Byline_1.Byline, null, byline))))),
            core_1.jsx("div", null,
                download && (core_1.jsx(button_1.default, { appearance: "primary", href: download, onClick: onDownloadActionClick },
                    core_1.jsx(react_intl_1.FormattedMessage, tslib_1.__assign({}, messages_1.messages.download)))),
                url && (core_1.jsx(button_1.default, { href: url, target: "_blank", appearance: "link", testId: "preview-view-action", iconAfter: core_1.jsx(shortcut_1.default, { size: "small", label: "go to source" }), onClick: onViewActionClick }, providerName ? (core_1.jsx(react_1.Fragment, null,
                    core_1.jsx(react_intl_1.FormattedMessage, tslib_1.__assign({}, messages_1.messages.viewIn)),
                    " ",
                    providerName)) : (core_1.jsx(react_intl_1.FormattedMessage, tslib_1.__assign({}, messages_1.messages.viewOriginal))))),
                core_1.jsx(button_1.default, { appearance: "subtle", iconBefore: core_1.jsx(close_1.default, { label: label }), onClick: onClose })))));
};
//# sourceMappingURL=ModalHeader.js.map