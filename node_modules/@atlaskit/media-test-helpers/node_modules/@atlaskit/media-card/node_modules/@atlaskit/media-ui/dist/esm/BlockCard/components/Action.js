import { __read } from "tslib";
/** @jsx jsx */
import { jsx } from '@emotion/core';
import { useState } from 'react';
import Button from '@atlaskit/button';
import { ActionIcon } from './ActionIcon';
export var spinnerDelay = 1000;
export var Action = function (_a) {
    var promise = _a.promise, text = _a.text, _b = _a.buttonAppearance, buttonAppearance = _b === void 0 ? 'default' : _b, id = _a.id;
    var _c = __read(useState('init'), 2), state = _c[0], setState = _c[1];
    return (jsx(Button, { spacing: "compact", appearance: buttonAppearance, isLoading: state === 'loading', testId: "button-" + id, onClick: function (event) {
            event.stopPropagation();
            event.preventDefault();
            if (state !== 'loading') {
                setState('loading');
                promise()
                    .then(function () {
                    setState('success');
                    setTimeout(function () { return setState('init'); }, spinnerDelay);
                })
                    .catch(function () {
                    setState('failure');
                    setTimeout(function () { return setState('init'); }, spinnerDelay);
                });
            }
        } },
        jsx("div", { css: {
                transition: 'opacity 0.3s',
                opacity: state !== 'init' ? 0 : 1,
            } }, text),
        jsx(ActionIcon, { state: state })));
};
//# sourceMappingURL=Action.js.map