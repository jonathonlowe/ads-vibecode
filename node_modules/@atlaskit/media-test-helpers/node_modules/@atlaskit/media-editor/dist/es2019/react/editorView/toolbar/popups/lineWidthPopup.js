import React from 'react';
import { Component } from 'react';
import InlineDialog from '@atlaskit/inline-dialog';
import FieldRange from '@atlaskit/field-range';
import { LineWidthPopupContainer } from './popupStyles';
export const THICKNESS_MIN = 4;
export const THICKNESS_MAX = 12;
export class LineWidthPopup extends Component {
    constructor() {
        super(...arguments);
        this.closeSoon = () => {
            const { onClose } = this.props;
            this.closeSoonTimeout = window.setTimeout(onClose, 1500);
        };
        this.cancelCloseSoon = () => {
            if (this.closeSoonTimeout) {
                window.clearTimeout(this.closeSoonTimeout);
                this.closeSoonTimeout = undefined;
            }
        };
        this.onSliderChange = (value) => {
            const { onLineWidthClick } = this.props;
            onLineWidthClick(value);
        };
    }
    componentWillUnmount() {
        this.cancelCloseSoon();
    }
    render() {
        const { isOpen, children, lineWidth, onClose } = this.props;
        const content = (React.createElement(LineWidthPopupContainer, { onMouseLeave: this.closeSoon, onMouseEnter: this.cancelCloseSoon },
            React.createElement(FieldRange, { value: lineWidth, step: 2, min: THICKNESS_MIN, max: THICKNESS_MAX, onChange: this.onSliderChange })));
        return (React.createElement(InlineDialog, { onContentBlur: onClose, isOpen: isOpen, placement: "top-start", content: content }, children));
    }
}
//# sourceMappingURL=lineWidthPopup.js.map