import { Signal } from '../signal';
// The default implementation of ShapeDeleter interface.
// Accepts a hidden text area that receives text input when activated.
// When "delete" or "backspace" is pressed, it emits the deleteShape signal
export class DefaultShapeDeleter {
    constructor(hTextArea) {
        this.hTextArea = hTextArea;
        this.deleteShape = new Signal();
        this.keyDownListener = (event) => this.keyDown(event);
        this.isDeleteEnabled = false;
        this.hTextArea.addEventListener('keydown', this.keyDownListener);
    }
    unload() {
        this.hTextArea.removeEventListener('keydown', this.keyDownListener);
    }
    deleteEnabled() {
        this.hTextArea.style.visibility = 'visible';
        this.hTextArea.focus();
        this.isDeleteEnabled = true;
    }
    deleteDisabled() {
        this.hTextArea.style.visibility = 'hidden';
        this.hTextArea.value = '';
        this.isDeleteEnabled = false;
    }
    keyDown(event) {
        if (!this.isDeleteEnabled) {
            return;
        }
        const isDeletePressed = event.key === 'Delete' || event.which === 46;
        const isBackspacePressed = event.key === 'Backspace' || event.which === 8;
        if (isDeletePressed || isBackspacePressed) {
            this.deleteShape.emit({});
        }
    }
}
//# sourceMappingURL=shapeDeleter.js.map