const capitalize = (text) => text.charAt(0).toUpperCase() + text.slice(1);
export const vendorify = (propName, capitalizeText = true) => {
    let prefix = '';
    if (HTMLElement.prototype.webkitRequestFullscreen) {
        prefix = 'webkit';
    }
    else if (HTMLElement.prototype['mozRequestFullScreen']) {
        prefix = 'moz';
    }
    else if (HTMLElement.prototype['msRequestFullScreen']) {
        prefix = 'ms';
    }
    const capitalizeProp = capitalizeText !== undefined ? capitalizeText : !!prefix;
    return `${prefix}${capitalizeProp ? capitalize(propName) : propName}`;
};
export const requestFullscreen = (element) => {
    const methodName = vendorify('requestFullScreen');
    if (methodName && element[methodName]) {
        element[methodName]();
    }
};
export const exitFullscreen = () => {
    const methodName = vendorify('exitFullscreen');
    if (methodName && document[methodName]) {
        document[methodName]();
    }
};
export const getFullscreenElement = () => {
    const propertyName = vendorify('fullscreenElement');
    return propertyName && document[propertyName];
};
export const toggleFullscreen = (element) => {
    if (getFullscreenElement()) {
        exitFullscreen();
    }
    else if (element) {
        requestFullscreen(element);
    }
};
//# sourceMappingURL=fullscreen.js.map