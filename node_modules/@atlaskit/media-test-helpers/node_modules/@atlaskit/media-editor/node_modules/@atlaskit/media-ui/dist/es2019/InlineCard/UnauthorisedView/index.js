import Button from '@atlaskit/button';
import LockIcon from '@atlaskit/icon/glyph/lock-filled';
import { N500, R400 } from '@atlaskit/theme/colors';
import React from 'react';
import { FormattedMessage } from 'react-intl';
import { messages } from '../../messages';
import { Frame } from '../Frame';
import { AKIconWrapper } from '../Icon';
import { IconAndTitleLayout } from '../IconAndTitleLayout';
import { IconStyledButton, LinkAppearance } from '../styled';
const FallbackUnauthorizedIcon = (React.createElement(AKIconWrapper, null,
    React.createElement(LockIcon, { label: "error", size: "small", primaryColor: R400 })));
export class InlineCardUnauthorizedView extends React.Component {
    constructor() {
        super(...arguments);
        this.handleConnectAccount = (event) => {
            const { onAuthorise } = this.props;
            event.preventDefault();
            event.stopPropagation();
            return onAuthorise();
        };
        this.renderMessage = () => {
            const { onAuthorise, url } = this.props;
            const link = React.createElement(LinkAppearance, null, url);
            return !onAuthorise ? (link) : (React.createElement(React.Fragment, null,
                link,
                ' - ',
                React.createElement(Button, { spacing: "none", appearance: "subtle-link", component: IconStyledButton, onClick: this.handleConnectAccount },
                    React.createElement(FormattedMessage, Object.assign({}, messages.connect_link_account)))));
        };
    }
    render() {
        const { url, icon, onClick, isSelected, testId = 'inline-card-unauthorized-view', } = this.props;
        return (React.createElement(Frame, { testId: testId, link: url, onClick: onClick, isSelected: isSelected },
            React.createElement(IconAndTitleLayout, { icon: icon ? icon : FallbackUnauthorizedIcon, title: this.renderMessage(), titleColor: N500 })));
    }
}
//# sourceMappingURL=index.js.map