"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/** @jsx jsx */
var core_1 = require("@emotion/core");
var lozenge_1 = tslib_1.__importDefault(require("@atlaskit/lozenge"));
var Frame_1 = require("../components/Frame");
var Thumbnail_1 = require("../components/Thumbnail");
var Provider_1 = require("../components/Provider");
var Name_1 = require("../components/Name");
var Byline_1 = require("../components/Byline");
var ActionList_1 = require("../components/ActionList");
var CollaboratorList_1 = require("../components/CollaboratorList");
var Icon_1 = require("../components/Icon");
var Content_1 = require("../components/Content");
var MetadataList_1 = require("../components/MetadataList");
var styled_1 = require("../../InlineCard/IconAndTitleLayout/styled");
var ContentHeader_1 = require("../components/ContentHeader");
var ContentFooter_1 = require("../components/ContentFooter");
var utils_1 = require("../utils");
var handlers_1 = require("../utils/handlers");
exports.ResolvedView = function (_a) {
    var _b = _a.icon, icon = _b === void 0 ? {} : _b, _c = _a.actions, actions = _c === void 0 ? [] : _c, thumbnail = _a.thumbnail, _d = _a.context, context = _d === void 0 ? { text: '' } : _d, _e = _a.title, title = _e === void 0 ? '' : _e, _f = _a.isSelected, isSelected = _f === void 0 ? false : _f, _g = _a.users, users = _g === void 0 ? [] : _g, _h = _a.handleAvatarClick, handleAvatarClick = _h === void 0 ? function () { } : _h, _j = _a.handleMoreAvatarsClick, handleMoreAvatarsClick = _j === void 0 ? function () { } : _j, _k = _a.onClick, onClick = _k === void 0 ? function () { } : _k, _l = _a.link, link = _l === void 0 ? '' : _l, _m = _a.byline, byline = _m === void 0 ? '' : _m, lozenge = _a.lozenge, _o = _a.details, details = _o === void 0 ? [] : _o, _p = _a.testId, testId = _p === void 0 ? 'block-card-resolved-view' : _p, _q = _a.showActions, showActions = _q === void 0 ? true : _q;
    var resolvedMetadata = details.length > 0 ? (core_1.jsx(MetadataList_1.MetadataList, { testId: testId ? testId + "-meta" : undefined, items: details })) : (undefined);
    var resolvedByline = (core_1.jsx(Byline_1.Byline, { testId: testId ? testId + "-by" : undefined }, byline));
    var handleClick = function (event) { return handlers_1.handleClickCommon(event, onClick); };
    var hasActions = showActions && actions.length > 0;
    return (core_1.jsx(Frame_1.Frame, { isSelected: isSelected, testId: testId },
        core_1.jsx(Content_1.Content, null,
            core_1.jsx("div", null,
                core_1.jsx("div", { css: {
                        display: 'flex',
                        justifyContent: 'space-between',
                        alignItems: 'flex-start',
                    } },
                    core_1.jsx(ContentHeader_1.ContentHeader, { onClick: handleClick, link: link },
                        core_1.jsx(Icon_1.Icon, tslib_1.__assign({}, icon)),
                        core_1.jsx(Name_1.Name, { name: title }),
                        lozenge && (core_1.jsx(styled_1.LozengeBlockWrapper, { css: {
                                height: utils_1.gs(2.5),
                                display: 'flex',
                                alignItems: 'center',
                                justifyContent: 'center',
                            } },
                            core_1.jsx(lozenge_1.default, tslib_1.__assign({}, lozenge), lozenge.text)))),
                    core_1.jsx(CollaboratorList_1.CollaboratorList, { items: users, handleAvatarClick: handleAvatarClick, handleMoreAvatarsClick: handleMoreAvatarsClick })),
                resolvedByline,
                resolvedMetadata),
            core_1.jsx(ContentFooter_1.ContentFooter, { hasSpaceBetween: hasActions },
                core_1.jsx(Provider_1.Provider, { name: context.text, icon: context.icon }),
                hasActions && core_1.jsx(ActionList_1.ActionList, { items: actions }))),
        thumbnail ? (core_1.jsx(Thumbnail_1.Thumbnail, { src: thumbnail, testId: testId ? testId + "-thumb" : undefined })) : null));
};
//# sourceMappingURL=ResolvedView.js.map