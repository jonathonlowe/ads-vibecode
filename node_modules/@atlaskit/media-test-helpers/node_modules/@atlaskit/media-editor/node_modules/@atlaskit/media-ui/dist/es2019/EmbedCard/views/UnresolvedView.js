/** @jsx jsx */
import { jsx } from '@emotion/core';
import Button from '@atlaskit/button';
import { fontSize } from '@atlaskit/theme';
import { FormattedMessage } from 'react-intl';
import { messages } from '../../messages';
import { gs as gridSize } from '../../BlockCard/utils';
export const EmbedCardUnresolvedView = ({ image, title, description, button, context, onClick, testId, }) => {
    return (jsx("div", { css: {
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'center',
            justifyContent: 'center',
            paddingTop: gridSize(4.5),
            paddingBottom: gridSize(6),
        }, "data-testid": `${testId}-unresolved-container` },
        jsx("img", { src: image, css: { height: gridSize(14), marginBottom: gridSize(4) } }),
        jsx("span", { css: {
                fontSize: gridSize(2.5),
                marginBottom: gridSize(1.5),
                width: gridSize(50),
                textAlign: 'center',
            } },
            jsx(FormattedMessage, Object.assign({}, messages[title], { values: { context } }))),
        jsx("span", { css: {
                fontSize: fontSize(),
                marginBottom: gridSize(2.5),
                textAlign: 'center',
                width: gridSize(50),
                lineHeight: gridSize(3),
            } },
            jsx(FormattedMessage, Object.assign({}, messages[description], { values: { context } }))),
        button && (jsx(Button, { testId: `${testId}-button`, appearance: button.appearance, onClick: onClick },
            jsx(FormattedMessage, Object.assign({}, messages[button.text]))))));
};
//# sourceMappingURL=UnresolvedView.js.map