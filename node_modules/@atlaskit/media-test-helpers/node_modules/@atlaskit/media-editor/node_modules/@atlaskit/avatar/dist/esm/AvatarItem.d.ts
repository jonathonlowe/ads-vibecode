/** @jsx jsx */
import { ComponentType, FC, ReactNode } from 'react';
import { AvatarClickType } from './types';
export interface AvatarItemProps {
    avatar: ReactNode;
    /** Change background color */
    backgroundColor?: string;
    /** A custom component to use instead of the default span. */
    component?: ComponentType<any>;
    /** Provides a url for avatars being used as a link. */
    href?: string;
    /** Change the style to indicate the item is disabled. */
    isDisabled?: boolean;
    /** Handler to be called on click. */
    onClick?: AvatarClickType;
    /** PrimaryText text */
    primaryText?: ReactNode;
    /** SecondaryText text */
    secondaryText?: ReactNode;
    /** Pass target down to the anchor, if href is provided. */
    target?: '_blank' | '_self' | '_top' | '_parent';
    /** Whether or not overflowing primary and secondary text is truncated */
    isTruncationDisabled?: boolean;
    testId?: string;
}
declare const AvatarItem: FC<AvatarItemProps>;
export default AvatarItem;
