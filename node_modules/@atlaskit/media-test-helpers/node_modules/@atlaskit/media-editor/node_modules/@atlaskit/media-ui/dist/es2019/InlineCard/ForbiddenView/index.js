import React from 'react';
import { R400, N500 } from '@atlaskit/theme/colors';
import LockIcon from '@atlaskit/icon/glyph/lock-filled';
import Button from '@atlaskit/button';
import { Frame } from '../Frame';
import { IconAndTitleLayout } from '../IconAndTitleLayout';
import { AKIconWrapper } from '../Icon';
import { messages } from '../../messages';
import { FormattedMessage } from 'react-intl';
import { IconStyledButton, NoLinkAppearance } from '../styled';
export class InlineCardForbiddenView extends React.Component {
    constructor() {
        super(...arguments);
        this.handleRetry = (event) => {
            const { onAuthorise } = this.props;
            event.preventDefault();
            event.stopPropagation();
            onAuthorise();
        };
        this.renderMessage = () => {
            const { onAuthorise } = this.props;
            return !onAuthorise ? (React.createElement(FormattedMessage, Object.assign({}, messages.invalid_permissions))) : (React.createElement(Button, { spacing: "none", appearance: "link", onClick: this.handleRetry, component: IconStyledButton },
                React.createElement(FormattedMessage, Object.assign({}, messages.invalid_permissions), formattedMessage => {
                    return React.createElement(NoLinkAppearance, null,
                        formattedMessage,
                        ". ");
                }),
                React.createElement(FormattedMessage, Object.assign({}, messages.try_another_account))));
        };
    }
    render() {
        const { url, onClick, isSelected, testId = 'inline-card-forbidden-view', } = this.props;
        return (React.createElement(Frame, { testId: testId, link: url, onClick: onClick, isSelected: isSelected },
            React.createElement(IconAndTitleLayout, { icon: React.createElement(AKIconWrapper, null,
                    React.createElement(LockIcon, { label: "error", size: "small", primaryColor: R400 })), title: this.renderMessage(), titleColor: N500 })));
    }
}
//# sourceMappingURL=index.js.map