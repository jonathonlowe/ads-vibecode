import { isRetina } from './isRetina';
import { getElementDimension } from './getElementDimension';
import { defaultImageCardDimensions } from './cardDimensions';
import { isValidPercentageUnit } from './isValidPercentageUnit';
import { containsPixelUnit } from './containsPixelUnit';
export const getDataURIDimension = (dimension, options) => {
    const retinaFactor = isRetina() ? 2 : 1;
    const dimensionValue = (options.dimensions && options.dimensions[dimension]) || '';
    if (isValidPercentageUnit(dimensionValue) && options.element) {
        return getElementDimension(options.element, dimension) * retinaFactor;
    }
    if (typeof dimensionValue === 'number') {
        return dimensionValue * retinaFactor;
    }
    if (containsPixelUnit(`${dimensionValue}`)) {
        return parseInt(`${dimensionValue}`, 10) * retinaFactor;
    }
    return defaultImageCardDimensions[dimension] * retinaFactor;
};
//# sourceMappingURL=getDataURIDimension.js.map