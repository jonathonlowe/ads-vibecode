/// <reference types="react" />
interface TooltipProps {
    truncate?: boolean;
}
export declare const TooltipPrimitive: import("styled-components").StyledComponentClass<import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & TooltipProps, any, import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & TooltipProps>;
export declare const Tooltip: import("styled-components").StyledComponentClass<(TooltipProps & import("@atlaskit/theme").AtlaskitThemeProps) | (TooltipProps & import("@atlaskit/theme").CustomThemeProps) | (TooltipProps & import("@atlaskit/theme").NoThemeProps), any, (Pick<TooltipProps, "truncate"> & {
    theme?: any;
} & import("@atlaskit/theme").AtlaskitThemeProps) | (Pick<TooltipProps, "truncate"> & {
    theme?: any;
} & import("@atlaskit/theme").CustomThemeProps) | (Pick<TooltipProps, "truncate"> & {
    theme?: any;
} & import("@atlaskit/theme").NoThemeProps)>;
export declare const Target: import("styled-components").StyledComponentClass<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, any, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>>;
export {};
