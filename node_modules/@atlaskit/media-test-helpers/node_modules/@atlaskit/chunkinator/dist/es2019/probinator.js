import { bufferCount } from 'rxjs/operators/bufferCount';
import { concatMap } from 'rxjs/operators/concatMap';
import { from } from 'rxjs/observable/from';
export function probinator(hashedBlob$, { batchSize, prober }) {
    return hashedBlob$.pipe(bufferCount(batchSize), concatMap(hashedBlobs => prober(hashedBlobs).then(probes => hashedBlobs.map((hashedBlob, index) => ({
        ...hashedBlob,
        exists: probes[index],
    })))), concatMap(probedBlobs => from(probedBlobs)));
}
//# sourceMappingURL=probinator.js.map