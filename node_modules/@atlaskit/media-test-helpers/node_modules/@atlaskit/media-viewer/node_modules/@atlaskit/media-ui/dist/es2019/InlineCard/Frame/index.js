import React from 'react';
import { Wrapper } from './styled';
export class Frame extends React.Component {
    constructor() {
        super(...arguments);
        this.handleClick = (event) => {
            const { onClick } = this.props;
            if (onClick) {
                event.preventDefault();
                event.stopPropagation();
                onClick(event);
            }
        };
        this.handleKeyPress = (event) => {
            if (event.key !== ' ' && event.key !== 'Enter') {
                return;
            }
            const { onClick } = this.props;
            if (onClick) {
                event.preventDefault();
                event.stopPropagation();
                onClick(event);
            }
        };
        // prevent default on mousedown to avoid inline card losing focus
        this.handleMouseDown = (e) => {
            e.preventDefault();
        };
    }
    render() {
        const { isSelected, children, onClick, link, withoutBackground, testId, } = this.props;
        const isInteractive = Boolean(onClick);
        return (React.createElement(Wrapper, { href: link, withoutBackground: withoutBackground, isSelected: isSelected, isInteractive: isInteractive, tabIndex: isInteractive ? 0 : undefined, role: isInteractive ? 'button' : undefined, onClick: this.handleClick, onMouseDown: this.handleMouseDown, onKeyPress: this.handleKeyPress, "data-testid": testId }, children));
    }
}
//# sourceMappingURL=index.js.map