import { __assign } from "tslib";
/** @jsx jsx */
import { jsx } from '@emotion/core';
import { FormattedMessage } from 'react-intl';
import { R50 } from '@atlaskit/theme/colors';
import { Frame } from '../components/Frame';
import { Thumbnail } from '../components/Thumbnail';
import { Provider } from '../components/Provider';
import { Name } from '../components/Name';
import { Byline } from '../components/Byline';
import { Content } from '../components/Content';
import { NotFoundImage } from '../utils/constants';
import { messages } from '../../messages';
import { ContentFooter } from '../components/ContentFooter';
import { Icon } from '../components/Icon';
import { ContentHeader } from '../components/ContentHeader';
import { handleClickCommon } from '../utils/handlers';
var textTitleProps = __assign({}, messages.not_found_title);
var textDescriptionProps = __assign({}, messages.not_found_description);
export var NotFoundView = function (_a) {
    var _b = _a.context, context = _b === void 0 ? { text: '' } : _b, _c = _a.isSelected, isSelected = _c === void 0 ? false : _c, testId = _a.testId, icon = _a.icon, _d = _a.link, link = _d === void 0 ? '' : _d, _e = _a.onClick, onClick = _e === void 0 ? function () { } : _e;
    var handleClick = function (event) { return handleClickCommon(event, onClick); };
    return (jsx(Frame, { isSelected: isSelected, testId: testId },
        jsx(Content, null,
            jsx("div", null,
                jsx(ContentHeader, { onClick: handleClick, link: link },
                    jsx(Icon, __assign({}, icon)),
                    jsx(Name, { name: jsx(FormattedMessage, __assign({}, textTitleProps)), testId: testId ? testId + "-name" : undefined })),
                jsx(Byline, { text: jsx(FormattedMessage, __assign({}, textDescriptionProps)) })),
            jsx(ContentFooter, null,
                jsx(Provider, { name: context.text, icon: context.icon }))),
        jsx(Thumbnail, { testId: testId ? testId + "-thumb" : undefined, src: NotFoundImage, color: R50 })));
};
//# sourceMappingURL=NotFoundView.js.map