import { __assign } from "tslib";
/** @jsx jsx */
import { jsx } from '@emotion/core';
import Button from '@atlaskit/button';
import ErrorIcon from '@atlaskit/icon/glyph/error';
import { fontSize } from '@atlaskit/theme/constants';
import { R300 } from '@atlaskit/theme/colors';
import { Frame } from '../components/Frame';
import { gs } from '../utils';
import { FormattedMessage } from 'react-intl';
import { messages } from '../../messages';
export var ErroredView = function (_a) {
    var onRetry = _a.onRetry, _b = _a.isSelected, isSelected = _b === void 0 ? false : _b, testId = _a.testId;
    return (jsx(Frame, { compact: true, isSelected: isSelected, testId: testId },
        jsx(ErrorIcon, { size: "small", primaryColor: R300, label: "error-icon" }),
        jsx("span", { css: {
                fontSize: fontSize() + "px",
                marginLeft: gs(0.5),
                marginRight: gs(0.5),
                display: '-webkit-box',
                overflow: 'hidden',
                textOverflow: 'ellipsis',
                WebkitLineClamp: 1,
                WebkitBoxOrient: 'vertical',
                // Fallback options.
                maxHeight: gs(3),
            } },
            jsx(FormattedMessage, __assign({}, messages.could_not_load_link))),
        jsx(Button, { testId: "err-view-retry", appearance: "link", spacing: "none", onClick: onRetry },
            jsx(FormattedMessage, __assign({}, messages.try_again)))));
};
//# sourceMappingURL=ErroredView.js.map