/// <reference types="react-intl" />
import React from 'react';
import { MediaClient, Identifier } from '@atlaskit/media-client';
import { WithAnalyticsEventsProps, UIAnalyticsEvent } from '@atlaskit/analytics-next';
import { ItemSource, MediaViewerFeatureFlags } from './domain';
import { MediaViewerExtensions } from '../components/types';
export declare type Props = {
    onClose?: () => void;
    selectedItem?: Identifier;
    featureFlags?: MediaViewerFeatureFlags;
    mediaClient: MediaClient;
    itemSource: ItemSource;
    extensions?: MediaViewerExtensions;
    contextId?: string;
} & WithAnalyticsEventsProps;
export interface State {
    isSidebarVisible: boolean;
    selectedIdentifier?: Identifier;
}
export declare class MediaViewerComponent extends React.Component<Props, State> {
    state: State;
    static contextTypes: {
        intl: ReactIntl.IntlShape;
    };
    private fireAnalytics;
    UNSAFE_componentWillMount(): void;
    onShortcutClosed: () => void;
    onContentClose: (_e?: React.SyntheticEvent<Element, Event> | undefined, analyticsEvent?: UIAnalyticsEvent | undefined) => void;
    private sendClosedEvent;
    private toggleSidebar;
    private readonly defaultSelectedItem;
    renderSidebar: () => JSX.Element | undefined;
    render(): JSX.Element;
    private onNavigationChange;
    private renderContent;
}
export declare const MediaViewer: React.ForwardRefExoticComponent<Pick<Props, "onClose" | "mediaClient" | "contextId" | "selectedItem" | "extensions" | "itemSource" | "featureFlags"> & React.RefAttributes<any>>;
