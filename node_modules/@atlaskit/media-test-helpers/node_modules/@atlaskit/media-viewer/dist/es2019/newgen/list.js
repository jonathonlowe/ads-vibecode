import React from 'react';
import { hideControlsClassName, } from '@atlaskit/media-ui';
import { ItemViewer } from './item-viewer';
import { HeaderWrapper, ListWrapper } from './styled';
import { Navigation } from './navigation';
import Header from './header';
export class List extends React.Component {
    constructor() {
        super(...arguments);
        this.state = {
            selectedItem: this.props.defaultSelectedItem,
            previewCount: 0,
        };
        this.onNavigationChange = (selectedItem) => {
            const { onNavigationChange, showControls } = this.props;
            if (onNavigationChange) {
                onNavigationChange(selectedItem);
            }
            if (showControls) {
                showControls();
            }
            this.setState({ selectedItem, previewCount: this.state.previewCount + 1 });
        };
    }
    render() {
        const { items } = this.props;
        return this.renderContent(items);
    }
    renderContent(items) {
        const { mediaClient, onClose, showControls, extensions, onSidebarButtonClick, isSidebarVisible, contextId, } = this.props;
        const { selectedItem } = this.state;
        return (React.createElement(ListWrapper, null,
            React.createElement(HeaderWrapper, { className: hideControlsClassName },
                React.createElement(Header, { mediaClient: mediaClient, identifier: selectedItem, onClose: onClose, extensions: extensions, onSidebarButtonClick: onSidebarButtonClick, isSidebarVisible: isSidebarVisible })),
            React.createElement(ItemViewer, { mediaClient: mediaClient, identifier: selectedItem, showControls: showControls, onClose: onClose, previewCount: this.state.previewCount, isSidebarVisible: isSidebarVisible, contextId: contextId }),
            React.createElement(Navigation, { items: items, selectedItem: selectedItem, onChange: this.onNavigationChange })));
    }
}
//# sourceMappingURL=list.js.map