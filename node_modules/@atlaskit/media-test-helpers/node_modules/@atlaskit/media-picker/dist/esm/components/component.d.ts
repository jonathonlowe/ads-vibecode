import { MediaFile, Preview, UploadEventPayloadMap, MediaError, MediaProgress } from '../types';
import { GenericEventEmitter } from '../util/eventEmitter';
export interface UploadEventEmitter {
    emitUploadsStart(files: MediaFile[]): void;
    emitUploadProgress(file: MediaFile, progress: MediaProgress): void;
    emitUploadPreviewUpdate(file: MediaFile, preview: Preview): void;
    emitUploadEnd(file: MediaFile): void;
    emitUploadError(file: MediaFile, error: MediaError): void;
}
export declare class UploadComponent<M extends UploadEventPayloadMap> extends GenericEventEmitter<M> implements UploadEventEmitter {
    emitUploadsStart(files: MediaFile[]): void;
    emitUploadProgress(file: MediaFile, progress: MediaProgress): void;
    emitUploadPreviewUpdate(file: MediaFile, preview: Preview): void;
    emitUploadEnd(file: MediaFile): void;
    emitUploadError(file: MediaFile, error: MediaError): void;
}
