/// <reference types="react" />
import { AppearanceType, PresenceType, SizeType } from '../types';
interface Dimensions {
    height: string;
    width: string;
}
interface Layout {
    bottom?: string;
    left?: string;
    right?: string;
    top?: string;
    height: string;
    width: string;
}
declare type ThemeMode = 'dark' | 'light';
export interface ThemeProps {
    appearance?: AppearanceType;
    includeBorderWidth?: boolean;
    isLoading?: boolean;
    presence?: PresenceType;
    mode?: ThemeMode;
    size: SizeType;
}
export interface ThemeTokens {
    backgroundColor: string;
    borderRadius: string;
    dimensions: Dimensions;
    presence: Layout;
    status: Layout;
}
export declare const Theme: {
    Consumer: import("react").ComponentType<ThemeProps & {
        children: (tokens: ThemeTokens) => import("react").ReactNode;
    }>;
    Provider: import("react").ComponentType<{
        children?: import("react").ReactNode;
        value?: import("@atlaskit/theme/dist/cjs/components").ThemeProp<ThemeTokens, ThemeProps> | undefined;
    }>;
};
export {};
