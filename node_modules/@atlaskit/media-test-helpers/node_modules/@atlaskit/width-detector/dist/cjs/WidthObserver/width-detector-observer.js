"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var hooks_1 = require("./hooks");
var utils_1 = require("./utils");
exports.WidthDetectorObserver = react_1.default.memo(function (_a) {
    var setWidth = _a.setWidth, offscreen = _a.offscreen;
    var supportsResizeObserver = utils_1.browser.supportsResizeObserver;
    var _b = tslib_1.__read(hooks_1.useInView({
        /* Optional options */
        threshold: 0,
    }), 3), inViewRef = _b[0], inView = _b[1], target = _b[2];
    var observer = react_1.default.useRef(function () {
        if (typeof window === 'undefined' || !supportsResizeObserver) {
            return null;
        }
        // https://github.com/DefinitelyTyped/DefinitelyTyped/pull/40909
        // @ts-ignore
        return new ResizeObserver(function (entries) {
            if (!Array.isArray(entries) || !entries.length) {
                return;
            }
            var width = entries[0].contentRect.width;
            setWidth(Math.round(width));
        });
    });
    react_1.default.useEffect(function () {
        var currentObserver = observer.current;
        var resizeObserver = currentObserver();
        if (resizeObserver === null) {
            return;
        }
        if (target) {
            if (inView || offscreen) {
                resizeObserver.observe(target);
            }
            else {
                resizeObserver.unobserve(target);
            }
        }
        return function () {
            resizeObserver.disconnect();
        };
    }, [target, inView, offscreen]);
    return (react_1.default.createElement("div", { style: {
            display: 'block',
            width: '100%',
            position: 'absolute',
        }, ref: inViewRef }));
});
//# sourceMappingURL=width-detector-observer.js.map