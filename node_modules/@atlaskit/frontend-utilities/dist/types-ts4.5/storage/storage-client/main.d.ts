type ExceptionHandlers = {
    captureException?: (e: Error, tags?: Record<string, string>) => void;
};
export type GetStoredItemOptions = {
    useExpiredItem?: boolean;
};
export default class StorageClient {
    private readonly client;
    private readonly clientKey;
    private readonly handlers;
    constructor(clientKey: string, options?: {
        handlers?: ExceptionHandlers;
        storageEngine?: 'localStorage' | 'sessionStorage';
    });
    private captureException;
    private itemKey;
    getItem: (key: string, { useExpiredItem }?: GetStoredItemOptions) => any;
    removeItem: (key: string) => void;
    setItemWithExpiry: (key: string, value: any, expireInMS?: number) => void;
}
export {};
