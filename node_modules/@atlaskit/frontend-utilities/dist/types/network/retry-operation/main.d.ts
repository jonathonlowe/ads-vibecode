import FailedFetchError from './errors/FailedFetchError';
export interface RetryConfig {
    intervalsMS?: Readonly<number[]>;
    retryOn?: (typeof Error | typeof FailedFetchError)[] | ((e: Error) => boolean);
    captureException?: (error: Error, tags?: Record<string, string>) => void;
    onRetry?: (previousErr: Error) => void;
}
export declare const wait: (ms: number) => Promise<unknown>;
declare const retryOnException: <T>(invokeOperation: () => Promise<T>, { intervalsMS, retryOn, captureException, onRetry, }: RetryConfig) => Promise<T>;
export { FailedFetchError, retryOnException };
