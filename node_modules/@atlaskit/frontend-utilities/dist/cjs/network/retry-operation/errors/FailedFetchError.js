"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _wrapNativeSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/wrapNativeSuper"));
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var FailedFetchError = exports.default = /*#__PURE__*/function (_Error) {
  function FailedFetchError(_ref) {
    var _this;
    var error = _ref.error,
      path = _ref.path,
      method = _ref.method;
    (0, _classCallCheck2.default)(this, FailedFetchError);
    _this = _callSuper(this, FailedFetchError);
    _this.name = 'FailedFetchError';
    _this.message = error.message || 'Unknown fetch error';
    _this.stack = error.stack;
    _this.originalName = error.name;
    _this.method = method;
    var p = path.split('?')[0];
    _this.path = /^[/-a-z]+$/i.test(p) ? p : '';
    return _this;
  }
  (0, _inherits2.default)(FailedFetchError, _Error);
  return (0, _createClass2.default)(FailedFetchError);
}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));