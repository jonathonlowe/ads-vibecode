import _defineProperty from "@babel/runtime/helpers/defineProperty";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css, jsx } from '@emotion/react';
import { isVerticalPosition } from '@atlaskit/editor-common/guideline';
import { B200, N30A } from '@atlaskit/theme/colors';
import { getPositionStyles } from './positionStyles';
var basicGuidelineStyles = css({
  position: 'absolute',
  zIndex: 0,
  opacity: 1,
  transition: 'border-color 0.15s linear, opacity 0.15s linear',
  borderColor: "".concat("var(--ds-border-disabled, ".concat(N30A, ")")),
  borderStyle: 'solid'
});
var verticalStyles = css({
  borderWidth: "0 0 0 1px",
  width: '1px',
  height: '100%'
});
var horizontalStyles = css({
  borderWidth: "1px 0 0 0",
  width: '100%',
  height: '1px'
});
var activeGuidelineStyles = css({
  borderColor: "var(--ds-border-focused, ".concat(B200, ")"),
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  '&:before, &:after': {
    backgroundColor: "var(--ds-border-focused, ".concat(B200, ")")
  }
});
var hiddenGuidelineStyles = css({
  opacity: 0
});
var dashedGuidelineStyles = css({
  borderStyle: 'dashed'
});
var verticalCapStyles = css({
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  '&:before, &:after': {
    backgroundColor: "var(--ds-border-disabled, ".concat(N30A, ")"),
    content: '""',
    position: 'absolute',
    height: '5px',
    width: '1px',
    transform: 'translateY(-50%)'
  },
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  '&:after': {
    right: 0
  }
});
var horizontalCapStyles = css({
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  '&:before, &:after': {
    backgroundColor: "".concat("var(--ds-border-disabled, ".concat(N30A, ")")),
    content: '""',
    position: 'absolute',
    height: '1px',
    width: '5px',
    transform: 'translateX(-50%)'
  },
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  '&:after': {
    bottom: 0
  }
});
export var Guideline = function Guideline(props) {
  var position = props.position,
    active = props.active,
    _props$show = props.show,
    show = _props$show === void 0 ? true : _props$show,
    _props$styles = props.styles,
    styles = _props$styles === void 0 ? {} : _props$styles;
  var isVerticalPos = isVerticalPosition(position);
  var lineStyle = styles.lineStyle,
    color = styles.color,
    capStyle = styles.capStyle;
  return jsx("div", {
    css: [basicGuidelineStyles, isVerticalPos ? verticalStyles : horizontalStyles, capStyle === 'line' && (isVerticalPos ? horizontalCapStyles : verticalCapStyles), active && activeGuidelineStyles, !show && hiddenGuidelineStyles, lineStyle === 'dashed' && dashedGuidelineStyles],
    style: _objectSpread(_objectSpread({}, color && {
      borderColor: "".concat(color)
    }), getPositionStyles(position))
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    ,
    className: "guideline"
  });
};