"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GuidelineContainer = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _react2 = require("@emotion/react");
var _editorSharedStyles = require("@atlaskit/editor-shared-styles");
var _constants = require("./constants");
var _guideline = require("./guideline");
var _excluded = ["key"];
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var guidelineContainerStyles = (0, _react2.css)({
  position: 'fixed',
  height: '100vh',
  width: '100%',
  display: 'grid',
  pointerEvents: 'none',
  border: 'none',
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  maxWidth: "".concat(_editorSharedStyles.akEditorFullWidthLayoutWidth, "px")
});
var GuidelineContainer = exports.GuidelineContainer = function GuidelineContainer(props) {
  var guidelines = props.guidelines,
    height = props.height,
    updateRect = props.updateRect;
  var _useState = (0, _react.useState)(0),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    offset = _useState2[0],
    setOffset = _useState2[1];
  var ref = (0, _react.useRef)(null);
  (0, _react.useLayoutEffect)(function () {
    var _ref$current;
    var rect = ref === null || ref === void 0 || (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.getBoundingClientRect();
    if (rect) {
      var centerOffset = rect.width / 2 - 0.5;

      // X pixels from guideline container left to editor center.
      if (offset !== centerOffset) {
        setOffset(centerOffset);
      }
      updateRect({
        top: rect.top,
        left: rect.left
      });
    }
  }, [updateRect, offset]);
  var style = (0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)({}, _constants.VAR_POSITION_OFFSET_X, "".concat(offset, "px")), _constants.VAR_POSITION_OFFSET_Y, "0px"), "height", height);
  return (0, _react2.jsx)("div", {
    ref: ref,
    css: guidelineContainerStyles
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    ,
    style: style,
    "data-testid": "guidelineContainer"
  }, guidelines.map(function (guideline) {
    var key = guideline.key,
      guidelineProps = (0, _objectWithoutProperties2.default)(guideline, _excluded);

    // Ignored via go/ees005
    // eslint-disable-next-line react/jsx-props-no-spreading
    return (0, _react2.jsx)(_guideline.Guideline, (0, _extends2.default)({
      key: key
    }, guidelineProps));
  }));
};