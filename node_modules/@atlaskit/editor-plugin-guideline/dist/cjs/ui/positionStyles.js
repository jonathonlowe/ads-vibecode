"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isNumber = exports.getPositionStyles = void 0;
var _guideline = require("@atlaskit/editor-common/guideline");
var _constants = require("./constants");
/* eslint-disable @atlaskit/design-system/ensure-design-token-usage/preview */

var isNumber = exports.isNumber = function isNumber(x) {
  return typeof x === 'number' && !isNaN(x) && isFinite(x);
};
var getXPosition = function getXPosition(pixel) {
  return isNumber(pixel) ? "calc(".concat(pixel, "px + var(").concat(_constants.VAR_POSITION_OFFSET_X, ", '0px'))") : 'unset';
};
var getYPosition = function getYPosition(pixel) {
  return isNumber(pixel) ? "calc(".concat(pixel, "px + var(").concat(_constants.VAR_POSITION_OFFSET_Y, ", '0px'))") : 'unset';
};
var getPositionStyles = exports.getPositionStyles = function getPositionStyles(pos) {
  var _pos$y, _pos$x;
  return (0, _guideline.isVerticalPosition)(pos) ? {
    left: getXPosition(pos.x),
    top: getYPosition((_pos$y = pos.y) === null || _pos$y === void 0 ? void 0 : _pos$y.start),
    height: pos.y ? "".concat(pos.y.end - pos.y.start, "px") : '100%'
  } : {
    top: getYPosition(pos.y),
    left: getXPosition((_pos$x = pos.x) === null || _pos$x === void 0 ? void 0 : _pos$x.start),
    width: pos.x ? "".concat(pos.x.end - pos.x.start, "px") : '100%'
  };
};