import classNames from 'classnames';
import React from 'react';
import { PureComponent } from 'react';
import { toEmojiId } from '../../util/type-helpers';
import { leftClick } from '../../util/mouse';
import EmojiPreview from '../common/EmojiPreview';
import * as styles from './styles';
export default class EmojiTypeAheadItem extends PureComponent {
    constructor() {
        super(...arguments);
        // internal, used for callbacks
        this.onEmojiSelected = event => {
            const { emoji, onSelection } = this.props;
            if (leftClick(event) && onSelection) {
                event.preventDefault();
                onSelection(toEmojiId(emoji), emoji, event);
            }
        };
        this.onEmojiMenuItemMouseMove = event => {
            const { emoji, onMouseMove } = this.props;
            if (onMouseMove) {
                onMouseMove(toEmojiId(emoji), emoji, event);
            }
        };
    }
    render() {
        const { selected, emoji } = this.props;
        const classes = classNames({
            'ak-emoji-typeahead-item': true,
            [styles.typeAheadItem]: true,
            [styles.selected]: selected,
        });
        return (React.createElement("div", { className: classes, onMouseDown: this.onEmojiSelected, onMouseMove: this.onEmojiMenuItemMouseMove, "data-emoji-id": emoji.shortName },
            React.createElement("div", { className: styles.typeAheadItemRow },
                React.createElement(EmojiPreview, { emoji: emoji }))));
    }
}
//# sourceMappingURL=EmojiTypeAheadItem.js.map