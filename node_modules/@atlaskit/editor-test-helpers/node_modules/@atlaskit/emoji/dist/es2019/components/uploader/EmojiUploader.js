import React from 'react';
import LoadingEmojiComponent from '../common/LoadingEmojiComponent';
import { withAnalyticsEvents, } from '@atlaskit/analytics-next';
const emojiUploadModuleLoader = () => import(
/* webpackChunkName:"@atlaskit-internal_emojiUploadComponent" */ './EmojiUploadComponent');
const emojiUploadLoader = () => emojiUploadModuleLoader().then(module => module.default);
export class EmojiUploaderInternal extends LoadingEmojiComponent {
    constructor(props) {
        super(props, {});
        this.state = {
            asyncLoadedComponent: EmojiUploaderInternal.AsyncLoadedComponent,
        };
    }
    asyncLoadComponent() {
        emojiUploadLoader().then(component => {
            EmojiUploaderInternal.AsyncLoadedComponent = component;
            this.setAsyncState(component);
        });
    }
    renderLoaded(loadedEmojiProvider, EmojiUploadComponent) {
        const { emojiProvider, ...otherProps } = this.props;
        return (React.createElement(EmojiUploadComponent, Object.assign({ emojiProvider: loadedEmojiProvider }, otherProps)));
    }
}
const EmojiUploader = withAnalyticsEvents()(EmojiUploaderInternal);
export default EmojiUploader;
//# sourceMappingURL=EmojiUploader.js.map