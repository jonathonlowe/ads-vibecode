import AkButton from '@atlaskit/button';
import Spinner from '@atlaskit/spinner';
import React from 'react';
import { Component } from 'react';
import { FormattedMessage } from 'react-intl';
import { messages } from '../i18n';
import * as styles from './styles';
export default class RetryableButton extends Component {
    constructor(props) {
        super(props);
    }
    renderLoading() {
        return (React.createElement("span", { className: styles.buttonSpinner },
            React.createElement(Spinner, null)));
    }
    renderRetry() {
        const { loading, retryClassName, onSubmit } = this.props;
        return loading ? (this.renderLoading()) : (React.createElement(FormattedMessage, Object.assign({}, messages.retryLabel), retryLabel => (React.createElement(AkButton, { className: retryClassName, appearance: "warning", onClick: onSubmit }, retryLabel))));
    }
    render() {
        const { loading, error, className, appearance, onSubmit, label, } = this.props;
        return error ? (this.renderRetry()) : loading ? (this.renderLoading()) : (React.createElement(AkButton, { className: className, appearance: appearance, onClick: onSubmit }, label));
    }
}
//# sourceMappingURL=RetryableButton.js.map