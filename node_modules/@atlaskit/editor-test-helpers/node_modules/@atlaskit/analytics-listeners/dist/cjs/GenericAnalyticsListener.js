"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var analytics_next_1 = require("@atlaskit/analytics-next");
var analytics_web_client_wrapper_1 = require("./analytics-web-client-wrapper");
var GenericAnalyticsListener = /** @class */ (function (_super) {
    tslib_1.__extends(GenericAnalyticsListener, _super);
    function GenericAnalyticsListener() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.listenerHandler = function (event) {
            var _a = _this.props, client = _a.client, logger = _a.logger, channel = _a.channel, processEvent = _a.processEvent;
            if (!event.payload) {
                return;
            }
            logger.debug("Received " + channel + " event", event);
            var payload = processEvent(event, logger);
            logger.debug("Processed " + channel + " event", payload);
            if (payload) {
                analytics_web_client_wrapper_1.sendEvent(logger, client)(payload);
            }
        };
        return _this;
    }
    GenericAnalyticsListener.prototype.render = function () {
        return (react_1.default.createElement(analytics_next_1.AnalyticsListener, { onEvent: this.listenerHandler, channel: this.props.channel }, this.props.children));
    };
    return GenericAnalyticsListener;
}(react_1.default.Component));
exports.default = GenericAnalyticsListener;
//# sourceMappingURL=GenericAnalyticsListener.js.map