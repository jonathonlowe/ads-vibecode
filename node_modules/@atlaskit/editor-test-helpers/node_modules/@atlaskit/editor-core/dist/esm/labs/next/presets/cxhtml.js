import * as React from 'react';
import { PresetProvider } from '../Editor';
import { pastePlugin, blockTypePlugin, clearMarksOnChangeToEmptyDocumentPlugin, hyperlinkPlugin, textFormattingPlugin, widthPlugin, unsupportedContentPlugin, quickInsertPlugin, tablesPlugin, codeBlockPlugin, panelPlugin, listsPlugin, textColorPlugin, breakoutPlugin, jiraIssuePlugin, extensionPlugin, rulePlugin, datePlugin, layoutPlugin, indentationPlugin, cardPlugin, statusPlugin, mediaPlugin, mentionsPlugin, emojiPlugin, tasksAndDecisionsPlugin, insertBlockPlugin, } from '../../../plugins';
export function EditorPresetCXHTML(_a) {
    var children = _a.children, mentionProvider = _a.mentionProvider, mediaProvider = _a.mediaProvider;
    var plugins = [
        pastePlugin(),
        blockTypePlugin(),
        clearMarksOnChangeToEmptyDocumentPlugin(),
        hyperlinkPlugin(),
        textFormattingPlugin({}),
        widthPlugin(),
        unsupportedContentPlugin(),
        quickInsertPlugin(),
        tablesPlugin({
            tableOptions: { advanced: true },
        }),
        codeBlockPlugin(),
        panelPlugin(),
        listsPlugin(),
        textColorPlugin(),
        breakoutPlugin(),
        jiraIssuePlugin(),
        extensionPlugin(),
        rulePlugin(),
        datePlugin(),
        layoutPlugin(),
        indentationPlugin(),
        cardPlugin(),
        statusPlugin({ menuDisabled: false }),
        tasksAndDecisionsPlugin(),
        emojiPlugin(),
        insertBlockPlugin({}),
    ];
    if (mentionProvider) {
        plugins.push(mentionsPlugin());
    }
    if (mediaProvider) {
        plugins.push(mediaPlugin({
            provider: mediaProvider,
            allowMediaSingle: true,
            allowMediaGroup: true,
            allowAnnotation: true,
            allowResizing: true,
        }));
    }
    return React.createElement(PresetProvider, { value: plugins }, children);
}
//# sourceMappingURL=cxhtml.js.map