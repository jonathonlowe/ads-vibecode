import { __assign } from "tslib";
import { stateKey as mediaPluginKey, } from '../pm-plugins/main';
import { findMediaNode } from './helpers';
import { SetAttrsStep } from '../../../utils';
export var updateMediaNodeAttrs = function (id, attrs, isMediaSingle) { return function (state, dispatch) {
    var mediaPluginState = mediaPluginKey.getState(state);
    var mediaNodeWithPos = findMediaNode(mediaPluginState, id, isMediaSingle);
    if (!mediaNodeWithPos) {
        return false;
    }
    if (dispatch) {
        dispatch(state.tr
            .step(new SetAttrsStep(mediaNodeWithPos.getPos(), attrs))
            .setMeta('addToHistory', false));
    }
    return true;
}; };
export var replaceExternalMedia = function (pos, attrs) { return function (state, dispatch) {
    if (dispatch) {
        dispatch(state.tr
            .step(new SetAttrsStep(pos, __assign({ type: 'file', url: null }, attrs)))
            .setMeta('addToHistory', false));
        return true;
    }
    return false;
}; };
//# sourceMappingURL=index.js.map