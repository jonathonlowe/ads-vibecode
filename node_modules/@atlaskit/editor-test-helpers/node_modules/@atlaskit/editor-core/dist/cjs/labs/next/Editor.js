"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var prosemirror_view_1 = require("prosemirror-view");
var PropTypes = tslib_1.__importStar(require("prop-types"));
var EditorContext_1 = tslib_1.__importDefault(require("../../ui/EditorContext"));
var EditorContent_1 = require("./EditorContent");
var event_dispatcher_1 = require("../../event-dispatcher");
var create_editor_1 = require("../../create-editor/create-editor");
var react_intl_1 = require("react-intl");
var PortalProvider_1 = require("../../ui/PortalProvider");
var editor_common_1 = require("@atlaskit/editor-common");
var prosemirror_state_1 = require("prosemirror-state");
var index_1 = require("../../index");
var utils_1 = require("../../utils");
var plugins_1 = require("../../plugins");
var _a = React.createContext([]), PresetProvider = _a.Provider, PresetConsumer = _a.Consumer;
exports.PresetProvider = PresetProvider;
function corePlugins(props) {
    return [
        plugins_1.basePlugin({
            allowInlineCursorTarget: true,
            allowScrollGutter: function () {
                return document.querySelector('.fabric-editor-popup-scroll-parent');
            },
        }),
        plugins_1.placeholderPlugin({ placeholder: props.placeholder }),
        plugins_1.editorDisabledPlugin(),
        plugins_1.typeAheadPlugin(),
        plugins_1.floatingToolbarPlugin(),
        plugins_1.gapCursorPlugin(),
    ];
}
exports.corePlugins = corePlugins;
var Editor = /** @class */ (function (_super) {
    tslib_1.__extends(Editor, _super);
    function Editor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Editor.prototype.render = function () {
        var _this = this;
        return (React.createElement(PresetConsumer, null, function (plugins) { return (React.createElement(PortalProvider_1.PortalProvider, { render: function (portalProviderAPI) { return (React.createElement(react_intl_1.IntlProvider, { locale: "en" },
                React.createElement(React.Fragment, null,
                    React.createElement(EditorInternal, tslib_1.__assign({}, _this.props, { plugins: corePlugins(_this.props).concat(_this.props.plugins || [], plugins), portalProviderAPI: portalProviderAPI })),
                    React.createElement(PortalProvider_1.PortalRenderer, { portalProviderAPI: portalProviderAPI })))); } })); }));
    };
    return Editor;
}(React.Component));
exports.Editor = Editor;
var EditorInternal = /** @class */ (function (_super) {
    tslib_1.__extends(EditorInternal, _super);
    function EditorInternal(props, context) {
        var _this = _super.call(this, props) || this;
        _this.handleRef = function (ref) {
            if (!ref) {
                return;
            }
            var eventDispatcher = new event_dispatcher_1.EventDispatcher();
            var providerFactory = new editor_common_1.ProviderFactory();
            var dispatch = event_dispatcher_1.createDispatch(eventDispatcher);
            var editorConfig = create_editor_1.processPluginsList(_this.props.plugins || [], {});
            var schema = create_editor_1.createSchema(editorConfig);
            var pmPlugins = create_editor_1.createPMPlugins({
                editorConfig: editorConfig,
                schema: schema,
                dispatch: dispatch,
                eventDispatcher: eventDispatcher,
                props: {},
                portalProviderAPI: _this.props.portalProviderAPI,
                providerFactory: providerFactory,
                reactContext: function () { return _this.context; },
                dispatchAnalyticsEvent: function () { },
            });
            var state = prosemirror_state_1.EditorState.create({
                schema: schema,
                plugins: pmPlugins,
                doc: utils_1.processRawValue(schema, _this.props.defaultValue),
            });
            var editorView = new prosemirror_view_1.EditorView({ mount: ref }, { state: state });
            // Editor Shared Config
            _this.setState({
                editorView: editorView,
                eventDispatcher: eventDispatcher,
                dispatch: dispatch,
                primaryToolbarComponents: editorConfig.primaryToolbarComponents,
                contentComponents: editorConfig.contentComponents,
                popupsMountPoint: _this.props.popupsMountPoint,
                popupsBoundariesElement: _this.props.popupsBoundariesElement,
                popupsScrollableElement: _this.props.popupsScrollableElement,
                disabled: _this.props.disabled,
                providerFactory: providerFactory,
            });
            _this.editorActions._privateRegisterEditor(editorView, eventDispatcher);
        };
        _this.editorActions = (context || {}).editorActions || new index_1.EditorActions();
        return _this;
    }
    EditorInternal.prototype.render = function () {
        return (React.createElement(editor_common_1.WidthProvider, null,
            React.createElement(EditorContext_1.default, { editorActions: this.editorActions },
                React.createElement(EditorSharedConfigProvider, { value: this.state },
                    React.createElement(EditorContent_1.EditorContentProvider, { value: this.handleRef }, this.props.children)))));
    };
    EditorInternal.contextTypes = {
        editorActions: PropTypes.object,
        intl: react_intl_1.intlShape,
    };
    return EditorInternal;
}(React.Component));
exports.EditorInternal = EditorInternal;
var _b = React.createContext(null), Provider = _b.Provider, Consumer = _b.Consumer;
var EditorSharedConfigProvider = /** @class */ (function (_super) {
    tslib_1.__extends(EditorSharedConfigProvider, _super);
    function EditorSharedConfigProvider() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EditorSharedConfigProvider.prototype.getChildContext = function () {
        return {
            editorSharedConfig: this.props.value,
        };
    };
    EditorSharedConfigProvider.prototype.render = function () {
        return React.createElement(Provider, { value: this.props.value }, this.props.children);
    };
    EditorSharedConfigProvider.childContextTypes = {
        editorSharedConfig: PropTypes.object,
    };
    return EditorSharedConfigProvider;
}(React.Component));
exports.EditorSharedConfigProvider = EditorSharedConfigProvider;
var EditorSharedConfigConsumer = /** @class */ (function (_super) {
    tslib_1.__extends(EditorSharedConfigConsumer, _super);
    function EditorSharedConfigConsumer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EditorSharedConfigConsumer.prototype.render = function () {
        var _this = this;
        return (React.createElement(Consumer, null, function (value) { return _this.props.children(_this.context.editorSharedConfig || value); }));
    };
    EditorSharedConfigConsumer.contextTypes = {
        editorSharedConfig: PropTypes.object,
    };
    return EditorSharedConfigConsumer;
}(React.Component));
exports.EditorSharedConfigConsumer = EditorSharedConfigConsumer;
//# sourceMappingURL=Editor.js.map