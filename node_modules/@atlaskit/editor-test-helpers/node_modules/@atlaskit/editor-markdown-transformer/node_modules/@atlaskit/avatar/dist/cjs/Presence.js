"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var colors_1 = require("@atlaskit/theme/colors");
var constants_1 = require("./constants");
var IconWrapper_1 = tslib_1.__importDefault(require("./IconWrapper"));
var BusyIndicator = (react_1.default.createElement(react_1.Fragment, null,
    react_1.default.createElement("circle", { fill: colors_1.R300, cx: "4", cy: "4", r: "4" }),
    react_1.default.createElement("path", { fill: colors_1.background(), d: "M3.3,1.9l2.8,2.8c0.2,0.2,0.2,0.5,0,0.7L5.4,6.1c-0.2,0.2-0.5,0.2-0.7,0L1.9,3.3c-0.2-0.2-0.2-0.5,0-0.7l0.7-0.7C2.8,1.7,3.1,1.7,3.3,1.9z" })));
var FocusIndicator = (react_1.default.createElement("path", { fill: colors_1.purple(), d: "M4,8 C1.790861,8 0,6.209139 0,4 C0,1.790861 1.790861,0 4,0 C6.209139,0 8,1.790861 8,4 C8,6.209139 6.209139,8 4,8 Z M4,6.66666667 C5.47275933,6.66666667 6.66666667,5.47275933 6.66666667,4 C6.66666667,2.52724067 5.47275933,1.33333333 4,1.33333333 C2.52724067,1.33333333 1.33333333,2.52724067 1.33333333,4 C1.33333333,5.47275933 2.52724067,6.66666667 4,6.66666667 Z M4,5.33333333 C3.26362033,5.33333333 2.66666667,4.73637967 2.66666667,4 C2.66666667,3.26362033 3.26362033,2.66666667 4,2.66666667 C4.73637967,2.66666667 5.33333333,3.26362033 5.33333333,4 C5.33333333,4.73637967 4.73637967,5.33333333 4,5.33333333 Z" }));
var OfflineIndicator = (react_1.default.createElement(react_1.Fragment, null,
    react_1.default.createElement("path", { fill: colors_1.N200, d: "M4,8 C6.209139,8 8,6.209139 8,4 C8,1.790861 6.209139,0 4,0 C1.790861,0 0,1.790861 0,4 C0,6.209139 1.790861,8 4,8 Z M4,6 C5.1045695,6 6,5.1045695 6,4 C6,2.8954305 5.1045695,2 4,2 C2.8954305,2 2,2.8954305 2,4 C2,5.1045695 2.8954305,6 4,6 Z" }),
    react_1.default.createElement("path", { fill: colors_1.N40, d: "M4,6 C5.1045695,6 6,5.1045695 6,4 C6,2.8954305 5.1045695,2 4,2 C2.8954305,2 2,2.8954305 2,4 C2,5.1045695 2.8954305,6 4,6 Z" })));
var OnlineIndicator = react_1.default.createElement("circle", { fill: colors_1.G300, cx: "4", cy: "4", r: "4" });
function getPresence(presence) {
    switch (presence) {
        case 'busy':
            return BusyIndicator;
        case 'focus':
            return FocusIndicator;
        case 'offline':
            return OfflineIndicator;
        case 'online':
            return OnlineIndicator;
    }
}
var Presence = function (_a) {
    var borderColor = _a.borderColor, children = _a.children, presence = _a.presence;
    return (react_1.default.createElement(IconWrapper_1.default, { bgColor: borderColor }, presence ? (react_1.default.createElement("svg", { height: "100%", version: "1.1", viewBox: "0 0 8 8", width: "100%", xmlns: "http://www.w3.org/2000/svg" }, getPresence(presence))) : (children)));
};
exports.default = Presence;
exports.PresenceWrapper = function (_a) {
    var size = _a.size, appearance = _a.appearance, children = _a.children, borderColor = _a.borderColor, presence = _a.presence, testId = _a.testId;
    var position = appearance === 'square' ? -4 : constants_1.ICON_OFFSET[size];
    return (react_1.default.createElement("span", { "data-testid": testId && testId + "--presence", style: {
            pointerEvents: 'none',
            position: 'absolute',
            bottom: position + "px",
            height: constants_1.ICON_SIZES[size] + "px",
            right: position + "px",
            width: constants_1.ICON_SIZES[size] + "px",
        } },
        react_1.default.createElement(Presence, { borderColor: borderColor, presence: !children && presence }, children)));
};
//# sourceMappingURL=Presence.js.map