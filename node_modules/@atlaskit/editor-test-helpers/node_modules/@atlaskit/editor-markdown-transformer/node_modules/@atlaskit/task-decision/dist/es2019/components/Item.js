import React from 'react';
import { PureComponent } from 'react';
import { gridSize } from '@atlaskit/theme';
import { ContentWrapper, TaskWrapper, DecisionWrapper } from '../styled/Item';
import { Placeholder } from '../styled/Placeholder';
export default class Item extends PureComponent {
    renderPlaceholder() {
        const { children, placeholder, showPlaceholder, itemType } = this.props;
        if (!showPlaceholder || !placeholder || children) {
            return null;
        }
        const offset = gridSize() * (itemType === 'TASK' ? 3 : 3.5);
        return (React.createElement(Placeholder, { contentEditable: false, offset: offset }, placeholder));
    }
    renderMessageAppearance() {
        const { contentRef, children, icon, itemType, dataAttributes } = this.props;
        if (itemType === 'TASK') {
            return (React.createElement(TaskWrapper, null,
                icon,
                this.renderPlaceholder(),
                React.createElement(ContentWrapper, Object.assign({}, dataAttributes, { innerRef: contentRef }), children)));
        }
        else if (itemType === 'DECISION') {
            return (React.createElement(DecisionWrapper, { "data-decision-wrapper": "true" },
                icon,
                this.renderPlaceholder(),
                React.createElement(ContentWrapper, Object.assign({}, dataAttributes, { innerRef: contentRef }), children)));
        }
        return null;
    }
    render() {
        return this.renderMessageAppearance();
    }
}
Item.defaultProps = {
    appearance: 'inline',
};
//# sourceMappingURL=Item.js.map