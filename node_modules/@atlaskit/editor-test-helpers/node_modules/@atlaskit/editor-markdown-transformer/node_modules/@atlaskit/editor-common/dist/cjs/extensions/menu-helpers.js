"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var manifest_helpers_1 = require("./manifest-helpers");
exports.groupBy = function (arr, attr, keyRenamer) {
    return arr.reduce(function (acc, item) {
        acc[keyRenamer(item[attr])] = item;
        return acc;
    }, {});
};
exports.buildMenuItem = function (manifest, extensionModule) {
    var title = extensionModule.title || manifest.title;
    var key = manifest.key + ":" + extensionModule.key;
    var node = manifest_helpers_1.buildAction(extensionModule.action, manifest);
    if (!node) {
        throw new Error("Couldn't find any action for " + title + " (" + key + ")");
    }
    return {
        key: key,
        title: title,
        extensionType: manifest.type,
        keywords: extensionModule.keywords || manifest.keywords || [],
        description: extensionModule.description || manifest.description,
        icon: extensionModule.icon || manifest.icons['48'],
        node: node,
    };
};
exports.filterByModule = function (manifest, moduleType) {
    var modules = manifest.modules[moduleType] || [];
    return modules.map(function (extensionModule) {
        return exports.buildMenuItem(manifest, extensionModule);
    });
};
var getGroupedMenuItems = function (extensions, moduleType) {
    return extensions.reduce(function (acc, extension) {
        var items = exports.filterByModule(extension, moduleType);
        return tslib_1.__assign(tslib_1.__assign({}, acc), exports.groupBy(items, 'key', function (key) { return key; }));
    }, {});
};
exports.getItemsFromModule = function (extensions, moduleType, transformFunction) {
    var groupedMenuItems = getGroupedMenuItems(extensions, moduleType);
    return Object.keys(groupedMenuItems).map(function (key, index) {
        return transformFunction(groupedMenuItems[key], index);
    });
};
//# sourceMappingURL=menu-helpers.js.map