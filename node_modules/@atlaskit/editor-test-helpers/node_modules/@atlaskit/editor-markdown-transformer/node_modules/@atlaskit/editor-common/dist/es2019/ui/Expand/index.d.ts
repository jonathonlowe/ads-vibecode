/// <reference types="react" />
export declare const messages: {
    collapseNode: {
        id: string;
        defaultMessage: string;
        description: string;
    };
    expandDefaultTitle: {
        id: string;
        defaultMessage: string;
        description: string;
    };
    expandNode: {
        id: string;
        defaultMessage: string;
        description: string;
    };
    expandPlaceholderText: {
        id: string;
        defaultMessage: string;
        description: string;
    };
};
export interface StyleProps {
    expanded?: boolean;
    'data-node-type'?: 'expand' | 'nestedExpand';
    'data-title'?: string;
}
export declare const ExpandIconWrapper: import("styled-components").StyledComponentClass<import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & {
    expanded: boolean;
}, any, import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & {
    expanded: boolean;
}>;
export declare const ExpandLayoutWrapper: import("styled-components").StyledComponentClass<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, any, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>>;
export declare const sharedExpandStyles: {
    TitleInputStyles: import("styled-components").InterpolationValue[];
    TitleContainerStyles: import("styled-components").InterpolationValue[];
    ContainerStyles: import("styled-components").FlattenInterpolation<import("styled-components").ThemedStyledProps<StyleProps, any>>[];
    ContentStyles: import("styled-components").FlattenInterpolation<import("styled-components").ThemedStyledProps<StyleProps, any>>[];
};
