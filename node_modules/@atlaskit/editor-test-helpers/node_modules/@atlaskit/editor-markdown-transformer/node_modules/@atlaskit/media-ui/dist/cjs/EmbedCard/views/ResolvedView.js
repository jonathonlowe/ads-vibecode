"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/** @jsx jsx */
var core_1 = require("@emotion/core");
var link_1 = tslib_1.__importDefault(require("@atlaskit/icon/glyph/link"));
var ExpandedFrame_1 = require("../components/ExpandedFrame");
var ImageIcon_1 = require("../components/ImageIcon");
var Frame_1 = require("../components/Frame");
exports.EmbedCardResolvedView = function (_a) {
    var link = _a.link, context = _a.context, onClick = _a.onClick, isSelected = _a.isSelected, isFrameVisible = _a.isFrameVisible, preview = _a.preview, title = _a.title, _b = _a.testId, testId = _b === void 0 ? 'embed-card-resolved-view' : _b, inheritDimensions = _a.inheritDimensions;
    var src = context && context.icon
        ? typeof context.icon === 'string'
            ? context.icon
            : undefined
        : undefined;
    var text = title || (context && context.text);
    return (core_1.jsx(ExpandedFrame_1.ExpandedFrame, { isSelected: isSelected, isFrameVisible: isFrameVisible, href: link, testId: testId, icon: core_1.jsx(ImageIcon_1.ImageIcon, { src: src, default: core_1.jsx(link_1.default, { label: "icon", size: "small" }) }), text: text, onClick: onClick, inheritDimensions: inheritDimensions },
        core_1.jsx(Frame_1.Frame, { url: preview, testId: testId })));
};
//# sourceMappingURL=ResolvedView.js.map