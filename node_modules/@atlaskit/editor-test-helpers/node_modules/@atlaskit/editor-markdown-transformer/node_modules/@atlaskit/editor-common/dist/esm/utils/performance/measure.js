import { isPerformanceAPIAvailable } from './is-performance-api-available';
var measureMap = new Map();
export function startMeasure(measureName) {
    if (!isPerformanceAPIAvailable()) {
        return;
    }
    performance.mark(measureName + "::start");
    measureMap.set(measureName, performance.now());
}
export function stopMeasure(measureName, onMeasureComplete) {
    if (!isPerformanceAPIAvailable()) {
        return;
    }
    performance.mark(measureName + "::end");
    var start = onMeasureComplete ? measureMap.get(measureName) : undefined;
    try {
        performance.measure(measureName, measureName + "::start", measureName + "::end");
    }
    catch (error) {
    }
    finally {
        if (onMeasureComplete) {
            var entry = performance.getEntriesByName(measureName).pop();
            if (entry) {
                onMeasureComplete(entry.duration, entry.startTime);
            }
            else if (start) {
                onMeasureComplete(performance.now() - start, start);
            }
        }
        clearMeasure(measureName);
    }
}
export function clearMeasure(measureName) {
    if (!isPerformanceAPIAvailable()) {
        return;
    }
    measureMap.delete(measureName);
    performance.clearMarks(measureName + "::start");
    performance.clearMarks(measureName + "::end");
    performance.clearMeasures(measureName);
}
//# sourceMappingURL=measure.js.map