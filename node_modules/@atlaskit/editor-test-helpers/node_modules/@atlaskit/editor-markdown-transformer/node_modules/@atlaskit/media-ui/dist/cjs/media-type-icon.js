"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var styled_components_1 = tslib_1.__importDefault(require("styled-components"));
var colors_1 = require("@atlaskit/theme/colors");
var image_1 = tslib_1.__importDefault(require("@atlaskit/icon/glyph/media-services/image"));
var audio_1 = tslib_1.__importDefault(require("@atlaskit/icon/glyph/media-services/audio"));
var video_1 = tslib_1.__importDefault(require("@atlaskit/icon/glyph/media-services/video"));
var document_1 = tslib_1.__importDefault(require("@atlaskit/icon/glyph/media-services/document"));
var unknown_1 = tslib_1.__importDefault(require("@atlaskit/icon/glyph/media-services/unknown"));
exports.mediaTypeIconColors = {
    image: colors_1.Y200,
    audio: colors_1.P200,
    video: '#ff7143',
    doc: colors_1.B300,
    unknown: '#3dc7dc',
};
exports.IconWrapper = styled_components_1.default.div(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["\n  display: inline-flex;\n  color: ", ";\n"], ["\n  display: inline-flex;\n  color: ",
    ";\n"])), function (_a) {
    var type = _a.type;
    return exports.mediaTypeIconColors[type] || exports.mediaTypeIconColors.unknown;
});
var icons = {
    image: image_1.default,
    audio: audio_1.default,
    video: video_1.default,
    doc: document_1.default,
    unknown: unknown_1.default,
};
var defaultType = 'unknown';
var MediaTypeIcon = /** @class */ (function (_super) {
    tslib_1.__extends(MediaTypeIcon, _super);
    function MediaTypeIcon() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MediaTypeIcon.prototype.render = function () {
        var type = this.props.type;
        var typeWithDefault = type || defaultType;
        var Icon = icons[typeWithDefault] || icons[defaultType];
        return (react_1.default.createElement(exports.IconWrapper, { "data-testid": "media-viewer-file-type-icon", type: typeWithDefault },
            react_1.default.createElement(Icon, { label: "media-type", size: "large" })));
    };
    MediaTypeIcon.defaultProps = {
        type: defaultType,
    };
    return MediaTypeIcon;
}(react_1.default.Component));
exports.MediaTypeIcon = MediaTypeIcon;
var templateObject_1;
//# sourceMappingURL=media-type-icon.js.map