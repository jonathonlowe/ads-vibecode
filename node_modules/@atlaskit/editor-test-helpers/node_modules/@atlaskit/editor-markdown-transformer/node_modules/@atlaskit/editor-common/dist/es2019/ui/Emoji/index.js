import React, { PureComponent } from 'react';
import { ResourcedEmoji } from '@atlaskit/emoji/element';
import { ProviderFactory, WithProviders, } from '../../provider-factory';
export default class EmojiNode extends PureComponent {
    constructor(props) {
        super(props);
        this.renderWithProvider = (providers) => {
            const { allowTextFallback, shortName, id, fallback, fitToHeight, } = this.props;
            if (allowTextFallback && !providers.emojiProvider) {
                return (React.createElement("span", { "data-emoji-id": id, "data-emoji-short-name": shortName, "data-emoji-text": fallback || shortName }, fallback || shortName));
            }
            if (!providers.emojiProvider) {
                return null;
            }
            return (React.createElement(ResourcedEmoji, { emojiId: { id, fallback, shortName }, emojiProvider: providers.emojiProvider, showTooltip: true, fitToHeight: fitToHeight }));
        };
        this.providerFactory = props.providers || new ProviderFactory();
    }
    componentWillUnmount() {
        if (!this.props.providers) {
            // new ProviderFactory is created if no `providers` has been set
            // in this case when component is unmounted it's safe to destroy this providerFactory
            this.providerFactory.destroy();
        }
    }
    render() {
        return (React.createElement(WithProviders, { providers: ['emojiProvider'], providerFactory: this.providerFactory, renderNode: this.renderWithProvider }));
    }
}
EmojiNode.displayName = 'EmojiNode';
//# sourceMappingURL=index.js.map