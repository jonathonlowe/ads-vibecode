"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var grid_1 = require("./grid");
var styled_1 = tslib_1.__importDefault(require("./styled"));
exports.DEFAULT_IMAGE_WIDTH = 250;
exports.DEFAULT_IMAGE_HEIGHT = 200;
exports.wrappedLayouts = [
    'wrap-left',
    'wrap-right',
    'align-end',
    'align-start',
];
exports.shouldAddDefaultWrappedWidth = function (layout, width, lineLength) {
    return (exports.wrappedLayouts.indexOf(layout) > -1 &&
        lineLength &&
        width &&
        width > 0.5 * lineLength);
};
function MediaSingle(_a) {
    var children = _a.children, layout = _a.layout, width = _a.width, height = _a.height, _b = _a.containerWidth, containerWidth = _b === void 0 ? width : _b, _c = _a.isLoading, isLoading = _c === void 0 ? false : _c, pctWidth = _a.pctWidth, className = _a.className, fullWidthMode = _a.fullWidthMode, lineLength = _a.lineLength, blockLink = _a.blockLink, _d = _a.nodeType, nodeType = _d === void 0 ? 'mediaSingle' : _d, _e = _a.hasFallbackContainer, hasFallbackContainer = _e === void 0 ? true : _e;
    if (!pctWidth && exports.shouldAddDefaultWrappedWidth(layout, width, lineLength)) {
        pctWidth = 50;
    }
    if (pctWidth) {
        var pxWidth = Math.ceil(grid_1.calcPxFromPct(pctWidth / 100, lineLength || containerWidth));
        // scale, keeping aspect ratio
        height = (height / width) * pxWidth;
        width = pxWidth;
    }
    return (react_1.default.createElement(styled_1.default, { layout: layout, width: width, ratio: ((height / width) * 100).toFixed(3), containerWidth: containerWidth, pctWidth: pctWidth, fullWidthMode: fullWidthMode, "data-node-type": nodeType, "data-layout": layout, "data-width": pctWidth, "data-block-link": blockLink, hasFallbackContainer: hasFallbackContainer, className: classnames_1.default('rich-media-item', "image-" + layout, className, {
            'is-loading': isLoading,
            'rich-media-wrapped': layout === 'wrap-left' || layout === 'wrap-right',
        }) }, react_1.default.Children.only(children)));
}
exports.default = MediaSingle;
//# sourceMappingURL=index.js.map