import React from 'react';
import { MediaClient } from '../client/media-client';
const mediaClientsMap = new Map();
export const getMediaClient = (mediaClientConfig) => {
    let mediaClient = mediaClientsMap.get(mediaClientConfig);
    if (!mediaClient) {
        mediaClient = new MediaClient(mediaClientConfig);
        mediaClientsMap.set(mediaClientConfig, mediaClient);
    }
    return mediaClient;
};
const createEmptyMediaClient = () => {
    const emptyConfig = {
        authProvider: () => Promise.resolve({
            clientId: '',
            token: '',
            baseUrl: '',
        }),
    };
    return new MediaClient(emptyConfig);
};
export const withMediaClient = (Component) => {
    return class extends React.Component {
        render() {
            // TODO MPT-315: clean up after we move mediaClientConfig into FileIdentifier
            const { mediaClientConfig, ...otherProps } = this.props;
            const mediaClient = !mediaClientConfig
                ? createEmptyMediaClient()
                : getMediaClient(mediaClientConfig);
            return React.createElement(Component, Object.assign({}, otherProps, { mediaClient: mediaClient }));
        }
    };
};
//# sourceMappingURL=with-media-client-hoc.js.map