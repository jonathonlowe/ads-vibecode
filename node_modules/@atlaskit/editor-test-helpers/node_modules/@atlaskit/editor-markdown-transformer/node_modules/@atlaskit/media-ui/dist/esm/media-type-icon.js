import { __extends, __makeTemplateObject } from "tslib";
import React from 'react';
import styled from 'styled-components';
import { Y200, P200, B300 } from '@atlaskit/theme/colors';
import ImageIcon from '@atlaskit/icon/glyph/media-services/image';
import AudioIcon from '@atlaskit/icon/glyph/media-services/audio';
import VideoIcon from '@atlaskit/icon/glyph/media-services/video';
import DocIcon from '@atlaskit/icon/glyph/media-services/document';
import UnknownIcon from '@atlaskit/icon/glyph/media-services/unknown';
export var mediaTypeIconColors = {
    image: Y200,
    audio: P200,
    video: '#ff7143',
    doc: B300,
    unknown: '#3dc7dc',
};
export var IconWrapper = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: inline-flex;\n  color: ", ";\n"], ["\n  display: inline-flex;\n  color: ",
    ";\n"])), function (_a) {
    var type = _a.type;
    return mediaTypeIconColors[type] || mediaTypeIconColors.unknown;
});
var icons = {
    image: ImageIcon,
    audio: AudioIcon,
    video: VideoIcon,
    doc: DocIcon,
    unknown: UnknownIcon,
};
var defaultType = 'unknown';
var MediaTypeIcon = /** @class */ (function (_super) {
    __extends(MediaTypeIcon, _super);
    function MediaTypeIcon() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MediaTypeIcon.prototype.render = function () {
        var type = this.props.type;
        var typeWithDefault = type || defaultType;
        var Icon = icons[typeWithDefault] || icons[defaultType];
        return (React.createElement(IconWrapper, { "data-testid": "media-viewer-file-type-icon", type: typeWithDefault },
            React.createElement(Icon, { label: "media-type", size: "large" })));
    };
    MediaTypeIcon.defaultProps = {
        type: defaultType,
    };
    return MediaTypeIcon;
}(React.Component));
export { MediaTypeIcon };
var templateObject_1;
//# sourceMappingURL=media-type-icon.js.map