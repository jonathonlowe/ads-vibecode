import { __assign, __extends } from "tslib";
import React from 'react';
import { PureComponent } from 'react';
import { gridSize } from '@atlaskit/theme';
import { ContentWrapper, TaskWrapper, DecisionWrapper } from '../styled/Item';
import { Placeholder } from '../styled/Placeholder';
var Item = /** @class */ (function (_super) {
    __extends(Item, _super);
    function Item() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Item.prototype.renderPlaceholder = function () {
        var _a = this.props, children = _a.children, placeholder = _a.placeholder, showPlaceholder = _a.showPlaceholder, itemType = _a.itemType;
        if (!showPlaceholder || !placeholder || children) {
            return null;
        }
        var offset = gridSize() * (itemType === 'TASK' ? 3 : 3.5);
        return (React.createElement(Placeholder, { contentEditable: false, offset: offset }, placeholder));
    };
    Item.prototype.renderMessageAppearance = function () {
        var _a = this.props, contentRef = _a.contentRef, children = _a.children, icon = _a.icon, itemType = _a.itemType, dataAttributes = _a.dataAttributes;
        if (itemType === 'TASK') {
            return (React.createElement(TaskWrapper, null,
                icon,
                this.renderPlaceholder(),
                React.createElement(ContentWrapper, __assign({}, dataAttributes, { innerRef: contentRef }), children)));
        }
        else if (itemType === 'DECISION') {
            return (React.createElement(DecisionWrapper, { "data-decision-wrapper": "true" },
                icon,
                this.renderPlaceholder(),
                React.createElement(ContentWrapper, __assign({}, dataAttributes, { innerRef: contentRef }), children)));
        }
        return null;
    };
    Item.prototype.render = function () {
        return this.renderMessageAppearance();
    };
    Item.defaultProps = {
        appearance: 'inline',
    };
    return Item;
}(PureComponent));
export default Item;
//# sourceMappingURL=Item.js.map