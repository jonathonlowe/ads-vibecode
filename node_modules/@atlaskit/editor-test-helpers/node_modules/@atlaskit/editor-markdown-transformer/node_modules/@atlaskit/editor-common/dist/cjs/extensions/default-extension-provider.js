"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var DefaultExtensionProvider = /** @class */ (function () {
    function DefaultExtensionProvider(manifests) {
        this.manifestsPromise = Promise.resolve(manifests);
    }
    DefaultExtensionProvider.prototype.getExtensions = function () {
        return this.manifestsPromise;
    };
    DefaultExtensionProvider.prototype.getExtension = function (type, key) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var extension;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.manifestsPromise];
                    case 1:
                        extension = (_a.sent()).find(function (manifest) { return manifest.type === type && manifest.key === key; });
                        if (!extension) {
                            throw new Error("Extension with type \"" + type + "\" and key \"" + key + "\" not found!");
                        }
                        return [2 /*return*/, extension];
                }
            });
        });
    };
    DefaultExtensionProvider.prototype.search = function (keyword) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var extensions;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.manifestsPromise];
                    case 1:
                        extensions = (_a.sent()).filter(function (manifest) {
                            return manifest.title.toLowerCase().includes(keyword.toLowerCase());
                        });
                        return [2 /*return*/, extensions];
                }
            });
        });
    };
    return DefaultExtensionProvider;
}());
exports.default = DefaultExtensionProvider;
//# sourceMappingURL=default-extension-provider.js.map