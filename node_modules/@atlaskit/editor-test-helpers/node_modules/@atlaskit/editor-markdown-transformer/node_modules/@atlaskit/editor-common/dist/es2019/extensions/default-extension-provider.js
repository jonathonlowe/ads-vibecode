export default class DefaultExtensionProvider {
    constructor(manifests) {
        this.manifestsPromise = Promise.resolve(manifests);
    }
    getExtensions() {
        return this.manifestsPromise;
    }
    async getExtension(type, key) {
        const extension = (await this.manifestsPromise).find(manifest => manifest.type === type && manifest.key === key);
        if (!extension) {
            throw new Error(`Extension with type "${type}" and key "${key}" not found!`);
        }
        return extension;
    }
    async search(keyword) {
        const extensions = (await this.manifestsPromise).filter(manifest => manifest.title.toLowerCase().includes(keyword.toLowerCase()));
        return extensions;
    }
}
//# sourceMappingURL=default-extension-provider.js.map