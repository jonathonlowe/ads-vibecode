import React from 'react';
import classnames from 'classnames';
import { calcPxFromPct } from './grid';
import Wrapper from './styled';
export const DEFAULT_IMAGE_WIDTH = 250;
export const DEFAULT_IMAGE_HEIGHT = 200;
export const wrappedLayouts = [
    'wrap-left',
    'wrap-right',
    'align-end',
    'align-start',
];
export const shouldAddDefaultWrappedWidth = (layout, width, lineLength) => {
    return (wrappedLayouts.indexOf(layout) > -1 &&
        lineLength &&
        width &&
        width > 0.5 * lineLength);
};
export default function MediaSingle({ children, layout, width, height, containerWidth = width, isLoading = false, pctWidth, className, fullWidthMode, lineLength, blockLink, nodeType = 'mediaSingle', hasFallbackContainer = true, }) {
    if (!pctWidth && shouldAddDefaultWrappedWidth(layout, width, lineLength)) {
        pctWidth = 50;
    }
    if (pctWidth) {
        const pxWidth = Math.ceil(calcPxFromPct(pctWidth / 100, lineLength || containerWidth));
        // scale, keeping aspect ratio
        height = (height / width) * pxWidth;
        width = pxWidth;
    }
    return (React.createElement(Wrapper, { layout: layout, width: width, ratio: ((height / width) * 100).toFixed(3), containerWidth: containerWidth, pctWidth: pctWidth, fullWidthMode: fullWidthMode, "data-node-type": nodeType, "data-layout": layout, "data-width": pctWidth, "data-block-link": blockLink, hasFallbackContainer: hasFallbackContainer, className: classnames('rich-media-item', `image-${layout}`, className, {
            'is-loading': isLoading,
            'rich-media-wrapped': layout === 'wrap-left' || layout === 'wrap-right',
        }) }, React.Children.only(children)));
}
//# sourceMappingURL=index.js.map