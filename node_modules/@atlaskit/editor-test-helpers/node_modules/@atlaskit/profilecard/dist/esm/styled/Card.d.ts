/// <reference types="react" />
/// <reference types="@emotion/core" />
import { Elevation } from '../types';
interface FullNameLabelProps {
    noMeta?: boolean;
    isDisabledAccount?: boolean;
}
export declare const CardContainerEmpty: import("styled-components").StyledComponentClass<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, any, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>>;
export declare const CardTriggerWrapper: import("styled-components").StyledComponentClass<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, any, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>>;
interface CardElevationWrapperProps {
    customElevation?: Elevation;
}
export declare const CardElevationWrapper: import("styled-components").StyledComponentClass<import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & CardElevationWrapperProps, any, import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & CardElevationWrapperProps>;
export declare const ProfileImage: import("styled-components").StyledComponentClass<any, any, any>;
export declare const ActionsFlexSpacer: import("styled-components").StyledComponentClass<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, any, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>>;
export declare const ActionButtonGroup: import("styled-components").StyledComponentClass<any, any, any>;
export declare const CardContent: import("styled-components").StyledComponentClass<any, any, any>;
export declare const DetailsGroup: import("styled-components").StyledComponentClass<any, any, any>;
export declare const DisabledInfo: import("styled-components").StyledComponentClass<(import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & import("@atlaskit/theme").AtlaskitThemeProps) | (import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & import("@atlaskit/theme").CustomThemeProps) | (import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & import("@atlaskit/theme").NoThemeProps), any, (import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & import("@atlaskit/theme").AtlaskitThemeProps) | (import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & import("@atlaskit/theme").CustomThemeProps) | (import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & import("@atlaskit/theme").NoThemeProps)>;
export declare const FullNameLabel: import("styled-components").StyledComponentClass<import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & FullNameLabelProps, any, import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & FullNameLabelProps>;
export declare const LozengeWrapper: import("styled-components").StyledComponentClass<any, any, any>;
export declare const JobTitleLabel: import("styled-components").StyledComponentClass<(import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & import("@atlaskit/theme").AtlaskitThemeProps) | (import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & import("@atlaskit/theme").CustomThemeProps) | (import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & import("@atlaskit/theme").NoThemeProps), any, (import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & import("@atlaskit/theme").AtlaskitThemeProps) | (import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & import("@atlaskit/theme").CustomThemeProps) | (import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & import("@atlaskit/theme").NoThemeProps)>;
export declare const AppTitleLabel: import("styled-components").StyledComponentClass<(import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & import("@atlaskit/theme").AtlaskitThemeProps) | (import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & import("@atlaskit/theme").CustomThemeProps) | (import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & import("@atlaskit/theme").NoThemeProps), any, (import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & import("@atlaskit/theme").AtlaskitThemeProps) | (import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & import("@atlaskit/theme").CustomThemeProps) | (import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & import("@atlaskit/theme").NoThemeProps)>;
export declare const SpinnerContainer: import("styled-components").StyledComponentClass<any, any, any>;
export declare const CardContainer: import("styled-components").StyledComponentClass<import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & {
    isDisabledUser: boolean;
}, any, import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & {
    isDisabledUser: boolean;
}>;
export declare const DetailsLabel: import("styled-components").StyledComponentClass<any, any, any>;
export declare const DetailsLabelIcon: import("styled-components").StyledComponentClass<(import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & import("@atlaskit/theme").AtlaskitThemeProps) | (import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & import("@atlaskit/theme").CustomThemeProps) | (import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & import("@atlaskit/theme").NoThemeProps), any, (import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & import("@atlaskit/theme").AtlaskitThemeProps) | (import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & import("@atlaskit/theme").CustomThemeProps) | (import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & import("@atlaskit/theme").NoThemeProps)>;
export declare const DetailsLabelText: import("styled-components").StyledComponentClass<(import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & import("@atlaskit/theme").AtlaskitThemeProps) | (import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & import("@atlaskit/theme").CustomThemeProps) | (import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & import("@atlaskit/theme").NoThemeProps), any, (import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & import("@atlaskit/theme").AtlaskitThemeProps) | (import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & import("@atlaskit/theme").CustomThemeProps) | (import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & import("@atlaskit/theme").NoThemeProps)>;
export {};
