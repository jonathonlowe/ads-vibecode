import React from 'react';
import { FakeMouseElement, TooltipProps, TooltipState } from './types';
declare class Tooltip extends React.Component<TooltipProps, TooltipState> {
    static defaultProps: Pick<TooltipProps, 'component' | 'delay' | 'mousePosition' | 'position' | 'tag'>;
    wrapperRef: HTMLElement | null;
    targetRef: HTMLElement | null;
    fakeMouseElement?: FakeMouseElement;
    cancelPendingSetState: () => void;
    userInteraction: 'mouse' | 'keyboard';
    state: {
        immediatelyHide: boolean;
        immediatelyShow: boolean;
        isVisible: boolean;
        renderTooltip: boolean;
    };
    componentWillUnmount(): void;
    componentDidUpdate(_prevProps: TooltipProps, prevState: TooltipState): void;
    removeScrollListener(): void;
    handleWindowScroll: () => void;
    handleMouseClick: () => void;
    handleMouseDown: () => void;
    handleMouseOver: (e: React.MouseEvent<Element, MouseEvent>) => void;
    handleFocus: () => void;
    handleShowTooltip: () => void;
    handleHideTooltip: (e: React.MouseEvent<Element, MouseEvent> | FocusEvent) => void;
    handleMouseMove: (event: MouseEvent) => void;
    shouldPositionTooltipNearMouse(): boolean;
    render(): JSX.Element;
}
export { Tooltip as TooltipWithoutAnalytics };
export declare type TooltipType = Tooltip;
declare const _default: React.ForwardRefExoticComponent<Pick<Pick<Pick<TooltipProps, "truncate" | "children" | "content" | "component" | "delay" | "hideTooltipOnClick" | "hideTooltipOnMouseDown" | "mousePosition" | "onShow" | "onHide" | "position" | "tag" | "testId">, "truncate" | "children" | "content" | "hideTooltipOnClick" | "hideTooltipOnMouseDown" | "onShow" | "onHide" | "testId"> & Partial<Pick<Pick<TooltipProps, "truncate" | "children" | "content" | "component" | "delay" | "hideTooltipOnClick" | "hideTooltipOnMouseDown" | "mousePosition" | "onShow" | "onHide" | "position" | "tag" | "testId">, "component" | "delay" | "mousePosition" | "position" | "tag">> & Partial<Pick<Pick<TooltipProps, "component" | "delay" | "mousePosition" | "position" | "tag">, never>> & React.RefAttributes<any> & import("@atlaskit/analytics-next/dist/cjs/withAnalyticsContext").WithContextProps, "truncate" | "key" | "children" | "content" | "component" | "delay" | "hideTooltipOnClick" | "hideTooltipOnMouseDown" | "mousePosition" | "onShow" | "onHide" | "position" | "tag" | "testId" | "analyticsContext"> & React.RefAttributes<any>>;
export default _default;
