export const mentionHighlightLocalStorageKey = 'atlassian.people.context.team.mention.highlight';
const EMPTY = {
    seenCount: 0,
    dontShow: false,
};
// Don't show if the user can't access local storage
const DISABLED_LOCAL_STORAGE = {
    seenCount: 99,
    dontShow: true,
};
const MAX_SEEN_LIMIT = 5;
export default class TeamMentionHighlightController {
    // Note - not a simple look up to avoid showing it to users that have local storage disabled
    static readFromLocalStorage() {
        try {
            let localVal = localStorage.getItem(mentionHighlightLocalStorageKey);
            if (!localVal) {
                // Attempt to write to see if the user has local storage access
                localStorage.setItem(mentionHighlightLocalStorageKey, JSON.stringify(EMPTY));
                localVal = localStorage.getItem(mentionHighlightLocalStorageKey);
            }
            if (localVal) {
                return JSON.parse(localVal);
            }
            else {
                return DISABLED_LOCAL_STORAGE;
            }
        }
        catch (err) {
            return DISABLED_LOCAL_STORAGE;
        }
    }
    static saveToLocalStorage(item) {
        try {
            localStorage.setItem(mentionHighlightLocalStorageKey, JSON.stringify(item));
        }
        catch (err) {
            // do nothing
        }
    }
}
TeamMentionHighlightController.markAsDone = () => {
    const item = TeamMentionHighlightController.readFromLocalStorage();
    item.dontShow = true;
    TeamMentionHighlightController.saveToLocalStorage(item);
};
TeamMentionHighlightController.isHighlightEnabled = () => {
    const item = TeamMentionHighlightController.readFromLocalStorage();
    return item.seenCount < MAX_SEEN_LIMIT && !item.dontShow;
};
TeamMentionHighlightController.registerRender = () => {
    const item = TeamMentionHighlightController.readFromLocalStorage();
    item.seenCount += 1;
    if (item.seenCount > MAX_SEEN_LIMIT) {
        item.dontShow = true;
    }
    TeamMentionHighlightController.saveToLocalStorage(item);
    return item;
};
TeamMentionHighlightController.getSeenCount = () => {
    return TeamMentionHighlightController.readFromLocalStorage().seenCount;
};
TeamMentionHighlightController.registerCreateLinkClick = TeamMentionHighlightController.markAsDone;
TeamMentionHighlightController.registerTeamMention = TeamMentionHighlightController.markAsDone;
TeamMentionHighlightController.registerClosed = TeamMentionHighlightController.markAsDone;
//# sourceMappingURL=TeamMentionHighlightController.js.map