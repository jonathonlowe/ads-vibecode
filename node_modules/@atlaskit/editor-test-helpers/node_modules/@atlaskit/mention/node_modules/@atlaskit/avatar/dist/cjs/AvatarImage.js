"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/** @jsx jsx */
var react_1 = require("react");
var core_1 = require("@emotion/core");
var person_1 = tslib_1.__importDefault(require("@atlaskit/icon/glyph/person"));
var ship_1 = tslib_1.__importDefault(require("@atlaskit/icon/glyph/ship"));
var colors_1 = require("@atlaskit/theme/colors");
var constants_1 = require("./constants");
var AvatarImage = function (_a) {
    var _b = _a.alt, alt = _b === void 0 ? '' : _b, src = _a.src, appearance = _a.appearance, size = _a.size, testId = _a.testId;
    var _c = tslib_1.__read(react_1.useState('initial'), 2), phase = _c[0], setPhase = _c[1];
    var borderRadius = appearance === 'circle' ? '50%' : constants_1.AVATAR_RADIUS[size] + "px";
    react_1.useEffect(function () {
        // check whether there was a problem loading the image
        // if handleLoadError is called we show the default avatar
        var img;
        if (src) {
            setPhase('loading');
            img = new Image();
            img.onload = function () { return setPhase('loaded'); };
            img.onerror = function () { return setPhase('error'); };
            img.src = src;
        }
        return function () {
            if (img) {
                img.onload = function () { };
                img.onerror = function () { };
            }
        };
    }, [src]);
    if (phase === 'loading' || phase === 'error' || !src) {
        return (core_1.jsx("span", { css: {
                backgroundColor: colors_1.N50,
                borderRadius: borderRadius,
                height: constants_1.AVATAR_SIZES[size] + "px",
                width: constants_1.AVATAR_SIZES[size] + "px",
                '& svg': {
                    height: constants_1.AVATAR_SIZES[size] + "px",
                    width: constants_1.AVATAR_SIZES[size] + "px",
                },
            } }, appearance === 'circle' ? (core_1.jsx(person_1.default, { label: alt, primaryColor: colors_1.background(), secondaryColor: colors_1.N50, testId: testId && testId + "--person" })) : (core_1.jsx(ship_1.default, { label: alt, primaryColor: colors_1.background(), secondaryColor: colors_1.N50, testId: testId && testId + "--ship" }))));
    }
    return (core_1.jsx("span", { css: {
            backgroundColor: 'transparent',
            backgroundImage: "url(" + src + ")",
            backgroundPosition: 'center',
            backgroundRepeat: 'no-repeat',
            backgroundSize: 'cover',
            borderRadius: borderRadius,
            display: 'flex',
            flex: '1 1 100%',
            height: '100%',
            width: '100%',
        }, role: "img", "aria-label": alt, "data-testid": testId && testId + "--image" }));
};
exports.default = AvatarImage;
//# sourceMappingURL=AvatarImage.js.map