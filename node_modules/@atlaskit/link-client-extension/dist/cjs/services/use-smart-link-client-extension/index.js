"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useSmartLinkClientExtension = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _react = require("react");
var _linkingCommon = require("@atlaskit/linking-common");
var _smartLinkActions = require("@atlaskit/linking-types/smart-link-actions");
var _useResolverUrl = require("../use-resolver-url");
/**
 * useSmartLinkClientExtension
 *
 * This hook extends the usage of @atlaskit/link-provider CardClient
 * for smart links.
 *
 * @param cardClient
 */
var useSmartLinkClientExtension = exports.useSmartLinkClientExtension = function useSmartLinkClientExtension(cardClient) {
  var resolverUrl = (0, _useResolverUrl.useResolverUrl)(cardClient);
  var invoke = (0, _react.useCallback)( /*#__PURE__*/function () {
    var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(data) {
      var errorBody;
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _context.next = 3;
            return (0, _linkingCommon.request)('post', "".concat(resolverUrl, "/invoke"), data, undefined, [200, 201, 202, 203, 204]);
          case 3:
            return _context.abrupt("return", _context.sent);
          case 6:
            _context.prev = 6;
            _context.t0 = _context["catch"](0);
            if (!(_context.t0 && _context.t0.json && typeof _context.t0.json === 'function')) {
              _context.next = 14;
              break;
            }
            _context.next = 11;
            return _context.t0.json();
          case 11:
            errorBody = _context.sent;
            if (!errorBody) {
              _context.next = 14;
              break;
            }
            throw new _smartLinkActions.InvokeError(errorBody === null || errorBody === void 0 ? void 0 : errorBody.error.message, errorBody === null || errorBody === void 0 ? void 0 : errorBody.error.status);
          case 14:
            throw _context.t0;
          case 15:
          case "end":
            return _context.stop();
        }
      }, _callee, null, [[0, 6]]);
    }));
    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }(), [resolverUrl]);
  return (0, _react.useMemo)(function () {
    return {
      invoke: invoke
    };
  }, [invoke]);
};