/* code.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["testId"],
  _excluded2 = ["children", "codeBidiWarnings", "codeBidiWarningLabel", "codeBidiWarningTooltipEnabled"];
import "./code.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
import React, { forwardRef, memo } from 'react';
import CodeBidiWarning from './bidi-warning';
import codeBidiWarningDecorator from './bidi-warning/bidi-warning-decorator';
import { getCodeStyles } from './internal/theme/styles';
var styles = {
  base: "_ca0qyh40 _u5f3m5ip _n3tdyh40 _19bvm5ip _2rko1sit _11c81u0j _1reo1wug _18m91wug _1dqoglyw _1e0c1nu9 _bfhktkvp _16d9qvcn _syaz1fxt _vwz41kw7 _1i4q1hna _o5721jtm"
};

/**
 * __Code__
 *
 * Code highlights short strings of code snippets inline with body text.
 *
 * - [Examples](https://atlassian.design/components/code/examples)
 * - [Code](https://atlassian.design/components/code/code)
 * - [Usage](https://atlassian.design/components/code/usage)
 */
var Code = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Code(_ref, ref) {
  var testId = _ref.testId,
    props = _objectWithoutProperties(_ref, _excluded);
  // eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-prefix

  var children = props.children,
    _props$codeBidiWarnin = props.codeBidiWarnings,
    codeBidiWarnings = _props$codeBidiWarnin === void 0 ? true : _props$codeBidiWarnin,
    codeBidiWarningLabel = props.codeBidiWarningLabel,
    _props$codeBidiWarnin2 = props.codeBidiWarningTooltipEnabled,
    codeBidiWarningTooltipEnabled = _props$codeBidiWarnin2 === void 0 ? true : _props$codeBidiWarnin2,
    otherProps = _objectWithoutProperties(props, _excluded2);
  var decoratedChildren = codeBidiWarnings ? /*#__PURE__*/React.createElement(RenderCodeChildrenWithBidiWarnings, {
    codeBidiWarningLabel: codeBidiWarningLabel,
    codeBidiWarningTooltipEnabled: codeBidiWarningTooltipEnabled
  }, children) : children;
  return /*#__PURE__*/React.createElement("code", _extends({
    ref: ref,
    "data-testid": testId
  }, otherProps, {
    className: ax([styles.base])
  }), decoratedChildren);
}));
function RenderCodeChildrenWithBidiWarnings(_ref2) {
  var children = _ref2.children,
    codeBidiWarningLabel = _ref2.codeBidiWarningLabel,
    codeBidiWarningTooltipEnabled = _ref2.codeBidiWarningTooltipEnabled;
  var replacedChildren = React.Children.map(children, function (childNode) {
    if (typeof childNode === 'string') {
      var decorated = codeBidiWarningDecorator(childNode, function (_ref3) {
        var bidiCharacter = _ref3.bidiCharacter,
          index = _ref3.index;
        return /*#__PURE__*/React.createElement(CodeBidiWarning, {
          bidiCharacter: bidiCharacter,
          key: index,
          label: codeBidiWarningLabel,
          tooltipEnabled: codeBidiWarningTooltipEnabled
        });
      });
      return decorated;
    }
    if (isReactElement(childNode) && childNode.props.children) {
      // eslint-disable-next-line @repo/internal/react/no-clone-element
      var newChildNode = /*#__PURE__*/React.cloneElement(childNode, {
        children: /*#__PURE__*/React.createElement(RenderCodeChildrenWithBidiWarnings, {
          codeBidiWarningLabel: codeBidiWarningLabel,
          codeBidiWarningTooltipEnabled: codeBidiWarningTooltipEnabled
        }, childNode.props.children)
      });
      return newChildNode;
    }
    return childNode;
  });
  return /*#__PURE__*/React.createElement(React.Fragment, null, replacedChildren);
}
function isReactElement(child) {
  return !!child.type;
}
Code.displayName = 'Code';
export { getCodeStyles };
export default Code;