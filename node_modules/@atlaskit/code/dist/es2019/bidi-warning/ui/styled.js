/* styled.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./styled.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { Fragment } from 'react';
import VisuallyHidden from '@atlaskit/visually-hidden';
const decoration = {
  root: "_kqswh2mm _szpl2smr _dsq41wug _1xyt1b66 _123w1b66 _15nnze3t _rxygze3t _1a354jg8 _1j6r1odn _1uakf6fq _1kt9y7el _is06wx40 _1rus1tzq _1cfcvrvc _24gj1h6o _19o61h6o _cfu1116y _1rbawx40 _1xqc1rd4"
};
export function Decorator({
  bidiCharacter,
  children,
  testId
}) {
  const bidiCharacterCode = getBidiCharacterCode(bidiCharacter);
  return /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement("span", {
    "data-testid": testId,
    "data-bidi-character-code": bidiCharacterCode
    // This is set to true so that the content is not read out by
    // screen readers as the content includes angle brackets for
    // visual decoration purposes.
    // We use a visually hidden `mark` element below for screen readers
    ,
    "aria-hidden": "true",
    className: ax([decoration.root])
  }, children), /*#__PURE__*/React.createElement(VisuallyHidden, {
    testId: testId && `${testId}--visually-hidden`
  }, /*#__PURE__*/React.createElement("mark", null, bidiCharacterCode)));
}
function getBidiCharacterCode(bidiCharacter) {
  var _bidiCharacter$codePo;
  const bidiCharacterCode = (_bidiCharacter$codePo = bidiCharacter.codePointAt(0)) === null || _bidiCharacter$codePo === void 0 ? void 0 : _bidiCharacter$codePo.toString(16);
  return `U+${bidiCharacterCode}`;
}