import type { EditorAnalyticsAPI } from '@atlaskit/editor-common/analytics';
import { INPUT_METHOD } from '@atlaskit/editor-common/analytics';
import type { EditorCommand, ExtractInjectionAPI } from '@atlaskit/editor-common/types';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { LoomPlugin } from '../loomPluginType';
import type { LoomProviderOptions, PositionType, VideoMeta } from '../types';
declare enum SDKUnsupportedReasons {
    IncompatibleBrowser = "incompatible-browser",
    ThirdPartyCookiesDisabled = "third-party-cookies-disabled",
    NoMediaStreamsSupport = "no-media-streams-support"
}
export declare const enableLoom: ({ loomButton }: {
    loomButton: HTMLButtonElement;
}) => EditorCommand;
export declare const disableLoom: ({ error }: {
    error: string;
}) => EditorCommand;
export declare const recordVideo: ({ inputMethod, editorAnalyticsAPI, }: {
    inputMethod: INPUT_METHOD;
    editorAnalyticsAPI: EditorAnalyticsAPI | undefined;
}) => EditorCommand;
export declare const recordVideoFailed: ({ inputMethod, error, editorAnalyticsAPI, }: {
    inputMethod: INPUT_METHOD;
    error: SDKUnsupportedReasons | undefined;
    editorAnalyticsAPI: EditorAnalyticsAPI | undefined;
}) => EditorCommand;
export declare const insertVideo: ({ editorAnalyticsAPI, video, }: {
    editorAnalyticsAPI: EditorAnalyticsAPI | undefined;
    video: VideoMeta;
}) => EditorCommand;
export declare const insertLoom: (editorView: EditorView | null, api: ExtractInjectionAPI<LoomPlugin> | undefined, video: VideoMeta, positionType: PositionType) => boolean;
export declare const executeRecordVideo: (api: ExtractInjectionAPI<LoomPlugin> | undefined) => void;
export declare const setupLoom: (loomProvider: LoomProviderOptions, api: ExtractInjectionAPI<LoomPlugin> | undefined, editorView: EditorView | null, initViaCommand?: boolean) => Promise<{
    error?: string;
}>;
export {};
