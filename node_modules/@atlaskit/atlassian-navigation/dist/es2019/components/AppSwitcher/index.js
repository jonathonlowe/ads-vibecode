import _extends from "@babel/runtime/helpers/extends";
import React, { forwardRef } from 'react';
import Nav4AppSwitcherIcon from '@atlaskit/icon/core/app-switcher';
import AppSwitcherIcon from '@atlaskit/icon/core/migration/app-switcher';
import { IconButton } from '../IconButton';
/**
 * _App switcher__
 *
 * An AppSwitcher button that can be passed into `AtlassianNavigation`'s
 * `renderAppSwitcher` prop.
 *
 * - [Examples](https://atlassian.design/components/atlassian-navigation/examples#app-switcher)
 * - [Code](https://atlassian.design/components/atlassian-navigation/code)
 */
export const AppSwitcher = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    component,
    href,
    id,
    isDisabled,
    isSelected,
    label,
    onBlur,
    onClick,
    onFocus,
    onMouseDown,
    onMouseEnter,
    onMouseLeave,
    onMouseUp,
    target,
    testId,
    tooltip,
    ...rest
  } = props;
  return /*#__PURE__*/React.createElement(IconButton, _extends({
    component: component,
    href: href,
    icon: /*#__PURE__*/React.createElement(AppSwitcherIcon, {
      color: "currentColor",
      spacing: "spacious",
      label: typeof tooltip === 'string' ? tooltip : 'Switch apps'
    }),
    id: id,
    isDisabled: isDisabled,
    isSelected: isSelected,
    label: label,
    onBlur: onBlur,
    onClick: onClick,
    onFocus: onFocus,
    onMouseDown: onMouseDown,
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    onMouseUp: onMouseUp,
    ref: ref,
    target: target,
    testId: testId,
    tooltip: tooltip
    // These are all explicit, leaving it in just in case
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest));
});

// eslint-disable-next-line @repo/internal/react/require-jsdoc
export const AppSwitcherNav4 = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    component,
    href,
    id,
    isDisabled,
    isSelected,
    label,
    onBlur,
    onClick,
    onFocus,
    onMouseDown,
    onMouseEnter,
    onMouseLeave,
    onMouseUp,
    target,
    testId,
    tooltip,
    ...rest
  } = props;
  return /*#__PURE__*/React.createElement(IconButton, _extends({
    icon: /*#__PURE__*/React.createElement(Nav4AppSwitcherIcon, {
      label: typeof tooltip === 'string' ? tooltip : 'Switch apps',
      color: "var(--ds-icon, #44546F)"
    }),
    component: component,
    href: href,
    id: id,
    isDisabled: isDisabled,
    isSelected: isSelected,
    label: label,
    onBlur: onBlur,
    onClick: onClick,
    onFocus: onFocus,
    onMouseDown: onMouseDown,
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    onMouseUp: onMouseUp,
    ref: ref,
    target: target,
    testId: testId,
    tooltip: tooltip
    // These are all explicit, leaving it in just in case
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest));
});

// exists only to extract props
// eslint-disable-next-line @repo/internal/react/use-noop, import/no-anonymous-default-export
export default (props => {});