"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SignIn = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireDefault(require("react"));
var _logInSignIn = _interopRequireDefault(require("@atlaskit/icon/core/migration/log-in--sign-in"));
var _IconButton = require("../IconButton");
var _excluded = ["component", "href", "id", "isDisabled", "isSelected", "label", "onBlur", "onClick", "onFocus", "onMouseDown", "onMouseEnter", "onMouseLeave", "onMouseUp", "target", "testId", "tooltip"];
/**
 * __Sign in__
 *
 * A sign-in button that can be passed into `AtlassianNavigation`'s `renderSignIn` prop.
 *
 * - [Examples](https://atlassian.design/components/atlassian-navigation/examples#sign-in)
 * - [Code](https://atlassian.design/components/atlassian-navigation/code)
 */
var SignIn = exports.SignIn = function SignIn(props) {
  var component = props.component,
    href = props.href,
    id = props.id,
    isDisabled = props.isDisabled,
    isSelected = props.isSelected,
    label = props.label,
    onBlur = props.onBlur,
    onClick = props.onClick,
    onFocus = props.onFocus,
    onMouseDown = props.onMouseDown,
    onMouseEnter = props.onMouseEnter,
    onMouseLeave = props.onMouseLeave,
    onMouseUp = props.onMouseUp,
    target = props.target,
    testId = props.testId,
    tooltip = props.tooltip,
    rest = (0, _objectWithoutProperties2.default)(props, _excluded);
  return /*#__PURE__*/_react.default.createElement("div", {
    role: "listitem"
  }, /*#__PURE__*/_react.default.createElement(_IconButton.IconButton, (0, _extends2.default)({
    component: component,
    href: href,
    icon: /*#__PURE__*/_react.default.createElement(_logInSignIn.default, {
      color: "currentColor",
      spacing: "spacious",
      label: typeof tooltip === 'string' ? tooltip : 'Sign-in Icon'
    }),
    id: id,
    isDisabled: isDisabled,
    isSelected: isSelected,
    label: label,
    onBlur: onBlur,
    onClick: onClick,
    onFocus: onFocus,
    onMouseDown: onMouseDown,
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    onMouseUp: onMouseUp,
    target: target,
    testId: testId,
    tooltip: tooltip
    // These are all explicit, leaving it in just in case
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest)));
};