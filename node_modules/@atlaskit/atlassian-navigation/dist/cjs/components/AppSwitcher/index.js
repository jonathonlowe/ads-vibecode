"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.AppSwitcherNav4 = exports.AppSwitcher = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireWildcard(require("react"));
var _appSwitcher = _interopRequireDefault(require("@atlaskit/icon/core/app-switcher"));
var _appSwitcher2 = _interopRequireDefault(require("@atlaskit/icon/core/migration/app-switcher"));
var _IconButton = require("../IconButton");
var _excluded = ["component", "href", "id", "isDisabled", "isSelected", "label", "onBlur", "onClick", "onFocus", "onMouseDown", "onMouseEnter", "onMouseLeave", "onMouseUp", "target", "testId", "tooltip"],
  _excluded2 = ["component", "href", "id", "isDisabled", "isSelected", "label", "onBlur", "onClick", "onFocus", "onMouseDown", "onMouseEnter", "onMouseLeave", "onMouseUp", "target", "testId", "tooltip"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * _App switcher__
 *
 * An AppSwitcher button that can be passed into `AtlassianNavigation`'s
 * `renderAppSwitcher` prop.
 *
 * - [Examples](https://atlassian.design/components/atlassian-navigation/examples#app-switcher)
 * - [Code](https://atlassian.design/components/atlassian-navigation/code)
 */
var AppSwitcher = exports.AppSwitcher = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var component = props.component,
    href = props.href,
    id = props.id,
    isDisabled = props.isDisabled,
    isSelected = props.isSelected,
    label = props.label,
    onBlur = props.onBlur,
    onClick = props.onClick,
    onFocus = props.onFocus,
    onMouseDown = props.onMouseDown,
    onMouseEnter = props.onMouseEnter,
    onMouseLeave = props.onMouseLeave,
    onMouseUp = props.onMouseUp,
    target = props.target,
    testId = props.testId,
    tooltip = props.tooltip,
    rest = (0, _objectWithoutProperties2.default)(props, _excluded);
  return /*#__PURE__*/_react.default.createElement(_IconButton.IconButton, (0, _extends2.default)({
    component: component,
    href: href,
    icon: /*#__PURE__*/_react.default.createElement(_appSwitcher2.default, {
      color: "currentColor",
      spacing: "spacious",
      label: typeof tooltip === 'string' ? tooltip : 'Switch apps'
    }),
    id: id,
    isDisabled: isDisabled,
    isSelected: isSelected,
    label: label,
    onBlur: onBlur,
    onClick: onClick,
    onFocus: onFocus,
    onMouseDown: onMouseDown,
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    onMouseUp: onMouseUp,
    ref: ref,
    target: target,
    testId: testId,
    tooltip: tooltip
    // These are all explicit, leaving it in just in case
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest));
});

// eslint-disable-next-line @repo/internal/react/require-jsdoc
var AppSwitcherNav4 = exports.AppSwitcherNav4 = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var component = props.component,
    href = props.href,
    id = props.id,
    isDisabled = props.isDisabled,
    isSelected = props.isSelected,
    label = props.label,
    onBlur = props.onBlur,
    onClick = props.onClick,
    onFocus = props.onFocus,
    onMouseDown = props.onMouseDown,
    onMouseEnter = props.onMouseEnter,
    onMouseLeave = props.onMouseLeave,
    onMouseUp = props.onMouseUp,
    target = props.target,
    testId = props.testId,
    tooltip = props.tooltip,
    rest = (0, _objectWithoutProperties2.default)(props, _excluded2);
  return /*#__PURE__*/_react.default.createElement(_IconButton.IconButton, (0, _extends2.default)({
    icon: /*#__PURE__*/_react.default.createElement(_appSwitcher.default, {
      label: typeof tooltip === 'string' ? tooltip : 'Switch apps',
      color: "var(--ds-icon, #44546F)"
    }),
    component: component,
    href: href,
    id: id,
    isDisabled: isDisabled,
    isSelected: isSelected,
    label: label,
    onBlur: onBlur,
    onClick: onClick,
    onFocus: onFocus,
    onMouseDown: onMouseDown,
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    onMouseUp: onMouseUp,
    ref: ref,
    target: target,
    testId: testId,
    tooltip: tooltip
    // These are all explicit, leaving it in just in case
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest));
});

// exists only to extract props
// eslint-disable-next-line @repo/internal/react/use-noop, import/no-anonymous-default-export
var _default = exports.default = function _default(props) {};