"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PrimaryDropdownButton = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = require("react");
var _react2 = require("@emotion/react");
var _chevronDown = _interopRequireDefault(require("@atlaskit/icon/utility/chevron-down"));
var _chevronDown2 = _interopRequireDefault(require("@atlaskit/icon/utility/migration/chevron-down"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _PrimaryButton = require("../PrimaryButton");
var _excluded = ["component", "isHighlighted", "isLoading", "onClick", "testId", "theme", "tooltip"];
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
/**
 * __Primary dropdown button__
 *
 * A primary dropdown button allows you to add dropdown menus to the navigation.
 * Should be passed into `AtlassianNavigation`'s `primaryItems` prop.
 *
 * - [Examples](https://atlassian.design/components/atlassian-navigation/examples#button)
 * - [Code](https://atlassian.design/components/atlassian-navigation/code)
 */
var PrimaryDropdownButton = exports.PrimaryDropdownButton = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var component = props.component,
    isHighlighted = props.isHighlighted,
    isLoading = props.isLoading,
    onClick = props.onClick,
    testId = props.testId,
    theme = props.theme,
    tooltip = props.tooltip,
    rest = (0, _objectWithoutProperties2.default)(props, _excluded);
  return (0, _react2.jsx)(_PrimaryButton.PrimaryButton, (0, _extends2.default)({
    component: component,
    iconAfter:
    // eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-prefix
    (0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? (0, _react2.jsx)(_chevronDown.default, {
      label: "",
      color: "currentColor"
    }) : (0, _react2.jsx)(_chevronDown2.default, {
      LEGACY_margin: "0 ".concat("var(--ds-space-negative-050, -4px)", " 0 ", "var(--ds-space-negative-100, -8px)"),
      color: "currentColor",
      label: ""
    }),
    isHighlighted: isHighlighted,
    isLoading: isLoading,
    onClick: onClick,
    ref: ref,
    testId: testId
    // eslint-disable-next-line @repo/internal/react/no-unsafe-overrides
    ,
    theme: theme,
    tooltip: tooltip
    // These are mostly explicit, leaving it in just in case
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest));
});