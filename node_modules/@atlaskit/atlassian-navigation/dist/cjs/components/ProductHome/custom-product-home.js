"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = require("react");
var _react2 = require("@emotion/react");
var _colors = require("@atlaskit/theme/colors");
var _constants = require("../../common/constants");
var _theme = require("../../theme");
var _utils = require("./utils");
var _excluded = ["href", "iconAlt", "iconUrl", "logoAlt", "logoMaxWidth", "logoUrl", "onClick", "onMouseDown", "siteTitle", "testId"];
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var VAR_PRODUCT_HOME_COLOR_ACTIVE = '--product-home-color-active';
var VAR_PRODUCT_HOME_BACKGROUND_COLOR_ACTIVE = '--product-home-bg-color-active';
var VAR_PRODUCT_HOME_BOX_SHADOW_ACTIVE = '--product-home-box-shadow-active';
var VAR_PRODUCT_HOME_COLOR_FOCUS = '--product-home-color-focus';
var VAR_PRODUCT_HOME_BACKGROUND_COLOR_FOCUS = '--product-home-bg-color-focus';
var VAR_PRODUCT_HOME_BOX_SHADOW_FOCUS = '--product-home-box-shadow-focus';
var VAR_PRODUCT_HOME_COLOR_HOVER = '--product-home-color-hover';
var VAR_PRODUCT_HOME_BACKGROUND_COLOR_HOVER = '--product-home-bg-color-hover';
var VAR_PRODUCT_HOME_BOX_SHADOW_HOVER = '--product-home-box-shadow-hover';
var productLogoStyles = (0, _react2.css)((0, _defineProperty2.default)({
  // Ensure anything passed into
  // productHome is aligned correctly
  display: 'flex'
}, "@media (max-width: ".concat(_constants.PRODUCT_HOME_BREAKPOINT - 0.1, "px)"), {
  display: 'none'
}));
var customMaxHeightStyles = (0, _react2.css)({
  maxHeight: 28
});
var productIconStyles = (0, _react2.css)((0, _defineProperty2.default)({
  // Ensure anything passed into
  // productHome is aligned correctly
  display: 'flex'
}, "@media (min-width: ".concat(_constants.PRODUCT_HOME_BREAKPOINT, "px)"), {
  display: 'none'
}));
var productHomeButtonStyles = (0, _react2.css)((0, _defineProperty2.default)((0, _defineProperty2.default)({
  display: 'flex',
  padding: "var(--ds-space-050, 4px)",
  alignItems: 'center',
  background: 'none',
  border: 0,
  borderRadius: "var(--ds-border-radius, 3px)",
  color: 'inherit',
  cursor: 'pointer',
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  '&::-moz-focus-inner': {
    border: 0
  },
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  '&:first-of-type': {
    marginInlineStart: 0
  },
  '&:hover': {
    backgroundColor: "var(".concat(VAR_PRODUCT_HOME_BACKGROUND_COLOR_HOVER, ")"),
    boxShadow: "var(".concat(VAR_PRODUCT_HOME_BOX_SHADOW_HOVER, ")"),
    color: "var(".concat(VAR_PRODUCT_HOME_COLOR_HOVER, ")")
  },
  '&:active': {
    backgroundColor: "var(".concat(VAR_PRODUCT_HOME_BACKGROUND_COLOR_ACTIVE, ")"),
    boxShadow: "var(".concat(VAR_PRODUCT_HOME_BOX_SHADOW_ACTIVE, ")"),
    color: "var(".concat(VAR_PRODUCT_HOME_COLOR_ACTIVE, ")")
  },
  '&:focus-visible': {
    backgroundColor: "var(".concat(VAR_PRODUCT_HOME_BACKGROUND_COLOR_FOCUS, ")"),
    color: "var(".concat(VAR_PRODUCT_HOME_COLOR_FOCUS, ")"),
    outline: "2px solid ".concat("var(--ds-border-focused, ".concat(_colors.B200, ")"))
  },
  // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors, @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  'div&': {
    pointerEvents: 'none'
  }
}, "@media (max-width: ".concat(_constants.PRODUCT_HOME_BREAKPOINT - 0.1, "px)"), {
  margin: "0 ".concat("var(--ds-space-100, 8px)")
}), "@media (min-width: ".concat(_constants.PRODUCT_HOME_BREAKPOINT, "px)"), {
  margin: "0 ".concat("var(--ds-space-200, 16px)")
}));
var siteTitleStyles = (0, _react2.css)({
  display: 'flex',
  alignItems: 'center',
  marginInlineEnd: "var(--ds-space-050, 4px)",
  marginInlineStart: "var(--ds-space-050, 4px)",
  paddingInlineEnd: "var(--ds-space-200, 16px)"
});

/**
 * __Custom product home__
 *
 * Use `CustomProductHome` to provide a custom logo and icon with URLs.
 *
 * - [Examples](https://atlassian.design/components/atlassian-navigation/examples#custom-product-home)
 * - [Code](https://atlassian.design/components/atlassian-navigation/code)
 */
var CustomProductHome = function CustomProductHome(props) {
  var href = props.href,
    iconAlt = props.iconAlt,
    iconUrl = props.iconUrl,
    logoAlt = props.logoAlt,
    _props$logoMaxWidth = props.logoMaxWidth,
    logoMaxWidth = _props$logoMaxWidth === void 0 ? 260 : _props$logoMaxWidth,
    logoUrl = props.logoUrl,
    onClick = props.onClick,
    onMouseDown = props.onMouseDown,
    siteTitle = props.siteTitle,
    testId = props.testId,
    rest = (0, _objectWithoutProperties2.default)(props, _excluded);
  var theme = (0, _theme.useTheme)();
  var primaryButton = theme.mode.primaryButton;
  var Tag = (0, _utils.getTag)(onClick, href);
  var preventFocusRing = function preventFocusRing(event) {
    event.preventDefault();
    onMouseDown && onMouseDown(event);
  };
  var productHomeButtonDynamicStyles = (0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)({}, VAR_PRODUCT_HOME_COLOR_ACTIVE, primaryButton.active.color), VAR_PRODUCT_HOME_BACKGROUND_COLOR_ACTIVE, primaryButton.active.backgroundColor), VAR_PRODUCT_HOME_BOX_SHADOW_ACTIVE, primaryButton.active.boxShadow), VAR_PRODUCT_HOME_COLOR_FOCUS, primaryButton.focus.color), VAR_PRODUCT_HOME_BACKGROUND_COLOR_FOCUS, primaryButton.focus.backgroundColor), VAR_PRODUCT_HOME_BOX_SHADOW_FOCUS, primaryButton.focus.boxShadow), VAR_PRODUCT_HOME_COLOR_HOVER, primaryButton.hover.color), VAR_PRODUCT_HOME_BACKGROUND_COLOR_HOVER, primaryButton.hover.backgroundColor), VAR_PRODUCT_HOME_BOX_SHADOW_HOVER, primaryButton.hover.boxShadow);
  return (0, _react2.jsx)(_react.Fragment, null, (0, _react2.jsx)(Tag, (0, _extends2.default)({
    href: href
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    ,
    style: productHomeButtonDynamicStyles,
    css: productHomeButtonStyles,
    onClick: onClick,
    onMouseDown: preventFocusRing,
    "data-testid": testId && "".concat(testId, "-container")
    // Currently all props are mapped, but leaving in case people are
    // passing non-explicit props
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest), logoUrl && (0, _react2.jsx)("img", {
    style: {
      maxWidth: logoMaxWidth
    },
    css: [customMaxHeightStyles, productLogoStyles],
    src: logoUrl,
    alt: logoAlt,
    "data-testid": testId && "".concat(testId, "-logo"),
    "data-vc": "custom-product-home-logo"
  }), iconUrl && (0, _react2.jsx)("img", {
    style: {
      maxWidth: logoMaxWidth
    },
    css: [customMaxHeightStyles, productIconStyles],
    src: iconUrl,
    alt: iconAlt,
    "data-testid": testId && "".concat(testId, "-icon"),
    "data-vc": "custom-product-home-icon"
  })), siteTitle && (0, _react2.jsx)("div", {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    style: {
      borderRight: theme.mode.productHome.borderRight
    },
    css: siteTitleStyles,
    "data-testid": testId && "".concat(testId, "-site-title")
  }, siteTitle));
};
var _default = exports.default = CustomProductHome;