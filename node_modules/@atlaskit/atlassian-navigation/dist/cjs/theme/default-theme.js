"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultThemeBrandRefresh = exports.default = exports.DEFAULT_THEME_NAME = void 0;
var _colors = require("@atlaskit/theme/colors");
var _themeHelpers = require("./theme-helpers");
var defaultTheme = {
  mode: {
    create: {
      active: {
        color: "var(--ds-text-inverse, ".concat(_colors.N0, ")"),
        backgroundColor: "var(--ds-background-brand-bold-pressed, ".concat((0, _themeHelpers.hexToRGBA)(_colors.B400, 0.8), ")"),
        boxShadow: ''
      },
      default: {
        color: "var(--ds-text-inverse, ".concat(_colors.N0, ")"),
        backgroundColor: "var(--ds-background-brand-bold, ".concat(_colors.B400, ")"),
        boxShadow: ''
      },
      focus: {
        color: "var(--ds-text-inverse, ".concat(_colors.N0, ")"),
        backgroundColor: '',
        boxShadow: ''
      },
      hover: {
        color: "var(--ds-text-inverse, ".concat(_colors.N0, ")"),
        backgroundColor: "var(--ds-background-brand-bold-hovered, ".concat((0, _themeHelpers.hexToRGBA)(_colors.B400, 0.9), ")"),
        boxShadow: ''
      },
      selected: {
        color: '',
        backgroundColor: '',
        boxShadow: ''
      }
    },
    iconButton: {
      active: {
        color: "var(--ds-text-subtle, ".concat(_colors.B400, ")"),
        backgroundColor: "var(--ds-background-neutral-pressed, ".concat((0, _themeHelpers.hexToRGBA)(_colors.B50, 0.6), ")"),
        boxShadow: ''
      },
      default: {
        color: "var(--ds-text-subtle, ".concat(_colors.N600, ")"),
        backgroundColor: 'transparent',
        boxShadow: ''
      },
      focus: {
        color: "var(--ds-text-subtle, ".concat(_colors.N600, ")"),
        backgroundColor: '',
        boxShadow: ''
      },
      hover: {
        color: "var(--ds-text-subtle, ".concat(_colors.B400, ")"),
        backgroundColor: "var(--ds-background-neutral-hovered, ".concat((0, _themeHelpers.hexToRGBA)(_colors.B50, 0.9), ")"),
        boxShadow: ''
      },
      selected: {
        color: "var(--ds-text-selected, ".concat(_colors.B400, ")"),
        backgroundColor: "var(--ds-background-selected, ".concat((0, _themeHelpers.hexToRGBA)(_colors.B50, 0.6), ")"),
        boxShadow: ''
      },
      selectedHover: {
        color: "var(--ds-text-selected, ".concat(_colors.B400, ")"),
        backgroundColor: "var(--ds-background-selected-hovered, ".concat((0, _themeHelpers.hexToRGBA)(_colors.B50, 0.6), ")"),
        boxShadow: ''
      }
    },
    navigation: {
      backgroundColor: "var(--ds-surface, ".concat(_colors.N0, ")"),
      color: "var(--ds-text-subtlest, ".concat(_colors.N200, ")")
    },
    productHome: {
      backgroundColor: "var(--ds-text-brand, ".concat(_colors.B400, ")"),
      color: "var(--ds-text, ".concat(_colors.N700, ")"),
      borderRight: "1px solid ".concat("var(--ds-border, ".concat((0, _themeHelpers.hexToRGBA)(_colors.N200, 0.3), ")")),
      // TODO: replace with token after brand refresh
      // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage
      iconColor: '#357DE8',
      textColor: "var(--ds-text, ".concat(_colors.N700, ")")
    },
    primaryButton: {
      active: {
        color: "var(--ds-text-subtle, ".concat(_colors.B400, ")"),
        backgroundColor: "var(--ds-background-neutral-pressed, ".concat((0, _themeHelpers.hexToRGBA)(_colors.B50, 0.7), ")"),
        boxShadow: ''
      },
      default: {
        color: "var(--ds-text-subtle, ".concat(_colors.N600, ")"),
        backgroundColor: 'transparent',
        boxShadow: ''
      },
      focus: {
        color: "var(--ds-text-subtle, ".concat(_colors.N600, ")"),
        backgroundColor: '',
        boxShadow: ''
      },
      hover: {
        color: "var(--ds-text-subtle, ".concat(_colors.B400, ")"),
        backgroundColor: "var(--ds-background-neutral-hovered, ".concat((0, _themeHelpers.hexToRGBA)(_colors.B50, 0.9), ")"),
        boxShadow: ''
      },
      selected: {
        color: "var(--ds-text-selected, ".concat(_colors.B400, ")"),
        backgroundColor: "var(--ds-background-selected, ".concat((0, _themeHelpers.hexToRGBA)(_colors.B50, 0.7), ")"),
        boxShadow: '',
        borderColor: "var(--ds-border-selected, ".concat(_colors.B400, ")")
      },
      selectedHover: {
        color: "var(--ds-text-selected, ".concat(_colors.B400, ")"),
        backgroundColor: "var(--ds-background-selected-hovered, ".concat((0, _themeHelpers.hexToRGBA)(_colors.B50, 0.6), ")"),
        boxShadow: '',
        borderColor: "var(--ds-border-selected, ".concat(_colors.B400, ")")
      }
    },
    search: {
      default: {
        backgroundColor: "var(--ds-background-input, ".concat(_colors.N0, ")"),
        color: "var(--ds-text-subtlest, ".concat(_colors.N200, ")"),
        borderColor: "var(--ds-border-input, ".concat(_colors.N100, ")")
      },
      focus: {
        borderColor: "var(--ds-border-focused, ".concat(_colors.B200, ")")
      },
      hover: {
        backgroundColor: "var(--ds-background-input-hovered, ".concat(_colors.N0, ")")
      }
    },
    skeleton: {
      backgroundColor: "var(--ds-background-neutral, ".concat(_colors.N20, ")"),
      opacity: 1
    }
  }
};

// Create deep copy of defaultTheme
var defaultThemeCopy = JSON.parse(JSON.stringify(defaultTheme));

// Update iconColor and textColor in defaultThemeBrandRefresh
defaultThemeCopy.mode.productHome.iconColor = undefined;
defaultThemeCopy.mode.productHome.textColor = undefined;
var defaultThemeBrandRefresh = exports.defaultThemeBrandRefresh = defaultThemeCopy;
var DEFAULT_THEME_NAME = exports.DEFAULT_THEME_NAME = 'atlassian';
var _default = exports.default = defaultTheme;