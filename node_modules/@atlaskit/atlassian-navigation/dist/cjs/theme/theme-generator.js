"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generateTheme = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _defaultTheme = _interopRequireWildcard(require("./default-theme"));
var _themeHelpers = require("./theme-helpers");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var generateOpacityValue = function generateOpacityValue(color) {
  return color === '#000000' ? 0.3 : 0.6;
};

// eslint-disable-next-line @repo/internal/react/consistent-types-definitions

var generateButtonCSSStates = function generateButtonCSSStates(colors, buttonType) {
  var backgroundColor = colors.backgroundColor,
    color = colors.color,
    highlightColor = colors.highlightColor;

  // Add less opacity for white text so it is still legible.
  var opacityValue = generateOpacityValue(color);
  var isCreateButton = buttonType === 'create';
  return {
    active: {
      backgroundColor: isCreateButton ? (0, _themeHelpers.hexToRGBA)(backgroundColor, 0.65) : (0, _themeHelpers.getContrastColor)(0.3, opacityValue, backgroundColor),
      boxShadow: (0, _themeHelpers.getBoxShadow)('transparent'),
      color: color
    },
    default: {
      backgroundColor: backgroundColor,
      boxShadow: (0, _themeHelpers.getBoxShadow)('transparent'),
      color: color
    },
    focus: {
      boxShadow: 'none',
      color: color,
      backgroundColor: backgroundColor
    },
    hover: {
      backgroundColor: isCreateButton ? (0, _themeHelpers.hexToRGBA)(backgroundColor, 0.8) : (0, _themeHelpers.getContrastColor)(0.1, opacityValue, backgroundColor),
      boxShadow: (0, _themeHelpers.getBoxShadow)('transparent'),
      color: color
    },
    selected: {
      color: color,
      backgroundColor: (0, _themeHelpers.getContrastColor)(0.3, opacityValue, backgroundColor),
      borderColor: highlightColor,
      boxShadow: (0, _themeHelpers.getBoxShadow)('transparent')
    },
    selectedHover: {
      color: color,
      backgroundColor: (0, _themeHelpers.getContrastColor)(0.3, opacityValue, backgroundColor),
      borderColor: highlightColor,
      boxShadow: (0, _themeHelpers.getBoxShadow)('transparent')
    }
  };
};
var generateCreateButtonColors = function generateCreateButtonColors(themeBackground, themeHighlight) {
  return {
    backgroundColor: themeHighlight,
    color: (0, _themeHelpers.generateTextColor)(themeHighlight),
    highlightColor: themeHighlight
  };
};
var generateTheme = exports.generateTheme = function generateTheme(themeColors) {
  var backgroundColor = themeColors.backgroundColor,
    highlightColor = themeColors.highlightColor,
    name = themeColors.name;
  var color = (0, _themeHelpers.generateTextColor)(backgroundColor);
  var colors = _objectSpread(_objectSpread({}, themeColors), {}, {
    color: color
  });
  if (name === _defaultTheme.DEFAULT_THEME_NAME) {
    return (0, _platformFeatureFlags.fg)('platform-team25-app-icon-tiles') ? _defaultTheme.defaultThemeBrandRefresh : _defaultTheme.default;
  }
  return {
    mode: {
      create: generateButtonCSSStates(generateCreateButtonColors(backgroundColor, highlightColor), 'create'),
      iconButton: generateButtonCSSStates(colors, 'iconButton'),
      primaryButton: generateButtonCSSStates(colors, 'primaryButton'),
      navigation: {
        backgroundColor: backgroundColor,
        color: color
      },
      productHome: {
        color: color,
        iconColor: (0, _platformFeatureFlags.fg)('platform-team25-app-icon-tiles') ? color : undefined,
        textColor: (0, _platformFeatureFlags.fg)('platform-team25-app-icon-tiles') ? color : undefined,
        backgroundColor: highlightColor,
        borderRight: "1px solid ".concat((0, _themeHelpers.hexToRGBA)(color, 0.5))
      },
      search: {
        default: {
          backgroundColor: backgroundColor,
          color: color,
          borderColor: (0, _themeHelpers.hexToRGBA)(color, 0.5)
        },
        focus: {
          borderColor: (0, _themeHelpers.hexToRGBA)(highlightColor, 0.8),
          boxShadow: (0, _themeHelpers.getBoxShadow)((0, _themeHelpers.hexToRGBA)(highlightColor, 0.5))
        },
        hover: {
          backgroundColor: (0, _themeHelpers.getContrastColor)(0.1, generateOpacityValue(color), backgroundColor),
          color: color
        }
      },
      skeleton: {
        backgroundColor: color,
        opacity: 0.08
      }
    }
  };
};