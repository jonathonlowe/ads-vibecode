"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SkeletonSettingsButton = exports.Nav4SkeletonSettingsButton = void 0;
var _react = _interopRequireDefault(require("react"));
var _settings = _interopRequireDefault(require("@atlaskit/icon/core/migration/settings"));
var _settings2 = _interopRequireDefault(require("@atlaskit/icon/core/settings"));
var _SkeletonIconButton = require("./components/SkeletonIconButton");
/**
 * __Skeleton settings button__
 *
 * Skeleton buttons are lightweight HTML button elements with CSS that represent
 * their heavier interactive counterparts, for use when elements of the
 * navigation are loaded dynamically. This one represents the Settings button.
 *
 * - [Examples](https://atlassian.design/components/atlassian-navigation/examples#skeleton-button)
 * - [Code](https://atlassian.design/components/atlassian-navigation/code)
 */
var SkeletonSettingsButton = exports.SkeletonSettingsButton = function SkeletonSettingsButton(_ref) {
  var _ref$label = _ref.label,
    label = _ref$label === void 0 ? '' : _ref$label;
  return /*#__PURE__*/_react.default.createElement(_SkeletonIconButton.SkeletonIconButton, null, /*#__PURE__*/_react.default.createElement(_settings.default, {
    color: "currentColor",
    spacing: "spacious",
    label: label
  }));
};

/**
 * __Nav 4 skeleton settings button__
 *
 * A nav 4 skeleton settings button
 */
var Nav4SkeletonSettingsButton = exports.Nav4SkeletonSettingsButton = function Nav4SkeletonSettingsButton(_ref2) {
  var _ref2$label = _ref2.label,
    label = _ref2$label === void 0 ? '' : _ref2$label;
  return /*#__PURE__*/_react.default.createElement(_SkeletonIconButton.SkeletonIconButton, null, /*#__PURE__*/_react.default.createElement(_settings2.default, {
    label: label,
    color: "var(--ds-icon, #44546F)"
  }));
};