import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["badge", "component", "href", "id", "isDisabled", "isSelected", "label", "onBlur", "onClick", "onFocus", "onMouseDown", "onMouseEnter", "onMouseLeave", "onMouseUp", "target", "testId", "tooltip"];
import React, { forwardRef } from 'react';
import NotificationIcon from '@atlaskit/icon/core/migration/notification';
import { BadgeContainer } from '../BadgeContainer';
import { IconButton } from '../IconButton';
var NOTIFICATIONS_BADGE_ID = 'atlassian-navigation-notification-count';

/**
 * __Notifications__
 *
 * A notifications button that can be passed into `AtlassianNavigation`'s
 * `renderNotifications` prop.
 *
 * - [Examples](https://atlassian.design/components/atlassian-navigation/examples#notifications)
 * - [Code](https://atlassian.design/components/atlassian-navigation/code)
 */
export var Notifications = /*#__PURE__*/forwardRef(function (props, ref) {
  var badge = props.badge,
    component = props.component,
    href = props.href,
    id = props.id,
    isDisabled = props.isDisabled,
    isSelected = props.isSelected,
    label = props.label,
    onBlur = props.onBlur,
    onClick = props.onClick,
    onFocus = props.onFocus,
    onMouseDown = props.onMouseDown,
    onMouseEnter = props.onMouseEnter,
    onMouseLeave = props.onMouseLeave,
    onMouseUp = props.onMouseUp,
    target = props.target,
    testId = props.testId,
    tooltip = props.tooltip,
    rest = _objectWithoutProperties(props, _excluded);
  return /*#__PURE__*/React.createElement(BadgeContainer, {
    id: NOTIFICATIONS_BADGE_ID,
    badge: badge,
    role: "listitem"
  }, /*#__PURE__*/React.createElement(IconButton, _extends({
    "aria-describedby": NOTIFICATIONS_BADGE_ID,
    component: component,
    href: href,
    icon: /*#__PURE__*/React.createElement(NotificationIcon, {
      spacing: "spacious",
      color: "currentColor",
      label: typeof tooltip === 'string' ? tooltip : 'Notification Icon'
    }),
    id: id,
    isDisabled: isDisabled,
    isSelected: isSelected,
    label: label,
    onBlur: onBlur,
    onClick: onClick,
    onFocus: onFocus,
    onMouseDown: onMouseDown,
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    onMouseUp: onMouseUp,
    ref: ref,
    target: target,
    testId: testId,
    tooltip: tooltip,
    isTooltipAnnouncementDisabled: true
    // These are all explicit, leaving it in just in case
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest)));
});