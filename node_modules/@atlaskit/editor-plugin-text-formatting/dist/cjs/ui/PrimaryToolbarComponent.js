"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PrimaryToolbarComponent = PrimaryToolbarComponent;
var _react = _interopRequireDefault(require("react"));
var _hooks = require("@atlaskit/editor-common/hooks");
var _Toolbar = _interopRequireDefault(require("./Toolbar"));
var _types = require("./Toolbar/types");
function PrimaryToolbarComponent(_ref) {
  var _api$analytics;
  var api = _ref.api,
    popupsMountPoint = _ref.popupsMountPoint,
    popupsScrollableElement = _ref.popupsScrollableElement,
    toolbarSize = _ref.toolbarSize,
    editorView = _ref.editorView,
    disabled = _ref.disabled,
    isReducedSpacing = _ref.isReducedSpacing,
    shouldUseResponsiveToolbar = _ref.shouldUseResponsiveToolbar;
  var _useSharedPluginState = (0, _hooks.useSharedPluginState)(api, ['textFormatting']),
    textFormattingState = _useSharedPluginState.textFormattingState;
  return /*#__PURE__*/_react.default.createElement(_Toolbar.default, {
    textFormattingState: textFormattingState,
    popupsMountPoint: popupsMountPoint,
    popupsScrollableElement: popupsScrollableElement,
    toolbarSize: toolbarSize,
    isReducedSpacing: isReducedSpacing,
    editorView: editorView,
    isToolbarDisabled: disabled,
    shouldUseResponsiveToolbar: shouldUseResponsiveToolbar,
    editorAnalyticsAPI: api === null || api === void 0 || (_api$analytics = api.analytics) === null || _api$analytics === void 0 ? void 0 : _api$analytics.actions,
    api: api,
    toolbarType: _types.ToolbarType.PRIMARY
  });
}