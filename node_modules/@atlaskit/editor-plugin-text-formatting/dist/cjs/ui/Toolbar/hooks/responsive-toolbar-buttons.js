"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useResponsiveToolbarButtons = exports.useResponsiveIconTypeMenu = exports.useResponsiveIconTypeButtons = void 0;
var _react = require("react");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _experiments = require("@atlaskit/tmp-editor-statsig/experiments");
var _constants = require("../constants");
var _useIconList = require("./use-icon-list");
var useResponsiveIconTypeButtons = exports.useResponsiveIconTypeButtons = function useResponsiveIconTypeButtons(_ref) {
  var toolbarSize = _ref.toolbarSize,
    responsivenessEnabled = _ref.responsivenessEnabled;
  var ResponsiveCustomButtonToolbar = (0, _experiments.editorExperiment)('platform_editor_controls', 'variant1') && !(0, _platformFeatureFlags.fg)('platform_editor_controls_patch_4') ? _constants.ResponsiveCustomButtonToolbarNext : _constants.ResponsiveCustomButtonToolbar;
  var iconTypeList = (0, _react.useMemo)(function () {
    return ResponsiveCustomButtonToolbar[toolbarSize];
  }, [toolbarSize, ResponsiveCustomButtonToolbar]);
  if (responsivenessEnabled) {
    return iconTypeList;
  }
  return (0, _experiments.editorExperiment)('platform_editor_controls', 'variant1') && !(0, _platformFeatureFlags.fg)('platform_editor_controls_patch_4') ? _constants.DefaultButtonsToolbarNext : _constants.DefaultButtonsToolbar;
};
var useResponsiveIconTypeMenu = exports.useResponsiveIconTypeMenu = function useResponsiveIconTypeMenu(_ref2) {
  var toolbarSize = _ref2.toolbarSize,
    responsivenessEnabled = _ref2.responsivenessEnabled;
  var ResponsiveCustomMenu = (0, _experiments.editorExperiment)('platform_editor_controls', 'variant1') && !(0, _platformFeatureFlags.fg)('platform_editor_controls_patch_4') ? _constants.ResponsiveCustomMenuNext : _constants.ResponsiveCustomMenu;
  var iconTypeList = (0, _react.useMemo)(function () {
    return ResponsiveCustomMenu[toolbarSize];
  }, [toolbarSize, ResponsiveCustomMenu]);
  if (responsivenessEnabled) {
    return iconTypeList;
  }
  return (0, _experiments.editorExperiment)('platform_editor_controls', 'variant1') && !(0, _platformFeatureFlags.fg)('platform_editor_controls_patch_4') ? _constants.DefaultButtonsMenuNext : _constants.DefaultButtonsMenu;
};
var useResponsiveToolbarButtons = exports.useResponsiveToolbarButtons = function useResponsiveToolbarButtons(_ref3) {
  var icons = _ref3.icons,
    toolbarSize = _ref3.toolbarSize,
    responsivenessEnabled = _ref3.responsivenessEnabled;
  var iconTypeList = useResponsiveIconTypeButtons({
    toolbarSize: toolbarSize,
    responsivenessEnabled: responsivenessEnabled
  });
  var iconsPosition = (0, _useIconList.useIconList)({
    icons: icons,
    iconTypeList: iconTypeList
  });
  return iconsPosition;
};