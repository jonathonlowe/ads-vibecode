"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SingleToolbarButtons = void 0;
var _react = _interopRequireWildcard(require("react"));
var _react2 = require("@emotion/react");
var _styles = require("@atlaskit/editor-common/styles");
var _uiMenu = require("@atlaskit/editor-common/ui-menu");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var SingleToolbarButtons = exports.SingleToolbarButtons = /*#__PURE__*/_react.default.memo(function (_ref) {
  var items = _ref.items,
    isReducedSpacing = _ref.isReducedSpacing,
    editorView = _ref.editorView;
  var onClick = (0, _react.useCallback)(function (command) {
    return function () {
      command(editorView.state, editorView.dispatch);
      return false;
    };
  }, [editorView.state, editorView.dispatch]);
  return (
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    (0, _react2.jsx)("span", {
      css:
      // eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-registration, @atlaskit/platform/ensure-feature-flag-prefix
      (0, _platformFeatureFlags.fg)('platform-visual-refresh-icons') ?
      // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values
      _styles.buttonGroupStyle :
      // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values
      _styles.buttonGroupStyleBeforeVisualRefresh
    }, items.map(function (item) {
      var _item$ariaLabel;
      return (0, _react2.jsx)(_uiMenu.ToolbarButton, {
        key: item.key,
        testId: "editor-toolbar__".concat(String(item.content)),
        buttonId: item.buttonId,
        spacing: isReducedSpacing ? 'none' : 'default',
        onClick: onClick(item.command),
        selected: item.isActive,
        disabled: item.isDisabled,
        title: item.tooltipElement,
        iconBefore: item.iconElement,
        "aria-pressed": item.isActive,
        "aria-label": (_item$ariaLabel = item['aria-label']) !== null && _item$ariaLabel !== void 0 ? _item$ariaLabel : String(item.content),
        "aria-keyshortcuts": item['aria-keyshortcuts']
      });
    }))
  );
});