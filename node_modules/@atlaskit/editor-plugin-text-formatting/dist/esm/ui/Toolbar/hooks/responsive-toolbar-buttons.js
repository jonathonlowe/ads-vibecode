import { useMemo } from 'react';
import { fg } from '@atlaskit/platform-feature-flags';
import { editorExperiment } from '@atlaskit/tmp-editor-statsig/experiments';
import { DefaultButtonsMenu, DefaultButtonsMenuNext, DefaultButtonsToolbar, DefaultButtonsToolbarNext, ResponsiveCustomButtonToolbar as ResponsiveCustomButtonToolbarLegacy, ResponsiveCustomButtonToolbarNext, ResponsiveCustomMenu as ResponsiveCustomMenuLegacy, ResponsiveCustomMenuNext } from '../constants';
import { useIconList } from './use-icon-list';
export var useResponsiveIconTypeButtons = function useResponsiveIconTypeButtons(_ref) {
  var toolbarSize = _ref.toolbarSize,
    responsivenessEnabled = _ref.responsivenessEnabled;
  var ResponsiveCustomButtonToolbar = editorExperiment('platform_editor_controls', 'variant1') && !fg('platform_editor_controls_patch_4') ? ResponsiveCustomButtonToolbarNext : ResponsiveCustomButtonToolbarLegacy;
  var iconTypeList = useMemo(function () {
    return ResponsiveCustomButtonToolbar[toolbarSize];
  }, [toolbarSize, ResponsiveCustomButtonToolbar]);
  if (responsivenessEnabled) {
    return iconTypeList;
  }
  return editorExperiment('platform_editor_controls', 'variant1') && !fg('platform_editor_controls_patch_4') ? DefaultButtonsToolbarNext : DefaultButtonsToolbar;
};
export var useResponsiveIconTypeMenu = function useResponsiveIconTypeMenu(_ref2) {
  var toolbarSize = _ref2.toolbarSize,
    responsivenessEnabled = _ref2.responsivenessEnabled;
  var ResponsiveCustomMenu = editorExperiment('platform_editor_controls', 'variant1') && !fg('platform_editor_controls_patch_4') ? ResponsiveCustomMenuNext : ResponsiveCustomMenuLegacy;
  var iconTypeList = useMemo(function () {
    return ResponsiveCustomMenu[toolbarSize];
  }, [toolbarSize, ResponsiveCustomMenu]);
  if (responsivenessEnabled) {
    return iconTypeList;
  }
  return editorExperiment('platform_editor_controls', 'variant1') && !fg('platform_editor_controls_patch_4') ? DefaultButtonsMenuNext : DefaultButtonsMenu;
};
export var useResponsiveToolbarButtons = function useResponsiveToolbarButtons(_ref3) {
  var icons = _ref3.icons,
    toolbarSize = _ref3.toolbarSize,
    responsivenessEnabled = _ref3.responsivenessEnabled;
  var iconTypeList = useResponsiveIconTypeButtons({
    toolbarSize: toolbarSize,
    responsivenessEnabled: responsivenessEnabled
  });
  var iconsPosition = useIconList({
    icons: icons,
    iconTypeList: iconTypeList
  });
  return iconsPosition;
};