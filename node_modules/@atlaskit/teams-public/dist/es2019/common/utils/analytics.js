import { usePeopleTeamsAnalyticsSubcontext } from '@atlaskit/people-teams-ui-public/analytics';
const ANALYTICS_CHANNEL = 'peopleTeams';
const runItLater = cb => {
  if (window.requestIdleCallback === 'function') {
    return window.requestIdleCallback(cb);
  }
  if (typeof window.requestAnimationFrame === 'function') {
    return window.requestAnimationFrame(cb);
  }
  return () => setTimeout(cb);
};
export const usePeopleAndTeamAnalytics = () => {
  const [{
    eventAttributes: injectedEventAttributes
  }] = usePeopleTeamsAnalyticsSubcontext();
  const fireEvent = kind => (createAnalyticsEvent, body) => {
    if (!createAnalyticsEvent) {
      return;
    }
    runItLater(() => {
      const eventWithSubcontextAttributes = {
        ...body.attributes,
        ...injectedEventAttributes
      };
      createAnalyticsEvent({
        eventType: kind,
        ...body,
        attributes: eventWithSubcontextAttributes
      }).fire(ANALYTICS_CHANNEL);
    });
  };
  return {
    fireOperationalEvent: fireEvent('operational'),
    fireScreenEvent: fireEvent('screen'),
    fireTrackEvent: fireEvent('track'),
    fireUIEvent: fireEvent('ui')
  };
};
export let AnalyticsAction = /*#__PURE__*/function (AnalyticsAction) {
  AnalyticsAction["RENDERED"] = "rendered";
  AnalyticsAction["CLICKED"] = "clicked";
  AnalyticsAction["FAILED"] = "failed";
  AnalyticsAction["SUCCEEDED"] = "succeeded";
  AnalyticsAction["VIEWED"] = "viewed";
  AnalyticsAction["CLOSED"] = "closed";
  AnalyticsAction["ERROR"] = "error";
  AnalyticsAction["SUBMITED"] = "submitted";
  AnalyticsAction["FETCHED"] = "fetched";
  AnalyticsAction["SENT"] = "sent";
  AnalyticsAction["OPENED"] = "opened";
  return AnalyticsAction;
}({});