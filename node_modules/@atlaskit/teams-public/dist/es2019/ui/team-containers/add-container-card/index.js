/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import "./index.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
import React, { useState } from 'react';
import { IconButton } from '@atlaskit/button/new';
import AddIcon from '@atlaskit/icon/utility/add';
import { fg } from '@atlaskit/platform-feature-flags';
import { Box, Flex, Inline, Stack, Text } from '@atlaskit/primitives/compiled';
import { getContainerProperties } from '../../../common/utils/get-container-properties';
const styles = {
  card: "_4cvr1h6o _1bsb1osq",
  container: "_2rkoop52 _ca0qutpp _u5f3utpp _n3tdutpp _19bvutpp _d0altlke",
  iconWrapper: "_2rkoiti9 _12y3e4h9 _12jimuej _1qu2gq9o _syaz131l _4cvxmuej _ksodnqa1"
};
const AddContainerCardWrapper = ({
  children,
  onClick
}) => {
  const [hovered, setHovered] = useState(false);
  const handleMouseEnter = () => setHovered(true);
  const handleMouseLeave = () => setHovered(false);
  return /*#__PURE__*/React.createElement(Box, {
    backgroundColor: hovered ? 'elevation.surface.hovered' : 'elevation.surface.sunken',
    xcss: styles.container,
    onMouseEnter: handleMouseEnter,
    onMouseLeave: handleMouseLeave,
    onClick: onClick
  }, children);
};
export const AddContainerCard = ({
  containerType,
  onAddAContainerClick
}) => {
  const {
    description,
    icon,
    title
  } = getContainerProperties(containerType);
  return /*#__PURE__*/React.createElement(AddContainerCardWrapper, {
    onClick: onAddAContainerClick
  }, /*#__PURE__*/React.createElement(Inline, {
    space: "space.100",
    xcss: styles.card
  }, /*#__PURE__*/React.createElement(Box, {
    xcss: styles.iconWrapper
  }, /*#__PURE__*/React.createElement(IconButton, {
    label: "Add a container",
    appearance: "subtle",
    icon: AddIcon,
    testId: "add-icon",
    onClick: e => {
      onAddAContainerClick(e);
      e.stopPropagation();
    }
  })), /*#__PURE__*/React.createElement(Stack, null, /*#__PURE__*/React.createElement(Text, {
    maxLines: 1,
    weight: "medium",
    color: "color.text"
  }, title), /*#__PURE__*/React.createElement(Flex, _extends({
    gap: "space.050"
  }, fg('enable_card_alignment_fix') ? {
    alignItems: 'center'
  } : {}), icon, /*#__PURE__*/React.createElement(Text, {
    size: "small",
    color: "color.text.subtle"
  }, description)))));
};