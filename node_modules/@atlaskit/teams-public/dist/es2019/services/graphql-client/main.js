import { DefaultError, GraphQLError } from '../../common/utils/error';
import { BaseClient } from '../base-client';
import { handleGraphQLRequest } from './utils';
export class BaseGraphQlClient extends BaseClient {
  constructor(serviceUrl, config) {
    super(config);
    this.serviceUrl = serviceUrl;
  }
  setServiceUrl(serviceUrl) {
    this.serviceUrl = serviceUrl;
  }
  async makeGraphQLRequest(body, options = {}) {
    try {
      return handleGraphQLRequest(this.serviceUrl, body, options);
    } catch (error) {
      if (error instanceof GraphQLError) {
        throw error;
      }
      this.logException(error, 'UnknownError in GraphQLClient.makeGraphQLRequestWithoutRetries');
      throw new DefaultError({});
    }
  }
}