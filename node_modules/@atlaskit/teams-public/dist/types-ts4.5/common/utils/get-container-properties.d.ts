import { type ReactNode } from 'react';
import { type ContainerSubTypes, type ContainerTypes } from '../types';
interface ContainerProperties {
    description: ReactNode;
    icon: ReactNode;
    title?: ReactNode;
    containerTypeText: ReactNode;
}
type IconSize = 'small' | 'medium';
export declare const messages: {
    addConfluenceContainerTitle: {
        id: string;
        defaultMessage: string;
        description: string;
    };
    confluenceContainerDescription: {
        id: string;
        defaultMessage: string;
        description: string;
    };
    addJiraProjectTitle: {
        id: string;
        defaultMessage: string;
        description: string;
    };
    jiraProjectDescription: {
        id: string;
        defaultMessage: string;
        description: string;
    };
    addLoomSpaceTitle: {
        id: string;
        defaultMessage: string;
        description: string;
    };
    loomSpaceDescription: {
        id: string;
        defaultMessage: string;
        description: string;
    };
    projectContainerText: {
        id: string;
        defaultMessage: string;
        description: string;
    };
    spaceContainerText: {
        id: string;
        defaultMessage: string;
        description: string;
    };
    webLinkContainerTitle: {
        id: string;
        defaultMessage: string;
        description: string;
    };
};
export declare const getContainerProperties: (containerType: ContainerTypes, iconSize?: IconSize, containerTypeProperties?: {
    subType?: ContainerSubTypes;
    name?: string;
}) => ContainerProperties;
export {};
