export declare const MOCK_TEAM_CONTAINERS: {
    graphStore: {
        cypherQuery: {
            edges: ({
                node: {
                    from: {
                        id: string;
                    };
                    to: {
                        id: string;
                        data: {
                            __typename: string;
                            confluenceSpaceName: string;
                            type: string;
                            createdDate: string;
                            links: {
                                webUi: string;
                            };
                            icon: {
                                path: string;
                            };
                            jiraProjectName?: undefined;
                            webUrl?: undefined;
                            created?: undefined;
                            avatar?: undefined;
                        };
                    };
                };
            } | {
                node: {
                    from: {
                        id: string;
                    };
                    to: {
                        id: string;
                        data: {
                            __typename: string;
                            jiraProjectName: string;
                            webUrl: string;
                            created: string;
                            avatar: {
                                medium: string;
                            };
                            confluenceSpaceName?: undefined;
                            type?: undefined;
                            createdDate?: undefined;
                            links?: undefined;
                            icon?: undefined;
                        };
                    };
                };
            })[];
        };
    };
};
export declare const MOCK_NUMBER_OF_CONNECTED_TEAMS: {
    graphStore: {
        teamConnectedToContainerInverse: {
            edges: {
                id: string;
            }[];
        };
    };
};
export declare const MOCK_CONNECTED_TEAMS: {
    graphStore: {
        teamConnectedToContainerInverse: {
            edges: {
                node: {
                    id: string;
                    description: string;
                    displayName: string;
                    smallAvatarImageUrl: string;
                    smallHeaderImageUrl: string;
                    largeAvatarImageUrl: string;
                    largeHeaderImageUrl: string;
                    members: {
                        nodes: {
                            role: string;
                            state: string;
                            member: {
                                name: string;
                                picture: string;
                                accountStatus: string;
                                extendedProfile: {
                                    jobTitle: string;
                                };
                                id: string;
                            };
                        }[];
                        pageInfo: {
                            endCursor: null;
                            hasNextPage: boolean;
                        };
                    };
                    organizationId: string;
                    membershipSettings: string;
                    isVerified: boolean;
                    state: string;
                    creator: {
                        id: string;
                    };
                };
            }[];
        };
    };
};
export declare const MOCK_CONNECTED_TEAMS_RESULT: {
    id: string;
    displayName: string;
    description: string;
    state: string;
    membershipSettings: string;
    organizationId: string;
    creatorId: string;
    isVerified: boolean;
    members: {
        id: string;
        fullName: string;
        avatarUrl: string;
        status: string;
    }[];
    includesYou: boolean;
    memberCount: number;
    smallAvatarImageUrl: string;
    smallHeaderImageUrl: string;
    largeAvatarImageUrl: string;
    largeHeaderImageUrl: string;
    restriction: string;
}[];
