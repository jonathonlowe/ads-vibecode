import { type ClientConfig } from '../base-client';
import { BaseGraphQlClient } from '../graphql-client';
import { TeamWithMemberships } from '../types';
import { type UnlinkContainerMutationResponse } from './utils/mutations/unlink-container-mutation';
export declare class AGGClient extends BaseGraphQlClient {
    constructor(baseUrl: string, config: ClientConfig);
    setBaseUrl(baseUrl: string): void;
    getTeamContainers(teamId: string): Promise<{
        id: string;
        type: "ConfluenceSpace" | "JiraProject";
        name: string;
        icon: string;
        createdDate: Date;
        link: string;
        containerTypeProperties: {
            subType: string | undefined;
            name: string | undefined;
        };
    }[]>;
    unlinkTeamContainer(teamId: string, containerId: string): Promise<UnlinkContainerMutationResponse>;
    queryNumberOfTeamConnectedToContainer(containerId: string): Promise<number>;
    queryTeamsConnectedToContainer(containerId: string): Promise<TeamWithMemberships[]>;
}
export declare const aggClient: AGGClient;
