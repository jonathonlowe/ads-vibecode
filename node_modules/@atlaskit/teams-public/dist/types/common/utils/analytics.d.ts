import type { CreateUIAnalyticsEvent } from '@atlaskit/analytics-next/types';
type AnalyticsAttribute = Record<string, string | number | boolean | undefined>;
interface AnalyticsEvent {
    action?: string;
    actionSubject?: string;
    actionSubjectId?: string;
    attributes?: Record<string, string | number | boolean | undefined | AnalyticsAttribute>;
    name?: string;
    source?: string;
}
export declare const usePeopleAndTeamAnalytics: () => {
    fireOperationalEvent: (createAnalyticsEvent: CreateUIAnalyticsEvent | undefined, body: AnalyticsEvent) => void;
    fireScreenEvent: (createAnalyticsEvent: CreateUIAnalyticsEvent | undefined, body: AnalyticsEvent) => void;
    fireTrackEvent: (createAnalyticsEvent: CreateUIAnalyticsEvent | undefined, body: AnalyticsEvent) => void;
    fireUIEvent: (createAnalyticsEvent: CreateUIAnalyticsEvent | undefined, body: AnalyticsEvent) => void;
};
export declare enum AnalyticsAction {
    RENDERED = "rendered",
    CLICKED = "clicked",
    FAILED = "failed",
    SUCCEEDED = "succeeded",
    VIEWED = "viewed",
    CLOSED = "closed",
    ERROR = "error",
    SUBMITED = "submitted",
    FETCHED = "fetched",
    SENT = "sent",
    OPENED = "opened"
}
export {};
