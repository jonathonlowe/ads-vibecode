"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.handleResponse = handleResponse;
exports.statusCodeHandlersProvider = void 0;
/**
 * Our REST clients are initialised when their module loads which makes it tricky for them to consume the `statusCodeHandlers` prop passed to App from the host application.
 * This is a temporary measure to enable the clients to consume `statusCodeHandlers`.
 * The long term solution is to replace our REST clients with Apollo client custom resolvers
 * This will unify all remote data handling under the apollo-client module which is able to easily receive `statusCodeHandlers` as it is initialised within the React portion of our app.
 */

var statusCodeHandlersProvider = exports.statusCodeHandlersProvider = {
  handlers: {},
  get: function get() {
    return statusCodeHandlersProvider.handlers;
  },
  setHandlers: function setHandlers(handlers) {
    statusCodeHandlersProvider.handlers = handlers;
  }
};
function handleResponse(response) {
  var status = response.status;
  var handler = statusCodeHandlersProvider.get()[status];
  if (typeof handler === 'function') {
    handler(response);
  }
}