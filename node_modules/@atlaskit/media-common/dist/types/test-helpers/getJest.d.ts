/// <reference types="jest" />
interface MockedJest<F, S> {
    fn: (value?: F) => MockStub<F, F>;
    spyOn: () => MockStub<S, S>;
    genMockFromModule: undefined;
    requireActual: () => void;
    doMock: () => void;
}
type MockFunction<T> = <T>(value?: T) => void;
export interface MockStub<T, R> extends MockFunction<T> {
    mockReturnValue: (value: T) => R;
    mockImplementation: (value: T) => R;
    mockResolvedValue: (value: T) => R;
}
export declare const getJest: <F, S>() => typeof jest | MockedJest<F, S>;
export {};
