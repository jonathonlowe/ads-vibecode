"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.expectToEqual = exports.expectFunctionToHaveBeenCalledWith = exports.expectConstructorToHaveBeenCalledWith = exports.asMockReturnValue = exports.asMockFunctionReturnValue = exports.asMockFunctionResolvedValue = exports.asMockFunction = exports.asMock = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
/// <reference types="jest" />

var asMock = exports.asMock = function asMock(fn) {
  return fn;
};
var asMockFunction = exports.asMockFunction = function asMockFunction(fn) {
  return fn;
};
var asMockReturnValue = exports.asMockReturnValue = function asMockReturnValue(fn, returnValue) {
  return asMock(fn).mockReturnValue(returnValue);
};
var asMockFunctionReturnValue = exports.asMockFunctionReturnValue = function asMockFunctionReturnValue(fn, returnValue) {
  return asMockFunction(fn).mockReturnValue(returnValue);
};
var asMockFunctionResolvedValue = exports.asMockFunctionResolvedValue = function asMockFunctionResolvedValue(fn, resolveValue) {
  return asMockFunction(fn).mockResolvedValue(resolveValue);
};
var expectToEqual = exports.expectToEqual = function expectToEqual(actual, expected) {
  return expect(actual).toEqual(expected);
};
var expectConstructorToHaveBeenCalledWith = exports.expectConstructorToHaveBeenCalledWith = function expectConstructorToHaveBeenCalledWith(func, expectedArgs) {
  var _expect;
  return (_expect = expect(func)).toHaveBeenCalledWith.apply(_expect, (0, _toConsumableArray2.default)(expectedArgs));
};
var expectFunctionToHaveBeenCalledWith = exports.expectFunctionToHaveBeenCalledWith = function expectFunctionToHaveBeenCalledWith(func, expectedArgs) {
  var _expect2;
  return (_expect2 = expect(func)).toHaveBeenCalledWith.apply(_expect2, (0, _toConsumableArray2.default)(expectedArgs));
};