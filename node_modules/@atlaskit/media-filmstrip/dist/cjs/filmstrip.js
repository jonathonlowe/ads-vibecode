"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Filmstrip = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _mediaCard = require("@atlaskit/media-card");
var _filmstripView = require("./filmstripView");
var _generateIdentifierKey = require("./utils/generateIdentifierKey");
var _deduplicatedFilmstrip = require("./deduplicatedFilmstrip");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var Filmstrip = exports.Filmstrip = /*#__PURE__*/function (_Component) {
  function Filmstrip() {
    var _this;
    (0, _classCallCheck2.default)(this, Filmstrip);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, Filmstrip, [].concat(args));
    (0, _defineProperty2.default)(_this, "state", {
      animate: false,
      offset: 0
    });
    (0, _defineProperty2.default)(_this, "handleSize", function (_ref) {
      var offset = _ref.offset;
      return _this.setState({
        offset: offset
      });
    });
    (0, _defineProperty2.default)(_this, "handleScroll", function (_ref2) {
      var animate = _ref2.animate,
        offset = _ref2.offset;
      return _this.setState({
        animate: animate,
        offset: offset
      });
    });
    return _this;
  }
  (0, _inherits2.default)(Filmstrip, _Component);
  return (0, _createClass2.default)(Filmstrip, [{
    key: "renderCards",
    value: function renderCards() {
      var _this$props = this.props,
        items = _this$props.items,
        mediaClientConfig = _this$props.mediaClientConfig,
        shouldOpenMediaViewer = _this$props.shouldOpenMediaViewer,
        featureFlags = _this$props.featureFlags,
        viewerOptions = _this$props.viewerOptions,
        isLazy = _this$props.isLazy;
      return items.map(function (item) {
        var key = (0, _generateIdentifierKey.generateIdentifierKey)(item.identifier);
        if (!mediaClientConfig) {
          return /*#__PURE__*/_react.default.createElement(_mediaCard.CardLoading, {
            key: key,
            dimensions: _mediaCard.defaultImageCardDimensions,
            interactionName: "media-filmstrip-card-loading"
          });
        }
        var mediaViewerItems = shouldOpenMediaViewer ? items.map(function (item) {
          return item.identifier;
        }) : undefined;
        return /*#__PURE__*/_react.default.createElement(_mediaCard.Card, (0, _extends2.default)({
          key: key,
          mediaClientConfig: mediaClientConfig,
          dimensions: _mediaCard.defaultImageCardDimensions,
          useInlinePlayer: false,
          shouldOpenMediaViewer: shouldOpenMediaViewer,
          mediaViewerItems: mediaViewerItems,
          featureFlags: featureFlags,
          viewerOptions: viewerOptions,
          isLazy: isLazy
        }, item));
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
        _this$props2$testId = _this$props2.testId,
        testId = _this$props2$testId === void 0 ? 'media-filmstrip' : _this$props2$testId,
        includeHashForDuplicateFiles = _this$props2.includeHashForDuplicateFiles;
      if (includeHashForDuplicateFiles) {
        return /*#__PURE__*/_react.default.createElement(_deduplicatedFilmstrip.DeduplicatedFilmStrip, this.props);
      }
      var _this$state = this.state,
        animate = _this$state.animate,
        offset = _this$state.offset;
      return /*#__PURE__*/_react.default.createElement(_filmstripView.FilmstripView, {
        animate: animate,
        offset: offset,
        onSize: this.handleSize,
        onScroll: this.handleScroll,
        testId: testId
      }, this.renderCards());
    }
  }]);
}(_react.Component);