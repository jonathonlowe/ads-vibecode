/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { jsx } from '@emotion/react';
import React, { type ReactNode, type MouseEvent } from 'react';
type OnClick = {
    onClick: (event: MouseEvent<HTMLDivElement>) => void;
};
export declare const ArrowLeftWrapper: ({ children, onClick, }: {
    children: ReactNode;
} & OnClick) => jsx.JSX.Element;
export declare const ShadowRight: ({ children }: {
    children: ReactNode;
}) => jsx.JSX.Element;
export declare const ArrowRightWrapper: ({ children, onClick, }: {
    children: ReactNode;
} & OnClick) => jsx.JSX.Element;
export declare const LeftArrow: React.FC<OnClick>;
export declare const RightArrow: React.FC<OnClick>;
export declare const FilmStripViewWrapper: ({ children, "data-testid": dataTestId, }: {
    children: ReactNode;
    'data-testid': string | undefined;
}) => jsx.JSX.Element;
export type FilmStripListWrapperProps = {
    children: ReactNode;
    onWheel: (event: React.WheelEvent<HTMLDivElement>) => void;
    onTouchStart: (event: React.TouchEvent<Element>) => void;
    onTouchMove: (event: React.TouchEvent<Element>) => void;
    onTouchEnd: (event: React.TouchEvent<Element>) => void;
    'data-testid': string | undefined;
};
export declare const FilmStripListWrapper: React.ForwardRefExoticComponent<FilmStripListWrapperProps & React.RefAttributes<HTMLDivElement>>;
export type FilmStripListProps = {
    children: ReactNode;
    style: {
        transform: string;
        transitionProperty: string;
        transitionDuration: string;
    };
};
export declare const FilmStripList: React.ForwardRefExoticComponent<FilmStripListProps & React.RefAttributes<HTMLUListElement>>;
export declare const FilmStripListItem: ({ children, index, }: {
    children: ReactNode;
    index: React.Key;
}) => jsx.JSX.Element;
export {};
