"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _selfMeasurements = require("../../../../self-measurements");
// See https://developer.mozilla.org/en-US/docs/Web/API/Prioritized_Task_Scheduling_API
var taskYield = (0, _selfMeasurements.withProfiling)( /*#__PURE__*/function () {
  var _taskYield = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
    var resolve, p;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          if (!('scheduler' in globalThis &&
          // @ts-ignore
          'yield' in globalThis.scheduler)) {
            _context.next = 4;
            break;
          }
          _context.next = 3;
          return scheduler.yield();
        case 3:
          return _context.abrupt("return");
        case 4:
          resolve = function resolve() {};
          p = new Promise(function (a) {
            resolve = a;
          });
          setTimeout(resolve, 0);
          _context.next = 9;
          return p;
        case 9:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  function taskYield() {
    return _taskYield.apply(this, arguments);
  }
  return taskYield;
}(), ['vc']);
var _default = exports.default = taskYield;