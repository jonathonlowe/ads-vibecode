"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getProfilerAsyncRuntime = getProfilerAsyncRuntime;
exports.getProfilerData = getProfilerData;
exports.getProfilerRuntimeByFunction = getProfilerRuntimeByFunction;
exports.getProfilerRuntimeByTag = getProfilerRuntimeByTag;
exports.getProfilerTotalRuntime = getProfilerTotalRuntime;
exports.markProfilingEnd = markProfilingEnd;
exports.markProfilingStart = markProfilingStart;
exports.resetProfilerMeasurements = resetProfilerMeasurements;
exports.withProfiling = withProfiling;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
globalThis.__ufo_self_measurements = globalThis.__ufo_self_measurements || {
  __internalState: {
    functionStack: []
  },
  runtime: {
    total: 0,
    async: 0,
    error: 0,
    byFunction: {},
    custom: {}
  }
};
function resetProfilerMeasurements() {
  globalThis.__ufo_self_measurements = {
    __internalState: {
      functionStack: []
    },
    runtime: {
      total: 0,
      async: 0,
      error: 0,
      byFunction: {},
      custom: {}
    }
  };
}
function trackFunctionTimingStart(fnName) {
  var _globalThis$__ufo_sel;
  if (!(globalThis !== null && globalThis !== void 0 && globalThis.__ufo_self_measurements)) {
    resetProfilerMeasurements();
  }
  globalThis === null || globalThis === void 0 || (_globalThis$__ufo_sel = globalThis.__ufo_self_measurements) === null || _globalThis$__ufo_sel === void 0 || (_globalThis$__ufo_sel = _globalThis$__ufo_sel.__internalState) === null || _globalThis$__ufo_sel === void 0 || (_globalThis$__ufo_sel = _globalThis$__ufo_sel.functionStack) === null || _globalThis$__ufo_sel === void 0 || _globalThis$__ufo_sel.push(fnName);
}
function trackFunctionTimingEnd() {
  var _globalThis$__ufo_sel2;
  if (!(globalThis !== null && globalThis !== void 0 && globalThis.__ufo_self_measurements)) {
    resetProfilerMeasurements();
  }
  globalThis === null || globalThis === void 0 || (_globalThis$__ufo_sel2 = globalThis.__ufo_self_measurements) === null || _globalThis$__ufo_sel2 === void 0 || (_globalThis$__ufo_sel2 = _globalThis$__ufo_sel2.__internalState) === null || _globalThis$__ufo_sel2 === void 0 || (_globalThis$__ufo_sel2 = _globalThis$__ufo_sel2.functionStack) === null || _globalThis$__ufo_sel2 === void 0 || _globalThis$__ufo_sel2.pop();
}
function shouldRecordProfilerMeasurement() {
  var _globalThis$__ufo_sel3;
  if (!(globalThis !== null && globalThis !== void 0 && globalThis.__ufo_self_measurements)) {
    resetProfilerMeasurements();
  }
  return (globalThis === null || globalThis === void 0 || (_globalThis$__ufo_sel3 = globalThis.__ufo_self_measurements) === null || _globalThis$__ufo_sel3 === void 0 || (_globalThis$__ufo_sel3 = _globalThis$__ufo_sel3.__internalState) === null || _globalThis$__ufo_sel3 === void 0 || (_globalThis$__ufo_sel3 = _globalThis$__ufo_sel3.functionStack) === null || _globalThis$__ufo_sel3 === void 0 ? void 0 : _globalThis$__ufo_sel3.length) === 0;
}
function recordProfilerMeasurement(functionName, duration, isAsync, isError) {
  var tags = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];
  // discard measurements that are not significant
  if (duration <= 0) {
    return;
  }
  if (!(globalThis !== null && globalThis !== void 0 && globalThis.__ufo_self_measurements)) {
    resetProfilerMeasurements();
  }
  globalThis.__ufo_self_measurements.runtime.total += duration;
  if (isAsync) {
    globalThis.__ufo_self_measurements.runtime.async += duration;
  }
  if (isError) {
    globalThis.__ufo_self_measurements.runtime.error += duration;
  }
  if (functionName in globalThis.__ufo_self_measurements.runtime.byFunction) {
    globalThis.__ufo_self_measurements.runtime.byFunction[functionName] += duration;
  } else {
    globalThis.__ufo_self_measurements.runtime.byFunction[functionName] = duration;
  }
  var _iterator = _createForOfIteratorHelper(tags),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var tag = _step.value;
      if (tag in globalThis.__ufo_self_measurements.runtime.custom) {
        globalThis.__ufo_self_measurements.runtime.custom[tag] += duration;
      } else {
        globalThis.__ufo_self_measurements.runtime.custom[tag] = duration;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}
function isPromise(value) {
  return value && typeof value.then === 'function';
}
function withProfiling(fn) {
  var tags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  try {
    if (!(0, _platformFeatureFlags.fg)('platform_ufo_self_timings')) {
      return fn; // this is a NOOP wrapper if feature gate is disabled
    }
  } catch (_unused) {
    return fn;
  }
  if (!(globalThis !== null && globalThis !== void 0 && globalThis.performance)) {
    return fn;
  }
  if (fn.constructor.name === 'AsyncFunction') {
    return /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
      var _fn$name;
      var startTime,
        result,
        endTime,
        _endTime,
        _args = arguments;
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            startTime = performance.now();
            trackFunctionTimingStart((_fn$name = fn.name) !== null && _fn$name !== void 0 ? _fn$name : 'anonymous');
            _context.prev = 2;
            _context.next = 5;
            return fn.apply(void 0, _args);
          case 5:
            result = _context.sent;
            endTime = performance.now();
            trackFunctionTimingEnd();
            if (shouldRecordProfilerMeasurement()) {
              recordProfilerMeasurement(fn.name, endTime - startTime, true, false, tags);
            }
            return _context.abrupt("return", result);
          case 12:
            _context.prev = 12;
            _context.t0 = _context["catch"](2);
            _endTime = performance.now();
            trackFunctionTimingEnd();
            if (shouldRecordProfilerMeasurement()) {
              recordProfilerMeasurement(fn.name, _endTime - startTime, true, true, tags);
            }
            throw _context.t0;
          case 18:
          case "end":
            return _context.stop();
        }
      }, _callee, null, [[2, 12]]);
    }));
  }
  return function () {
    var _fn$name2;
    var startTime = performance.now();
    trackFunctionTimingStart((_fn$name2 = fn.name) !== null && _fn$name2 !== void 0 ? _fn$name2 : 'anonymous');
    try {
      var result = fn.apply(void 0, arguments);
      if (isPromise(result)) {
        result.then(function (value) {
          var endTime = performance.now();
          trackFunctionTimingEnd();
          if (shouldRecordProfilerMeasurement()) {
            recordProfilerMeasurement(fn.name, endTime - startTime, true, false, tags);
          }
          return value;
        }).catch(function (value) {
          var endTime = performance.now();
          trackFunctionTimingEnd();
          if (shouldRecordProfilerMeasurement()) {
            recordProfilerMeasurement(fn.name, endTime - startTime, true, true, tags);
          }
          return value;
        });
      } else {
        var endTime = performance.now();
        trackFunctionTimingEnd();
        if (shouldRecordProfilerMeasurement()) {
          recordProfilerMeasurement(fn.name, endTime - startTime, false, false, tags);
        }
      }
      return result;
    } catch (error) {
      var _endTime2 = performance.now();
      trackFunctionTimingEnd();
      if (shouldRecordProfilerMeasurement()) {
        recordProfilerMeasurement(fn.name, _endTime2 - startTime, false, true, tags);
      }
      throw error;
    }
  };
}
function markProfilingStart(name) {
  if (!(globalThis !== null && globalThis !== void 0 && globalThis.performance)) {
    return {
      name: name,
      startTime: -1
    };
  }
  trackFunctionTimingStart(name);
  return {
    name: name,
    startTime: performance.now()
  };
}
function markProfilingEnd(_ref2) {
  var name = _ref2.name,
    startTime = _ref2.startTime;
  var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
    isAsync = _ref3.isAsync,
    isError = _ref3.isError,
    tags = _ref3.tags;
  if (!(globalThis !== null && globalThis !== void 0 && globalThis.performance)) {
    return;
  }
  trackFunctionTimingEnd();
  if (!(0, _platformFeatureFlags.fg)('platform_ufo_self_timings')) {
    return;
  }
  var endTime = performance.now();
  recordProfilerMeasurement(name, endTime - startTime, isAsync, isError, tags);
}
function getProfilerData() {
  return _objectSpread({}, globalThis === null || globalThis === void 0 ? void 0 : globalThis.__ufo_self_measurements.runtime);
}
function getProfilerTotalRuntime() {
  if (typeof (globalThis === null || globalThis === void 0 ? void 0 : globalThis.__ufo_self_measurements.runtime.total) === 'number') {
    return Math.round(globalThis === null || globalThis === void 0 ? void 0 : globalThis.__ufo_self_measurements.runtime.total);
  }
  return null;
}
function getProfilerAsyncRuntime() {
  if (typeof (globalThis === null || globalThis === void 0 ? void 0 : globalThis.__ufo_self_measurements.runtime.async) === 'number') {
    return Math.round(globalThis === null || globalThis === void 0 ? void 0 : globalThis.__ufo_self_measurements.runtime.async);
  }
  return null;
}
function getProfilerRuntimeByFunction(functionName) {
  if (typeof (globalThis === null || globalThis === void 0 ? void 0 : globalThis.__ufo_self_measurements.runtime.byFunction[functionName]) === 'number') {
    return Math.round(globalThis === null || globalThis === void 0 ? void 0 : globalThis.__ufo_self_measurements.runtime.byFunction[functionName]);
  }
  return null;
}
function getProfilerRuntimeByTag(tag) {
  if (typeof (globalThis === null || globalThis === void 0 ? void 0 : globalThis.__ufo_self_measurements.runtime.custom[tag]) === 'number') {
    return Math.round(globalThis === null || globalThis === void 0 ? void 0 : globalThis.__ufo_self_measurements.runtime.custom[tag]);
  }
  return null;
}