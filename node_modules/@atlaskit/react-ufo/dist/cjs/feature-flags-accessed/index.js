"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.currentFeatureFlagsAccessed = exports.allFeatureFlagsAccessed = exports.addFeatureFlagAccessed = void 0;
Object.defineProperty(exports, "redactValue", {
  enumerable: true,
  get: function get() {
    return _utils.redactValue;
  }
});
var _selfMeasurements = require("../self-measurements");
var _utils = require("./common/utils");
var allFeatureFlagsAccessed = exports.allFeatureFlagsAccessed = new Map();
var currentFeatureFlagsAccessed = exports.currentFeatureFlagsAccessed = new Map();

/**
 * Used for tracking accessed feature flags in "@atlassian/jira-feature-flagging".
 * */
var addFeatureFlagAccessed = exports.addFeatureFlagAccessed = (0, _selfMeasurements.withProfiling)(function addFeatureFlagAccessed(featureFlagName, featureFlagValue) {
  try {
    // Inform Criterion about FF being accessed
    if (globalThis.__CRITERION__ && typeof globalThis.__CRITERION__.addFeatureFlagAccessed === 'function') {
      globalThis.__CRITERION__.addFeatureFlagAccessed(featureFlagName, featureFlagValue);
    }
  } catch (_e) {
    // ignore the criterion error
  }
  var value = (0, _utils.redactValue)(featureFlagValue);
  allFeatureFlagsAccessed.set(featureFlagName, value);
  currentFeatureFlagsAccessed.set(featureFlagName, value);
});