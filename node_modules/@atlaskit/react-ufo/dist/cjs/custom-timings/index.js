"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UFOBM3TimingsToUFO = UFOBM3TimingsToUFO;
exports.getBm3Timings = exports.addBM3TimingsToUFO = void 0;
var _react = require("react");
var _interactionContext = _interopRequireDefault(require("../interaction-context"));
var _interactionIdContext = require("../interaction-id-context");
var _interactionMetrics = require("../interaction-metrics");
var _selfMeasurements = require("../self-measurements");
var getBm3Timings = exports.getBm3Timings = (0, _selfMeasurements.withProfiling)(function getBm3Timings(marks, timingConfigs) {
  var bm3Timings = {};
  if (!marks || !timingConfigs) {
    return bm3Timings;
  }
  timingConfigs.forEach(function (item) {
    if (!item.startMark || !item.endMark) {
      return;
    }
    var startTime = marks[item.startMark];
    if (!startTime) {
      return;
    }
    var endTime = marks[item.endMark];
    if (!endTime) {
      return;
    }
    bm3Timings[item.key] = {
      startTime: startTime,
      endTime: endTime
    };
  });
  return bm3Timings;
});
function UFOBM3TimingsToUFO(_ref) {
  var marks = _ref.marks,
    timings = _ref.timings;
  var interactionContext = (0, _react.useContext)(_interactionContext.default);
  var interactionId = (0, _interactionIdContext.getInteractionId)().current;
  (0, _react.useMemo)(function () {
    if (interactionContext != null && interactionId != null && marks != null && timings != null) {
      var interactionType = (0, _interactionMetrics.getCurrentInteractionType)(interactionId);
      if (interactionType === 'press') {
        return;
      }
      var bm3Timings = getBm3Timings(marks, timings);
      interactionContext.addCustomTimings(bm3Timings);
    }
  }, [interactionContext, interactionId, marks, timings]);
  return null;
}
var addBM3TimingsToUFO = exports.addBM3TimingsToUFO = (0, _selfMeasurements.withProfiling)(function addBM3TimingsToUFO(marks, timingsConfig) {
  var interactionId = (0, _interactionIdContext.getInteractionId)().current;
  if (interactionId) {
    var interactionType = (0, _interactionMetrics.getCurrentInteractionType)(interactionId);
    if (interactionType === 'press') {
      return;
    }
    var bm3Timings = getBm3Timings(marks, timingsConfig);
    (0, _interactionMetrics.addCustomTiming)(interactionId, [], bm3Timings);
  }
});