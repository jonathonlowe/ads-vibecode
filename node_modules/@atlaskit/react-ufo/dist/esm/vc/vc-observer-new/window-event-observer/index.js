import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import { bind } from 'bind-event-listener';
import { markProfilingEnd, markProfilingStart, withProfiling } from '../../../self-measurements';
var WindowEventObserver = /*#__PURE__*/function () {
  function WindowEventObserver(opts) {
    _classCallCheck(this, WindowEventObserver);
    _defineProperty(this, "unbindFns", []);
    var operationTimer = markProfilingStart('WindowEventObserver constructor');
    this.onEvent = withProfiling(opts.onEvent, ['vc']);
    this.bindEvent = withProfiling(this.bindEvent.bind(this), ['vc']);
    this.start = withProfiling(this.start.bind(this), ['vc']);
    this.stop = withProfiling(this.stop.bind(this), ['vc']);
    markProfilingEnd(operationTimer);
  }
  return _createClass(WindowEventObserver, [{
    key: "bindEvent",
    value: function bindEvent(type) {
      var _this = this;
      var unbindCallback = bind(window, {
        type: type,
        listener: function listener(event) {
          if (!event.isTrusted) {
            return;
          }
          _this.onEvent({
            time: event.timeStamp,
            type: type,
            event: event
          });
        },
        options: {
          passive: true,
          once: true
        }
      });
      this.unbindFns.push(unbindCallback);
    }
  }, {
    key: "start",
    value: function start() {
      this.bindEvent('wheel');
      this.bindEvent('scroll');
      this.bindEvent('keydown');
      this.bindEvent('resize');
    }
  }, {
    key: "stop",
    value: function stop() {
      this.unbindFns.forEach(function (cb) {
        cb();
      });
      this.unbindFns = [];
    }
  }]);
}();
export { WindowEventObserver as default };