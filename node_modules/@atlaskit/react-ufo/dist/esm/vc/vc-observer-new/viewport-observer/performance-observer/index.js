function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
import { withProfiling } from '../../../../self-measurements';

// The LayoutShiftAttribution API is returning the numbers on physical dimension
export var convertPhysicalToLogicalResolution = withProfiling(function convertPhysicalToLogicalResolution(rect) {
  if (typeof window.devicePixelRatio !== 'number') {
    return rect;
  }
  if (window.devicePixelRatio === 1) {
    return rect;
  }

  // eslint-disable-next-line compat/compat
  return new DOMRect(rect.x / window.devicePixelRatio, rect.y / window.devicePixelRatio, rect.width / window.devicePixelRatio, rect.height / window.devicePixelRatio);
}, ['vc']);
var createPerformanceObserver = withProfiling(function createPerformanceObserver(args) {
  if (!window || typeof window.PerformanceObserver !== 'function') {
    return null;
  }
  var onLayoutShift = withProfiling(args.onLayoutShift, ['vc']);
  var performanceObserverCallback = withProfiling(function performanceObserverCallback(entries) {
    var _iterator = _createForOfIteratorHelper(entries.getEntries()),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var entry = _step.value;
        if (entry.entryType === 'layout-shift') {
          // Ignored via go/ees005
          // eslint-disable-next-line @typescript-eslint/no-explicit-any
          var changedRects = entry.sources.reduceRight(function (acc, attr) {
            acc.push({
              rect: convertPhysicalToLogicalResolution(attr.currentRect),
              previousRect: convertPhysicalToLogicalResolution(attr.previousRect),
              node: attr.node
            });
            return acc;
          }, []);
          onLayoutShift({
            time: entry.startTime,
            changedRects: changedRects
          });
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }, ['vc']);
  var observer = new PerformanceObserver(performanceObserverCallback);
  return observer;
}, ['vc']);
export default createPerformanceObserver;