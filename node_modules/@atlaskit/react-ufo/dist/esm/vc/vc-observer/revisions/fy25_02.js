import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
import { withProfiling } from '../../../self-measurements';
import { FY25_01Classifier } from './fy25_01';
export var FY25_02Classifier = /*#__PURE__*/function (_FY25_01Classifier) {
  function FY25_02Classifier() {
    var _this;
    _classCallCheck(this, FY25_02Classifier);
    _this = _callSuper(this, FY25_02Classifier);
    _defineProperty(_this, "revision", 'fy25.02');
    _defineProperty(_this, "types", ['attr']);
    _defineProperty(_this, "filters", [{
      name: 'not-visible',
      filter: function filter(_ref) {
        var type = _ref.type,
          ignoreReason = _ref.ignoreReason;
        return !(ignoreReason !== null && ignoreReason !== void 0 && ignoreReason.includes('not-visible')) && ignoreReason !== 'non-visual-style';
      }
    }]);
    _defineProperty(_this, "removedFilters", []);
    _this.mergeConfig();
    _this.filterComponentsLog = withProfiling(_this.filterComponentsLog.bind(_this), ['vc']);
    return _this;
  }
  _inherits(FY25_02Classifier, _FY25_01Classifier);
  return _createClass(FY25_02Classifier, [{
    key: "filterComponentsLog",
    value:
    // @todo remove it once fixed as described: https://product-fabric.atlassian.net/browse/AFO-3443
    function filterComponentsLog(_ref2) {
      var componentsLog = _ref2.componentsLog,
        ttai = _ref2.ttai;
      var _componentsLog = {};
      Object.entries(componentsLog).forEach(function (_ref3) {
        var _ref4 = _slicedToArray(_ref3, 2),
          _timestamp = _ref4[0],
          value = _ref4[1];
        var timestamp = Number(_timestamp);
        if (Math.ceil(ttai) >= timestamp) {
          _componentsLog[timestamp] = value;
        }
      });
      return _componentsLog;
    }
  }]);
}(FY25_01Classifier);
export var revFY25_02Classifier = new FY25_02Classifier();