import { useContext, useMemo } from 'react';
import UFOInteractionContext from '../interaction-context';
import { getInteractionId } from '../interaction-id-context';
import { addMark } from '../interaction-metrics';
import { withProfiling } from '../self-measurements';
export default function UFOCustomMark(_ref) {
  var name = _ref.name,
    timestamp = _ref.timestamp;
  var interactionContext = useContext(UFOInteractionContext);
  useMemo(function () {
    if (interactionContext != null) {
      interactionContext.addMark(name, timestamp);
    }
  }, [interactionContext, name, timestamp]);
  return null;
}
export function UFOCustomMarks(_ref2) {
  var data = _ref2.data;
  var interactionContext = useContext(UFOInteractionContext);
  useMemo(function () {
    if (interactionContext != null && data != null) {
      Object.keys(data).forEach(function (i) {
        interactionContext.addMark(i, data[i]);
      });
    }
  }, [data, interactionContext]);
  return null;
}
export var addUFOCustomMark = withProfiling(function addUFOCustomMark(name, timestamp) {
  var interactionId = getInteractionId();
  var currentInteractionId = interactionId.current;
  if (!currentInteractionId) {
    return;
  }
  var time = timestamp || performance.now();
  addMark(currentInteractionId, 'custom', name, [], time);
});