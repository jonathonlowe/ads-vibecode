import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
import React, { useMemo } from 'react';
import InteractionContext, { useInteractionContext } from '../interaction-context';

/**
 * Annotate part of the react tree with a product name
 * ```
 * <UFOLabel name="card">
 *   <Card card={data} />
 * </UFOLabel>
 * ```
 */
export default function UFOLabel(_ref) {
  var name = _ref.name,
    children = _ref.children;
  var context = useInteractionContext();
  var newContext = useMemo(function () {
    if (context) {
      return _objectSpread(_objectSpread({}, context), {}, {
        labelStack: context.labelStack == null ? [{
          name: name
        }] : [].concat(_toConsumableArray(context.labelStack), [{
          name: name
        }])
      });
    } else {
      return context;
    }
  }, [context, name]);
  return context ? /*#__PURE__*/React.createElement(InteractionContext.Provider, {
    value: newContext
  }, children) : /*#__PURE__*/React.createElement(React.Fragment, null, children);
}