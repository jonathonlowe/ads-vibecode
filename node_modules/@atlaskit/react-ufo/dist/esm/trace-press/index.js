import { v4 as createUUID } from 'uuid';
import coinflip from '../coinflip';
import { getDoNotAbortActivePressInteraction, getInteractionRate } from '../config';
import { getActiveTrace, setInteractionActiveTrace } from '../experience-trace-id-context';
import { DefaultInteractionID } from '../interaction-id-context';
import { abortAll, addNewInteraction, getActiveInteraction } from '../interaction-metrics';
import UFORouteName from '../route-name-context';
import { withProfiling } from '../self-measurements';
var traceUFOPress = withProfiling(function traceUFOPress(name, timestamp) {
  var rate = getInteractionRate(name, 'press');
  var pressInteractionsList = getDoNotAbortActivePressInteraction();
  if (pressInteractionsList !== null && pressInteractionsList !== void 0 && pressInteractionsList.includes(name)) {
    var interaction = getActiveInteraction();
    if ((interaction === null || interaction === void 0 ? void 0 : interaction.ufoName) !== 'unknown' && (interaction === null || interaction === void 0 ? void 0 : interaction.type) === 'press') {
      return;
    }
  }
  if (coinflip(rate)) {
    abortAll('new_interaction', name);
    var startTimestamp = timestamp !== null && timestamp !== void 0 ? timestamp : performance.now();
    var newId = createUUID();
    // covered experiences with tracing instrumentation:
    // inline-result.inline-card-create-submit
    setInteractionActiveTrace(newId, 'press');
    DefaultInteractionID.current = newId;
    addNewInteraction(newId, name, 'press', startTimestamp, rate, [], UFORouteName.current, getActiveTrace());
  }
});
export default traceUFOPress;