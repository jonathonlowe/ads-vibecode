import type { InteractionMetrics, InteractionType } from '../common';
import { ResourceTiming } from '../common/react-ufo-payload-schema';
import * as ssr from '../ssr';
import type { OptimizedLabelStack } from './common/types';
export declare function createPayloads(interactionId: string, interaction: InteractionMetrics): Promise<{
    actionSubject: string;
    action: string;
    eventType: string;
    source: string;
    tags: string[];
    attributes: {
        properties: {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets'?: undefined;
            'ufo:styleElements'?: undefined;
            'ufo:styleProps'?: undefined;
            'ufo:styleDeclarations'?: undefined;
            'ufo:cssrules'?: undefined;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation'?: undefined;
            'event:assets'?: undefined;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets': number;
            'ufo:styleElements': number;
            'ufo:styleProps': number;
            'ufo:styleDeclarations': number;
            'ufo:cssrules': number;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation'?: undefined;
            'event:assets'?: undefined;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets'?: undefined;
            'ufo:styleElements'?: undefined;
            'ufo:styleProps'?: undefined;
            'ufo:styleDeclarations'?: undefined;
            'ufo:cssrules'?: undefined;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation': {
                redirectStart: number;
                redirectEnd: number;
                fetchStart: number;
                domainLookupStart: number;
                domainLookupEnd: number;
                connectStart: number;
                connectEnd: number;
                secureConnectionStart: number;
                requestStart: number;
                responseStart: number;
                responseEnd: number;
                encodedBodySize: number;
                decodedBodySize: number;
                transferSize: number;
                redirectCount: number;
                type: NavigationTimingType;
                unloadEventEnd: number;
                unloadEventStart: number;
                workerStart: number;
                nextHopProtocol: string;
            };
            'event:assets'?: undefined;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets': number;
            'ufo:styleElements': number;
            'ufo:styleProps': number;
            'ufo:styleDeclarations': number;
            'ufo:cssrules': number;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation': {
                redirectStart: number;
                redirectEnd: number;
                fetchStart: number;
                domainLookupStart: number;
                domainLookupEnd: number;
                connectStart: number;
                connectEnd: number;
                secureConnectionStart: number;
                requestStart: number;
                responseStart: number;
                responseEnd: number;
                encodedBodySize: number;
                decodedBodySize: number;
                transferSize: number;
                redirectCount: number;
                type: NavigationTimingType;
                unloadEventEnd: number;
                unloadEventStart: number;
                workerStart: number;
                nextHopProtocol: string;
            };
            'event:assets'?: undefined;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets'?: undefined;
            'ufo:styleElements'?: undefined;
            'ufo:styleProps'?: undefined;
            'ufo:styleDeclarations'?: undefined;
            'ufo:cssrules'?: undefined;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation'?: undefined;
            'metrics@ttai': {
                [key: string]: number;
            } | null;
            'event:assets'?: undefined;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets': number;
            'ufo:styleElements': number;
            'ufo:styleProps': number;
            'ufo:styleDeclarations': number;
            'ufo:cssrules': number;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation'?: undefined;
            'metrics@ttai': {
                [key: string]: number;
            } | null;
            'event:assets'?: undefined;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets'?: undefined;
            'ufo:styleElements'?: undefined;
            'ufo:styleProps'?: undefined;
            'ufo:styleDeclarations'?: undefined;
            'ufo:cssrules'?: undefined;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation': {
                redirectStart: number;
                redirectEnd: number;
                fetchStart: number;
                domainLookupStart: number;
                domainLookupEnd: number;
                connectStart: number;
                connectEnd: number;
                secureConnectionStart: number;
                requestStart: number;
                responseStart: number;
                responseEnd: number;
                encodedBodySize: number;
                decodedBodySize: number;
                transferSize: number;
                redirectCount: number;
                type: NavigationTimingType;
                unloadEventEnd: number;
                unloadEventStart: number;
                workerStart: number;
                nextHopProtocol: string;
            };
            'metrics@ttai': {
                [key: string]: number;
            } | null;
            'event:assets'?: undefined;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets': number;
            'ufo:styleElements': number;
            'ufo:styleProps': number;
            'ufo:styleDeclarations': number;
            'ufo:cssrules': number;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation': {
                redirectStart: number;
                redirectEnd: number;
                fetchStart: number;
                domainLookupStart: number;
                domainLookupEnd: number;
                connectStart: number;
                connectEnd: number;
                secureConnectionStart: number;
                requestStart: number;
                responseStart: number;
                responseEnd: number;
                encodedBodySize: number;
                decodedBodySize: number;
                transferSize: number;
                redirectCount: number;
                type: NavigationTimingType;
                unloadEventEnd: number;
                unloadEventStart: number;
                workerStart: number;
                nextHopProtocol: string;
            };
            'metrics@ttai': {
                [key: string]: number;
            } | null;
            'event:assets'?: undefined;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets'?: undefined;
            'ufo:styleElements'?: undefined;
            'ufo:styleProps'?: undefined;
            'ufo:styleDeclarations'?: undefined;
            'ufo:cssrules'?: undefined;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation'?: undefined;
            'event:assets': import("../common").AssetsData;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets': number;
            'ufo:styleElements': number;
            'ufo:styleProps': number;
            'ufo:styleDeclarations': number;
            'ufo:cssrules': number;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation'?: undefined;
            'event:assets': import("../common").AssetsData;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets'?: undefined;
            'ufo:styleElements'?: undefined;
            'ufo:styleProps'?: undefined;
            'ufo:styleDeclarations'?: undefined;
            'ufo:cssrules'?: undefined;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation': {
                redirectStart: number;
                redirectEnd: number;
                fetchStart: number;
                domainLookupStart: number;
                domainLookupEnd: number;
                connectStart: number;
                connectEnd: number;
                secureConnectionStart: number;
                requestStart: number;
                responseStart: number;
                responseEnd: number;
                encodedBodySize: number;
                decodedBodySize: number;
                transferSize: number;
                redirectCount: number;
                type: NavigationTimingType;
                unloadEventEnd: number;
                unloadEventStart: number;
                workerStart: number;
                nextHopProtocol: string;
            };
            'event:assets': import("../common").AssetsData;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets': number;
            'ufo:styleElements': number;
            'ufo:styleProps': number;
            'ufo:styleDeclarations': number;
            'ufo:cssrules': number;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation': {
                redirectStart: number;
                redirectEnd: number;
                fetchStart: number;
                domainLookupStart: number;
                domainLookupEnd: number;
                connectStart: number;
                connectEnd: number;
                secureConnectionStart: number;
                requestStart: number;
                responseStart: number;
                responseEnd: number;
                encodedBodySize: number;
                decodedBodySize: number;
                transferSize: number;
                redirectCount: number;
                type: NavigationTimingType;
                unloadEventEnd: number;
                unloadEventStart: number;
                workerStart: number;
                nextHopProtocol: string;
            };
            'event:assets': import("../common").AssetsData;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets'?: undefined;
            'ufo:styleElements'?: undefined;
            'ufo:styleProps'?: undefined;
            'ufo:styleDeclarations'?: undefined;
            'ufo:cssrules'?: undefined;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation'?: undefined;
            'metrics@ttai': {
                [key: string]: number;
            } | null;
            'event:assets': import("../common").AssetsData;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets': number;
            'ufo:styleElements': number;
            'ufo:styleProps': number;
            'ufo:styleDeclarations': number;
            'ufo:cssrules': number;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation'?: undefined;
            'metrics@ttai': {
                [key: string]: number;
            } | null;
            'event:assets': import("../common").AssetsData;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets'?: undefined;
            'ufo:styleElements'?: undefined;
            'ufo:styleProps'?: undefined;
            'ufo:styleDeclarations'?: undefined;
            'ufo:cssrules'?: undefined;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation': {
                redirectStart: number;
                redirectEnd: number;
                fetchStart: number;
                domainLookupStart: number;
                domainLookupEnd: number;
                connectStart: number;
                connectEnd: number;
                secureConnectionStart: number;
                requestStart: number;
                responseStart: number;
                responseEnd: number;
                encodedBodySize: number;
                decodedBodySize: number;
                transferSize: number;
                redirectCount: number;
                type: NavigationTimingType;
                unloadEventEnd: number;
                unloadEventStart: number;
                workerStart: number;
                nextHopProtocol: string;
            };
            'metrics@ttai': {
                [key: string]: number;
            } | null;
            'event:assets': import("../common").AssetsData;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets': number;
            'ufo:styleElements': number;
            'ufo:styleProps': number;
            'ufo:styleDeclarations': number;
            'ufo:cssrules': number;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation': {
                redirectStart: number;
                redirectEnd: number;
                fetchStart: number;
                domainLookupStart: number;
                domainLookupEnd: number;
                connectStart: number;
                connectEnd: number;
                secureConnectionStart: number;
                requestStart: number;
                responseStart: number;
                responseEnd: number;
                encodedBodySize: number;
                decodedBodySize: number;
                transferSize: number;
                redirectCount: number;
                type: NavigationTimingType;
                unloadEventEnd: number;
                unloadEventStart: number;
                workerStart: number;
                nextHopProtocol: string;
            };
            'metrics@ttai': {
                [key: string]: number;
            } | null;
            'event:assets': import("../common").AssetsData;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        };
    };
}[]>;
export declare const createExperimentalMetricsPayload: (interactionId: string, interaction: InteractionMetrics) => Promise<{
    actionSubject: string;
    action: string;
    eventType: string;
    source: string;
    tags: string[];
    attributes: {
        properties: {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets'?: undefined;
            'ufo:styleElements'?: undefined;
            'ufo:styleProps'?: undefined;
            'ufo:styleDeclarations'?: undefined;
            'ufo:cssrules'?: undefined;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation'?: undefined;
            'event:assets'?: undefined;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets': number;
            'ufo:styleElements': number;
            'ufo:styleProps': number;
            'ufo:styleDeclarations': number;
            'ufo:cssrules': number;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation'?: undefined;
            'event:assets'?: undefined;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets'?: undefined;
            'ufo:styleElements'?: undefined;
            'ufo:styleProps'?: undefined;
            'ufo:styleDeclarations'?: undefined;
            'ufo:cssrules'?: undefined;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation': {
                redirectStart: number;
                redirectEnd: number;
                fetchStart: number;
                domainLookupStart: number;
                domainLookupEnd: number;
                connectStart: number;
                connectEnd: number;
                secureConnectionStart: number;
                requestStart: number;
                responseStart: number;
                responseEnd: number;
                encodedBodySize: number;
                decodedBodySize: number;
                transferSize: number;
                redirectCount: number;
                type: NavigationTimingType;
                unloadEventEnd: number;
                unloadEventStart: number;
                workerStart: number;
                nextHopProtocol: string;
            };
            'event:assets'?: undefined;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets': number;
            'ufo:styleElements': number;
            'ufo:styleProps': number;
            'ufo:styleDeclarations': number;
            'ufo:cssrules': number;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation': {
                redirectStart: number;
                redirectEnd: number;
                fetchStart: number;
                domainLookupStart: number;
                domainLookupEnd: number;
                connectStart: number;
                connectEnd: number;
                secureConnectionStart: number;
                requestStart: number;
                responseStart: number;
                responseEnd: number;
                encodedBodySize: number;
                decodedBodySize: number;
                transferSize: number;
                redirectCount: number;
                type: NavigationTimingType;
                unloadEventEnd: number;
                unloadEventStart: number;
                workerStart: number;
                nextHopProtocol: string;
            };
            'event:assets'?: undefined;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets'?: undefined;
            'ufo:styleElements'?: undefined;
            'ufo:styleProps'?: undefined;
            'ufo:styleDeclarations'?: undefined;
            'ufo:cssrules'?: undefined;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation'?: undefined;
            'metrics@ttai': {
                [key: string]: number;
            } | null;
            'event:assets'?: undefined;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets': number;
            'ufo:styleElements': number;
            'ufo:styleProps': number;
            'ufo:styleDeclarations': number;
            'ufo:cssrules': number;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation'?: undefined;
            'metrics@ttai': {
                [key: string]: number;
            } | null;
            'event:assets'?: undefined;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets'?: undefined;
            'ufo:styleElements'?: undefined;
            'ufo:styleProps'?: undefined;
            'ufo:styleDeclarations'?: undefined;
            'ufo:cssrules'?: undefined;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation': {
                redirectStart: number;
                redirectEnd: number;
                fetchStart: number;
                domainLookupStart: number;
                domainLookupEnd: number;
                connectStart: number;
                connectEnd: number;
                secureConnectionStart: number;
                requestStart: number;
                responseStart: number;
                responseEnd: number;
                encodedBodySize: number;
                decodedBodySize: number;
                transferSize: number;
                redirectCount: number;
                type: NavigationTimingType;
                unloadEventEnd: number;
                unloadEventStart: number;
                workerStart: number;
                nextHopProtocol: string;
            };
            'metrics@ttai': {
                [key: string]: number;
            } | null;
            'event:assets'?: undefined;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets': number;
            'ufo:styleElements': number;
            'ufo:styleProps': number;
            'ufo:styleDeclarations': number;
            'ufo:cssrules': number;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation': {
                redirectStart: number;
                redirectEnd: number;
                fetchStart: number;
                domainLookupStart: number;
                domainLookupEnd: number;
                connectStart: number;
                connectEnd: number;
                secureConnectionStart: number;
                requestStart: number;
                responseStart: number;
                responseEnd: number;
                encodedBodySize: number;
                decodedBodySize: number;
                transferSize: number;
                redirectCount: number;
                type: NavigationTimingType;
                unloadEventEnd: number;
                unloadEventStart: number;
                workerStart: number;
                nextHopProtocol: string;
            };
            'metrics@ttai': {
                [key: string]: number;
            } | null;
            'event:assets'?: undefined;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets'?: undefined;
            'ufo:styleElements'?: undefined;
            'ufo:styleProps'?: undefined;
            'ufo:styleDeclarations'?: undefined;
            'ufo:cssrules'?: undefined;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation'?: undefined;
            'event:assets': import("../common").AssetsData;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets': number;
            'ufo:styleElements': number;
            'ufo:styleProps': number;
            'ufo:styleDeclarations': number;
            'ufo:cssrules': number;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation'?: undefined;
            'event:assets': import("../common").AssetsData;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets'?: undefined;
            'ufo:styleElements'?: undefined;
            'ufo:styleProps'?: undefined;
            'ufo:styleDeclarations'?: undefined;
            'ufo:cssrules'?: undefined;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation': {
                redirectStart: number;
                redirectEnd: number;
                fetchStart: number;
                domainLookupStart: number;
                domainLookupEnd: number;
                connectStart: number;
                connectEnd: number;
                secureConnectionStart: number;
                requestStart: number;
                responseStart: number;
                responseEnd: number;
                encodedBodySize: number;
                decodedBodySize: number;
                transferSize: number;
                redirectCount: number;
                type: NavigationTimingType;
                unloadEventEnd: number;
                unloadEventStart: number;
                workerStart: number;
                nextHopProtocol: string;
            };
            'event:assets': import("../common").AssetsData;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets': number;
            'ufo:styleElements': number;
            'ufo:styleProps': number;
            'ufo:styleDeclarations': number;
            'ufo:cssrules': number;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation': {
                redirectStart: number;
                redirectEnd: number;
                fetchStart: number;
                domainLookupStart: number;
                domainLookupEnd: number;
                connectStart: number;
                connectEnd: number;
                secureConnectionStart: number;
                requestStart: number;
                responseStart: number;
                responseEnd: number;
                encodedBodySize: number;
                decodedBodySize: number;
                transferSize: number;
                redirectCount: number;
                type: NavigationTimingType;
                unloadEventEnd: number;
                unloadEventStart: number;
                workerStart: number;
                nextHopProtocol: string;
            };
            'event:assets': import("../common").AssetsData;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets'?: undefined;
            'ufo:styleElements'?: undefined;
            'ufo:styleProps'?: undefined;
            'ufo:styleDeclarations'?: undefined;
            'ufo:cssrules'?: undefined;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation'?: undefined;
            'metrics@ttai': {
                [key: string]: number;
            } | null;
            'event:assets': import("../common").AssetsData;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets': number;
            'ufo:styleElements': number;
            'ufo:styleProps': number;
            'ufo:styleDeclarations': number;
            'ufo:cssrules': number;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation'?: undefined;
            'metrics@ttai': {
                [key: string]: number;
            } | null;
            'event:assets': import("../common").AssetsData;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets'?: undefined;
            'ufo:styleElements'?: undefined;
            'ufo:styleProps'?: undefined;
            'ufo:styleDeclarations'?: undefined;
            'ufo:cssrules'?: undefined;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation': {
                redirectStart: number;
                redirectEnd: number;
                fetchStart: number;
                domainLookupStart: number;
                domainLookupEnd: number;
                connectStart: number;
                connectEnd: number;
                secureConnectionStart: number;
                requestStart: number;
                responseStart: number;
                responseEnd: number;
                encodedBodySize: number;
                decodedBodySize: number;
                transferSize: number;
                redirectCount: number;
                type: NavigationTimingType;
                unloadEventEnd: number;
                unloadEventStart: number;
                workerStart: number;
                nextHopProtocol: string;
            };
            'metrics@ttai': {
                [key: string]: number;
            } | null;
            'event:assets': import("../common").AssetsData;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        } | {
            'ufo:self:timings:total'?: number | null | undefined;
            'ufo:self:timings:async'?: number | null | undefined;
            'ufo:self:timings:vc'?: number | null | undefined;
            interactionMetrics: {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors?: undefined;
                holdActive?: undefined;
                redirects?: undefined;
                holdInfo?: undefined;
                spans?: undefined;
                requestInfo?: undefined;
                customTimings?: undefined;
                bundleEvalTimings?: undefined;
                resourceTimings?: undefined;
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings?: undefined;
                SSRTimings?: undefined;
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics?: undefined;
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            } | {
                'metric:ttai': number | undefined;
                'metric:experimental:ttai': number | undefined;
                legacyMetrics: {
                    key: string;
                    startTime: number | null;
                    stopTime: number | null;
                    type: string;
                    reactUFOName: string | undefined;
                    fmp: number | null;
                    source: string;
                    timings: {
                        [key: string]: {
                            startTime: number;
                            endTime: number;
                        };
                    };
                    submetrics: any;
                    pageVisibleState: string | undefined;
                }[];
                initialPageLoadExtraTimings: {
                    label: string;
                    data: any;
                }[];
                SSRTimings: {
                    label: string;
                    data: any;
                }[];
                errors: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    name: string;
                    errorType: string;
                    errorMessage: string;
                    errorStack?: string | undefined;
                    forcedError?: boolean | undefined;
                }[];
                holdActive: import("../common").HoldActive[];
                redirects: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                holdInfo: any[];
                spans: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                    type: string;
                }[];
                requestInfo: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                customTimings: {
                    labelStack: OptimizedLabelStack;
                    startTime: number;
                    endTime: number;
                }[];
                bundleEvalTimings: {
                    label: string;
                    data: any;
                }[];
                resourceTimings: ResourceTiming[];
                SSRDoneTime?: number | undefined;
                isBM3ConfigSSRDoneAsFmp?: boolean | undefined;
                isUFOConfigSSRDoneAsFmp?: boolean | undefined;
                labelStack?: OptimizedLabelStack | undefined;
                namePrefix: string;
                segmentPrefix: string;
                interactionId: string;
                pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility;
                pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility;
                experimental__pageVisibilityAtTTI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                experimental__pageVisibilityAtTTAI: import("../common/react-ufo-payload-schema").PageVisibility | null;
                rate: number;
                routeName: string | null;
                type: InteractionType;
                abortReason: import("../common").AbortReasonType | undefined;
                featureFlags: {
                    prior: Record<string, string | number | boolean | Record<any, any>>;
                    during: Record<string, string | number | boolean | Record<any, any>>;
                } | undefined;
                previousInteractionName: string | undefined;
                isPreviousInteractionAborted: boolean;
                abortedByInteractionName: string | undefined;
                apdex: {
                    labelStack?: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | undefined;
                    stopTime: number;
                    key: string;
                    startTime?: number | undefined;
                }[];
                end: number;
                start: number;
                segments: {};
                marks: {
                    labelStack: string | {
                        s?: string | undefined;
                        n: string;
                    }[] | null;
                    time: number;
                    type: import("../common").MarkType;
                    name: string;
                }[];
                customData: any[];
                reactProfilerTimings: any[];
            };
            'ufo:payloadTime': number;
            'ufo:errors:globalCount': number;
            'ufo:errors:count': number;
            'ufo:stylesheets': number;
            'ufo:styleElements': number;
            'ufo:styleProps': number;
            'ufo:styleDeclarations': number;
            'ufo:cssrules': number;
            'metric:vc90'?: number | null | undefined;
            'metrics:navigation': {
                redirectStart: number;
                redirectEnd: number;
                fetchStart: number;
                domainLookupStart: number;
                domainLookupEnd: number;
                connectStart: number;
                connectEnd: number;
                secureConnectionStart: number;
                requestStart: number;
                responseStart: number;
                responseEnd: number;
                encodedBodySize: number;
                decodedBodySize: number;
                transferSize: number;
                redirectCount: number;
                type: NavigationTimingType;
                unloadEventEnd: number;
                unloadEventStart: number;
                workerStart: number;
                nextHopProtocol: string;
            };
            'metrics@ttai': {
                [key: string]: number;
            } | null;
            'event:assets': import("../common").AssetsData;
            'ssr:success': boolean | undefined;
            'ssr:featureFlags': ssr.SSRFeatureFlags | undefined;
            'event:browser:name'?: string | undefined;
            'event:browser:version'?: string | undefined;
            'event:cpus'?: number | undefined;
            'event:memory'?: number | undefined;
            'event:network:effectiveType'?: string | undefined;
            'event:network:rtt'?: number | undefined;
            'event:network:downlink'?: number | undefined;
            'event:localHour'?: number | undefined;
            'event:localDayOfWeek'?: number | undefined;
            'event:localTimezoneOffset'?: number | undefined;
            'event:hostname': string;
            'event:product': string;
            'event:schema': string;
            'event:sizeInKb': number;
            'event:source': {
                name: string;
                version: string;
            };
            'event:region': string;
            'experience:key': string;
            'experience:name': string;
        };
    };
} | null>;
