import type { FilterComponentsLogArgs, VCCalculationMethodArgs } from './types';
export type FilterArgs = {
    type: string;
    tags?: string[];
    ignoreReason?: string;
};
type Filter = {
    name: string;
    filter: (args: FilterArgs) => boolean;
};
type ClassifyUpdateArgs = {
    element: HTMLElement;
    type: string;
    tags?: string[];
    ignoreReason?: string;
};
export declare class ViewportUpdateClassifier {
    types: string[];
    filters: Filter[];
    removedFilters: string[];
    VCCalculationMethod(_: VCCalculationMethodArgs): {
        VC: {};
        VCBox: {};
    };
    filterComponentsLog({ componentsLog }: FilterComponentsLogArgs): import("../../../common/vc/types").ComponentsLogType;
    protected __combinedTypes: string[];
    protected __combinedFilters: Filter[];
    mergeConfig(): void;
    classifyUpdate({ element, type, tags, ignoreReason }: ClassifyUpdateArgs): boolean;
}
export {};
