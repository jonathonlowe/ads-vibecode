type Rect = {
    x: number;
    y: number;
    width: number;
    height: number;
};
export declare class SSRPlaceholderHandlers {
    private staticPlaceholders;
    private callbacks;
    private getSizeCallbacks;
    private reactValidateCallbacks;
    private intersectionObserver;
    private EQUALITY_THRESHOLD;
    constructor();
    clear(): void;
    isPlaceholder(element: HTMLElement): boolean;
    isPlaceholderReplacement(element: HTMLElement): boolean;
    isPlaceholderIgnored(element: HTMLElement): boolean;
    findNearestPlaceholderContainerIfIgnored(element: HTMLElement): HTMLElement;
    checkIfExistedAndSizeMatching(el: HTMLElement): Promise<unknown>;
    getSize(el: HTMLElement): Promise<Rect>;
    validateReactComponentMatchToPlaceholder(el: HTMLElement): Promise<unknown>;
    hasSameSizePosition(rect: Rect | undefined, boundingClientRect: DOMRectReadOnly): boolean;
    isDummyRect(rect: Rect | undefined): boolean;
    intersectionObserverCallback: ({ target, boundingClientRect }: IntersectionObserverEntry) => void;
}
export {};
