import type { FeatureFlagValue } from './common/types';
export { redactValue } from './common/utils';
export type { FeatureFlagValue } from './common/types';
declare global {
    var __CRITERION__: {
        addFeatureFlagAccessed?: (flagName: string, flagValue: FeatureFlagValue) => void;
    };
}
export declare const allFeatureFlagsAccessed: Map<string, FeatureFlagValue>;
export declare const currentFeatureFlagsAccessed: Map<string, FeatureFlagValue>;
/**
 * Used for tracking accessed feature flags in "@atlassian/jira-feature-flagging".
 * */
export declare const addFeatureFlagAccessed: (featureFlagName: string, featureFlagValue: FeatureFlagValue) => void;
