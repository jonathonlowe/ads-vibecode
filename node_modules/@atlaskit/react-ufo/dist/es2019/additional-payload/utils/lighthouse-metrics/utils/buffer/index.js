import _defineProperty from "@babel/runtime/helpers/defineProperty";
import { withProfiling } from '../../../../../self-measurements';
import { PerformanceObserverEntryTypes } from '../../const';
export class BufferWithMaxLength {
  constructor(maxLength = 1000) {
    _defineProperty(this, "buffer", []);
    _defineProperty(this, "full", false);
    this.maxLength = maxLength;
    this.push = withProfiling(this.push.bind(this));
    this.getAll = withProfiling(this.getAll.bind(this));
  }
  push(item) {
    if (this.full || this.maxLength === this.buffer.length) {
      this.full = true;
      this.buffer.shift();
    }
    this.buffer.push(item);
  }
  getAll() {
    return this.buffer;
  }
}
export const EntriesBuffer = {
  [PerformanceObserverEntryTypes.LongTask]: new BufferWithMaxLength(),
  [PerformanceObserverEntryTypes.LayoutShift]: new BufferWithMaxLength()
};