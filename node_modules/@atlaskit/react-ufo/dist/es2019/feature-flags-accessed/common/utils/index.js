import { withProfiling } from '../../../self-measurements';
import { NON_BOOLEAN_VALUE } from '../constants';
const startsAsObject = withProfiling(function startsAsObject(value) {
  try {
    if (value.charAt(0) === '{') {
      return true;
    }
  } catch (e) {
    return false;
  }
  return false;
});
const isObject = withProfiling(function isObject(value) {
  return value && typeof value === 'object' && value.constructor === Object;
});
const isString = withProfiling(function isString(input) {
  let result;
  try {
    result = typeof input === 'string' || input instanceof String;
  } catch (err) {
    // swallow any errors
    result = false;
  }
  return result;
});
export const shouldRedactValue = withProfiling(function shouldRedactValue(value) {
  return isString(value) && startsAsObject(value) || isObject(value);
});
export const redactValue = withProfiling(function redactValue(featureFlagValue) {
  return shouldRedactValue(featureFlagValue) ? NON_BOOLEAN_VALUE : featureFlagValue;
});