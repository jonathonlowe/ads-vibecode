import React, { useContext } from 'react';
import UFOLoadHold from '../load-hold';
import { LazySuspense, WaitContext } from './loosely-lazy';

/**
 * Provides a placeholder for lazily loaded content, improving perceived performance.
 *
 * Named placeholders are especially useful for analyzing page load breakdowns
 * in performance monitoring tools like Performance Portal.
 */
export default function Placeholder({
  name,
  children,
  fallback = null
}) {
  const waitContext = useContext(WaitContext);
  const shouldHold = !waitContext || !!waitContext.currentValue();
  return /*#__PURE__*/React.createElement(LazySuspense, {
    fallback: /*#__PURE__*/React.createElement(React.Fragment, null, fallback, /*#__PURE__*/React.createElement(UFOLoadHold, {
      name: name,
      hold: shouldHold
    })),
    name: name
  }, children);
}