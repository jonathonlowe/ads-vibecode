import { withProfiling } from '../self-measurements';
const timings = [];
export const addTimingFromPerformanceMark = withProfiling(function addTimingFromPerformanceMark(name, startMark, stopMark, cleanStart = false, cleanStop = false) {
  timings.push({
    name,
    startMark,
    stopMark,
    cleanStart,
    cleanStop
  });
});
export const getTimings = withProfiling(function getTimings() {
  const reportedTimingsObj = {};
  timings.forEach(({
    name,
    startMark,
    stopMark,
    cleanStart,
    cleanStop
  }) => {
    const startEntryList = performance.getEntriesByName(startMark);
    const stopEntryList = performance.getEntriesByName(stopMark);
    if ((startEntryList === null || startEntryList === void 0 ? void 0 : startEntryList.length) > 0 && (stopEntryList === null || stopEntryList === void 0 ? void 0 : stopEntryList.length) > 0) {
      const startEntry = startEntryList[startEntryList.length - 1];
      const stopEntry = stopEntryList[stopEntryList.length - 1];
      const {
        startTime
      } = startEntry;
      const duration = stopEntry.startTime - startTime;
      const timing = {
        startTime: Math.round(startTime),
        duration: Math.round(duration)
      };
      reportedTimingsObj[name] = timing;
    }
    if (cleanStart) {
      performance.clearMarks(startMark);
    }
    if (cleanStop) {
      performance.clearMarks(stopMark);
    }
  });
  return reportedTimingsObj;
});