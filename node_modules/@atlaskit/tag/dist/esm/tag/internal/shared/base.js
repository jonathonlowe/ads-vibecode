/* base.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["before", "contentElement", "after", "testId", "appearance", "style", "color", "href", "className"];
import "./base.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
import React from 'react';
import { fg } from '@atlaskit/platform-feature-flags';
import { backgroundColors, borderColors, focusRingColors, linkActiveBackgroundColors, linkHoverBackgroundColors, removeButtonColors, removeButtonHoverColors, textActiveColors, textColors, textHoverColors } from '../../../styles';
var borderColorCssVar = '--ds-bc';
var focusRingCssVar = '--ds-cfr';
var textLinkCssVar = '--ds-ctl';
var textDefaultCssVar = '--ds-ct';
var textHoverCssVar = '--ds-cth';
var textActiveCssVar = '--ds-ctp';
var backgroundDefaultCssVar = '--ds-cb';
var backgroundHoverCssVar = '--ds-cbh';
var backgroundActiveCssVar = '--ds-cba';
var removeButtonDefaultCssVar = '--ds-rb';
var removeButtonHoverCssVar = '--ds-rbh';
var borderRadiusCssVar = '--ds-br';
// To be removed with platform-component-visual-refresh (BLU-2992)
var baseStylesOld = null;
var baseStyles = null;

// To be removed with platform-component-visual-refresh (BLU-2992)
var interactiveStylesOld = null;
var interactiveStyles = null;

// To be removed with platform-component-visual-refresh (BLU-2992)
var focusRingStylesOld = null;
var focusRingStyles = null;

// To be removed with platform-component-visual-refresh (BLU-2992)
var nonStandardLinkStyles = null;
var BaseTag = /*#__PURE__*/React.forwardRef(function BaseTag(_ref, ref) {
  var _objectSpread2;
  var before = _ref.before,
    contentElement = _ref.contentElement,
    after = _ref.after,
    testId = _ref.testId,
    _ref$appearance = _ref.appearance,
    appearance = _ref$appearance === void 0 ? 'default' : _ref$appearance,
    style = _ref.style,
    _ref$color = _ref.color,
    color = _ref$color === void 0 ? 'standard' : _ref$color,
    href = _ref.href,
    className = _ref.className,
    other = _objectWithoutProperties(_ref, _excluded);
  var isLink = Boolean(href);
  var isRemovable = Boolean(after);
  var isInteractive = isLink || isRemovable;
  var isStandardLink = isLink && color === 'standard';

  // Change link text color if  the tag is standard color
  var textLinkColors = isStandardLink ? textColors['standardLink'] : textColors[color];
  var backgroundHoverColors = isRemovable && !isLink ? backgroundColors[color] : linkHoverBackgroundColors[color];
  var backgroundActiveColors = isRemovable && !isLink ? backgroundColors[color] : linkActiveBackgroundColors[color];
  return /*#__PURE__*/React.createElement("span", _extends({}, other, {
    ref: ref,
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    className: ax([fg('platform-component-visual-refresh') ? "_zulp1b66 _2rko1sit _1h6d1v25 _1dqonqa1 _189ee4h9 _1mou1b66 _195g1b66 _18zr1b66 _1e0c116y _vchhusvi _1ul9idpf _4t3iv47k _kqswh2mm _4cvr1h6o _bfhksm61 _syaz1fxt _80om73ad" : "_2rko1j8i _1mou1b66 _195g1b66 _1rjcze3t _18zrze3t _1e0c116y _1ul9idpf _4t3iv47k _kqswh2mm _bfhku1jc _syaz10v1 _80om73ad", fg('platform-component-visual-refresh') ? "_1e3812j9 _7glxv77o" : "_1guj1r31 _pbhaglyw _11ow1o36 _1u6l1gmt", isLink && fg('platform-component-visual-refresh') && "_irr3166n _1di61dty", !fg('platform-component-visual-refresh') && isLink && !isStandardLink && "_9h8h1n0b", !fg('platform-component-visual-refresh') && isInteractive && "_irr3169c _1di62f3m", className]),
    "data-testid": testId,
    style: _objectSpread(_objectSpread({}, _objectSpread((_objectSpread2 = {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_objectSpread2, borderColorCssVar, borderColors[color]), textDefaultCssVar, textColors[color]), textHoverCssVar, textHoverColors[color]), textActiveCssVar, textActiveColors[color]), textLinkCssVar, textLinkColors), backgroundDefaultCssVar, backgroundColors[color]), backgroundHoverCssVar, backgroundHoverColors), backgroundActiveCssVar, backgroundActiveColors), focusRingCssVar, focusRingColors), removeButtonDefaultCssVar, removeButtonColors[color]), _defineProperty(_defineProperty(_objectSpread2, removeButtonHoverCssVar, removeButtonHoverColors[color]), borderRadiusCssVar, appearance === 'rounded' ? '10px' : '3px')), style)), {}, {
      "--_u1k3am": ix("var(".concat(borderColorCssVar, ")")),
      "--_djp4lp": ix("var(".concat(backgroundDefaultCssVar, ")")),
      "--_ah97e": ix("var(".concat(borderRadiusCssVar, ")")),
      "--_y52nzb": ix("var(".concat(textDefaultCssVar, ")")),
      "--_toyvsf": ix("2px solid ".concat("var(--ds-border-focused, #388BFF)")),
      "--_1h6rakg": ix("0 0 0 2px var(".concat(focusRingCssVar, ")")),
      "--_gnpw3": ix("var(".concat(textActiveCssVar, ")")),
      "--_1ooqx0l": ix("var(".concat(backgroundHoverCssVar, ")")),
      "--_1wmp8ry": ix("var(".concat(backgroundActiveCssVar, ")"))
    })
  }), before, contentElement, after);
});

// eslint-disable-next-line @repo/internal/react/require-jsdoc
export default BaseTag;