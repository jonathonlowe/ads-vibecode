/* base.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import "./base.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
import React from 'react';
import { fg } from '@atlaskit/platform-feature-flags';
import { backgroundColors, borderColors, focusRingColors, linkActiveBackgroundColors, linkHoverBackgroundColors, removeButtonColors, removeButtonHoverColors, textActiveColors, textColors, textHoverColors } from '../../../styles';
const borderColorCssVar = '--ds-bc';
const focusRingCssVar = '--ds-cfr';
const textLinkCssVar = '--ds-ctl';
const textDefaultCssVar = '--ds-ct';
const textHoverCssVar = '--ds-cth';
const textActiveCssVar = '--ds-ctp';
const backgroundDefaultCssVar = '--ds-cb';
const backgroundHoverCssVar = '--ds-cbh';
const backgroundActiveCssVar = '--ds-cba';
const removeButtonDefaultCssVar = '--ds-rb';
const removeButtonHoverCssVar = '--ds-rbh';
const borderRadiusCssVar = '--ds-br';
// To be removed with platform-component-visual-refresh (BLU-2992)
const baseStylesOld = null;
const baseStyles = null;

// To be removed with platform-component-visual-refresh (BLU-2992)
const interactiveStylesOld = null;
const interactiveStyles = null;

// To be removed with platform-component-visual-refresh (BLU-2992)
const focusRingStylesOld = null;
const focusRingStyles = null;

// To be removed with platform-component-visual-refresh (BLU-2992)
const nonStandardLinkStyles = null;
const BaseTag = /*#__PURE__*/React.forwardRef(function BaseTag({
  before,
  contentElement,
  after,
  testId,
  appearance = 'default',
  style,
  color = 'standard',
  href,
  className,
  ...other
}, ref) {
  const isLink = Boolean(href);
  const isRemovable = Boolean(after);
  const isInteractive = isLink || isRemovable;
  const isStandardLink = isLink && color === 'standard';

  // Change link text color if  the tag is standard color
  const textLinkColors = isStandardLink ? textColors['standardLink'] : textColors[color];
  const backgroundHoverColors = isRemovable && !isLink ? backgroundColors[color] : linkHoverBackgroundColors[color];
  const backgroundActiveColors = isRemovable && !isLink ? backgroundColors[color] : linkActiveBackgroundColors[color];
  return /*#__PURE__*/React.createElement("span", _extends({}, other, {
    ref: ref,
    style: {
      // NOTE: The vast majority of these styles have zero purpose to be runtime computed
      // This can all be migrated to statically distributed atomic CSS with Compiled in the future
      // The main reason for not touching this is there is to avoid excessive changes in the same PR on non-visual-refresh code

      /* eslint-disable @atlaskit/ui-styling-standard/enforce-style-prop */
      /* eslint-disable @atlaskit/ui-styling-standard/no-imported-style-values */
      [borderColorCssVar]: borderColors[color],
      [textDefaultCssVar]: textColors[color],
      [textHoverCssVar]: textHoverColors[color],
      [textActiveCssVar]: textActiveColors[color],
      [textLinkCssVar]: textLinkColors,
      [backgroundDefaultCssVar]: backgroundColors[color],
      [backgroundHoverCssVar]: backgroundHoverColors,
      [backgroundActiveCssVar]: backgroundActiveColors,
      [focusRingCssVar]: focusRingColors,
      [removeButtonDefaultCssVar]: removeButtonColors[color],
      [removeButtonHoverCssVar]: removeButtonHoverColors[color],
      [borderRadiusCssVar]: appearance === 'rounded' ? '10px' : '3px',
      /* eslint-enable @atlaskit/ui-styling-standard/enforce-style-prop */
      /* eslint-enable @atlaskit/ui-styling-standard/no-imported-style-values */

      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      ...style
    }
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    ,
    className: ax([fg('platform-component-visual-refresh') ? "_zulp1b66 _2rko1sit _1h6d2fso _1dqonqa1 _189ee4h9 _1mou1b66 _195g1b66 _18zr1b66 _1e0c116y _vchhusvi _1ul9idpf _4t3iv47k _kqswh2mm _4cvr1h6o _bfhksm61 _syaz1fxt _80om73ad" : "_2rko1l5z _1mou1b66 _195g1b66 _1rjcze3t _18zrze3t _1e0c116y _1ul9idpf _4t3iv47k _kqswh2mm _bfhklsll _syaz148y _80om73ad", fg('platform-component-visual-refresh') ? "_1e38ugt7 _7glxv77o" : "_1guj1r31 _pbhaglyw _11ow1o36 _1u6lnr64", isLink && fg('platform-component-visual-refresh') && "_irr3166n _1di61dty", !fg('platform-component-visual-refresh') && isLink && !isStandardLink && "_9h8h1348", !fg('platform-component-visual-refresh') && isInteractive && "_irr31lyj _1di6oo20", className]),
    "data-testid": testId
  }), before, contentElement, after);
});

// eslint-disable-next-line @repo/internal/react/require-jsdoc
export default BaseTag;