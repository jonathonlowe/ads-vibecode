/* media-svg-compiled.tsx generated by @compiled/babel-plugin v0.36.1 */
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { forwardRef } from 'react';
import { ErrorBoundary } from 'react-error-boundary';
import { createUnexpectedErrorCallback } from './errors';
import { Loading } from './loading-compiled';
import { SvgRenderer } from './svgRenderer-compiled';
import { useResolveSvg } from './useResolveSvg';
const MediaSvg = /*#__PURE__*/forwardRef(({
  testId,
  identifier,
  dimensions,
  onError,
  alt,
  onLoad,
  onMouseDown,
  style
}, ref) => {
  const {
    svgUrl,
    source
  } = useResolveSvg(identifier, onError);
  return /*#__PURE__*/React.createElement(ErrorBoundary, {
    onError: createUnexpectedErrorCallback(onError),
    fallback: null
  }, svgUrl && source ? /*#__PURE__*/React.createElement(SvgRenderer, {
    identifier: identifier,
    testId: testId,
    svgUrl: svgUrl,
    source: source,
    dimensions: dimensions,
    onError: onError,
    alt: alt,
    onLoad: onLoad,
    onMouseDown: onMouseDown
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop
    ,
    style: style,
    ref: ref
  }) : /*#__PURE__*/React.createElement(Loading, {
    dimensions: dimensions
  }));
});
export default MediaSvg;