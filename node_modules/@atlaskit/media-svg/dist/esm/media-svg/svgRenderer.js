import _defineProperty from "@babel/runtime/helpers/defineProperty";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { forwardRef } from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css, jsx } from '@emotion/react';
import { MediaSVGError } from './errors';
var svgRendererMaxDimensionStyles = css({
  maxWidth: '100%',
  maxHeight: '100%'
});
var svgRendererStyles = css({
  objectFit: 'contain',
  // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage
  backgroundColor: 'white' // This background color is for transparency
});
export var SvgRenderer = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var _ref$identifier = _ref.identifier,
    id = _ref$identifier.id,
    collectionName = _ref$identifier.collectionName,
    testId = _ref.testId,
    svgUrl = _ref.svgUrl,
    source = _ref.source,
    dimensions = _ref.dimensions,
    _onError = _ref.onError,
    alt = _ref.alt,
    onLoad = _ref.onLoad,
    onMouseDown = _ref.onMouseDown,
    style = _ref.style;
  var _ref2 = dimensions || style || {},
    width = _ref2.width,
    height = _ref2.height;
  return (
    // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions
    jsx("img", {
      "data-testid": testId,
      "data-fileid": id,
      "data-filecollection": collectionName,
      "data-source": source,
      src: svgUrl,
      alt: alt,
      css: [svgRendererStyles, !width && !height && svgRendererMaxDimensionStyles],
      style: _objectSpread(_objectSpread({}, style), {}, {
        width: (dimensions === null || dimensions === void 0 ? void 0 : dimensions.width) || (style === null || style === void 0 ? void 0 : style.width),
        height: (dimensions === null || dimensions === void 0 ? void 0 : dimensions.height) || (style === null || style === void 0 ? void 0 : style.height)
      }),
      onLoad: onLoad,
      onMouseDown: onMouseDown,
      onError: function onError() {
        _onError && _onError(new MediaSVGError('img-error'));
      },
      ref: ref
    })
  );
});