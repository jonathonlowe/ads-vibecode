/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { forwardRef } from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx } from '@emotion/react';
import { ErrorBoundary } from 'react-error-boundary';
import { createUnexpectedErrorCallback } from './errors';
import { Loading } from './loading';
import { SvgRenderer } from './svgRenderer';
import { useResolveSvg } from './useResolveSvg';
var MediaSvg = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var testId = _ref.testId,
    identifier = _ref.identifier,
    dimensions = _ref.dimensions,
    onError = _ref.onError,
    alt = _ref.alt,
    onLoad = _ref.onLoad,
    onMouseDown = _ref.onMouseDown,
    style = _ref.style;
  var _useResolveSvg = useResolveSvg(identifier, onError),
    svgUrl = _useResolveSvg.svgUrl,
    source = _useResolveSvg.source;
  return jsx(ErrorBoundary, {
    onError: createUnexpectedErrorCallback(onError),
    fallback: null
  }, svgUrl && source ? jsx(SvgRenderer, {
    identifier: identifier,
    testId: testId,
    svgUrl: svgUrl,
    source: source,
    dimensions: dimensions,
    onError: onError,
    alt: alt,
    onLoad: onLoad,
    onMouseDown: onMouseDown
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop
    ,
    style: style,
    ref: ref
  }) : jsx(Loading, {
    dimensions: dimensions
  }));
});
export default MediaSvg;