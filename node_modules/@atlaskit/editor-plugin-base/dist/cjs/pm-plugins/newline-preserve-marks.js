"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.newlinePreserveMarksKey = exports.default = void 0;
var _safePlugin = require("@atlaskit/editor-common/safe-plugin");
var _utils = require("@atlaskit/editor-common/utils");
var _keymap = require("@atlaskit/editor-prosemirror/keymap");
var _state = require("@atlaskit/editor-prosemirror/state");
var newlinePreserveMarksKey = exports.newlinePreserveMarksKey = new _state.PluginKey('newlinePreserveMarksPlugin');
var isSelectionAligned = function isSelectionAligned(state) {
  return !!state.selection.$to.parent.marks.find(function (m) {
    return m.type === state.schema.marks.alignment;
  });
};
var splitBlockPreservingMarks = function splitBlockPreservingMarks(state, dispatch) {
  if (dispatch) {
    dispatch(state.tr.split(state.tr.mapping.map(state.selection.$from.pos), 1));
  }
  return true;
};
var _default = exports.default = function _default() {
  return new _safePlugin.SafePlugin({
    key: newlinePreserveMarksKey,
    props: {
      handleKeyDown: (0, _keymap.keydownHandler)({
        Enter: (0, _utils.filterCommand)([_utils.isSelectionEndOfParagraph, isSelectionAligned], splitBlockPreservingMarks)
      })
    }
  });
};