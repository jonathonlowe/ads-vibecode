import { SafePlugin } from '@atlaskit/editor-common/safe-plugin';
import { filterCommand as filter, isSelectionEndOfParagraph } from '@atlaskit/editor-common/utils';
import { keydownHandler } from '@atlaskit/editor-prosemirror/keymap';
import { PluginKey } from '@atlaskit/editor-prosemirror/state';
export var newlinePreserveMarksKey = new PluginKey('newlinePreserveMarksPlugin');
var isSelectionAligned = function isSelectionAligned(state) {
  return !!state.selection.$to.parent.marks.find(function (m) {
    return m.type === state.schema.marks.alignment;
  });
};
var splitBlockPreservingMarks = function splitBlockPreservingMarks(state, dispatch) {
  if (dispatch) {
    dispatch(state.tr.split(state.tr.mapping.map(state.selection.$from.pos), 1));
  }
  return true;
};
export default (function () {
  return new SafePlugin({
    key: newlinePreserveMarksKey,
    props: {
      handleKeyDown: keydownHandler({
        Enter: filter([isSelectionEndOfParagraph, isSelectionAligned], splitBlockPreservingMarks)
      })
    }
  });
});