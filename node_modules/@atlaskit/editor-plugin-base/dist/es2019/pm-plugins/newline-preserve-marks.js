import { SafePlugin } from '@atlaskit/editor-common/safe-plugin';
import { filterCommand as filter, isSelectionEndOfParagraph } from '@atlaskit/editor-common/utils';
import { keydownHandler } from '@atlaskit/editor-prosemirror/keymap';
import { PluginKey } from '@atlaskit/editor-prosemirror/state';
export const newlinePreserveMarksKey = new PluginKey('newlinePreserveMarksPlugin');
const isSelectionAligned = state => !!state.selection.$to.parent.marks.find(m => m.type === state.schema.marks.alignment);
const splitBlockPreservingMarks = (state, dispatch) => {
  if (dispatch) {
    dispatch(state.tr.split(state.tr.mapping.map(state.selection.$from.pos), 1));
  }
  return true;
};
export default (() => new SafePlugin({
  key: newlinePreserveMarksKey,
  props: {
    handleKeyDown: keydownHandler({
      Enter: filter([isSelectionEndOfParagraph, isSelectionAligned], splitBlockPreservingMarks)
    })
  }
}));