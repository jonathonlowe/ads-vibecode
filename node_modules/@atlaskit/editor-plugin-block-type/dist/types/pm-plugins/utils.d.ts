import type { InputRuleWrapper } from '@atlaskit/editor-common/types';
import type { NodeType, Node as PMNode } from '@atlaskit/editor-prosemirror/model';
import type { EditorState } from '@atlaskit/editor-prosemirror/state';
import type { BlockType } from './types';
export declare const isNodeAWrappingBlockNode: (node?: PMNode | null) => boolean;
export declare const createJoinNodesRule: (match: RegExp, nodeType: NodeType) => InputRuleWrapper;
type WrappingTextRuleProps = {
    match: RegExp;
    nodeType: NodeType;
    getAttrs?: Record<string, any> | ((matchResult: RegExpExecArray) => Record<string, any>);
};
export declare const createWrappingTextBlockRule: ({ match, nodeType, getAttrs, }: WrappingTextRuleProps) => InputRuleWrapper;
/**
 * Function will check if changing block types: Paragraph, Heading is enabled.
 */
export declare function areBlockTypesDisabled(state: EditorState): boolean;
export declare const checkFormattingIsPresent: (state: EditorState) => boolean;
export declare const hasBlockQuoteInOptions: (dropdownOptions: BlockType[]) => boolean;
export {};
