"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deleteAndMoveCursor = void 0;
var _state = require("@atlaskit/editor-prosemirror/state");
// We should override default behaviour when selection spans node depths or
// ends at a node junction
var shouldMoveCursorAfterDelete = function shouldMoveCursorAfterDelete(state) {
  var _state$selection = state.selection,
    $from = _state$selection.$from,
    $to = _state$selection.$to;
  var nodeRange = $from.blockRange($to);
  if (!nodeRange) {
    return false;
  }
  var hasSameAncestor = $from.depth === $to.depth && $from.depth - 1 === nodeRange.depth;
  var toPositionHasNodeAfter = !!$to.nodeAfter;
  if (hasSameAncestor || toPositionHasNodeAfter) {
    return false;
  }
  return true;
};

/**
 * Fixes cursor position after delete for list/task in panel and table
 *
 * ED-13873 fixes a bug where after deleting a list the cursor would move
 * to the cell to the right. Uses setSelection to position the cursor as expected after deleting.
 *
 * @param state EditorState
 * @param dispatch CommandDispatch
 * @returns boolean
 */
var deleteAndMoveCursor = exports.deleteAndMoveCursor = function deleteAndMoveCursor(state, dispatch) {
  if (state.selection.empty || !(state.selection instanceof _state.TextSelection)) {
    return false;
  }
  if (!shouldMoveCursorAfterDelete(state)) {
    return false;
  }
  var tr = state.tr;
  tr.deleteSelection();

  // Make sure the next position is not out of boundaries
  var previousPosition = Math.min(Math.max(state.selection.$from.pos, 0), tr.doc.content.size);
  // Override default delete behaviour that moves the cursor to first suitable position after selection (postive bias).
  // See. selectionToInsertionEnd. We will override behavior with negative bias (search for suitable cursor position backwards).
  tr.setSelection(_state.Selection.near(tr.doc.resolve(previousPosition), -1));
  if (dispatch) {
    dispatch(tr.scrollIntoView());
  }
  return true;
};