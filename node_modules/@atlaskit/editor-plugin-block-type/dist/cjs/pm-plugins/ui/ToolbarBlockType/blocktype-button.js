"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BlockTypeButton = void 0;
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@emotion/react");
var _reactIntlNext = require("react-intl-next");
var _messages = require("@atlaskit/editor-common/messages");
var _styles = require("@atlaskit/editor-common/styles");
var _uiMenu = require("@atlaskit/editor-common/ui-menu");
var _text = _interopRequireDefault(require("@atlaskit/icon/core/text"));
var _textStyle = _interopRequireDefault(require("@atlaskit/icon/glyph/editor/text-style"));
var _chevronDown = _interopRequireDefault(require("@atlaskit/icon/utility/migration/chevron-down"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _primitives = require("@atlaskit/primitives");
var _experiments = require("@atlaskit/tmp-editor-statsig/experiments");
var _blockTypes = require("../../block-types");
var _styled = require("./styled");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var buttonContentStyle = (0, _primitives.xcss)({
  minWidth: "calc(80px + 2*".concat("var(--ds-space-075, 6px)", ")"),
  overflow: 'hidden',
  padding: 'space.075'
});
var buttonContentReducedSpacingStyle = (0, _primitives.xcss)({
  padding: 'space.100',
  minWidth: "calc(80px + 2*".concat("var(--ds-space-100, 8px)", ")")
});
var BlockTypeButton = exports.BlockTypeButton = function BlockTypeButton(props) {
  var blockTypeName = props.blockTypeName || '';
  var labelTextStyles = props.formatMessage(_messages.toolbarMessages.textStyles, {
    blockTypeName: blockTypeName
  });
  var toolipTextStyles = props.formatMessage(_messages.toolbarMessages.textStylesTooltip);
  var icon = (0, _experiments.editorExperiment)('platform_editor_controls', 'variant1') && props.blockTypeIcon ? props.blockTypeIcon : (0, _react2.jsx)(_text.default, {
    label: labelTextStyles,
    spacing: "spacious",
    color: "currentColor",
    LEGACY_fallbackIcon: _textStyle.default
  });
  var chevronIconSpacing = props.isSmall && (0, _experiments.editorExperiment)('platform_editor_controls', 'variant1') && (0, _platformFeatureFlags.fg)('platform_editor_controls_patch_4') ? 'spacious' : 'none';
  return (0, _react2.jsx)(_uiMenu.ToolbarButton, {
    spacing: props.isReducedSpacing ? 'none' : 'default',
    selected: props.selected
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    ,
    className: "block-type-btn",
    disabled: props.disabled,
    onClick: props.onClick,
    onKeyDown: props.onKeyDown,
    title: toolipTextStyles,
    "aria-label": labelTextStyles,
    "aria-haspopup": true,
    "aria-expanded": props['aria-expanded'],
    iconAfter: (0, _react2.jsx)("span", {
      // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      css: [_styles.wrapperStyle, props.isSmall && _styled.wrapperSmallStyle],
      "data-testid": "toolbar-block-type-text-styles-icon"
    }, (0, _react2.jsx)(_react.default.Fragment, null, props.isSmall && icon, (0, _react2.jsx)("span", {
      // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      css: _styles.expandIconContainerStyle
    }, (0, _react2.jsx)(_chevronDown.default, {
      spacing: chevronIconSpacing,
      label: "",
      color: "currentColor",
      LEGACY_margin: "0 0 0 -8px"
    }))))
  }, !props.isSmall && (0, _react2.jsx)(_primitives.Box, {
    xcss: [buttonContentStyle, props.isReducedSpacing && buttonContentReducedSpacingStyle]
  }, (0, _react2.jsx)(_reactIntlNext.FormattedMessage
  // Ignored via go/ees005
  // eslint-disable-next-line react/jsx-props-no-spreading
  , props.title || _blockTypes.NORMAL_TEXT.title)));
};