"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PrimaryToolbarComponent = PrimaryToolbarComponent;
var _react = _interopRequireDefault(require("react"));
var _analytics = require("@atlaskit/editor-common/analytics");
var _hooks = require("@atlaskit/editor-common/hooks");
var _ToolbarBlockType = _interopRequireDefault(require("./ToolbarBlockType"));
function PrimaryToolbarComponent(_ref) {
  var api = _ref.api,
    isSmall = _ref.isSmall,
    disabled = _ref.disabled,
    isToolbarReducedSpacing = _ref.isToolbarReducedSpacing,
    popupsMountPoint = _ref.popupsMountPoint,
    popupsBoundariesElement = _ref.popupsBoundariesElement,
    popupsScrollableElement = _ref.popupsScrollableElement,
    shouldUseDefaultRole = _ref.shouldUseDefaultRole;
  var _useSharedPluginState = (0, _hooks.useSharedPluginState)(api, ['blockType']),
    blockTypeState = _useSharedPluginState.blockTypeState;
  var boundSetBlockType = function boundSetBlockType(name, fromBlockQuote) {
    var _api$core, _api$blockType;
    return api === null || api === void 0 || (_api$core = api.core) === null || _api$core === void 0 ? void 0 : _api$core.actions.execute(api === null || api === void 0 || (_api$blockType = api.blockType) === null || _api$blockType === void 0 || (_api$blockType = _api$blockType.commands) === null || _api$blockType === void 0 ? void 0 : _api$blockType.setTextLevel(name, _analytics.INPUT_METHOD.TOOLBAR, fromBlockQuote));
  };
  var wrapBlockQuote = function wrapBlockQuote() {
    var _api$core2, _api$blockType2;
    return api === null || api === void 0 || (_api$core2 = api.core) === null || _api$core2 === void 0 ? void 0 : _api$core2.actions.execute(api === null || api === void 0 || (_api$blockType2 = api.blockType) === null || _api$blockType2 === void 0 || (_api$blockType2 = _api$blockType2.commands) === null || _api$blockType2 === void 0 ? void 0 : _api$blockType2.insertBlockQuote(_analytics.INPUT_METHOD.TOOLBAR));
  };
  var clearFormatting = function clearFormatting() {
    var _api$core3, _api$blockType3;
    return api === null || api === void 0 || (_api$core3 = api.core) === null || _api$core3 === void 0 ? void 0 : _api$core3.actions.execute(api === null || api === void 0 || (_api$blockType3 = api.blockType) === null || _api$blockType3 === void 0 || (_api$blockType3 = _api$blockType3.commands) === null || _api$blockType3 === void 0 ? void 0 : _api$blockType3.clearFormatting(_analytics.INPUT_METHOD.TOOLBAR));
  };
  return /*#__PURE__*/_react.default.createElement(_ToolbarBlockType.default, {
    isSmall: isSmall,
    isDisabled: disabled,
    isReducedSpacing: isToolbarReducedSpacing,
    setTextLevel: boundSetBlockType,
    wrapBlockQuote: wrapBlockQuote,
    clearFormatting: clearFormatting
    // Ignored via go/ees005
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    ,
    pluginState: blockTypeState,
    popupsMountPoint: popupsMountPoint,
    popupsBoundariesElement: popupsBoundariesElement,
    popupsScrollableElement: popupsScrollableElement,
    shouldUseDefaultRole: shouldUseDefaultRole,
    api: api
  });
}