import { Slice, Fragment } from '@atlaskit/editor-prosemirror/model';
import { findWrapping } from '@atlaskit/editor-prosemirror/transform';
export function wrapSelectionInBlockType(nodeType) {
  return function (_ref) {
    var tr = _ref.tr;
    var nodes = tr.doc.type.schema.nodes;
    var _tr$doc$type$schema$m = tr.doc.type.schema.marks,
      alignment = _tr$doc$type$schema$m.alignment,
      indentation = _tr$doc$type$schema$m.indentation;
    if (nodes.paragraph && nodes.blockquote) {
      /**Remove alignment and indentation marks from the selection */
      var marksToRemove = [alignment, indentation];
      var hasMark = function hasMark(mark) {
        return marksToRemove.indexOf(mark.type) > -1;
      };
      var not = function not(fn) {
        return function (arg) {
          return !fn(arg);
        };
      };

      /**
       * When you need to toggle the selection
       * when another type which does not allow alignment is applied
       */
      tr.doc.nodesBetween(tr.selection.from, tr.selection.to, function (node, pos) {
        if (node.type === nodes.paragraph && node.marks.some(hasMark)) {
          var resolvedPos = tr.doc.resolve(pos);
          var withoutBlockMarks = node.marks.filter(not(hasMark));
          tr = tr.setNodeMarkup(resolvedPos.pos, undefined, node.attrs, withoutBlockMarks);
        }
      });

      /** Get range and wrapping needed for the selection */
      var _tr$selection = tr.selection,
        $from = _tr$selection.$from,
        $to = _tr$selection.$to;
      var range = $from.blockRange($to);
      var wrapping = range && findWrapping(range, nodes.blockquote);
      if (wrapping) {
        /** Wrap the selection */
        tr.wrap(range, wrapping).scrollIntoView();
      } else {
        /** If wrapping is not possible, replace with a blockquote */
        var start = $from.start();
        var end = $to.end();
        var content = $from.node().content;
        var blockquote = nodes.blockquote.create({}, nodes.paragraph.create({}, content));
        var slice = new Slice(Fragment.from(blockquote), 0, 0);
        tr.replaceRange(start, end, slice).scrollIntoView();
      }
    }
    return tr;
  };
}