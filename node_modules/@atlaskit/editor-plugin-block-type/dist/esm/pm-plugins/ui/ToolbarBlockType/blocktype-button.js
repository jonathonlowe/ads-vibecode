/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx } from '@emotion/react';
import { FormattedMessage } from 'react-intl-next';
import { toolbarMessages } from '@atlaskit/editor-common/messages';
import { expandIconContainerStyle, wrapperStyle } from '@atlaskit/editor-common/styles';
import { ToolbarButton } from '@atlaskit/editor-common/ui-menu';
import TextIcon from '@atlaskit/icon/core/text';
import { default as TextStyleIconLegacy } from '@atlaskit/icon/glyph/editor/text-style';
import ChevronDownIcon from '@atlaskit/icon/utility/migration/chevron-down';
import { fg } from '@atlaskit/platform-feature-flags';
import { Box, xcss } from '@atlaskit/primitives';
import { editorExperiment } from '@atlaskit/tmp-editor-statsig/experiments';
import { NORMAL_TEXT } from '../../block-types';
import { wrapperSmallStyle } from './styled';
var buttonContentStyle = xcss({
  minWidth: "calc(80px + 2*".concat("var(--ds-space-075, 6px)", ")"),
  overflow: 'hidden',
  padding: 'space.075'
});
var buttonContentReducedSpacingStyle = xcss({
  padding: 'space.100',
  minWidth: "calc(80px + 2*".concat("var(--ds-space-100, 8px)", ")")
});
export var BlockTypeButton = function BlockTypeButton(props) {
  var blockTypeName = props.blockTypeName || '';
  var labelTextStyles = props.formatMessage(toolbarMessages.textStyles, {
    blockTypeName: blockTypeName
  });
  var toolipTextStyles = props.formatMessage(toolbarMessages.textStylesTooltip);
  var icon = editorExperiment('platform_editor_controls', 'variant1') && props.blockTypeIcon ? props.blockTypeIcon : jsx(TextIcon, {
    label: labelTextStyles,
    spacing: "spacious",
    color: "currentColor",
    LEGACY_fallbackIcon: TextStyleIconLegacy
  });
  var chevronIconSpacing = props.isSmall && editorExperiment('platform_editor_controls', 'variant1') && fg('platform_editor_controls_patch_4') ? 'spacious' : 'none';
  return jsx(ToolbarButton, {
    spacing: props.isReducedSpacing ? 'none' : 'default',
    selected: props.selected
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    ,
    className: "block-type-btn",
    disabled: props.disabled,
    onClick: props.onClick,
    onKeyDown: props.onKeyDown,
    title: toolipTextStyles,
    "aria-label": labelTextStyles,
    "aria-haspopup": true,
    "aria-expanded": props['aria-expanded'],
    iconAfter: jsx("span", {
      // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      css: [wrapperStyle, props.isSmall && wrapperSmallStyle],
      "data-testid": "toolbar-block-type-text-styles-icon"
    }, jsx(React.Fragment, null, props.isSmall && icon, jsx("span", {
      // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      css: expandIconContainerStyle
    }, jsx(ChevronDownIcon, {
      spacing: chevronIconSpacing,
      label: "",
      color: "currentColor",
      LEGACY_margin: "0 0 0 -8px"
    }))))
  }, !props.isSmall && jsx(Box, {
    xcss: [buttonContentStyle, props.isReducedSpacing && buttonContentReducedSpacingStyle]
  }, jsx(FormattedMessage
  // Ignored via go/ees005
  // eslint-disable-next-line react/jsx-props-no-spreading
  , props.title || NORMAL_TEXT.title)));
};