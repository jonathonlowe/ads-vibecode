/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';
import type { WrappedComponentProps } from 'react-intl-next';
import type { ExtractInjectionAPI } from '@atlaskit/editor-common/types';
import type { MenuItem } from '@atlaskit/editor-common/ui-menu';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import { ThemeMutationObserver } from '@atlaskit/tokens';
import type { BlockTypePlugin } from '../../../blockTypePluginType';
import type { TextBlockTypes } from '../../block-types';
import type { BlockTypeState } from '../../main';
import type { BlockType } from '../../types';
export type DropdownItem = MenuItem & {
    value: BlockType;
};
export interface Props {
    isDisabled?: boolean;
    isSmall?: boolean;
    isReducedSpacing?: boolean;
    pluginState: BlockTypeState;
    popupsMountPoint?: HTMLElement;
    popupsBoundariesElement?: HTMLElement;
    popupsScrollableElement?: HTMLElement;
    editorView?: EditorView;
    setTextLevel: (type: TextBlockTypes, fromBlockQuote?: boolean) => void;
    wrapBlockQuote: (type: TextBlockTypes) => void;
    clearFormatting: () => void;
    shouldUseDefaultRole?: boolean;
    api: ExtractInjectionAPI<BlockTypePlugin> | undefined;
}
export interface State {
    active: boolean;
    isOpenedByKeyboard: boolean;
    typographyTheme: 'typography' | 'typography-adg3' | 'typography-modernized' | 'typography-refreshed' | undefined;
    observer: ThemeMutationObserver | null;
}
declare const _default: React.FC<import("react-intl-next").WithIntlProps<Props & WrappedComponentProps>> & {
    WrappedComponent: React.ComponentType<Props & WrappedComponentProps>;
};
export default _default;
