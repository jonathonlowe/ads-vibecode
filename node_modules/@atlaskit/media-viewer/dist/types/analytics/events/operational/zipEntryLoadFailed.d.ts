import { type FileState } from '@atlaskit/media-client';
import { type ZipEntry } from 'unzipit';
import { type MediaFileEventPayload } from './_mediaFile';
import { type MediaViewerFailureAttributes } from '../..';
import { type MediaViewerError } from '../../../errors';
export type ZipEntryLoadFailedAttributes = MediaViewerFailureAttributes & {
    size: number;
    encrypted: boolean;
    compressedSize: number;
    mimeType: string;
};
export type ZipEntryLoadFailedEventPayload = MediaFileEventPayload<ZipEntryLoadFailedAttributes, 'zipEntryLoadFailed'>;
export declare const createZipEntryLoadFailedEvent: (fileState: FileState, error: MediaViewerError, zipEntry?: ZipEntry) => ZipEntryLoadFailedEventPayload;
