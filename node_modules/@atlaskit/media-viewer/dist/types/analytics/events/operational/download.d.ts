import { type FileState } from '@atlaskit/media-client';
import { type MediaFileEventPayload } from './_mediaFile';
import { type MediaViewerFailureAttributes } from '../..';
import { type MediaViewerError } from '../../../errors';
import { type MediaTraceContext, type SuccessAttributes, type WithFileAttributes, type WithTraceContext } from '@atlaskit/media-common';
export type DownloadFailedEventPayload = MediaFileEventPayload<MediaViewerFailureAttributes, 'downloadFailed'>;
export type DownloadSucceededEventPayload = MediaFileEventPayload<SuccessAttributes & WithFileAttributes & WithTraceContext, 'downloadSucceeded'>;
export declare const createDownloadSucceededEventPayload: (fileState?: FileState, traceContext?: MediaTraceContext) => DownloadSucceededEventPayload;
export declare const createDownloadFailedEventPayload: (fileId: string, error: MediaViewerError, fileState?: FileState, traceContext?: MediaTraceContext) => DownloadFailedEventPayload;
