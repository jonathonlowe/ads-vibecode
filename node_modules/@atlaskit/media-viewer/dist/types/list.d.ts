import React from 'react';
import { type Identifier } from '@atlaskit/media-client';
import { type WithShowControlMethodProp } from '@atlaskit/media-ui';
import { type MediaViewerExtensions } from './components/types';
import { type MediaFeatureFlags } from '@atlaskit/media-common';
import { type ViewerOptionsProps } from './viewerOptions';
export type Props = Readonly<{
    onClose?: () => void;
    onNavigationChange?: (selectedItem: Identifier) => void;
    defaultSelectedItem: Identifier;
    items: Identifier[];
    extensions?: MediaViewerExtensions;
    onSidebarButtonClick?: () => void;
    isSidebarVisible?: boolean;
    contextId?: string;
    featureFlags?: MediaFeatureFlags;
    viewerOptions?: ViewerOptionsProps;
} & WithShowControlMethodProp>;
export type State = {
    selectedItem: Identifier;
    previewCount: number;
    isArchiveSideBarVisible: boolean;
};
export declare const List: ({ defaultSelectedItem, onClose, showControls, extensions, onSidebarButtonClick, contextId, featureFlags, isSidebarVisible, onNavigationChange, items, viewerOptions, }: Props) => React.JSX.Element;
