import { type Identifier, type MediaClient } from '@atlaskit/media-client';
import type { WithMediaClientConfigProps } from '@atlaskit/media-client-react';
import { type MediaFeatureFlags } from '@atlaskit/media-common';
import { type ReactNode } from 'react';
import { type ViewerOptionsProps } from '../viewerOptions';
export type FileStateFlags = {
    wasStatusProcessing: boolean;
    wasStatusUploading: boolean;
};
export interface MediaViewerExtensionsActions {
    close: () => void;
}
export interface MediaViewerExtensions {
    sidebar?: {
        icon: ReactNode;
        renderer: (selectedIdentifier: Identifier, actions: MediaViewerExtensionsActions) => ReactNode;
    };
}
export interface MediaViewerProps {
    readonly mediaClient: MediaClient;
    readonly selectedItem: Identifier;
    readonly items: Array<Identifier>;
    readonly collectionName: string;
    readonly onClose?: () => void;
    readonly featureFlags?: MediaFeatureFlags;
    readonly extensions?: MediaViewerExtensions;
    readonly contextId?: string;
    readonly viewerOptions?: ViewerOptionsProps;
}
export type MediaMessage = {
    source: 'media';
    event: 'mediaViewerOpened' | 'mediaViewerClosed';
};
export type MediaViewerWithMediaClientConfigProps = WithMediaClientConfigProps<MediaViewerProps>;
