"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createDownloadSucceededEventPayload = exports.createDownloadFailedEventPayload = void 0;
var _ = require("../..");
var _errors = require("../../../errors");
var createDownloadSucceededEventPayload = exports.createDownloadSucceededEventPayload = function createDownloadSucceededEventPayload(fileState, traceContext) {
  var _getFileAttributes = (0, _.getFileAttributes)(fileState),
    fileId = _getFileAttributes.fileId,
    fileMediatype = _getFileAttributes.fileMediatype,
    fileMimetype = _getFileAttributes.fileMimetype,
    fileSize = _getFileAttributes.fileSize;
  return {
    eventType: 'operational',
    actionSubject: 'mediaFile',
    action: 'downloadSucceeded',
    attributes: {
      status: 'success',
      fileMediatype: fileMediatype,
      fileMimetype: fileMimetype,
      fileAttributes: {
        fileId: fileId,
        fileMediatype: fileMediatype,
        fileMimetype: fileMimetype,
        fileSize: fileSize
      },
      traceContext: traceContext
    }
  };
};
var createDownloadFailedEventPayload = exports.createDownloadFailedEventPayload = function createDownloadFailedEventPayload(fileId, error, fileState, traceContext) {
  var _getFileAttributes2 = (0, _.getFileAttributes)(fileState),
    fileMediatype = _getFileAttributes2.fileMediatype,
    fileMimetype = _getFileAttributes2.fileMimetype,
    fileSize = _getFileAttributes2.fileSize;
  return {
    eventType: 'operational',
    actionSubject: 'mediaFile',
    action: 'downloadFailed',
    attributes: {
      status: 'fail',
      failReason: (0, _errors.getPrimaryErrorReason)(error),
      error: (0, _errors.getSecondaryErrorReason)(error),
      errorDetail: (0, _errors.getErrorDetail)(error),
      request: (0, _errors.getRequestMetadata)(error),
      fileMimetype: fileMimetype,
      fileMediatype: fileMediatype,
      fileAttributes: {
        fileId: fileId,
        fileMediatype: fileMediatype,
        fileMimetype: fileMimetype,
        fileSize: fileSize
      },
      traceContext: traceContext
    }
  };
};