"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MediaViewerError = exports.ArchiveViewerError = void 0;
exports.getErrorDetail = getErrorDetail;
exports.getPrimaryErrorReason = getPrimaryErrorReason;
exports.getRequestMetadata = getRequestMetadata;
exports.getSecondaryErrorReason = getSecondaryErrorReason;
exports.isArchiveViewerError = isArchiveViewerError;
exports.isMediaViewerError = isMediaViewerError;
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _wrapNativeSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/wrapNativeSuper"));
var _mediaClient = require("@atlaskit/media-client");
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var MediaViewerError = exports.MediaViewerError = /*#__PURE__*/function (_Error) {
  function MediaViewerError(primaryReason, secondaryError) {
    var _this;
    (0, _classCallCheck2.default)(this, MediaViewerError);
    _this = _callSuper(this, MediaViewerError, [primaryReason]);

    // https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#support-for-newtarget
    _this.primaryReason = primaryReason;
    _this.secondaryError = secondaryError;
    Object.setPrototypeOf(_this, (this instanceof MediaViewerError ? this.constructor : void 0).prototype);

    // https://v8.dev/docs/stack-trace-api
    if ('captureStackTrace' in Error) {
      Error.captureStackTrace(_this, this instanceof MediaViewerError ? this.constructor : void 0);
    }
    return _this;
  }
  (0, _inherits2.default)(MediaViewerError, _Error);
  return (0, _createClass2.default)(MediaViewerError);
}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));
function isMediaViewerError(err) {
  return err instanceof MediaViewerError;
}
var ArchiveViewerError = exports.ArchiveViewerError = /*#__PURE__*/function (_MediaViewerError) {
  function ArchiveViewerError(primaryReason, secondaryError, zipEntry) {
    var _this2;
    (0, _classCallCheck2.default)(this, ArchiveViewerError);
    _this2 = _callSuper(this, ArchiveViewerError, [primaryReason, secondaryError]);
    _this2.primaryReason = primaryReason;
    _this2.secondaryError = secondaryError;
    _this2.zipEntry = zipEntry;
    return _this2;
  }
  (0, _inherits2.default)(ArchiveViewerError, _MediaViewerError);
  return (0, _createClass2.default)(ArchiveViewerError);
}(MediaViewerError);
function isArchiveViewerError(err) {
  return err instanceof ArchiveViewerError;
}
// not supplied, so just a primary reason

function getPrimaryErrorReason(error) {
  return error.primaryReason;
}
function getSecondaryErrorReason(error) {
  var secondaryError = error.secondaryError;
  if ((0, _mediaClient.isCommonMediaClientError)(secondaryError)) {
    return secondaryError.reason;
  } else if (secondaryError) {
    return 'nativeError';
  } else {
    return 'unknown';
  }
}
function getErrorDetail(error) {
  var _ref = error || {},
    secondaryError = _ref.secondaryError;
  if ((0, _mediaClient.isCommonMediaClientError)(secondaryError)) {
    var _secondaryError$inner;
    return ((_secondaryError$inner = secondaryError.innerError) === null || _secondaryError$inner === void 0 ? void 0 : _secondaryError$inner.message) || 'unknown';
  } else if (secondaryError) {
    return secondaryError.message;
  }
  return 'unknown';
}
function getRequestMetadata(error) {
  var _ref2 = error || {},
    secondaryError = _ref2.secondaryError;
  if ((0, _mediaClient.isCommonMediaClientError)(secondaryError)) {
    return secondaryError.metadata;
  }
}