"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DocViewer = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _mediaClient = require("@atlaskit/media-client");
var _domain = require("../../domain");
var _errors = require("../../errors");
var _pdfRenderer = require("./pdfRenderer");
var _baseViewer = require("../base-viewer");
var _getObjectUrlFromFileState = require("../../utils/getObjectUrlFromFileState");
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var DocViewer = exports.DocViewer = /*#__PURE__*/function (_BaseViewer) {
  function DocViewer() {
    var _this;
    (0, _classCallCheck2.default)(this, DocViewer);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, DocViewer, [].concat(args));
    (0, _defineProperty2.default)(_this, "isObjectUrl", false);
    return _this;
  }
  (0, _inherits2.default)(DocViewer, _BaseViewer);
  return (0, _createClass2.default)(DocViewer, [{
    key: "initialState",
    get: function get() {
      return {
        content: _domain.Outcome.pending()
      };
    }
  }, {
    key: "needsReset",
    value: function needsReset(propsA, propsB) {
      if (this.state.content.status === 'SUCCESSFUL') {
        return false;
      }
      return propsA.item.status !== propsB.item.status;
    }
  }, {
    key: "init",
    value: function () {
      var _init = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
        var _this$props, item, mediaClient, collectionName, onError, src, _src, docError, _src2, _docError;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _this$props = this.props, item = _this$props.item, mediaClient = _this$props.mediaClient, collectionName = _this$props.collectionName, onError = _this$props.onError;
              if (!((0, _mediaClient.isPreviewableFileState)(item) && item.mimeType.toLowerCase() === 'application/pdf')) {
                _context.next = 9;
                break;
              }
              _context.next = 4;
              return (0, _getObjectUrlFromFileState.getObjectUrlFromFileState)(item);
            case 4:
              src = _context.sent;
              if (!src) {
                _context.next = 9;
                break;
              }
              this.isObjectUrl = true;
              this.setState({
                content: _domain.Outcome.successful(src)
              });
              return _context.abrupt("return");
            case 9:
              if (!(item.status === 'processed')) {
                _context.next = 25;
                break;
              }
              _context.prev = 10;
              _context.next = 13;
              return mediaClient.file.getArtifactURL(item.artifacts, 'document.pdf', collectionName);
            case 13:
              _src = _context.sent;
              this.onMediaDisplayed();
              this.setState({
                content: _domain.Outcome.successful(_src)
              });
              _context.next = 23;
              break;
            case 18:
              _context.prev = 18;
              _context.t0 = _context["catch"](10);
              docError = new _errors.MediaViewerError('docviewer-fetch-url', _context.t0 instanceof Error ? _context.t0 : undefined);
              this.setState({
                content: _domain.Outcome.failed(docError)
              });
              if (onError) {
                onError(docError);
              }
            case 23:
              _context.next = 39;
              break;
            case 25:
              if (!(item.status === 'failed-processing')) {
                _context.next = 39;
                break;
              }
              _context.prev = 26;
              _context.next = 29;
              return mediaClient.file.getFileBinaryURL(item.id, collectionName, 2940 // 2940 seconds ~= 50 mins
              );
            case 29:
              _src2 = _context.sent;
              this.onMediaDisplayed();
              this.setState({
                content: _domain.Outcome.successful(_src2)
              });
              _context.next = 39;
              break;
            case 34:
              _context.prev = 34;
              _context.t1 = _context["catch"](26);
              _docError = new _errors.MediaViewerError('docviewer-fetch-url', _context.t1 instanceof Error ? _context.t1 : undefined);
              this.setState({
                content: _domain.Outcome.failed(_docError)
              });
              if (onError) {
                onError(_docError);
              }
            case 39:
            case "end":
              return _context.stop();
          }
        }, _callee, this, [[10, 18], [26, 34]]);
      }));
      function init() {
        return _init.apply(this, arguments);
      }
      return init;
    }()
  }, {
    key: "release",
    value: function release() {
      if (!this.isObjectUrl) {
        return;
      }
      var content = this.state.content;
      if (content.data) {
        URL.revokeObjectURL(content.data);
      }
    }
  }, {
    key: "renderSuccessful",
    value: function renderSuccessful(content) {
      var _this$props2 = this.props,
        item = _this$props2.item,
        onClose = _this$props2.onClose,
        onSuccess = _this$props2.onSuccess,
        onError = _this$props2.onError;
      return /*#__PURE__*/_react.default.createElement(_pdfRenderer.PDFRenderer, {
        item: item,
        src: content,
        onSuccess: onSuccess,
        onError: onError,
        onClose: onClose
      });
    }
  }]);
}(_baseViewer.BaseViewer);