import _defineProperty from "@babel/runtime/helpers/defineProperty";
import React from 'react';
import ModalSpinner from '../modalSpinner';
import ErrorMessage from '../../errorMessage';
import { MediaViewerError } from '../../errors';
export default class ArchiveViewerLoader extends React.PureComponent {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "state", {
      ArchiveViewer: ArchiveViewerLoader.ArchiveViewer,
      isErrored: false
    });
  }
  async componentDidMount() {
    if (!this.state.ArchiveViewer) {
      try {
        const archive = await import( /* webpackChunkName: "@atlaskit-internal_media-archive-viewer" */'./archive');
        ArchiveViewerLoader.ArchiveViewer = archive.ArchiveViewer;
        this.setState({
          ArchiveViewer: ArchiveViewerLoader.ArchiveViewer
        });
      } catch (error) {
        this.setState({
          isErrored: true
        });
      }
    }
  }
  render() {
    const {
      ArchiveViewer,
      isErrored
    } = this.state;
    const {
      item
    } = this.props;
    if (isErrored) {
      return /*#__PURE__*/React.createElement(ErrorMessage, {
        fileId: item.id,
        fileState: item,
        error: new MediaViewerError('archiveviewer-bundle-loader')
      });
    }
    if (ArchiveViewer) {
      return /*#__PURE__*/React.createElement(ArchiveViewer, this.props);
    } else {
      return /*#__PURE__*/React.createElement(ModalSpinner, null);
    }
  }
}