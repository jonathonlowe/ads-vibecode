import { type FileState, type RequestMetadata } from '@atlaskit/media-client';
import { type FileAttributes, type WithFileAttributes, type FailureAttributes, type WithTraceContext } from '@atlaskit/media-common/analytics';
import { type CreateUIAnalyticsEvent } from '@atlaskit/analytics-next';
import { type PrimaryErrorReason } from '../errors';
import { type MediaViewerEventPayload } from './events';
declare const componentName = "mediaViewer";
declare const packageName: string;
declare const packageVersion: string;
export { packageName, packageVersion, componentName, componentName as component };
export declare function getFileAttributes(fileState?: FileState): FileAttributes;
/** This type takes FailureAttributes and redefines `failReason` to be the strong media-viewer type */
export type MediaViewerFailureAttributes = Omit<FailureAttributes, 'failReason'> & {
    failReason: PrimaryErrorReason;
    request?: RequestMetadata;
} & WithFileAttributes & WithTraceContext;
export declare function fireAnalytics(payload: MediaViewerEventPayload, createAnalyticsEvent?: CreateUIAnalyticsEvent): void;
