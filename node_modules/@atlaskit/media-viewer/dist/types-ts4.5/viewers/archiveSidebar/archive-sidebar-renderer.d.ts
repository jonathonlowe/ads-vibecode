import React, { Component } from 'react';
import { type MediaClient, type FileState } from '@atlaskit/media-client';
import { ArchiveViewerError } from '../../errors';
import { type ZipEntry } from 'unzipit';
export interface ArchiveSidebarRendererProps {
    selectedFileState: FileState;
    mediaClient: MediaClient;
    onSelectedArchiveEntryChange: (archiveEntry: ZipEntry) => void;
    onHeaderClicked: () => void;
    isArchiveEntryLoading: boolean;
    collectionName?: string;
    onError: (error: ArchiveViewerError, entry?: ZipEntry) => void;
    onSuccess: () => void;
}
interface ArchiveSidebarRendererState {
    entries: {
        [key: string]: ZipEntry;
    };
    status: 'loading' | 'loaded';
}
export default class ArchiveSidebarRenderer extends Component<ArchiveSidebarRendererProps, ArchiveSidebarRendererState> {
    state: ArchiveSidebarRendererState;
    componentDidMount(): Promise<void>;
    render(): React.JSX.Element;
}
export {};
