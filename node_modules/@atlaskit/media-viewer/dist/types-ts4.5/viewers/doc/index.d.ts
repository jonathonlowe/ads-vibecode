import React from 'react';
import { type MediaClient, type FileState } from '@atlaskit/media-client';
import { Outcome } from '../../domain';
import { MediaViewerError } from '../../errors';
import { BaseViewer } from '../base-viewer';
import { type MediaTraceContext } from '@atlaskit/media-common';
export type Props = {
    mediaClient: MediaClient;
    item: FileState;
    collectionName?: string;
    onClose?: () => void;
    onError: (error: MediaViewerError) => void;
    onSuccess: () => void;
    traceContext: MediaTraceContext;
};
export type State = {
    content: Outcome<string, MediaViewerError>;
};
export declare class DocViewer extends BaseViewer<string, Props, State> {
    private isObjectUrl;
    protected get initialState(): {
        content: Outcome<string, MediaViewerError>;
    };
    protected needsReset(propsA: Props, propsB: Props): boolean;
    protected init(): Promise<void>;
    protected release(): void;
    protected renderSuccessful(content: string): React.JSX.Element;
}
