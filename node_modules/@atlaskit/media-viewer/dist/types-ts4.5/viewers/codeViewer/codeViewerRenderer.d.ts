import React, { type ReactNode } from 'react';
import { type ErrorFileState, type FileState } from '@atlaskit/media-client';
import { Outcome } from '../../domain';
import type { SupportedLanguages } from '@atlaskit/code/types';
import { MediaViewerError } from '../../errors';
export declare const CodeViewWrapper: (props: {
    children: ReactNode;
    'data-testid': string | undefined;
}) => React.JSX.Element;
export declare const CodeViewerHeaderBar: () => React.JSX.Element;
export type Props = {
    item: Exclude<FileState, ErrorFileState>;
    src: string;
    language: SupportedLanguages;
    testId?: string;
    onClose?: () => void;
    onSuccess?: () => void;
    onError?: (error: MediaViewerError) => void;
};
export type State = {
    doc: Outcome<any, MediaViewerError>;
};
export declare const CodeViewRenderer: (props: Props) => React.JSX.Element;
