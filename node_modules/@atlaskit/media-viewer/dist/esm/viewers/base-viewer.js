import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
import React, { Fragment } from 'react';
import { FormattedMessage } from 'react-intl-next';
import { messages } from '@atlaskit/media-ui';
import deepEqual from 'deep-equal';
import { globalMediaEventEmitter } from '@atlaskit/media-client';
import ErrorMessage from '../errorMessage';
import { Spinner } from '../loading';
import { ErrorViewDownloadButton } from '../download';
export var BaseViewer = /*#__PURE__*/function (_React$Component) {
  function BaseViewer() {
    var _this;
    _classCallCheck(this, BaseViewer);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, BaseViewer, [].concat(args));
    _defineProperty(_this, "state", _this.getInitialState());
    _defineProperty(_this, "mounted", false);
    _defineProperty(_this, "onMediaDisplayed", function () {
      var item = _this.props.item;
      globalMediaEventEmitter.emit('media-viewed', {
        fileId: item.id,
        viewingLevel: 'full'
      });
    });
    return _this;
  }
  _inherits(BaseViewer, _React$Component);
  return _createClass(BaseViewer, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.mounted = true;
      this.init();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.mounted = false;
      this.release();
    }
  }, {
    key: "safeSetState",
    value: function safeSetState(newState) {
      if (this.mounted) {
        this.setState(_objectSpread(_objectSpread({}, this.state), newState));
      }
    }

    // NOTE: We've moved parts of the logic to reset a component into this method
    // to optimise the performance. Resetting the state before the `componentDidUpdate`
    // lifecycle event allows us avoid one additional render cycle.
    // However, this lifecycle method might eventually be deprecated, so be careful
    // when working with it.
  }, {
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(nextProps) {
      if (this.needsReset(nextProps, this.props)) {
        this.release();
        this.setState(this.initialState);
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (this.needsReset(prevProps, this.props)) {
        this.init();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      return this.state.content.match({
        pending: function pending() {
          return /*#__PURE__*/React.createElement(Spinner, null);
        },
        successful: function successful(content) {
          return /*#__PURE__*/React.createElement(Fragment, null, _this2.renderSuccessful(content));
        },
        failed: function failed(error) {
          var item = _this2.props.item;
          return /*#__PURE__*/React.createElement(ErrorMessage, {
            fileId: item.id,
            fileState: item,
            error: error,
            supressAnalytics: true // item-viewer.tsx will send
          }, /*#__PURE__*/React.createElement("p", null, /*#__PURE__*/React.createElement(FormattedMessage, messages.try_downloading_file)), _this2.renderDownloadButton(error));
        }
      });
    }

    // Accessing abstract getters in a constructor is not allowed
  }, {
    key: "getInitialState",
    value: function getInitialState() {
      return this.initialState;
    }
  }, {
    key: "renderDownloadButton",
    value: function renderDownloadButton(error) {
      var _this$props = this.props,
        item = _this$props.item,
        mediaClient = _this$props.mediaClient,
        collectionName = _this$props.collectionName,
        traceContext = _this$props.traceContext;
      return /*#__PURE__*/React.createElement(ErrorViewDownloadButton, {
        fileState: item,
        mediaClient: mediaClient,
        error: error,
        collectionName: collectionName,
        traceContext: traceContext
      });
    }
  }, {
    key: "needsReset",
    value: function needsReset(propsA, propsB) {
      return !deepEqual(propsA.item, propsB.item) || propsA.collectionName !== propsB.collectionName;
    }
  }]);
}(React.Component);