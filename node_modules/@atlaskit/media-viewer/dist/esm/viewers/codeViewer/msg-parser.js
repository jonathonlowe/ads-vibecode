import MsgReader from '@kenjiuno/msgreader';
export function msgToText(buffer) {
  try {
    var msgReader = new MsgReader(buffer);
    var msg = msgReader.getFileData();
    if (msg.error) {
      return {
        error: msg.error
      };
    }
    var text = '';
    if (msg.headers) {
      text += "\nDATE:\t\t".concat(getMsgDate(msg.headers));
    }
    if (msg.senderEmail || msg.senderName) {
      text += "\nFROM:\t\t".concat(msg.senderName, " <").concat(msg.senderEmail, ">");
    }
    if (msg.recipients) {
      text += "\nTO:\t\t".concat(msg.recipients
      /* lib types are broken, need to override here */.map(function (recipient) {
        return "".concat(recipient.name, " <").concat(recipient.email, ">");
      }).join(', '));
    }
    if (msg.subject) {
      text += "\nSUBJECT:\t".concat(msg.subject);
    }
    if (msg.attachments) {
      var attachments = msg.attachments;
      text += "\nATTACHMENTS:\t".concat(attachments.map(function (attachment) {
        return "<".concat(attachment.fileName, " (").concat(attachment.contentLength, " bytes)>");
      }).join(', '));
    }
    text = formatMessage(text);
    if (msg.body) {
      text += "\n".concat(msg.body);
    }
    return text.trim();
  } catch (e) {
    return {
      error: e instanceof Error ? e.stack : ''
    };
  }
}
export function formatMessage(text) {
  var lines = text.trim().split('\n');
  var maxLineLength = 0;
  lines.forEach(function (line) {
    return maxLineLength = Math.max(line.length, maxLineLength);
  });
  var border = '*'.repeat(maxLineLength + 10);
  text = "".concat(border, "\n");
  text += lines.map(function (line) {
    return " ".concat(line);
  }).join('\n');
  text += "\n".concat(border, "\n");
  return text;
}
export function parseHeaders(headers) {
  var parsedHeaders = {};
  if (!headers) {
    return parsedHeaders;
  }
  var headerRegEx = /(.*)\: (.*)/g;
  var m;
  while (m = headerRegEx.exec(headers)) {
    parsedHeaders[m[1]] = m[2];
  }
  return parsedHeaders;
}
export function getMsgDate(rawHeaders) {
  var headers = parseHeaders(rawHeaders);
  if (!headers['Date']) {
    return '-';
  }
  return new Date(headers['Date']);
}