import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
import React from 'react';
import { FormattedMessage, injectIntl } from 'react-intl-next';
import { messages as i18nMessages } from '@atlaskit/media-ui';
import { withAnalyticsEvents } from '@atlaskit/analytics-next';
import { ErrorMessageWrapper, ErrorImage } from './styleWrappers';
import { errorLoadingFile } from './error-images';
import { fireAnalytics } from './analytics';
import { getPrimaryErrorReason, getSecondaryErrorReason } from './errors';
import { createLoadFailedEvent } from './analytics/events/operational/loadFailed';
import { createPreviewUnsupportedEvent } from './analytics/events/operational/previewUnsupported';
import { failMediaFileUfoExperience } from './analytics/ufoExperiences';
var errorLoadingFileImage = function errorLoadingFileImage(formatMessage) {
  return /*#__PURE__*/React.createElement(ErrorImage, {
    src: errorLoadingFile,
    alt: formatMessage(i18nMessages.error_loading_file)
  });
};
export var errorReasonToMessages = [['serverRateLimited', i18nMessages.might_be_a_hiccup], ['invalidFileId', i18nMessages.item_not_found_in_list], ['itemviewer-file-failed-processing-status', i18nMessages.image_format_invalid_error], ['archiveviewer-read-binary', i18nMessages.zip_entry_load_fail], ['archiveviewer-create-url', i18nMessages.zip_entry_load_fail], ['archiveviewer-missing-name-src', i18nMessages.zip_entry_load_fail], ['archiveviewer-encrypted-entry', i18nMessages.couldnt_generate_encrypted_entry_preview], ['archiveviewer-codeviewer-file-size-exceeds', i18nMessages.couldnt_load_file], ['codeviewer-file-size-exceeds', i18nMessages.couldnt_load_file]];
export var getErrorMessageFromError = function getErrorMessageFromError(error) {
  var matchingRow = errorReasonToMessages.find(function (row) {
    return row[0] === getPrimaryErrorReason(error) || row[0] === getSecondaryErrorReason(error);
  });
  return matchingRow ? matchingRow[1] : undefined;
};
export var ErrorMessage = /*#__PURE__*/function (_React$Component) {
  function ErrorMessage() {
    _classCallCheck(this, ErrorMessage);
    return _callSuper(this, ErrorMessage, arguments);
  }
  _inherits(ErrorMessage, _React$Component);
  return _createClass(ErrorMessage, [{
    key: "getErrorInfo",
    value: function getErrorInfo() {
      var _this$props = this.props,
        formatMessage = _this$props.intl.formatMessage,
        error = _this$props.error;
      var errorInfo = {
        icon: errorLoadingFileImage(formatMessage),
        messages: [i18nMessages.something_went_wrong, i18nMessages.couldnt_generate_preview]
      };
      var message = getErrorMessageFromError(error);
      if (message) {
        errorInfo.messages.push(message);
      }
      return errorInfo;
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var props = this.props;
      var supressAnalytics = props.supressAnalytics,
        error = props.error,
        fileState = props.fileState,
        fileId = props.fileId,
        traceContext = props.traceContext,
        createAnalyticsEvent = props.createAnalyticsEvent,
        fileStateFlags = props.fileStateFlags;
      if (supressAnalytics !== true) {
        var payload = ErrorMessage.getEventPayload(error, fileId, fileState, traceContext);
        fireAnalytics(payload, createAnalyticsEvent);
        var rawPayload = _objectSpread(_objectSpread({}, payload === null || payload === void 0 ? void 0 : payload.attributes), {}, {
          fileStateFlags: fileStateFlags
        });
        if (Object.keys(rawPayload).includes('status')) {
          delete rawPayload['status'];
        }
        var failMediaFileUfoExperiencePayload = rawPayload;
        failMediaFileUfoExperience(failMediaFileUfoExperiencePayload);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var errorInfo = this.getErrorInfo();
      return /*#__PURE__*/React.createElement(ErrorMessageWrapper, {
        "data-testid": "media-viewer-error"
      }, /*#__PURE__*/React.createElement("div", null, errorInfo.icon, errorInfo.messages.map(function (formatMessage, i) {
        return (
          /*#__PURE__*/
          // eslint-disable-next-line @atlaskit/design-system/use-primitives-text
          React.createElement("p", {
            key: "p".concat(i)
          }, /*#__PURE__*/React.createElement(FormattedMessage, formatMessage))
        );
      })), this.props.children);
    }
  }], [{
    key: "getEventPayload",
    value: function getEventPayload(error, fileId, fileState, traceContext) {
      if (fileState && getPrimaryErrorReason(error) === 'unsupported') {
        // this is not an SLI, its just a useful metric for unsupported
        return createPreviewUnsupportedEvent(fileState);
      } else {
        return createLoadFailedEvent(fileId, error, fileState, traceContext);
      }
    }
  }]);
}(React.Component);

// @ts-ignore: [PIT-1685] Fails in post-office due to backwards incompatibility issue with React 18
var ErroMsg = withAnalyticsEvents()(injectIntl(ErrorMessage));
export default ErroMsg;