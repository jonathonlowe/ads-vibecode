import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _regeneratorRuntime from "@babel/runtime/regenerator";
import { isErrorFileState } from '@atlaskit/media-client';
export var getObjectUrlFromFileState = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(state) {
    var preview;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          if (isErrorFileState(state)) {
            _context.next = 14;
            break;
          }
          preview = state.preview;
          if (!preview) {
            _context.next = 14;
            break;
          }
          _context.prev = 3;
          _context.t0 = URL;
          _context.next = 7;
          return preview;
        case 7:
          _context.t1 = _context.sent.value;
          return _context.abrupt("return", _context.t0.createObjectURL.call(_context.t0, _context.t1));
        case 11:
          _context.prev = 11;
          _context.t2 = _context["catch"](3);
          return _context.abrupt("return", undefined);
        case 14:
          return _context.abrupt("return", undefined);
        case 15:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[3, 11]]);
  }));
  return function getObjectUrlFromFileState(_x) {
    return _ref.apply(this, arguments);
  };
}();