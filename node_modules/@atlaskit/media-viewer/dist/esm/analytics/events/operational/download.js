import { getFileAttributes } from '../..';
import { getPrimaryErrorReason, getSecondaryErrorReason, getErrorDetail, getRequestMetadata } from '../../../errors';
export var createDownloadSucceededEventPayload = function createDownloadSucceededEventPayload(fileState, traceContext) {
  var _getFileAttributes = getFileAttributes(fileState),
    fileId = _getFileAttributes.fileId,
    fileMediatype = _getFileAttributes.fileMediatype,
    fileMimetype = _getFileAttributes.fileMimetype,
    fileSize = _getFileAttributes.fileSize;
  return {
    eventType: 'operational',
    actionSubject: 'mediaFile',
    action: 'downloadSucceeded',
    attributes: {
      status: 'success',
      fileMediatype: fileMediatype,
      fileMimetype: fileMimetype,
      fileAttributes: {
        fileId: fileId,
        fileMediatype: fileMediatype,
        fileMimetype: fileMimetype,
        fileSize: fileSize
      },
      traceContext: traceContext
    }
  };
};
export var createDownloadFailedEventPayload = function createDownloadFailedEventPayload(fileId, error, fileState, traceContext) {
  var _getFileAttributes2 = getFileAttributes(fileState),
    fileMediatype = _getFileAttributes2.fileMediatype,
    fileMimetype = _getFileAttributes2.fileMimetype,
    fileSize = _getFileAttributes2.fileSize;
  return {
    eventType: 'operational',
    actionSubject: 'mediaFile',
    action: 'downloadFailed',
    attributes: {
      status: 'fail',
      failReason: getPrimaryErrorReason(error),
      error: getSecondaryErrorReason(error),
      errorDetail: getErrorDetail(error),
      request: getRequestMetadata(error),
      fileMimetype: fileMimetype,
      fileMediatype: fileMediatype,
      fileAttributes: {
        fileId: fileId,
        fileMediatype: fileMediatype,
        fileMimetype: fileMimetype,
        fileSize: fileSize
      },
      traceContext: traceContext
    }
  };
};