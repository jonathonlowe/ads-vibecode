/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./index.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { useIntl } from 'react-intl-next';
import StarIcon from '@atlaskit/icon/utility/migration/star-unstarred--star';
import { Box } from '@atlaskit/primitives/compiled';
import Skeleton from '@atlaskit/skeleton';
import { messages } from './messages';
import { formatNumber } from './utils';
const styles = {
  count: "_11c81o8v _zulp1b66 _1e0c1txw _4cvr1h6o _bozgv77o"
};
export const AgentStarCount = ({
  starCount,
  isLoading
}) => {
  const {
    formatMessage
  } = useIntl();
  if ((starCount === null || starCount === undefined) && !isLoading) {
    return null;
  }
  return /*#__PURE__*/React.createElement(Box, {
    xcss: styles.count
  }, /*#__PURE__*/React.createElement(StarIcon, {
    LEGACY_margin: `0 ${"var(--ds-space-negative-025, -2px)"}`,
    color: "currentColor",
    label: "",
    LEGACY_size: "small"
  }), isLoading ? /*#__PURE__*/React.createElement(Skeleton, {
    testId: "agent-profile-info-star-count-skeleton",
    isShimmering: true,
    height: 16,
    width: 75,
    borderRadius: 3
  }) : formatMessage(messages.starredCount, {
    starCount: formatNumber(starCount !== null && starCount !== void 0 ? starCount : 0)
  }));
};