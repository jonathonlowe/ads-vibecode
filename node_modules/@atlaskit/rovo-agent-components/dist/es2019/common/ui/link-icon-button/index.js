/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import "./index.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { useIntl } from 'react-intl-next';
import { IconButton } from '@atlaskit/button/new';
import { cx } from '@atlaskit/css';
import LinkIcon from '@atlaskit/icon/core/link';
import { Box } from '@atlaskit/primitives/compiled';
import messages from './messages';
const styles = {
  hidden: "_tzy4idpf"
};
export const LinkIconButton = ({
  handleCopy,
  visible = true
}) => {
  const {
    formatMessage
  } = useIntl();
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {
    xcss: cx(!visible && styles.hidden)
  }, /*#__PURE__*/React.createElement(IconButton, {
    type: "button",
    onClick: handleCopy,
    icon: iconProps => /*#__PURE__*/React.createElement(LinkIcon, _extends({}, iconProps, {
      color: "var(--ds-icon, #44546F)"
    })),
    appearance: "subtle",
    spacing: "compact",
    label: formatMessage(messages.copyAgentLinkLabel)
  })));
};