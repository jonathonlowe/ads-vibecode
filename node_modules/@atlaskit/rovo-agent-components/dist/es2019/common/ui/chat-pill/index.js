/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import "./index.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { forwardRef } from 'react';
import { useIntl } from 'react-intl-next';
import { cx } from '@atlaskit/css';
import AgentIcon from '@atlaskit/icon/core/ai-agent';
import { Box, Inline, Pressable } from '@atlaskit/primitives/compiled';
import { ChatPillIcon } from '../chat-icon';
import messages from './messages';
const stylesCompiled = {
  pillLineHeight: "_vwz47vkz"
};
const styles = {
  conversationStarterPill: "_2rkopd34 _11c82smr _189ee4h9 _1dqonqa1 _1h6dmuej _syaz1fxt _ca0qu2gc _u5f3u2gc _n3tdu2gc _19bvu2gc _1o0zgqwt _k48p1wq8 _1bto1l2s _o5721q9c _1o9zkb7n _bfhk1j28 _1bsb1osq _irr315ej _1di6ip91",
  button: "_2rkoiti9 _11c82smr _189ee4h9 _1dqonqa1 _1h6dmuej _syaz1gjq _ca0q12x7 _u5f3utpp _n3td12x7 _19bvutpp _k48p1wq8 _1bto1l2s _o5721q9c _1o9zkb7n _bfhksm61 _irr3166n _1di61dty",
  buttonInline: "_18zrv77o",
  queryText: "_1nmz1hna _y3gn1e5h",
  whiteSpacePreWrap: "_o5721jtm"
};
export const ChatPill = /*#__PURE__*/forwardRef(({
  children,
  whiteSpacePreWrap = true,
  renderIcon = true,
  ...props
}, ref) => /*#__PURE__*/React.createElement(Pressable, _extends({
  ref: ref
}, props, {
  xcss: styles.button
}), /*#__PURE__*/React.createElement("div", {
  className: ax([stylesCompiled.pillLineHeight])
}, /*#__PURE__*/React.createElement(Inline, {
  space: "space.075",
  alignBlock: "baseline"
}, renderIcon ? /*#__PURE__*/React.createElement(ChatPillIcon, null) : null, /*#__PURE__*/React.createElement(Box, {
  xcss: cx(styles.queryText, whiteSpacePreWrap && styles.whiteSpacePreWrap)
}, children)))));
export const BrowseAgentsPill = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    formatMessage
  } = useIntl();
  return /*#__PURE__*/React.createElement(Pressable, _extends({
    ref: ref
  }, props, {
    xcss: styles.button
  }), /*#__PURE__*/React.createElement("div", {
    className: ax([stylesCompiled.pillLineHeight])
  }, /*#__PURE__*/React.createElement(Inline, {
    space: "space.050",
    xcss: styles.buttonInline
  }, /*#__PURE__*/React.createElement(AgentIcon, {
    color: "currentColor",
    label: ""
  }), /*#__PURE__*/React.createElement(Box, {
    xcss: styles.queryText
  }, formatMessage(messages.browseAgentsPillLabel)))));
});
export const ConversationStarterPill = /*#__PURE__*/forwardRef(({
  children,
  whiteSpacePreWrap = true,
  ...props
}, ref) => /*#__PURE__*/React.createElement(Pressable, _extends({
  ref: ref
}, props, {
  xcss: styles.conversationStarterPill
}), /*#__PURE__*/React.createElement("div", {
  className: ax([stylesCompiled.pillLineHeight])
}, /*#__PURE__*/React.createElement(Inline, {
  space: "space.050",
  xcss: styles.buttonInline
}, /*#__PURE__*/React.createElement(ChatPillIcon, null), /*#__PURE__*/React.createElement(Box, {
  xcss: cx(styles.queryText, whiteSpacePreWrap && styles.whiteSpacePreWrap)
}, children)))));