/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./index.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { useState } from 'react';
import { useIntl } from 'react-intl-next';
import { cx } from '@atlaskit/css';
import StarIconMigration from '@atlaskit/icon/core/migration/star-starred--star-filled';
import StarUnstarredIconMigration from '@atlaskit/icon/core/migration/star-unstarred--star';
import { Pressable } from '@atlaskit/primitives/compiled';
import messages from './messages';
const styles = {
  pressableStarIcon: "_bfhk1j28 _ca0qze3t _u5f3ze3t _n3tdze3t _19bvze3t _4t3i1tcg _1bsb1tcg",
  hidden: "_tzy4idpf"
};
export const StarIconButton = ({
  isStarred,
  handleToggle,
  visible = true
}) => {
  const {
    formatMessage
  } = useIntl();
  const [isHovered, setIsHovered] = useState(false);
  return /*#__PURE__*/React.createElement(Pressable, {
    xcss: cx(styles.pressableStarIcon, !visible && styles.hidden),
    onClick: handleToggle,
    onMouseEnter: () => setIsHovered(true),
    onMouseLeave: () => setIsHovered(false)
  }, isStarred || isHovered ? /*#__PURE__*/React.createElement(StarIconMigration, {
    LEGACY_size: "medium",
    spacing: "spacious",
    label: formatMessage(messages.removeFromFavouritesLabel),
    color: "var(--ds-icon-accent-orange, #E56910)"
  }) : /*#__PURE__*/React.createElement(StarUnstarredIconMigration, {
    LEGACY_size: "medium",
    spacing: "spacious",
    label: formatMessage(messages.clickToFavouriteLabel),
    color: "var(--ds-icon, #44546F)"
  }));
};