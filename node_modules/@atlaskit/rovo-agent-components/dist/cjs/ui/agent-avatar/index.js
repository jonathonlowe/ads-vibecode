/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AgentAvatar = void 0;
require("./index.compiled.css");
var React = _interopRequireWildcard(require("react"));
var _runtime = require("@compiled/react/runtime");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _reactIntlNext = require("react-intl-next");
var _avatar = require("@atlaskit/avatar");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _compiled = require("@atlaskit/primitives/compiled");
var _generatedAvatars = require("./generated-avatars");
var _messages = require("./messages");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var styles = {
  agentAvatar: "_1e0c1txw _1bah1h6o _4cvr1h6o _mkrz1k6g",
  agentAvatarPreventSquish: "_1e0c1txw _1bah1h6o _4cvr1h6o _mkrz1k6g _1ul9zwfg _1tkezwfg",
  image: "_5ral1dfr _4t3i1osq _1bsb1osq",
  avatarContentContainer: "_1bsb1osq _4t3i1osq _1e0c1txw _1bah1h6o _4cvr1h6o"
};
var stylesCompiled = {
  innerShape: "_4t3i1lk2 _1bsb1lk2 _mkrz1k6g"
};
/**
 * Agent avatar components that handles rendering correct avatar for different variations of agent types
 *
 * @param agentNamedId - This is agent.external_config_reference, this value exists for OOTB (out of the box) agents. This id is the first priority to generate avatar because each OOTB agents have its own fixed avatar
 * @param agentIdentityAccountId - This is Atlassian identity account ID for the agent(aaid). This id is prioritised to generate random avatar for non OOTB agents
 * @param agentId - This is agent.id
 */
var AgentAvatar = exports.AgentAvatar = function AgentAvatar(_ref) {
  var imageUrl = _ref.imageUrl,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 'medium' : _ref$size,
    label = _ref.label,
    name = _ref.name,
    agentId = _ref.agentId,
    agentIdentityAccountId = _ref.agentIdentityAccountId,
    agentNamedId = _ref.agentNamedId,
    _ref$showBorder = _ref.showBorder,
    showBorder = _ref$showBorder === void 0 ? true : _ref$showBorder,
    isForgeAgent = _ref.isForgeAgent,
    forgeAgentIconUrl = _ref.forgeAgentIconUrl;
  var _useIntl = (0, _reactIntlNext.useIntl)(),
    formatMessage = _useIntl.formatMessage;
  var imgUrl = isForgeAgent && forgeAgentIconUrl ? forgeAgentIconUrl : imageUrl;
  return /*#__PURE__*/React.createElement(_compiled.Box, {
    "aria-label": label,
    xcss: (0, _platformFeatureFlags.fg)('rovo_chat_bugfix_agent_avatar_squish') ? styles.agentAvatarPreventSquish : styles.agentAvatar,
    style: _objectSpread({
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop, @atlaskit/ui-styling-standard/no-imported-style-values
      height: _avatar.AVATAR_SIZES[size],
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop, @atlaskit/ui-styling-standard/no-imported-style-values
      width: _avatar.AVATAR_SIZES[size]
    }, showBorder ? {
      backgroundColor: '#fff'
    } : {})
  }, /*#__PURE__*/React.createElement("div", {
    className: (0, _runtime.ax)([stylesCompiled.innerShape])
  }, /*#__PURE__*/React.createElement(_compiled.Box, {
    xcss: styles.avatarContentContainer
  }, imgUrl ? /*#__PURE__*/React.createElement(_compiled.Box, {
    as: "img",
    xcss: styles.image,
    src: imgUrl,
    alt: name || label || formatMessage(_messages.messages.agentAvatarLabel)
  }) : /*#__PURE__*/React.createElement(_generatedAvatars.GeneratedAvatar, {
    agentId: agentId,
    agentNamedId: agentNamedId,
    agentIdentityAccountId: agentIdentityAccountId,
    size: size
  }))));
};