/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AgentProfileInfo = exports.AgentProfileCreator = void 0;
require("./index.compiled.css");
var _runtime = require("@compiled/react/runtime");
var _react = _interopRequireDefault(require("react"));
var _reactIntlNext = require("react-intl-next");
var _heading = _interopRequireDefault(require("@atlaskit/heading"));
var _logo = require("@atlaskit/logo");
var _compiled = require("@atlaskit/primitives/compiled");
var _skeleton = _interopRequireDefault(require("@atlaskit/skeleton"));
var _tooltip = _interopRequireDefault(require("@atlaskit/tooltip"));
var _hiddenIcon = require("../../common/ui/hidden-icon");
var _starIconButton = require("../../common/ui/star-icon-button");
var _messages = require("./messages");
var styles = {
  clickableItem: "_zulp1b66 _1e0c1txw _4cvr1h6o",
  name: "_1bah1yb4 _4cvr1y6m",
  description: "_19pkze3t _otyru2gc",
  wrapper: "_otyru2gc",
  tooltipWrapper: "_195gu2gc _1e0c116y _kqswh2mm _94n5v77o",
  headingWrapper: "_kqswh2mm"
};
var AgentProfileCreator = exports.AgentProfileCreator = function AgentProfileCreator(_ref) {
  var creator = _ref.creator,
    onCreatorLinkClick = _ref.onCreatorLinkClick,
    isLoading = _ref.isLoading;
  var _useIntl = (0, _reactIntlNext.useIntl)(),
    formatMessage = _useIntl.formatMessage;
  var getCreatorRender = function getCreatorRender() {
    if (isLoading) {
      return formatMessage(_messages.messages.agentCreatedBy, {
        creatorNameWithLink: /*#__PURE__*/_react.default.createElement(_skeleton.default, {
          testId: "agent-profile-creator-skeleton",
          isShimmering: true,
          height: 18,
          width: 100,
          borderRadius: 3
        })
      });
    }
    if (!creator) {
      return null;
    }
    if (creator.type === 'SYSTEM' || creator.type === 'OOTB') {
      return formatMessage(_messages.messages.agentCreatedBy, {
        creatorNameWithLink: /*#__PURE__*/_react.default.createElement(_compiled.Inline, {
          alignBlock: "center",
          testId: "atlassian-icon"
        }, /*#__PURE__*/_react.default.createElement(_logo.AtlassianIcon, {
          size: "small",
          appearance: "brand"
        }), /*#__PURE__*/_react.default.createElement(_compiled.Box, null, "Atlassian"))
      });
    }
    if (creator.type === 'CUSTOMER') {
      return formatMessage(_messages.messages.agentCreatedBy, {
        creatorNameWithLink: /*#__PURE__*/_react.default.createElement("a", {
          "aria-label": creator.name || formatMessage(_messages.messages.creatorLabel),
          href: creator.profileLink,
          onClick: function onClick() {
            return onCreatorLinkClick();
          },
          target: "_blank"
        }, creator.name, ' ', creator.status === 'inactive' && formatMessage(_messages.messages.agentDeactivated))
      });
    }
    if (creator.type === 'THIRD_PARTY') {
      return formatMessage(_messages.messages.agentCreatedBy, {
        creatorNameWithLink: creator.name
      });
    }
    return null;
  };
  var creatorRender = getCreatorRender();
  return creatorRender ? /*#__PURE__*/_react.default.createElement(_compiled.Box, {
    xcss: styles.clickableItem
  }, /*#__PURE__*/_react.default.createElement(_logo.RovoIcon, {
    appearance: "brand",
    size: "small"
  }), creatorRender) : null;
};
var AgentProfileInfo = exports.AgentProfileInfo = function AgentProfileInfo(_ref2) {
  var agentName = _ref2.agentName,
    agentDescription = _ref2.agentDescription,
    creatorRender = _ref2.creatorRender,
    starCountRender = _ref2.starCountRender,
    isStarred = _ref2.isStarred,
    isHidden = _ref2.isHidden,
    onStarToggle = _ref2.onStarToggle;
  var _useIntl2 = (0, _reactIntlNext.useIntl)(),
    formatMessage = _useIntl2.formatMessage;
  return /*#__PURE__*/_react.default.createElement(_compiled.Stack, {
    space: "space.100",
    xcss: styles.wrapper
  }, /*#__PURE__*/_react.default.createElement(_compiled.Inline, {
    xcss: styles.name,
    space: "space.100",
    alignBlock: "center"
  }, /*#__PURE__*/_react.default.createElement(_compiled.Box, {
    xcss: styles.headingWrapper
  }, /*#__PURE__*/_react.default.createElement(_heading.default, {
    as: "span",
    size: "xlarge"
  }, agentName), isHidden && /*#__PURE__*/_react.default.createElement(_compiled.Box, {
    xcss: styles.tooltipWrapper
  }, /*#__PURE__*/_react.default.createElement(_tooltip.default, {
    content: formatMessage(_messages.messages.hiddenTooltip),
    position: "top"
  }, /*#__PURE__*/_react.default.createElement(_hiddenIcon.HiddenIcon, {
    label: formatMessage(_messages.messages.hiddenIcon)
  })))), /*#__PURE__*/_react.default.createElement(_starIconButton.StarIconButton, {
    isStarred: isStarred,
    handleToggle: onStarToggle
  })), creatorRender, !!agentDescription && /*#__PURE__*/_react.default.createElement(_compiled.Box, {
    xcss: styles.description,
    as: "p"
  }, agentDescription), starCountRender);
};