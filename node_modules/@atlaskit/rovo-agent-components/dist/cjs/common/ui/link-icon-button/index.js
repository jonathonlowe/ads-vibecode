/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LinkIconButton = void 0;
require("./index.compiled.css");
var React = _interopRequireWildcard(require("react"));
var _runtime = require("@compiled/react/runtime");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _reactIntlNext = require("react-intl-next");
var _new = require("@atlaskit/button/new");
var _css = require("@atlaskit/css");
var _link = _interopRequireDefault(require("@atlaskit/icon/core/link"));
var _compiled = require("@atlaskit/primitives/compiled");
var _messages = _interopRequireDefault(require("./messages"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var styles = {
  hidden: "_tzy4idpf"
};
var LinkIconButton = exports.LinkIconButton = function LinkIconButton(_ref) {
  var handleCopy = _ref.handleCopy,
    _ref$visible = _ref.visible,
    visible = _ref$visible === void 0 ? true : _ref$visible;
  var _useIntl = (0, _reactIntlNext.useIntl)(),
    formatMessage = _useIntl.formatMessage;
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_compiled.Box, {
    xcss: (0, _css.cx)(!visible && styles.hidden)
  }, /*#__PURE__*/React.createElement(_new.IconButton, {
    type: "button",
    onClick: handleCopy,
    icon: function icon(iconProps) {
      return /*#__PURE__*/React.createElement(_link.default, (0, _extends2.default)({}, iconProps, {
        color: "var(--ds-icon, #44546F)"
      }));
    },
    appearance: "subtle",
    spacing: "compact",
    label: formatMessage(_messages.default.copyAgentLinkLabel)
  })));
};