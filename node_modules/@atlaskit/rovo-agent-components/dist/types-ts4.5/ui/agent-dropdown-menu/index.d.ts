/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';
import { type UIAnalyticsEvent } from '@atlaskit/analytics-next';
import { type ButtonProps, IconButton } from '@atlaskit/button/new';
import DropdownMenu, { DropdownItem } from '@atlaskit/dropdown-menu';
type ChatToAgentButtonProps = {
    onClick: ButtonProps['onClick'];
};
export declare const ChatToAgentButton: ({ onClick }: ChatToAgentButtonProps) => JSX.Element;
type ViewAgentOptionProps = {
    showViewAgentOption: true;
    onViewAgentClick: React.ComponentProps<typeof DropdownItem>['onClick'];
} | {
    showViewAgentOption?: false;
    onViewAgentClick?: undefined;
};
type ViewAgentFullProfileProps = {
    onViewAgentFullProfileClick: React.ComponentProps<typeof DropdownItem>['onClick'];
    doesAgentHaveIdentityAccountId: boolean;
} | {
    onViewAgentFullProfileClick?: undefined;
    doesAgentHaveIdentityAccountId?: undefined;
};
type AgentDropdownMenuProps = {
    isAgentCreatedByUser: boolean;
    isAutodevTemplateAgent?: boolean;
    agentId: string;
    onEditAgent?: React.ComponentProps<typeof DropdownItem>['onClick'];
    onCopyAgent?: React.ComponentProps<typeof DropdownItem>['onClick'];
    onDuplicateAgent?: React.ComponentProps<typeof DropdownItem>['onClick'];
    onDeleteAgent?: React.ComponentProps<typeof DropdownItem>['onClick'];
    isForgeAgent: boolean;
    onDropdownTriggerClick?: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, analyticsEvent: UIAnalyticsEvent) => void;
    spacing?: React.ComponentProps<typeof IconButton>['spacing'];
    appearance?: React.ComponentProps<typeof IconButton>['appearance'];
    dropdownMenuTestId?: React.ComponentProps<typeof DropdownMenu>['testId'];
    loadAgentPermissions?: () => Promise<{
        isEditEnabled: boolean;
        isDeleteEnabled: boolean;
    }>;
    loadPermissionsOnMount?: boolean;
    shouldTriggerStopPropagation?: boolean;
} & ViewAgentOptionProps & ViewAgentFullProfileProps;
export declare const AgentDropdownMenu: ({ isAgentCreatedByUser, isAutodevTemplateAgent, onEditAgent, onCopyAgent, onDuplicateAgent, onDeleteAgent, onViewAgentFullProfileClick, isForgeAgent, showViewAgentOption, onViewAgentClick, onDropdownTriggerClick, spacing, appearance, dropdownMenuTestId, doesAgentHaveIdentityAccountId, loadAgentPermissions, loadPermissionsOnMount, shouldTriggerStopPropagation, }: AgentDropdownMenuProps) => JSX.Element;
export {};
