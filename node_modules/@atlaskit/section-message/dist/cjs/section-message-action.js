/* section-message-action.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
require("./section-message-action.compiled.css");
var _runtime = require("@compiled/react/runtime");
var _react = _interopRequireWildcard(require("react"));
var _standardButton = _interopRequireDefault(require("@atlaskit/button/standard-button"));
var _css = require("@atlaskit/css");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _compiled = require("@atlaskit/primitives/compiled");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var styles = {
  common: "_11c82smr _syaz14q2 _k48p1wq8 _30l314q2 _9h8h16c2",
  anchor: "_1053w7te _9oik1r31 _1bnx8stv _jf4cnqa1 _n0fxw7te _1vhvg3x0",
  pressable: "_bfhksm61 _ca0qze3t _u5f3ze3t _n3tdze3t _19bvze3t _9oik1r31 _1bnx8stv _jf4cnqa1"
};

/**
 * __Section message action__
 *
 * A section message action is designed to work with the `action` prop from
 * `SectionMessage`. It renders either a button or a link depending on whether
 * an `onClick` or `href` prop is supplied, with a dot separator in between actions.
 *
 * - [Examples](https://atlassian.design/components/section-message/examples#actions)
 */
var SectionMessageAction = /*#__PURE__*/(0, _react.memo)(function SectionMessageAction(_ref) {
  var children = _ref.children,
    onClick = _ref.onClick,
    href = _ref.href,
    testId = _ref.testId,
    linkComponent = _ref.linkComponent;
  if (!linkComponent && (0, _platformFeatureFlags.fg)('platform_section_message_action_migration')) {
    if (href) {
      return /*#__PURE__*/_react.default.createElement(_compiled.Anchor, {
        testId: testId,
        onClick: onClick,
        href: href,
        xcss: (0, _css.cx)(styles.common, styles.anchor)
      }, children);
    }
    if (onClick) {
      return /*#__PURE__*/_react.default.createElement(_compiled.Pressable, {
        testId: testId,
        onClick: onClick,
        xcss: (0, _css.cx)(styles.common, styles.pressable)
      }, children);
    }
    return /*#__PURE__*/_react.default.createElement(_compiled.Box, {
      as: "span",
      testId: testId
    }, children);
  }
  return onClick || href ? /*#__PURE__*/_react.default.createElement(_standardButton.default, {
    testId: testId,
    appearance: "link",
    spacing: "none",
    onClick: onClick,
    href: href,
    component: href ? linkComponent : undefined
  }, children) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, children);
});
var _default = exports.default = SectionMessageAction;