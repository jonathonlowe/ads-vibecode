/// <reference types="react" />
import { jsx } from '@emotion/react';
import type { CreateUIAnalyticsEvent } from '@atlaskit/analytics-next/types';
import type { FireAnalyticsCallback } from '@atlaskit/editor-common/analytics';
import type { EventDispatcher } from '@atlaskit/editor-common/event-dispatcher';
import type { AllEditorPresetPluginTypes, EditorPresetBuilder } from '@atlaskit/editor-common/preset';
import type { ProviderFactory } from '@atlaskit/editor-common/provider-factory';
import type { Transformer } from '@atlaskit/editor-common/types';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type EditorActions from '../actions';
import { type EditorAppearanceComponentProps } from '../types';
import type { EditorNextProps } from '../types/editor-props';
interface InternalProps {
    props: EditorNextProps;
    handleAnalyticsEvent: FireAnalyticsCallback;
    createAnalyticsEvent: CreateUIAnalyticsEvent;
    handleSave: (view: EditorView) => void;
    editorActions: EditorActions;
    onEditorCreated: (instance: {
        view: EditorView;
        eventDispatcher: EventDispatcher;
        transformer?: Transformer<string>;
    }) => void;
    onEditorDestroyed: (_instance: {
        view: EditorView;
        transformer?: Transformer<string>;
    }) => void;
    preset: EditorPresetBuilder<string[], AllEditorPresetPluginTypes[]>;
    providerFactory: ProviderFactory;
    AppearanceComponent: React.ComponentType<React.PropsWithChildren<EditorAppearanceComponentProps<[
    ]>>>;
}
/**
 * EditorInternalComponent is used to capture the common component
 * from the `render` method of `Editor` and share it with `EditorNext`.
 */
export declare const EditorInternal: import("react").MemoExoticComponent<({ props, handleAnalyticsEvent, createAnalyticsEvent, handleSave, editorActions, providerFactory, onEditorCreated, onEditorDestroyed, preset, AppearanceComponent, }: InternalProps) => jsx.JSX.Element>;
export {};
