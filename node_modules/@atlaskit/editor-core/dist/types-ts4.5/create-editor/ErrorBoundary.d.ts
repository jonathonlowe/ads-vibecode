import React, { type ErrorInfo } from 'react';
import type { CreateUIAnalyticsEvent } from '@atlaskit/analytics-next/types';
import type { ContextIdentifierProvider } from '@atlaskit/editor-common/provider-factory';
import type { FeatureFlags } from '@atlaskit/editor-common/types';
import type { UserBrowserExtensionResults } from '@atlaskit/editor-common/utils';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
export type ErrorBoundaryProps = {
    createAnalyticsEvent?: CreateUIAnalyticsEvent;
    contextIdentifierProvider?: Promise<ContextIdentifierProvider>;
    editorView?: EditorView;
    rethrow?: boolean;
    children: React.ReactNode;
    featureFlags: FeatureFlags;
    errorTracking?: boolean;
};
export type ErrorBoundaryState = {
    error?: Error;
};
export declare class ErrorBoundaryWithEditorView extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {
    featureFlags: FeatureFlags;
    browserExtensions?: UserBrowserExtensionResults;
    static defaultProps: {
        rethrow: boolean;
        errorTracking: boolean;
    };
    state: {
        error: undefined;
    };
    constructor(props: ErrorBoundaryProps);
    private sendErrorData;
    private getProductName;
    private fireAnalyticsEvent;
    componentDidCatch(error: Error, errorInfo: ErrorInfo): void;
    render(): React.JSX.Element;
}
declare const _default: (props: React.PropsWithChildren<Omit<ErrorBoundaryProps, "editorView">>) => React.JSX.Element;
export default _default;
