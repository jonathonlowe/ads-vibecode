/// <reference types="react" />
export declare const fullPageEditorWrapper: import("@emotion/react").SerializedStyles;
export declare const ScrollContainer: import("react").ForwardRefExoticComponent<Omit<{
    theme?: import("@emotion/react").Theme | undefined;
    colorMode?: "light" | "dark" | undefined;
    featureFlags?: import("@atlaskit/editor-common/types").FeatureFlags | undefined;
    viewMode?: "edit" | "view" | undefined;
    typographyTheme?: "typography" | "typography-adg3" | "typography-modernized" | "typography-refreshed" | undefined;
    isScrollable?: boolean | undefined;
} & import("react").HTMLProps<HTMLDivElement>, "ref"> & import("react").RefAttributes<HTMLDivElement>>;
export declare const contentArea: () => import("@emotion/react").SerializedStyles;
export declare const contentAreaWrapper: import("@emotion/react").SerializedStyles;
export declare const contentAreaHeightNoToolbar: import("@emotion/react").SerializedStyles;
export declare const sidebarArea: import("@emotion/react").SerializedStyles;
export declare const editorContentAreaHideContainer: import("@emotion/react").SerializedStyles;
export declare const editorContentAreaStyle: ({ layoutMaxWidth, fullWidthMode, isEditorToolbarHidden, }: {
    layoutMaxWidth: number;
    fullWidthMode: boolean;
    isEditorToolbarHidden?: boolean | undefined;
}) => (false | import("@emotion/react").SerializedStyles | undefined)[];
export declare const editorContentGutterStyle: () => import("@emotion/react").SerializedStyles;
