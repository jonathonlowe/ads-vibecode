import React from 'react';
import type Editor from '../../editor';
export interface Props {
    placeholder?: string;
    assistiveLabel?: string;
    children?: any;
    isExpanded?: boolean;
    onFocus?: (e: React.FocusEvent<HTMLInputElement>) => void;
    onExpand?: () => void;
}
export type State = Object;
export default class CollapsedEditor extends React.Component<Props, State> {
    editorComponent?: Editor;
    previouslyExpanded?: boolean;
    functionalEditor?: boolean;
    componentDidUpdate(): void;
    handleEditorRef: (editorRef?: Editor, editorRefCallback?: ((editor: Editor | undefined) => void) | undefined) => void;
    render(): any;
}
