/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';
import { jsx } from '@emotion/react';
import type { DispatchAnalyticsEvent } from '@atlaskit/editor-common/analytics';
import type { EventDispatcher } from '@atlaskit/editor-common/event-dispatcher';
import type { ProviderFactory } from '@atlaskit/editor-common/provider-factory';
import type { EditorAppearance, ReactHookFactory, UIComponentFactory } from '@atlaskit/editor-common/types';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type EditorActions from '../../actions';
export interface Props {
    items?: UIComponentFactory[];
    pluginHooks?: ReactHookFactory[];
    editorView?: EditorView;
    editorActions?: EditorActions;
    eventDispatcher?: EventDispatcher;
    providerFactory: ProviderFactory;
    appearance?: EditorAppearance;
    popupsMountPoint?: HTMLElement;
    popupsBoundariesElement?: HTMLElement;
    popupsScrollableElement?: HTMLElement;
    containerElement: HTMLElement | null;
    disabled: boolean;
    dispatchAnalyticsEvent?: DispatchAnalyticsEvent;
    contentArea?: HTMLElement;
    wrapperElement: HTMLElement | null;
}
declare const PluginSlotComponent: React.MemoExoticComponent<({ items, editorView, editorActions, eventDispatcher, providerFactory, appearance, popupsMountPoint, popupsBoundariesElement, popupsScrollableElement, containerElement, disabled, dispatchAnalyticsEvent, wrapperElement, pluginHooks, }: Props) => jsx.JSX.Element | null>;
export default PluginSlotComponent;
