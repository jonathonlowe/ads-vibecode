"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FullPageContentArea = exports.EDITOR_CONTAINER = exports.CONTENT_AREA_TEST_ID = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _react = _interopRequireWildcard(require("react"));
var _react2 = require("@emotion/react");
var _classnames = _interopRequireDefault(require("classnames"));
var _reactIntlNext = require("react-intl-next");
var _messages = require("@atlaskit/editor-common/messages");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _experiments = require("@atlaskit/tmp-editor-statsig/experiments");
var _ClickAreaBlock = _interopRequireDefault(require("../../Addon/ClickAreaBlock"));
var _contentComponentWrapper = require("../../Addon/ClickAreaBlock/contentComponentWrapper");
var _ContextPanel = require("../../ContextPanel");
var _PluginSlot = _interopRequireDefault(require("../../PluginSlot"));
var _StyledComponents = require("./StyledComponents");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

// Ignored via go/ees005
// eslint-disable-next-line import/no-named-as-default

var CONTENT_AREA_TEST_ID = exports.CONTENT_AREA_TEST_ID = 'ak-editor-fp-content-area';
var EDITOR_CONTAINER = exports.EDITOR_CONTAINER = 'ak-editor-container';
var Content = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {
  var _contentAreaRef$curre;
  var theme = (0, _react2.useTheme)();
  var fullWidthMode = props.appearance === 'full-width';
  var scrollContainerRef = (0, _react.useRef)(null);
  var contentAreaRef = (0, _react.useRef)(null);
  var containerRef = (0, _react.useRef)(null);
  (0, _react.useImperativeHandle)(ref, function () {
    return {
      get scrollContainer() {
        return scrollContainerRef.current;
      },
      get contentArea() {
        return contentAreaRef.current;
      },
      get containerArea() {
        return containerRef.current;
      }
    };
  }, []);
  var interactionClassName;
  if (props.hasHadInteraction !== undefined && (0, _platformFeatureFlags.fg)('platform_editor_no_selection_until_interaction')) {
    interactionClassName = props.hasHadInteraction ? 'ak-editor-has-interaction' : 'ak-editor-no-interaction';
  }
  return (0, _react2.jsx)("div", {
    css: [
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
    _StyledComponents.contentArea,
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values
    (0, _experiments.editorExperiment)('live_pages_graceful_edit', 'control') && props.isEditorToolbarHidden &&
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
    _StyledComponents.contentAreaHeightNoToolbar],
    "data-testid": CONTENT_AREA_TEST_ID,
    ref: containerRef
    // eslint-disable-next-line  @atlaskit/ui-styling-standard/no-classname-prop
    ,
    className: !(0, _experiments.editorExperiment)('live_pages_graceful_edit', 'control') && props.isEditorToolbarHidden ? 'ak-editor-content-area-no-toolbar' : undefined
  }, (0, _react2.jsx)("div", {
    css:
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values
    _StyledComponents.contentAreaWrapper,
    "data-testid": EDITOR_CONTAINER,
    "data-editor-container": 'true'
  }, (0, _react2.jsx)(_StyledComponents.ScrollContainer
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
  , {
    className: "fabric-editor-popup-scroll-parent",
    featureFlags: props.featureFlags,
    ref: scrollContainerRef,
    viewMode: props === null || props === void 0 ? void 0 : props.viewMode,
    isScrollable: true
  }, (0, _react2.jsx)(_ClickAreaBlock.default, {
    editorView: props.editorView,
    editorDisabled: props.disabled
  }, (0, _react2.jsx)("div", {
    css: (0, _toConsumableArray2.default)((0, _StyledComponents.editorContentAreaStyle)({
      fullWidthMode: fullWidthMode,
      layoutMaxWidth: theme.layoutMaxWidth,
      isEditorToolbarHidden: props.isEditorToolbarHidden
    }))
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop
    ,
    className: (0, _platformFeatureFlags.fg)('platform_editor_lcm_styling_uplift') ? 'ak-editor-content-area-region' : undefined,
    "data-editor-editable-content": true,
    "data-editor-primary-toolbar-hidden": props.isEditorToolbarHidden && (0, _experiments.editorExperiment)('platform_editor_controls', 'variant1') ? 'true' : undefined,
    role: "region",
    "aria-label": props.intl.formatMessage(_messages.fullPageMessages.editableContentLabel),
    ref: contentAreaRef
  }, (0, _react2.jsx)("div", {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
    css: (0, _StyledComponents.editorContentGutterStyle)()
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    ,
    className: (0, _platformFeatureFlags.fg)('platform_editor_no_selection_until_interaction') ? (0, _classnames.default)('ak-editor-content-area', 'appearance-full-page', interactionClassName, {
      'fabric-editor--full-width-mode': fullWidthMode
    }) : ['ak-editor-content-area', 'appearance-full-page', fullWidthMode ? 'fabric-editor--full-width-mode' : ''].join(' '),
    ref: contentAreaRef
  }, !!props.customContentComponents && 'before' in props.customContentComponents ? (0, _contentComponentWrapper.contentComponentClickWrapper)(props.customContentComponents.before) : (0, _contentComponentWrapper.contentComponentClickWrapper)(props.customContentComponents), (0, _react2.jsx)(_PluginSlot.default, {
    editorView: props.editorView,
    editorActions: props.editorActions,
    eventDispatcher: props.eventDispatcher,
    providerFactory: props.providerFactory,
    appearance: props.appearance,
    items: props.contentComponents,
    pluginHooks: props.pluginHooks,
    contentArea: (_contentAreaRef$curre = contentAreaRef.current) !== null && _contentAreaRef$curre !== void 0 ? _contentAreaRef$curre : undefined,
    popupsMountPoint: props.popupsMountPoint,
    popupsBoundariesElement: props.popupsBoundariesElement,
    popupsScrollableElement: props.popupsScrollableElement,
    disabled: !!props.disabled,
    containerElement: scrollContainerRef.current,
    dispatchAnalyticsEvent: props.dispatchAnalyticsEvent,
    wrapperElement: props.wrapperElement
  }), props.editorDOMElement, !!props.customContentComponents && 'after' in props.customContentComponents ? (0, _contentComponentWrapper.contentComponentClickWrapper)(props.customContentComponents.after) : null))))), (0, _react2.jsx)("div", {
    css: _StyledComponents.sidebarArea
  }, props.contextPanel || (0, _react2.jsx)(_ContextPanel.ContextPanel, {
    editorAPI: props.editorAPI,
    visible: false
  })));
});
var FullPageContentArea = exports.FullPageContentArea = (0, _reactIntlNext.injectIntl)(Content, {
  forwardRef: true
});