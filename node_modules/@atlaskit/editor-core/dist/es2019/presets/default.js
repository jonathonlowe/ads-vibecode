// #region Imports

import { EditorPresetBuilder } from '@atlaskit/editor-common/preset';
import { analyticsPlugin } from '@atlaskit/editor-plugins/analytics';
import { basePlugin } from '@atlaskit/editor-plugins/base';
import { betterTypeHistoryPlugin } from '@atlaskit/editor-plugins/better-type-history';
import { blockTypePlugin } from '@atlaskit/editor-plugins/block-type';
import { clearMarksOnEmptyDocPlugin } from '@atlaskit/editor-plugins/clear-marks-on-empty-doc';
import { clipboardPlugin } from '@atlaskit/editor-plugins/clipboard';
import { codeBlockPlugin } from '@atlaskit/editor-plugins/code-block';
import { compositionPlugin } from '@atlaskit/editor-plugins/composition';
import { contextIdentifierPlugin } from '@atlaskit/editor-plugins/context-identifier';
import { copyButtonPlugin } from '@atlaskit/editor-plugins/copy-button';
import { decorationsPlugin } from '@atlaskit/editor-plugins/decorations';
import { editorDisabledPlugin } from '@atlaskit/editor-plugins/editor-disabled';
import { featureFlagsPlugin } from '@atlaskit/editor-plugins/feature-flags';
import { floatingToolbarPlugin } from '@atlaskit/editor-plugins/floating-toolbar';
import { focusPlugin } from '@atlaskit/editor-plugins/focus';
import { historyPlugin } from '@atlaskit/editor-plugins/history';
import { hyperlinkPlugin } from '@atlaskit/editor-plugins/hyperlink';
import { interactionPlugin } from '@atlaskit/editor-plugins/interaction';
import { pastePlugin } from '@atlaskit/editor-plugins/paste';
import { placeholderPlugin } from '@atlaskit/editor-plugins/placeholder';
import { primaryToolbarPlugin } from '@atlaskit/editor-plugins/primary-toolbar';
import { quickInsertPlugin } from '@atlaskit/editor-plugins/quick-insert';
import { selectionPlugin } from '@atlaskit/editor-plugins/selection';
import { selectionToolbarPlugin } from '@atlaskit/editor-plugins/selection-toolbar';
import { submitEditorPlugin } from '@atlaskit/editor-plugins/submit-editor';
import { textFormattingPlugin } from '@atlaskit/editor-plugins/text-formatting';
import { typeAheadPlugin } from '@atlaskit/editor-plugins/type-ahead';
import { undoRedoPlugin } from '@atlaskit/editor-plugins/undo-redo';
import { unsupportedContentPlugin } from '@atlaskit/editor-plugins/unsupported-content';
import { widthPlugin } from '@atlaskit/editor-plugins/width';
import { fg } from '@atlaskit/platform-feature-flags';
import { isFullPage as fullPageCheck } from '../utils/is-full-page';

// #endregion

/**
 * Note: The order that presets are added determines
 * their placement in the editor toolbar
 */
export function createDefaultPreset(options) {
  var _options$featureFlags, _options$featureFlags2;
  const isFullPage = fullPageCheck(options.appearance);
  const preset = new EditorPresetBuilder().add([featureFlagsPlugin, options.featureFlags || {}]).maybeAdd([analyticsPlugin, {
    createAnalyticsEvent: options.createAnalyticsEvent,
    performanceTracking: options.performanceTracking
  }], Boolean(options.allowAnalyticsGASV3)).add(betterTypeHistoryPlugin).add([pastePlugin, {
    ...(options === null || options === void 0 ? void 0 : options.paste),
    isFullPage
  }]).add(clipboardPlugin).add(focusPlugin).maybeAdd(interactionPlugin, Boolean(options === null || options === void 0 ? void 0 : options.__livePage) && fg('platform_editor_no_selection_until_interaction')).add(compositionPlugin).add([contextIdentifierPlugin, {
    contextIdentifierProvider: options.contextIdentifierProvider
  }]).add([basePlugin, options.base]).add(decorationsPlugin).add([typeAheadPlugin, options.typeAhead]).maybeAdd(historyPlugin, Boolean(options.allowUndoRedoButtons)).add([primaryToolbarPlugin, {
    contextualFormattingEnabled: isFullPage
  }]).maybeAdd(undoRedoPlugin, Boolean((_options$featureFlags = (_options$featureFlags2 = options.featureFlags) === null || _options$featureFlags2 === void 0 ? void 0 : _options$featureFlags2.undoRedoButtons) !== null && _options$featureFlags !== void 0 ? _options$featureFlags : options.allowUndoRedoButtons)).add([blockTypePlugin, {
    ...options.blockType,
    includeBlockQuoteAsTextstyleOption: isFullPage
  }]).add(clearMarksOnEmptyDocPlugin).add([selectionToolbarPlugin, {
    preferenceToolbarAboveSelection: !!options.preferenceToolbarAboveSelection,
    contextualFormattingEnabled: isFullPage
  }]).add([hyperlinkPlugin, {
    ...options.hyperlinkOptions,
    // @ts-ignore Temporary solution to check for Live Page editor.
    __livePage: options.__livePage
  }]).add([textFormattingPlugin, options.textFormatting]).add(widthPlugin).add([quickInsertPlugin, options.quickInsert]).add([placeholderPlugin, options.placeholder]).add(unsupportedContentPlugin).add(editorDisabledPlugin).add([submitEditorPlugin, options.submitEditor]).add(copyButtonPlugin).add(floatingToolbarPlugin).add([selectionPlugin, {
    ...options.selection,
    __livePage: options.__livePage
  }]).add([codeBlockPlugin, options.codeBlock]);
  return preset;
}
export function useDefaultPreset(props) {
  const preset = createDefaultPreset(props);
  return [preset];
}