import type { EditorNextProps, EditorProps } from '../../types/editor-props';
import { type WithAppearanceComponent } from '../../types/with-appearance-component';
export type Complete<T> = {
    [P in keyof Required<T>]: Pick<T, P> extends Required<Pick<T, P>> ? T[P] : T[P] | undefined;
};
export declare const useMemoEditorProps: (passedProps: EditorProps & EditorNextProps & WithAppearanceComponent) => EditorProps & EditorNextProps & WithAppearanceComponent;
export default useMemoEditorProps;
