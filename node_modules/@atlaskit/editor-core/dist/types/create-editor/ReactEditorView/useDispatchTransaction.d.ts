import type { AnalyticsEventPayload } from '@atlaskit/editor-common/analytics';
import type { Transaction } from '@atlaskit/editor-prosemirror/state';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { EditorViewStateUpdatedCallbackProps } from '../../types/editor-config';
import type { EditorOnChangeHandler } from '../../types/editor-onchange';
type DispatchTransaction = (view: EditorView | undefined, tr: Transaction) => void;
export declare const useDispatchTransaction: ({ onChange, dispatchAnalyticsEvent, onEditorViewUpdated, isRemoteReplaceDocumentTransaction, }: {
    onChange: EditorOnChangeHandler | undefined;
    dispatchAnalyticsEvent: (payload: AnalyticsEventPayload) => void;
    onEditorViewUpdated: (params: EditorViewStateUpdatedCallbackProps) => void;
    isRemoteReplaceDocumentTransaction?: ((tr: Transaction) => boolean) | undefined;
}) => DispatchTransaction;
export {};
