/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import type { ReactElement } from 'react';
import React from 'react';
import { jsx } from '@emotion/react';
import type { WrappedComponentProps } from 'react-intl-next';
import type { DispatchAnalyticsEvent } from '@atlaskit/editor-common/analytics';
import type { CollabEditOptions } from '@atlaskit/editor-common/collab';
import type { EventDispatcher } from '@atlaskit/editor-common/event-dispatcher';
import type { ProviderFactory } from '@atlaskit/editor-common/provider-factory';
import type { EditorAppearance, FeatureFlags, OptionalPlugin, PublicPluginAPI, ToolbarUIComponentFactory } from '@atlaskit/editor-common/types';
import type { AnalyticsPlugin } from '@atlaskit/editor-plugins/analytics';
import type { AvatarGroupPlugin } from '@atlaskit/editor-plugins/avatar-group';
import type { BeforePrimaryToolbarPlugin } from '@atlaskit/editor-plugins/before-primary-toolbar';
import type { CollabEditPlugin } from '@atlaskit/editor-plugins/collab-edit';
import type { FeatureFlagsPlugin } from '@atlaskit/editor-plugins/feature-flags';
import type { FindReplacePlugin } from '@atlaskit/editor-plugins/find-replace';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { EditorActions } from '../../../index';
import type { PrimaryToolbarComponents } from '../../../types';
export type ToolbarEditorPlugins = [
    OptionalPlugin<AnalyticsPlugin>,
    OptionalPlugin<FindReplacePlugin>,
    OptionalPlugin<FeatureFlagsPlugin>,
    OptionalPlugin<CollabEditPlugin>,
    OptionalPlugin<AvatarGroupPlugin>,
    OptionalPlugin<BeforePrimaryToolbarPlugin>
];
export interface FullPageToolbarProps {
    appearance?: EditorAppearance;
    providerFactory: ProviderFactory;
    editorActions?: EditorActions;
    editorDOMElement: JSX.Element;
    editorView: EditorView;
    eventDispatcher: EventDispatcher;
    dispatchAnalyticsEvent?: DispatchAnalyticsEvent;
    primaryToolbarComponents?: ToolbarUIComponentFactory[];
    customPrimaryToolbarComponents?: PrimaryToolbarComponents;
    popupsMountPoint?: HTMLElement;
    popupsBoundariesElement?: HTMLElement;
    popupsScrollableElement?: HTMLElement;
    disabled: boolean;
    collabEdit?: CollabEditOptions;
    showKeyline: boolean;
    containerElement: HTMLElement | null;
    beforeIcon?: ReactElement;
    hasMinWidth?: boolean;
    featureFlags: FeatureFlags;
    editorAPI: PublicPluginAPI<ToolbarEditorPlugins> | undefined;
}
export declare const EditorToolbar: React.MemoExoticComponent<(props: FullPageToolbarProps & WrappedComponentProps) => jsx.JSX.Element>;
export declare const FullPageToolbar: React.FC<import("react-intl-next").WithIntlProps<FullPageToolbarProps & WrappedComponentProps>> & {
    WrappedComponent: React.ComponentType<FullPageToolbarProps & WrappedComponentProps>;
};
