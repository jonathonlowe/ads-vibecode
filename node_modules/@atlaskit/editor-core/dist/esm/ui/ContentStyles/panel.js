import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
var _templateObject;
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css } from '@emotion/react';
import { PanelSharedCssClassName, panelSharedStyles } from '@atlaskit/editor-common/panel';
import { akEditorDeleteBackground, akEditorDeleteBackgroundWithOpacity, akEditorDeleteBorder, akEditorDeleteIconColor, akEditorSelectedBorderSize, akEditorSelectedNodeClassName, getSelectionStyles, SelectionStyle } from '@atlaskit/editor-shared-styles';
import { fg } from '@atlaskit/platform-feature-flags';
// eslint-disable-next-line @atlaskit/design-system/no-css-tagged-template-expression -- Needs manual remediation due to mixin usage
export var panelStyles = function panelStyles() {
  return css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n\t.ProseMirror {\n\t\t.", " {\n\t\t\tcursor: pointer;\n\n\t\t\t/* Danger when top level node */\n\t\t\t&.danger {\n\t\t\t\tbox-shadow: 0 0 0 ", "px ", ";\n\t\t\t\tbackground-color: ", " !important;\n\n\t\t\t\t.", " {\n\t\t\t\t\tcolor: ", " !important;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.", " {\n\t\t\tcursor: text;\n\t\t}\n\n\t\t/* Danger when nested node */\n\t\t.danger .", " {\n\t\t\t&[data-panel-type] {\n\t\t\t\tbackground-color: ", ";\n\n\t\t\t\t.", " {\n\t\t\t\t\tcolor: ", ";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t", ";\n\t}\n\n\t.", ".", ":not(.danger) {\n\t\t", "\n\t}\n\n\t", ";\n\n\t/* Don't want extra padding for inline editor (nested) */\n\t", ";\n"])), PanelSharedCssClassName.prefix, akEditorSelectedBorderSize, akEditorDeleteBorder, "var(--ds-background-danger, ".concat(akEditorDeleteBackground, ")"), PanelSharedCssClassName.icon, "var(--ds-icon-danger, ".concat(akEditorDeleteIconColor, ")"), PanelSharedCssClassName.content, PanelSharedCssClassName.prefix, "var(--ds-blanket-danger, ".concat(akEditorDeleteBackgroundWithOpacity, ")"), PanelSharedCssClassName.icon, "var(--ds-icon-danger, ".concat(akEditorDeleteIconColor, ")"), panelSharedStyles(), PanelSharedCssClassName.prefix, akEditorSelectedNodeClassName, getSelectionStyles([SelectionStyle.BoxShadow, SelectionStyle.Blanket]), fg('platform_editor_nested_dnd_styles_changes') && ".ak-editor-content-area.appearance-full-page .ProseMirror {\n\t\t.ak-editor-panel .".concat(PanelSharedCssClassName.icon, " {\n\t\t\tpadding-right: ", "var(--ds-space-150, 12px)", ";\n\t\t}\n\n\t\t.ak-editor-panel.").concat(PanelSharedCssClassName.noIcon, " {\n\t\t\tpadding-left: ", "var(--ds-space-250, 20px)", ";\n\t\t\tpadding-right: ", "var(--ds-space-250, 20px)", ";\n\t\t}\n\t}"), fg('platform_editor_nested_dnd_styles_changes') && ".ak-editor-content-area .ak-editor-content-area .ProseMirror {\n\t\t.ak-editor-panel .".concat(PanelSharedCssClassName.icon, " {\n\t\t\tpadding-right: ", "var(--ds-space-100, 8px)", ";\n\t\t}\n\t\t.ak-editor-panel.").concat(PanelSharedCssClassName.noIcon, " {\n\t\t\tpadding-right: ", "var(--ds-space-150, 12px)", ";\n\t\t\tpadding-left: ", "var(--ds-space-150, 12px)", ";\n\t\t}\n\t}"));
};