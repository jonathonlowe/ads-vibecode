import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx } from '@emotion/react';
import { dropdown } from './styles';
// Ignored via go/ees005
// eslint-disable-next-line @repo/internal/react/no-class-components
var DropdownWrapper = /*#__PURE__*/function (_React$Component) {
  function DropdownWrapper() {
    var _this;
    _classCallCheck(this, DropdownWrapper);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, DropdownWrapper, [].concat(args));
    _defineProperty(_this, "handleClick", function (actions) {
      var actionOnClick = actions.actionOnClick,
        renderOnClick = actions.renderOnClick;
      var editorActions = _this.props.editorActions;
      if (actionOnClick) {
        actionOnClick(editorActions);
        _this.props.togglePopup();
      } else if (renderOnClick) {
        _this.props.onClick(editorActions, renderOnClick);
      }
    });
    return _this;
  }
  _inherits(DropdownWrapper, _React$Component);
  return _createClass(DropdownWrapper, [{
    key: "render",
    value: function render() {
      var _this2 = this;
      // adding onClick handler to each DropdownItem component
      var children = React.Children.map(this.props.children, function (child) {
        return /*#__PURE__*/React.cloneElement(child, {
          onClick: _this2.handleClick
        });
      });

      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
      return jsx("div", {
        css: dropdown
      }, children);
    }
  }]);
}(React.Component);
export { DropdownWrapper as default };