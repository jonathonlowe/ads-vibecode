import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import React, { useContext, useMemo, useState } from 'react';

// eslint-disable-next-line @typescript-eslint/no-explicit-any

export var EditorAPIContext = /*#__PURE__*/React.createContext({});
export var PresetContextProvider = function PresetContextProvider(_ref) {
  var children = _ref.children;
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  var _useState = useState(),
    _useState2 = _slicedToArray(_useState, 2),
    editorApi = _useState2[0],
    setEditorApi = _useState2[1];
  var contextValue = useMemo(function () {
    return {
      editorApi: editorApi,
      setEditorApi: setEditorApi
    };
  }, [editorApi, setEditorApi]);
  return /*#__PURE__*/React.createElement(EditorAPIContext.Provider, {
    value: contextValue
  }, children);
};
export function usePresetContext() {
  var _useContext = useContext(EditorAPIContext),
    editorApi = _useContext.editorApi;
  return editorApi;
}
export var useSetPresetContext = function useSetPresetContext() {
  var _useContext2 = useContext(EditorAPIContext),
    setEditorApi = _useContext2.setEditorApi;
  return setEditorApi;
};