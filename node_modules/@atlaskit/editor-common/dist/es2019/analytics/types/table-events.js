export let TABLE_ACTION = /*#__PURE__*/function (TABLE_ACTION) {
  TABLE_ACTION["DELETED"] = "deleted";
  TABLE_ACTION["CLEARED"] = "cleared";
  TABLE_ACTION["COLLAPSED"] = "collapsed";
  TABLE_ACTION["MERGED"] = "merged";
  TABLE_ACTION["SPLIT"] = "split";
  TABLE_ACTION["COLORED"] = "colored";
  TABLE_ACTION["TOGGLED_HEADER_COLUMN"] = "toggledHeaderColumn";
  TABLE_ACTION["TOGGLED_HEADER_ROW"] = "toggledHeaderRow";
  TABLE_ACTION["TOGGLED_NUMBER_COLUMN"] = "toggledNumberColumn";
  TABLE_ACTION["CHANGED_BREAKOUT_MODE"] = "changedBreakoutMode";
  TABLE_ACTION["CUT"] = "cut";
  TABLE_ACTION["COPIED"] = "copied";
  TABLE_ACTION["ADDED_ROW"] = "addedRow";
  TABLE_ACTION["ADDED_COLUMN"] = "addedColumn";
  TABLE_ACTION["DELETED_ROW"] = "deletedRow";
  TABLE_ACTION["DELETED_COLUMN"] = "deletedColumn";
  TABLE_ACTION["SORTED_COLUMN"] = "sortedColumn";
  TABLE_ACTION["REPLACED"] = "replaced";
  TABLE_ACTION["ATTEMPTED_TABLE_WIDTH_CHANGE"] = "attemptedTableWidthChange";
  TABLE_ACTION["DISTRIBUTED_COLUMNS_WIDTHS"] = "distributedColumnsWidths";
  TABLE_ACTION["FIXED"] = "fixed";
  TABLE_ACTION["RESIZED"] = "resized";
  TABLE_ACTION["RESIZE_PERF_SAMPLING"] = "resizePerfSampling";
  TABLE_ACTION["COLUMN_RESIZED"] = "columnResized";
  TABLE_ACTION["OVERFLOW_CHANGED"] = "overflowChanged";
  TABLE_ACTION["INITIAL_OVERFLOW_CAPTURED"] = "initialOverflowCaptured";
  TABLE_ACTION["MOVED_ROW"] = "movedRow";
  TABLE_ACTION["MOVED_COLUMN"] = "movedColumn";
  TABLE_ACTION["CLONED_ROW"] = "clonedRow";
  TABLE_ACTION["CLONED_COLUMN"] = "clonedColumn";
  /**
   * This is a unique action that's used to track legacy table move behaviour flow of insert+copy+paste. Please use
   * the MOVED_ROW | MOVED_COLUMN actions if you want to track events which move row/cols in a single step.
   */
  TABLE_ACTION["ROW_OR_COLUMN_MOVED"] = "rowOrColumnMoved";
  TABLE_ACTION["CHANGED_DISPLAY_MODE"] = "changedDisplayMode";
  TABLE_ACTION["CHANGED_ALIGNMENT"] = "changedAlignment";
  // Temporary to track usage of CONFCLOUD-78239 bug
  TABLE_ACTION["TABLE_CELL_BACKGROUND_FIXED"] = "tableCellBackgroundFixed";
  return TABLE_ACTION;
}({});
export let TABLE_BREAKOUT = /*#__PURE__*/function (TABLE_BREAKOUT) {
  TABLE_BREAKOUT["WIDE"] = "wide";
  TABLE_BREAKOUT["FULL_WIDTH"] = "fullWidth";
  TABLE_BREAKOUT["NORMAL"] = "normal";
  return TABLE_BREAKOUT;
}({});
export let TABLE_OVERFLOW_CHANGE_TRIGGER = /*#__PURE__*/function (TABLE_OVERFLOW_CHANGE_TRIGGER) {
  TABLE_OVERFLOW_CHANGE_TRIGGER["EXTERNAL"] = "external";
  TABLE_OVERFLOW_CHANGE_TRIGGER["ADDED_COLUMN"] = "addedColumn";
  TABLE_OVERFLOW_CHANGE_TRIGGER["DELETED_COLUMN"] = "deletedColumn";
  TABLE_OVERFLOW_CHANGE_TRIGGER["RESIZED_COLUMN"] = "resizedColumn";
  TABLE_OVERFLOW_CHANGE_TRIGGER["ENABLED_NUMBERED_COLUMN"] = "enabledNumberedColumn";
  TABLE_OVERFLOW_CHANGE_TRIGGER["DISABLED_NUMBERED_COLUMN"] = "disabledNumberedColumn";
  TABLE_OVERFLOW_CHANGE_TRIGGER["DISTRIBUTED_COLUMNS"] = "distributedColumnsWidths";
  TABLE_OVERFLOW_CHANGE_TRIGGER["RESIZED"] = "resizedTable";
  return TABLE_OVERFLOW_CHANGE_TRIGGER;
}({});
export let TABLE_STATUS = /*#__PURE__*/function (TABLE_STATUS) {
  TABLE_STATUS["SUCCESS"] = "success";
  TABLE_STATUS["CANCELLED"] = "cancelled";
  TABLE_STATUS["INVALID"] = "invalid";
  return TABLE_STATUS;
}({});
export let TABLE_DISPLAY_MODE = /*#__PURE__*/function (TABLE_DISPLAY_MODE) {
  TABLE_DISPLAY_MODE["FIXED"] = "fixed";
  TABLE_DISPLAY_MODE["DEFAULT"] = "default";
  TABLE_DISPLAY_MODE["INITIAL"] = "initial";
  return TABLE_DISPLAY_MODE;
}({});

// currently duplicated in editor-plugin-table/src/types.ts

export let CHANGE_ALIGNMENT_REASON = /*#__PURE__*/function (CHANGE_ALIGNMENT_REASON) {
  CHANGE_ALIGNMENT_REASON["TABLE_RESIZING"] = "tableResizing";
  CHANGE_ALIGNMENT_REASON["TABLE_COLUMN_RESIZED"] = "tableColumnResized";
  CHANGE_ALIGNMENT_REASON["EDITOR_APPEARANCE_CHANGED"] = "editorAppearanceChanged";
  CHANGE_ALIGNMENT_REASON["TOOLBAR_OPTION_CHANGED"] = "toolbarOptionChanged";
  return CHANGE_ALIGNMENT_REASON;
}({});