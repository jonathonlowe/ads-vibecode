import React, { Component, type ReactNode } from 'react';
import { type Data } from 'popper.js';
export type Props = {
    content: ReactNode | null;
    offset: string;
    position: string;
    onPositioned: () => void;
    children?: React.ReactNode;
};
export type State = {
    hasExtractedStyles: boolean;
    position?: string;
    transform?: string;
    offsets: {
        popper: {
            left: number;
            top: number;
        };
    };
    cssPosition: string;
    originalHeight: number | null;
    maxHeight: number | null;
};
export default class Layer extends Component<Props, State> {
    private popper;
    private targetRef;
    private contentRef;
    static defaultProps: {
        boundariesElement: string;
        children: null;
        content: null;
        offset: string;
        position: string;
        zIndex: number;
        lockScroll: boolean;
        isAlwaysFixed: boolean;
        onPositioned: () => void;
    };
    constructor(props: Props);
    componentDidMount(): void;
    componentDidUpdate(prevProps: Props, prevState: State): void;
    componentWillUnmount(): void;
    calculateMaxHeight(originalHeight: number, currentHeight: number, positionTop: number, cssPosition: string): number | null;
    extractStyles: (state: Data) => void;
    applyPopper(props: Props): void;
    render(): React.JSX.Element;
}
