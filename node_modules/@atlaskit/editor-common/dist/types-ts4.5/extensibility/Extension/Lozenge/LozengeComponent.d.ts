import type { CSSProperties } from 'react';
import { jsx } from '@emotion/react';
import { type ExtensionsPluginInjectionAPI } from '../../types';
import type { LozengeData } from './index';
export declare const ICON_SIZE = 24;
type LozengeComponentProps = {
    lozengeData?: LozengeData;
    extensionName: string;
    title: string;
    params: any;
    renderImage: (lozengeData: LozengeData) => void;
    isNodeSelected?: boolean;
    showMacroInteractionDesignUpdates?: boolean;
    customContainerStyles?: CSSProperties;
    isNodeHovered?: boolean;
    isNodeNested?: boolean;
    setIsNodeHovered?: (isHovered: boolean) => void;
    isBodiedMacro?: boolean;
    showLivePagesBodiedMacrosRendererView?: boolean;
    showUpdatedLivePages1PBodiedExtensionUI?: boolean;
    showBodiedExtensionRendererView?: boolean;
    setShowBodiedExtensionRendererView?: (showBodiedExtensionRendererView: boolean) => void;
    pluginInjectionApi?: ExtensionsPluginInjectionAPI;
};
export declare const LozengeComponent: ({ lozengeData, extensionName, title, params, renderImage, showMacroInteractionDesignUpdates, customContainerStyles, isNodeHovered, isNodeNested, setIsNodeHovered, isBodiedMacro, showLivePagesBodiedMacrosRendererView, showUpdatedLivePages1PBodiedExtensionUI, showBodiedExtensionRendererView, setShowBodiedExtensionRendererView, pluginInjectionApi, }: LozengeComponentProps) => jsx.JSX.Element;
export {};
