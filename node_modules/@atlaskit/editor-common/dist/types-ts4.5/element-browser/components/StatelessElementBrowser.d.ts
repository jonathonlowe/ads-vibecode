/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';
import type { CellMeasurerCache } from 'react-virtualized/dist/commonjs/CellMeasurer';
import type { WithAnalyticsEventsProps } from '@atlaskit/analytics-next';
import type { QuickInsertItem } from '../../provider-factory';
import type { EmptyStateHandler } from '../../types';
import type { Category, Modes } from '../types';
export type StatelessElementBrowserProps = {
    categories?: Category[];
    items: QuickInsertItem[];
    onSearch: (searchTerm: string) => void;
    onSelectCategory: (category: Category) => void;
    onSelectItem?: (item: QuickInsertItem) => void;
    onInsertItem: (item: QuickInsertItem) => void;
    selectedCategory?: string;
    showSearch: boolean;
    showCategories: boolean;
    mode: keyof typeof Modes;
    searchTerm?: string;
    emptyStateHandler?: EmptyStateHandler;
    viewMoreItem?: QuickInsertItem;
    cache?: CellMeasurerCache;
} & WithAnalyticsEventsProps;
declare const MemoizedElementBrowser: React.MemoExoticComponent<React.ForwardRefExoticComponent<Omit<Omit<{
    categories?: Category[] | undefined;
    items: QuickInsertItem[];
    onSearch: (searchTerm: string) => void;
    onSelectCategory: (category: Category) => void;
    onSelectItem?: ((item: QuickInsertItem) => void) | undefined;
    onInsertItem: (item: QuickInsertItem) => void;
    selectedCategory?: string | undefined;
    showSearch: boolean;
    showCategories: boolean;
    mode: keyof typeof Modes;
    searchTerm?: string | undefined;
    emptyStateHandler?: EmptyStateHandler | undefined;
    viewMoreItem?: QuickInsertItem | undefined;
    cache?: CellMeasurerCache | undefined;
}, keyof WithAnalyticsEventsProps> & React.RefAttributes<any> & import("@atlaskit/analytics-next").WithContextProps, "ref"> & React.RefAttributes<any>>>;
export default MemoizedElementBrowser;
