import { type CustomFieldResolver, type Deserializer, type ExtensionManifest, type Serializer, type UserFieldContextProvider } from './types/extension-manifest';
import { type FieldHandlerLink } from './types/field-definitions';
/** attempt to get the custom resolver for this field, or throw */
export declare function getCustomFieldResolver(manifest: ExtensionManifest, handlerLink: FieldHandlerLink): Promise<CustomFieldResolver>;
/** attempt to get the serializer for this field, or throw */
export declare function getFieldSerializer(manifest: ExtensionManifest, handlerLink: FieldHandlerLink): Promise<Serializer | undefined>;
/** attempt to get the deserializer for this field, or throw */
export declare function getFieldDeserializer(manifest: ExtensionManifest, handlerLink: FieldHandlerLink): Promise<Deserializer | undefined>;
/** attempt to get the user field context provider for this field, or throw */
export declare function getUserFieldContextProvider(manifest: ExtensionManifest, handlerLink: FieldHandlerLink): Promise<UserFieldContextProvider>;
