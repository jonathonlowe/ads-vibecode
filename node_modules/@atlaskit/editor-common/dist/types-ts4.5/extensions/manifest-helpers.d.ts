import type { ADFEntity } from '@atlaskit/adf-utils/types';
import type { ExtensionKey, ExtensionManifest, ExtensionModuleAction, ExtensionModuleActionObject, ExtensionModuleKey, ExtensionType, Module } from './types/extension-manifest';
import type { Parameters } from './types/extension-parameters';
export declare const FORGE_EXTENSION_TYPE = "com.atlassian.ecosystem";
export declare const getExtensionKeyAndNodeKey: (extensionKey: ExtensionKey, extensionType: ExtensionType) => string[];
export declare const buildExtensionKeyAndNodeKey: (extensionKey: ExtensionKey, nodeKey?: ExtensionModuleKey) => string;
export declare function buildAction<T extends Parameters>(action: ExtensionModuleAction<T>, manifest: ExtensionManifest<T>): ADFEntity | import("./types/extension-manifest").ExtensionModuleActionHandler | undefined;
export declare const resolveImport: <T extends Parameters>(importPromise: Module<T>) => Promise<T>;
export declare function buildNode<T extends Parameters>(action: ExtensionModuleActionObject<T>, manifest: ExtensionManifest<T>): ADFEntity | undefined;
