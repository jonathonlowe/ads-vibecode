import type { FragmentAttributes } from '@atlaskit/adf-schema/schema';
import type { Node as PMNode } from '@atlaskit/editor-prosemirror/model';
import type { EditorState } from '@atlaskit/editor-prosemirror/state';
import type { ConfirmDialogChildInfo } from '../types';
type LocalId = FragmentAttributes['localId'];
type NodeAndTargetLinkages = {
    readonly localId: LocalId;
    readonly name: string;
    readonly node: PMNode;
    readonly pos: number;
    readonly targets: LocalId[];
};
export declare const isReferencedSource: (state: EditorState, node?: PMNode) => boolean;
export declare const getConnections: (state: EditorState) => Record<string, NodeAndTargetLinkages>;
export declare const removeConnectedNodes: (state: EditorState, node?: PMNode) => import("prosemirror-state").Transaction;
export declare const getChildrenInfo: (state: EditorState, node?: PMNode) => ConfirmDialogChildInfo[];
export declare const getNodeName: (state: EditorState, node?: PMNode) => string;
export {};
