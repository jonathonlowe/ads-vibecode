import type { Mark as PMMark } from '@atlaskit/editor-prosemirror/model';
import { Node as PMNode } from '@atlaskit/editor-prosemirror/model';
/**
 * ðŸ§± Internal Helper Function: Editor FE Platform
 *
 * Creates a set of generic metadata attributes for a ProseMirror node or mark.
 * These attributes are used to annotate the DOM representation with information
 * about the node or mark type.
 *
 * @param {PMNode | PMMark} nodeOrMark - The ProseMirror node or mark to create metadata for.
 * @returns {Record<string, string>} An object containing metadata attributes.
 *  - `data-prosemirror-content-type`: Specifies if the content is a node or mark.
 *  - `data-prosemirror-node-name` (if applicable): The name of the node.
 *  - `data-prosemirror-node-block` (if applicable): Indicates if the node is a block.
 *  - `data-prosemirror-node-inline` (if applicable): Indicates if the node is inline.
 *  - `data-prosemirror-mark-name` (if applicable): The name of the mark.
 */
export declare const createProseMirrorMetadata: (nodeOrMark: PMNode | PMMark) => Record<string, string>;
