"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IconTwoColumnLayout = exports.IconThreeColumnLayout = exports.IconStatus = exports.IconQuote = exports.IconPanelWarning = exports.IconPanelSuccess = exports.IconPanelNote = exports.IconPanelError = exports.IconPanel = exports.IconOneColumnLayout = exports.IconMention = exports.IconLoom = exports.IconListNumber = exports.IconList = exports.IconLink = exports.IconLayout = exports.IconImages = exports.IconHeading = exports.IconFourColumnLayout = exports.IconFiveColumnLayout = exports.IconFeedback = exports.IconExpand = exports.IconEmoji = exports.IconDivider = exports.IconDecision = exports.IconDate = exports.IconDatasourceJiraIssue = exports.IconDatasourceConfluenceSearch = exports.IconDatasourceAssetsObjects = exports.IconCode = exports.IconAction = void 0;
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireDefault(require("react"));
var _reactLoadable = _interopRequireDefault(require("react-loadable"));
var _excluded = ["level"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != (0, _typeof2.default)(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var IconAction = exports.IconAction = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-action" */'./action'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconCode = exports.IconCode = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-code" */'./code'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconDate = exports.IconDate = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-date" */'./date'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconDecision = exports.IconDecision = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-decision" */'./decision'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconDivider = exports.IconDivider = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-divider" */'./divider'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconEmoji = exports.IconEmoji = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-emoji" */'./emoji'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconImages = exports.IconImages = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-images" */'./images'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconLayout = exports.IconLayout = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-layout" */'./layout'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconLink = exports.IconLink = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-link" */'./link'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconListNumber = exports.IconListNumber = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-list-number" */'./list-number'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconList = exports.IconList = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-list" */'./list'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconMention = exports.IconMention = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-mention" */'./mention'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconPanelError = exports.IconPanelError = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-panel-error" */'./panel-error'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconPanelNote = exports.IconPanelNote = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-panel-note" */'./panel-note'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconPanelSuccess = exports.IconPanelSuccess = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-panel-success" */'./panel-success'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconPanelWarning = exports.IconPanelWarning = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-panel-warning" */'./panel-warning'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconPanel = exports.IconPanel = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-panel" */'./panel'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconQuote = exports.IconQuote = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-quote" */'./quote'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconStatus = exports.IconStatus = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-status" */'./status'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconOneColumnLayout = exports.IconOneColumnLayout = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-one-column-layout" */'./one-column-layout'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconTwoColumnLayout = exports.IconTwoColumnLayout = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-two-column-layout" */'./two-column-layout'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconThreeColumnLayout = exports.IconThreeColumnLayout = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-three-column-layout" */'./three-column-layout'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconFourColumnLayout = exports.IconFourColumnLayout = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-four-column-layout" */'./four-column-layout'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconFiveColumnLayout = exports.IconFiveColumnLayout = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-five-column-layout" */'./five-column-layout'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
function importHeading(level) {
  switch (level) {
    case 1:
      return function (specifier) {
        return new Promise(function (r) {
          return r(specifier);
        }).then(function (s) {
          return _interopRequireWildcard(require(s));
        });
      }( /* webpackChunkName: "@atlaskit-internal_editor-icon-heading-1" */"./heading1");
    case 2:
      return function (specifier) {
        return new Promise(function (r) {
          return r(specifier);
        }).then(function (s) {
          return _interopRequireWildcard(require(s));
        });
      }( /* webpackChunkName: "@atlaskit-internal_editor-icon-heading-2" */"./heading2");
    case 3:
      return function (specifier) {
        return new Promise(function (r) {
          return r(specifier);
        }).then(function (s) {
          return _interopRequireWildcard(require(s));
        });
      }( /* webpackChunkName: "@atlaskit-internal_editor-icon-heading-3" */"./heading3");
    case 4:
      return function (specifier) {
        return new Promise(function (r) {
          return r(specifier);
        }).then(function (s) {
          return _interopRequireWildcard(require(s));
        });
      }( /* webpackChunkName: "@atlaskit-internal_editor-icon-heading-4" */"./heading4");
    case 5:
      return function (specifier) {
        return new Promise(function (r) {
          return r(specifier);
        }).then(function (s) {
          return _interopRequireWildcard(require(s));
        });
      }( /* webpackChunkName: "@atlaskit-internal_editor-icon-heading-5" */"./heading5");
    case 6:
    default:
      return function (specifier) {
        return new Promise(function (r) {
          return r(specifier);
        }).then(function (s) {
          return _interopRequireWildcard(require(s));
        });
      }( /* webpackChunkName: "@atlaskit-internal_editor-icon-heading-6" */"./heading6");
  }
}
var IconHeading = exports.IconHeading = function IconHeading(_ref) {
  var level = _ref.level,
    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var Icon = (0, _reactLoadable.default)({
    loader: function loader() {
      return importHeading(level).then(function (module) {
        return module.default;
      });
    },
    loading: function loading() {
      return null;
    }
  });
  // Ignored via go/ees005
  // eslint-disable-next-line react/jsx-props-no-spreading
  return /*#__PURE__*/_react.default.createElement(Icon, props);
};
var IconFeedback = exports.IconFeedback = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-feedback" */'./feedback'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconExpand = exports.IconExpand = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-expand" */'./expand'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconDatasourceJiraIssue = exports.IconDatasourceJiraIssue = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-datasource-jira-issue" */'./datasource-jira-issue'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconDatasourceAssetsObjects = exports.IconDatasourceAssetsObjects = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-datasource-assets-objects" */'./datasource-assets-objects'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconDatasourceConfluenceSearch = exports.IconDatasourceConfluenceSearch = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-datasource-confluence-search" */'./datasource-confluence-search'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});
var IconLoom = exports.IconLoom = (0, _reactLoadable.default)({
  loader: function loader() {
    return Promise.resolve().then(function () {
      return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-icon-loom" */'./loom'));
    }).then(function (module) {
      return module.default;
    });
  },
  loading: function loading() {
    return null;
  }
});