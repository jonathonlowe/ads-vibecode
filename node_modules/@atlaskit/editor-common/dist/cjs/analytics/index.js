"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "ACTION", {
  enumerable: true,
  get: function get() {
    return _enums.ACTION;
  }
});
Object.defineProperty(exports, "ACTION_SUBJECT", {
  enumerable: true,
  get: function get() {
    return _enums.ACTION_SUBJECT;
  }
});
Object.defineProperty(exports, "ACTION_SUBJECT_ID", {
  enumerable: true,
  get: function get() {
    return _enums.ACTION_SUBJECT_ID;
  }
});
Object.defineProperty(exports, "AI_SUGGESTION_TRIGGERED_FROM", {
  enumerable: true,
  get: function get() {
    return _aiInlineSuggestionEvents.AI_SUGGESTION_TRIGGERED_FROM;
  }
});
Object.defineProperty(exports, "BROWSER_FREEZE_INTERACTION_TYPE", {
  enumerable: true,
  get: function get() {
    return _generalEvents.BROWSER_FREEZE_INTERACTION_TYPE;
  }
});
Object.defineProperty(exports, "CHANGE_ALIGNMENT_REASON", {
  enumerable: true,
  get: function get() {
    return _tableEvents.CHANGE_ALIGNMENT_REASON;
  }
});
Object.defineProperty(exports, "CONTENT_COMPONENT", {
  enumerable: true,
  get: function get() {
    return _enums.CONTENT_COMPONENT;
  }
});
Object.defineProperty(exports, "DELETE_DIRECTION", {
  enumerable: true,
  get: function get() {
    return _listEvents.DELETE_DIRECTION;
  }
});
Object.defineProperty(exports, "EVENT_TYPE", {
  enumerable: true,
  get: function get() {
    return _enums.EVENT_TYPE;
  }
});
Object.defineProperty(exports, "FLOATING_CONTROLS_TITLE", {
  enumerable: true,
  get: function get() {
    return _enums.FLOATING_CONTROLS_TITLE;
  }
});
Object.defineProperty(exports, "FULL_WIDTH_MODE", {
  enumerable: true,
  get: function get() {
    return _generalEvents.FULL_WIDTH_MODE;
  }
});
Object.defineProperty(exports, "GAP_CURSOR_POSITION", {
  enumerable: true,
  get: function get() {
    return _extensionEvents.GAP_CURSOR_POSITION;
  }
});
Object.defineProperty(exports, "INDENT_DIRECTION", {
  enumerable: true,
  get: function get() {
    return _formatEvents.INDENT_DIRECTION;
  }
});
Object.defineProperty(exports, "INDENT_TYPE", {
  enumerable: true,
  get: function get() {
    return _formatEvents.INDENT_TYPE;
  }
});
Object.defineProperty(exports, "INPUT_METHOD", {
  enumerable: true,
  get: function get() {
    return _enums.INPUT_METHOD;
  }
});
Object.defineProperty(exports, "INSERT_MEDIA_VIA", {
  enumerable: true,
  get: function get() {
    return _enums.INSERT_MEDIA_VIA;
  }
});
Object.defineProperty(exports, "JOIN_SCENARIOS_WHEN_TYPING_TO_INSERT_LIST", {
  enumerable: true,
  get: function get() {
    return _listEvents.JOIN_SCENARIOS_WHEN_TYPING_TO_INSERT_LIST;
  }
});
Object.defineProperty(exports, "LAYOUT_TYPE", {
  enumerable: true,
  get: function get() {
    return _nodeEvents.LAYOUT_TYPE;
  }
});
Object.defineProperty(exports, "LINK_REPRESENTATION", {
  enumerable: true,
  get: function get() {
    return _insertEvents.LINK_REPRESENTATION;
  }
});
Object.defineProperty(exports, "LINK_RESOURCE", {
  enumerable: true,
  get: function get() {
    return _insertEvents.LINK_RESOURCE;
  }
});
Object.defineProperty(exports, "LINK_STATUS", {
  enumerable: true,
  get: function get() {
    return _insertEvents.LINK_STATUS;
  }
});
Object.defineProperty(exports, "LIST_TEXT_SCENARIOS", {
  enumerable: true,
  get: function get() {
    return _listEvents.LIST_TEXT_SCENARIOS;
  }
});
Object.defineProperty(exports, "MODE", {
  enumerable: true,
  get: function get() {
    return _generalEvents.MODE;
  }
});
Object.defineProperty(exports, "OUTDENT_SCENARIOS", {
  enumerable: true,
  get: function get() {
    return _listEvents.OUTDENT_SCENARIOS;
  }
});
Object.defineProperty(exports, "PLATFORMS", {
  enumerable: true,
  get: function get() {
    return _generalEvents.PLATFORMS;
  }
});
Object.defineProperty(exports, "PUNC", {
  enumerable: true,
  get: function get() {
    return _substituteEvents.PUNC;
  }
});
Object.defineProperty(exports, "PasteContents", {
  enumerable: true,
  get: function get() {
    return _pasteEvents.PasteContents;
  }
});
Object.defineProperty(exports, "PasteSources", {
  enumerable: true,
  get: function get() {
    return _pasteEvents.PasteSources;
  }
});
Object.defineProperty(exports, "PasteTypes", {
  enumerable: true,
  get: function get() {
    return _pasteEvents.PasteTypes;
  }
});
Object.defineProperty(exports, "RESOLVE_METHOD", {
  enumerable: true,
  get: function get() {
    return _inlineCommentEvents.RESOLVE_METHOD;
  }
});
Object.defineProperty(exports, "SELECTION_POSITION", {
  enumerable: true,
  get: function get() {
    return _utils.SELECTION_POSITION;
  }
});
Object.defineProperty(exports, "SELECTION_TYPE", {
  enumerable: true,
  get: function get() {
    return _utils.SELECTION_TYPE;
  }
});
Object.defineProperty(exports, "SMART_LINK_TYPE", {
  enumerable: true,
  get: function get() {
    return _nodeEvents.SMART_LINK_TYPE;
  }
});
Object.defineProperty(exports, "SYMBOL", {
  enumerable: true,
  get: function get() {
    return _substituteEvents.SYMBOL;
  }
});
Object.defineProperty(exports, "SmartLinkNodeContexts", {
  enumerable: true,
  get: function get() {
    return _smartLinks.SmartLinkNodeContexts;
  }
});
Object.defineProperty(exports, "TABLE_ACTION", {
  enumerable: true,
  get: function get() {
    return _tableEvents.TABLE_ACTION;
  }
});
Object.defineProperty(exports, "TABLE_BREAKOUT", {
  enumerable: true,
  get: function get() {
    return _tableEvents.TABLE_BREAKOUT;
  }
});
Object.defineProperty(exports, "TABLE_DISPLAY_MODE", {
  enumerable: true,
  get: function get() {
    return _tableEvents.TABLE_DISPLAY_MODE;
  }
});
Object.defineProperty(exports, "TABLE_OVERFLOW_CHANGE_TRIGGER", {
  enumerable: true,
  get: function get() {
    return _tableEvents.TABLE_OVERFLOW_CHANGE_TRIGGER;
  }
});
Object.defineProperty(exports, "TABLE_STATUS", {
  enumerable: true,
  get: function get() {
    return _tableEvents.TABLE_STATUS;
  }
});
Object.defineProperty(exports, "TARGET_SELECTION_SOURCE", {
  enumerable: true,
  get: function get() {
    return _extensionEvents.TARGET_SELECTION_SOURCE;
  }
});
Object.defineProperty(exports, "TOOLBAR_ACTION_SUBJECT_ID", {
  enumerable: true,
  get: function get() {
    return _toolbarButton.TOOLBAR_ACTION_SUBJECT_ID;
  }
});
Object.defineProperty(exports, "TRIGGER_METHOD", {
  enumerable: true,
  get: function get() {
    return _enums.TRIGGER_METHOD;
  }
});
Object.defineProperty(exports, "USER_CONTEXT", {
  enumerable: true,
  get: function get() {
    return _insertEvents.USER_CONTEXT;
  }
});
Object.defineProperty(exports, "VIEW_METHOD", {
  enumerable: true,
  get: function get() {
    return _inlineCommentEvents.VIEW_METHOD;
  }
});
Object.defineProperty(exports, "buildEditLinkPayload", {
  enumerable: true,
  get: function get() {
    return _linkingUtils.buildEditLinkPayload;
  }
});
Object.defineProperty(exports, "buildOpenedSettingsPayload", {
  enumerable: true,
  get: function get() {
    return _linkingUtils.buildOpenedSettingsPayload;
  }
});
Object.defineProperty(exports, "buildVisitedLinkPayload", {
  enumerable: true,
  get: function get() {
    return _linkingUtils.buildVisitedLinkPayload;
  }
});
Object.defineProperty(exports, "editorAnalyticsChannel", {
  enumerable: true,
  get: function get() {
    return _fireAnalyticsEvent.editorAnalyticsChannel;
  }
});
Object.defineProperty(exports, "fireAnalyticsEvent", {
  enumerable: true,
  get: function get() {
    return _fireAnalyticsEvent.fireAnalyticsEvent;
  }
});
Object.defineProperty(exports, "getAnalyticsEventsFromTransaction", {
  enumerable: true,
  get: function get() {
    return _utils2.getAnalyticsEventsFromTransaction;
  }
});
Object.defineProperty(exports, "unlinkPayload", {
  enumerable: true,
  get: function get() {
    return _linkingUtils.unlinkPayload;
  }
});
var _enums = require("./types/enums");
var _formatEvents = require("./types/format-events");
var _substituteEvents = require("./types/substitute-events");
var _generalEvents = require("./types/general-events");
var _insertEvents = require("./types/insert-events");
var _tableEvents = require("./types/table-events");
var _pasteEvents = require("./types/paste-events");
var _listEvents = require("./types/list-events");
var _extensionEvents = require("./types/extension-events");
var _inlineCommentEvents = require("./types/inline-comment-events");
var _nodeEvents = require("./types/node-events");
var _smartLinks = require("./types/smart-links");
var _toolbarButton = require("./types/toolbar-button");
var _utils = require("./types/utils");
var _fireAnalyticsEvent = require("./fire-analytics-event");
var _utils2 = require("./utils");
var _linkingUtils = require("./linking-utils");
var _aiInlineSuggestionEvents = require("./types/ai-inline-suggestion-events");