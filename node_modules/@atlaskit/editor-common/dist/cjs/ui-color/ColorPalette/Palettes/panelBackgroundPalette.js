"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.panelDarkModeBackgroundPalette = exports.panelBackgroundPalette = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _panel = require("../../../panel");
var _common = require("./common");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
/** this is not new usage - old code extracted from editor-core */
/* eslint-disable @atlaskit/design-system/ensure-design-token-usage */
var panelBackgroundPalette = exports.panelBackgroundPalette = [{
  label: 'White',
  value: '#FFFFFF'
}, {
  label: 'Light blue',
  value: '#DEEBFF'
}, {
  label: 'Light teal',
  value: '#E6FCFF'
}, {
  label: 'Light green',
  value: '#E3FCEF'
}, {
  label: 'Light yellow',
  value: '#FFFAE6'
}, {
  label: 'Light red',
  value: '#FFEBE6'
}, {
  label: 'Light purple',
  value: '#EAE6FF'
}, {
  label: 'Light gray',
  value: '#F4F5F7'
}, {
  label: 'Blue',
  value: '#B3D4FF'
}, {
  label: 'Teal',
  value: '#B3F5FF'
}, {
  label: 'Green',
  value: '#ABF5D1'
}, {
  label: 'Yellow',
  value: '#FFF0B3'
}, {
  label: 'Red',
  value: '#FFBDAD'
}, {
  label: 'Purple',
  value: '#C0B6F2'
}, {
  label: 'Gray',
  value: '#B3BAC5'
}, {
  label: 'Dark blue',
  value: '#4C9AFF'
}, {
  label: 'Dark teal',
  value: '#79E2F2'
}, {
  label: 'Dark green',
  value: '#57D9A3'
}, {
  label: 'Dark yellow',
  value: '#FFC400'
}, {
  label: 'Dark red',
  value: '#FF8F73'
}, {
  label: 'Dark purple',
  value: '#998DD9'
}].map(function (color) {
  return _objectSpread(_objectSpread({}, color), {}, {
    border: "var(--ds-border, ".concat(_common.DEFAULT_BORDER_COLOR, ")")
  });
});
/* eslint-enable @atlaskit/design-system/ensure-design-token-usage */

var panelDarkModeBackgroundPalette = exports.panelDarkModeBackgroundPalette = [{
  label: 'Dark gray',
  value: _panel.darkPanelColors.DarkGray
}, {
  label: 'Dark blue',
  value: _panel.darkPanelColors.B1200S
}, {
  label: 'Dark teal',
  value: _panel.darkPanelColors.T1200S
}, {
  label: 'Dark green',
  value: _panel.darkPanelColors.G1200S
}, {
  label: 'Dark yellow',
  value: _panel.darkPanelColors.Y1200S
}, {
  label: 'Dark red',
  value: _panel.darkPanelColors.R1200S
}, {
  label: 'Dark purple',
  value: _panel.darkPanelColors.P1200S
}, {
  label: 'Gray',
  value: _panel.darkPanelColors.Gray
}, {
  label: 'blue',
  value: _panel.darkPanelColors.B900
}, {
  label: 'teal',
  value: _panel.darkPanelColors.T900
}, {
  label: 'green',
  value: _panel.darkPanelColors.G900
}, {
  label: 'yellow',
  value: _panel.darkPanelColors.Y900
}, {
  label: 'red',
  value: _panel.darkPanelColors.R900
}, {
  label: 'purple',
  value: _panel.darkPanelColors.P900
}, {
  label: 'Light gray',
  value: _panel.darkPanelColors.LightGray
}, {
  label: 'Light blue',
  value: _panel.darkPanelColors.B800S
}, {
  label: 'Light teal',
  value: _panel.darkPanelColors.T900S
}, {
  label: 'Light green',
  value: _panel.darkPanelColors.G900S
}, {
  label: 'Light yellow',
  value: _panel.darkPanelColors.Y800S
}, {
  label: 'Light red',
  value: _panel.darkPanelColors.R800S
}, {
  label: 'Light purple',
  value: _panel.darkPanelColors.P800S
}].map(function (color) {
  return _objectSpread(_objectSpread({}, color), {}, {
    border: _common.DEFAULT_BORDER_COLOR
  });
});