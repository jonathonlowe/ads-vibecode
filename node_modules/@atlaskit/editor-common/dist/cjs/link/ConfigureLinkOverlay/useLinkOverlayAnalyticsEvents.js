"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useLinkOverlayAnalyticsEvents = void 0;
var _react = require("react");
var _types = require("@atlaskit/analytics-listeners/types");
var _useAnalyticsEvents2 = require("@atlaskit/analytics-next/useAnalyticsEvents");
var _analytics = require("../../analytics");
var useLinkOverlayAnalyticsEvents = exports.useLinkOverlayAnalyticsEvents = function useLinkOverlayAnalyticsEvents() {
  var _useAnalyticsEvents = (0, _useAnalyticsEvents2.useAnalyticsEvents)(),
    createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;
  return (0, _react.useMemo)(function () {
    return {
      /**
       * When a user clicks go to link or configure link buttons.
       *
       * When a link is "wide" the overlay button is the configure button.
       * When a link is "narrow" the configure button is inside the dropdown.
       *
       * @param linkAction 'goToLink' when somebody clicks on the Go to link button
       * in the chevron menu; 'configureLink' when somebody clicks on the Configure button (whether it's the overlay or in the dropdown)
       */
      fireActionClickEvent: function fireActionClickEvent(linkAction) {
        createAnalyticsEvent({
          action: _analytics.ACTION.CLICKED,
          actionSubject: _analytics.ACTION_SUBJECT.BUTTON,
          eventType: _analytics.EVENT_TYPE.UI,
          attributes: {
            action: linkAction
          }
        }).fire(_types.FabricChannel.media);
      },
      /**
       * When a user clicks on the dropdown for a short link, or when a user clicks on the configure button for a wide link.
       */
      fireLinkClickEvent: function fireLinkClickEvent() {
        createAnalyticsEvent({
          action: _analytics.ACTION.CLICKED,
          actionSubject: _analytics.ACTION_SUBJECT.LINK,
          eventType: _analytics.EVENT_TYPE.UI
        }).fire(_types.FabricChannel.media);
      },
      fireToolbarViewEvent: function fireToolbarViewEvent() {
        createAnalyticsEvent({
          action: _analytics.ACTION.VIEWED,
          actionSubject: _analytics.ACTION_SUBJECT.INLINE_DIALOG,
          actionSubjectId: _analytics.ACTION_SUBJECT_ID.SMART_LINK_TOOLBAR,
          eventType: _analytics.EVENT_TYPE.UI,
          attributes: {
            linkType: 'smallLink'
          }
        }).fire(_types.FabricChannel.media);
      }
    };
  }, [createAnalyticsEvent]);
};