"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.linkSearchList = exports.default = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _react = require("react");
var _react2 = require("@emotion/react");
var _spinner = _interopRequireDefault(require("@atlaskit/spinner"));
var _LinkSearchListItem = _interopRequireDefault(require("./LinkSearchListItem"));
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } /**
 * @jsxRuntime classic
 * @jsx jsx
 */ // eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var listContainer = (0, _react2.css)({
  paddingTop: 0,
  marginTop: "var(--ds-space-150, 12px)",
  borderTop: "1px solid ".concat("var(--ds-border, #091E4224)")
});
var spinnerContainer = (0, _react2.css)({
  textAlign: 'center',
  minHeight: '80px',
  marginTop: "var(--ds-space-400, 32px)"
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var linkSearchList = exports.linkSearchList = (0, _react2.css)({
  padding: 0,
  listStyle: 'none'
});
// Ignored via go/ees005
// eslint-disable-next-line @repo/internal/react/no-class-components
var LinkSearchList = exports.default = /*#__PURE__*/function (_PureComponent) {
  function LinkSearchList() {
    (0, _classCallCheck2.default)(this, LinkSearchList);
    return _callSuper(this, LinkSearchList, arguments);
  }
  (0, _inherits2.default)(LinkSearchList, _PureComponent);
  return (0, _createClass2.default)(LinkSearchList, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        onSelect = _this$props.onSelect,
        onMouseMove = _this$props.onMouseMove,
        onMouseEnter = _this$props.onMouseEnter,
        onMouseLeave = _this$props.onMouseLeave,
        items = _this$props.items,
        selectedIndex = _this$props.selectedIndex,
        isLoading = _this$props.isLoading,
        ariaControls = _this$props.ariaControls,
        role = _this$props.role,
        id = _this$props.id;
      var itemsContent;
      var loadingContent;
      if (items && items.length > 0) {
        itemsContent = (0, _react2.jsx)("ul", {
          css: linkSearchList,
          id: id,
          role: role,
          "aria-controls": ariaControls
        }, items.map(function (item, index) {
          return (0, _react2.jsx)(_LinkSearchListItem.default, {
            id: "link-search-list-item-".concat(index),
            role: role && 'option',
            item: item,
            selected: selectedIndex === index,
            onMouseMove: onMouseMove,
            onMouseEnter: onMouseEnter,
            onMouseLeave: onMouseLeave,
            onSelect: onSelect,
            key: item.objectId
          });
        }));
      }
      if (isLoading) {
        loadingContent = (0, _react2.jsx)("div", {
          "data-testid": "".concat(id, "-loading"),
          css: spinnerContainer
        }, (0, _react2.jsx)(_spinner.default, {
          size: "medium",
          interactionName: "link-search-spinner"
        }));
      }
      return (0, _react2.jsx)("div", {
        css: listContainer
      }, itemsContent, loadingContent);
    }
  }]);
}(_react.PureComponent);