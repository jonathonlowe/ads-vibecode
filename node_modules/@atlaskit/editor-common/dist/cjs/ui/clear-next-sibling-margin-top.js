"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clearNextSiblingMarginTopStyle = exports.clearNextSiblingBlockMarkMarginTopStyle = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = require("@emotion/react");
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

// We use !important to ensure next sibling gets the margin reset no matter what

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var clearNextSiblingMarginTopStyle = exports.clearNextSiblingMarginTopStyle = (0, _react.css)({
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  '& + *': {
    // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage/preview, @atlaskit/ui-styling-standard/no-important-styles -- Ignored via go/DSP-18766
    marginTop: '0 !important'
  }
});
var textElements = ['p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'];
var nextSiblingBlockMarkContentSelectors = textElements.map(function (elem) {
  return "+ .fabric-editor-block-mark > ".concat(elem);
}).join(',');

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var clearNextSiblingBlockMarkMarginTopStyle = exports.clearNextSiblingBlockMarkMarginTopStyle = (0, _react.css)((0, _defineProperty2.default)({}, "".concat(nextSiblingBlockMarkContentSelectors), {
  // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage/preview, @atlaskit/ui-styling-standard/no-important-styles -- Ignored via go/DSP-18766
  marginTop: '0 !important'
}));