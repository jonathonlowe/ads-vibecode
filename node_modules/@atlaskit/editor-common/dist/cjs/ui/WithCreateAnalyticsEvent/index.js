"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WithCreateAnalyticsEvent = void 0;
var _readOnlyError2 = _interopRequireDefault(require("@babel/runtime/helpers/readOnlyError"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _react = _interopRequireDefault(require("react"));
var _withAnalyticsEvents = _interopRequireDefault(require("@atlaskit/analytics-next/withAnalyticsEvents"));
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var WithCreateAnalyticsEvent = exports.WithCreateAnalyticsEvent = (0, _withAnalyticsEvents.default)()( /*#__PURE__*/function (_React$Component) {
  function WithCreateAnalyticsEvent() {
    (0, _classCallCheck2.default)(this, WithCreateAnalyticsEvent);
    return _callSuper(this, WithCreateAnalyticsEvent, arguments);
  }
  (0, _inherits2.default)(WithCreateAnalyticsEvent, _React$Component);
  return (0, _createClass2.default)(WithCreateAnalyticsEvent, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        render = _this$props.render,
        createAnalyticsEvent = _this$props.createAnalyticsEvent;
      return render(createAnalyticsEvent);
    }
  }]);
}(_react.default.Component));