"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _element = require("@atlaskit/emoji/element");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var EmojiNodeFunctional = function EmojiNodeFunctional(props) {
  var _resourceConfig$optim;
  var allowTextFallback = props.allowTextFallback,
    shortName = props.shortName,
    id = props.id,
    fallback = props.fallback,
    fitToHeight = props.fitToHeight,
    showTooltip = props.showTooltip,
    resourceConfig = props.resourceConfig,
    emojiProvider = props.emojiProvider;
  var emojiId = (0, _react.useMemo)(function () {
    return {
      shortName: shortName,
      id: id,
      fallback: fallback
    };
  }, [shortName, id, fallback]);
  var emojiProviderResolver = (0, _react.useMemo)(function () {
    return Promise.resolve(emojiProvider);
  }, [emojiProvider]);
  if (allowTextFallback && !emojiProvider) {
    return /*#__PURE__*/_react.default.createElement("span", {
      "data-emoji-id": id,
      "data-emoji-short-name": shortName,
      "data-emoji-text": fallback || shortName
    }, fallback || shortName);
  }
  if (!emojiProvider) {
    return null;
  }
  return /*#__PURE__*/_react.default.createElement(_element.ResourcedEmoji, {
    emojiId: emojiId,
    emojiProvider: emojiProviderResolver,
    showTooltip: showTooltip,
    fitToHeight: fitToHeight,
    optimistic: true,
    optimisticImageURL: resourceConfig === null || resourceConfig === void 0 || (_resourceConfig$optim = resourceConfig.optimisticImageApi) === null || _resourceConfig$optim === void 0 ? void 0 : _resourceConfig$optim.getUrl({
      id: id,
      fallback: fallback,
      shortName: shortName
    }),
    editorEmoji: true
  });
};
var EmojiNode = function EmojiNode(props) {
  // Ignored via go/ees005
  // eslint-disable-next-line react/jsx-props-no-spreading
  return /*#__PURE__*/_react.default.createElement(EmojiNodeFunctional, props);
};
var _default = exports.default = /*#__PURE__*/_react.default.memo(EmojiNode);