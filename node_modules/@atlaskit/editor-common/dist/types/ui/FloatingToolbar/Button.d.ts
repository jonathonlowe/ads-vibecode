import React from 'react';
import { type TooltipProps } from '@atlaskit/tooltip';
import type { ButtonAppearance } from '../../types';
import type { FloatingToolbarButtonSpotlightConfig } from '../../types/floating-toolbar';
export interface Props {
    title?: string;
    icon?: React.ReactElement<any>;
    iconAfter?: React.ReactElement<any>;
    onClick?: React.MouseEventHandler;
    onKeyDown?: React.KeyboardEventHandler;
    onMouseEnter?: <T>(event: React.MouseEvent<T>) => void;
    onMouseLeave?: <T>(event: React.MouseEvent<T>) => void;
    onFocus?: <T>(event: React.FocusEvent<T>) => void;
    onBlur?: <T>(event: React.FocusEvent<T>) => void;
    onMount?: () => void;
    onUnmount?: () => void;
    selected?: boolean;
    disabled?: boolean;
    appearance?: ButtonAppearance;
    ariaHasPopup?: boolean | 'dialog' | 'menu' | 'listbox' | 'tree' | 'grid' | undefined;
    ariaLabel?: string;
    href?: string;
    target?: string;
    children?: React.ReactNode;
    className?: string;
    tooltipContent?: TooltipProps['content'];
    tooltipStyle?: React.ForwardRefExoticComponent<any> | React.ComponentType<any>;
    testId?: string;
    interactionName?: string;
    hideTooltipOnClick?: boolean;
    tabIndex?: number | null | undefined;
    areaControls?: string;
    isRadioButton?: boolean;
    /** If true, the component will have pulse onboarding effect around it. */
    pulse?: boolean;
    spotlightConfig?: FloatingToolbarButtonSpotlightConfig;
}
declare const _default: ({ title, icon, iconAfter, onClick, onKeyDown, onMouseEnter, onMouseLeave, onFocus, onBlur, onMount, onUnmount, selected, disabled, href, target, appearance, children, className, tooltipContent, tooltipStyle, testId, interactionName, hideTooltipOnClick, ariaHasPopup, tabIndex, areaControls, ariaLabel, isRadioButton, pulse, spotlightConfig, }: Props) => React.JSX.Element;
export default _default;
