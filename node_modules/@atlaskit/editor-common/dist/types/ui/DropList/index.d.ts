/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import type { ReactNode } from 'react';
import type { WithAnalyticsEventsProps } from '@atlaskit/analytics-next';
export interface Props extends WithAnalyticsEventsProps {
    isOpen?: boolean;
    trigger?: React.ReactNode;
    position: string;
    onOpenChange?: (event: OpenChangedEvent) => void;
    onPositioned?: () => void;
    testId?: string;
    shouldFitContainer: boolean;
    children?: ReactNode;
    id?: string;
    onDroplistRef?: (ref: HTMLDivElement | null) => unknown;
}
export type OpenChangedEvent = {
    isOpen: boolean;
    event: MouseEvent | KeyboardEvent;
};
declare const _default: import("react").ForwardRefExoticComponent<Omit<Omit<Props, keyof WithAnalyticsEventsProps> & import("react").RefAttributes<any> & import("@atlaskit/analytics-next").WithContextProps, "ref"> & import("react").RefAttributes<any>>;
export default _default;
