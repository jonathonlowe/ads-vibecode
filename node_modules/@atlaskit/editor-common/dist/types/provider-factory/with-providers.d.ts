import { PureComponent } from 'react';
import type ProviderFactory from './provider-factory';
import { type ProviderName, type Providers } from './types';
export interface Props {
    providerFactory: ProviderFactory;
    providers: ProviderName[];
    renderNode: (providers: Providers) => JSX.Element | null;
}
export declare class WithProviders extends PureComponent<Props, {
    providers: any;
}> {
    static displayName: string;
    mounted: boolean;
    constructor(props: Props);
    componentDidMount(): void;
    componentWillUnmount(): void;
    handleProviderIfMounted: (name: string, provider?: Promise<any>) => void;
    handleProvider: (name: string, provider?: Promise<any>) => void;
    render(): JSX.Element | null;
}
