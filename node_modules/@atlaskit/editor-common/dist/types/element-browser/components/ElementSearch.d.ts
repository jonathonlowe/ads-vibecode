/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';
import type { WrappedComponentProps } from 'react-intl-next';
import type { QuickInsertItem } from '../../provider-factory';
import { Modes } from '../types';
interface Props {
    onSearch: (value: string) => void;
    mode: keyof typeof Modes;
    focus: boolean;
    onClick: (e: React.MouseEvent) => void;
    onKeyDown: (e: React.KeyboardEvent) => void;
    searchTerm?: string;
    items: QuickInsertItem[];
    selectedItemIndex?: number;
}
declare const MemoizedElementSearchWithAnalytics: React.MemoExoticComponent<React.ForwardRefExoticComponent<Omit<Props & WrappedComponentProps, "intl"> & {
    forwardedRef?: React.Ref<any> | undefined;
} & import("@atlaskit/analytics-next/withAnalyticsContext").WithContextProps & React.RefAttributes<any>>>;
export default MemoizedElementSearchWithAnalytics;
