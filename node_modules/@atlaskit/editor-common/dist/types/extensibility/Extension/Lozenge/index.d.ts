/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { Component } from 'react';
import type { CSSProperties } from 'react';
import { jsx } from '@emotion/react';
import type { Node as PmNode } from '@atlaskit/editor-prosemirror/model';
import { type ExtensionsPluginInjectionAPI } from '../../types';
export interface Props {
    node: PmNode;
    showMacroInteractionDesignUpdates?: boolean;
    isNodeSelected?: boolean;
    isNodeHovered?: boolean;
    isNodeNested?: boolean;
    customContainerStyles?: CSSProperties;
    setIsNodeHovered?: (isHovered: boolean) => void;
    isBodiedMacro?: boolean;
    showLivePagesBodiedMacrosRendererView?: boolean;
    showUpdatedLivePages1PBodiedExtensionUI?: boolean;
    showBodiedExtensionRendererView?: boolean;
    setShowBodiedExtensionRendererView?: (showBodiedExtensionRendererView: boolean) => void;
    pluginInjectionApi?: ExtensionsPluginInjectionAPI;
}
export interface LozengeData {
    url: string;
    height?: number;
    width?: number;
}
export default class ExtensionLozenge extends Component<Props, any> {
    render(): jsx.JSX.Element;
    private renderImage;
    private renderFallback;
}
