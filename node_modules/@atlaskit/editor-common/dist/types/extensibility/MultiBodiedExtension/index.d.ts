/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';
import { jsx } from '@emotion/react';
import type { Node as PmNode } from '@atlaskit/editor-prosemirror/model';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { EventDispatcher } from '../../event-dispatcher';
import type { MultiBodiedExtensionActions } from '../../extensions';
import type { EditorAppearance } from '../../types';
import type { OverflowShadowProps } from '../../ui';
import type { ExtensionsPluginInjectionAPI, MacroInteractionDesignFeatureFlags } from '../types';
export type TryExtensionHandlerType = (actions: MultiBodiedExtensionActions | undefined) => React.ReactElement | null;
type Props = {
    node: PmNode;
    handleContentDOMRef: (node: HTMLElement | null) => void;
    editorView: EditorView;
    getPos: () => number | undefined;
    tryExtensionHandler: TryExtensionHandlerType;
    eventDispatcher?: EventDispatcher;
    pluginInjectionApi?: ExtensionsPluginInjectionAPI;
    editorAppearance?: EditorAppearance;
    macroInteractionDesignFeatureFlags?: MacroInteractionDesignFeatureFlags;
    isNodeSelected?: boolean;
    isNodeHovered?: boolean;
    isNodeNested?: boolean;
    setIsNodeHovered?: (isHovered: boolean) => void;
    isLivePageViewMode?: boolean;
    allowBodiedOverride?: boolean;
};
declare const MultiBodiedExtension: (props: Props & OverflowShadowProps) => jsx.JSX.Element;
export default MultiBodiedExtension;
