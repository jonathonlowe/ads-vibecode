/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';
import type { WithAnalyticsEventsProps } from '@atlaskit/analytics-next';
import type { PaletteColor, PaletteTooltipMessages } from '../../ui-color';
import type { Position as PopupPosition } from '../../ui/Popup/utils';
declare const _default: React.ForwardRefExoticComponent<Omit<Omit<{
    currentColor?: string | undefined;
    title?: string | undefined;
    isAriaExpanded?: boolean | undefined;
    onChange?: ((color: PaletteColor) => void) | undefined;
    colorPalette: PaletteColor[];
    placement: string;
    cols?: number | undefined;
    alignX?: "end" | "left" | "right" | "center" | undefined;
    size?: {
        width: string;
        height: string;
    } | undefined;
    mountPoint?: HTMLElement | undefined;
    setDisableParentScroll?: ((disable: boolean) => void) | undefined;
    hexToPaletteColor?: ((hexColor: string) => string | undefined) | undefined;
    paletteColorTooltipMessages?: PaletteTooltipMessages | undefined;
    /**
     * After picking the color the default behaviour is to focus the color picker button.
     * To prevent this use skipFocusButtonAfterPick.
     */
    skipFocusButtonAfterPick?: boolean | undefined;
    absoluteOffset?: PopupPosition | undefined;
    returnEscToButton?: boolean | undefined;
}, keyof WithAnalyticsEventsProps> & React.RefAttributes<any> & import("@atlaskit/analytics-next").WithContextProps, "ref"> & React.RefAttributes<any>>;
export default _default;
