import React from 'react';
import { type EditorView } from '@atlaskit/editor-prosemirror/view';
import { LazyLinkPicker } from '@atlaskit/link-picker/lazy';
import type { Command, EditorAppearance } from '../../../types';
/**
 * Returns a type that matches T but where keys (K) are now optional
 */
type OptionalKeys<T extends Object, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;
export interface EditorLinkPickerProps extends OptionalKeys<React.ComponentProps<typeof LazyLinkPicker>, 'onCancel'> {
    view: EditorView;
    /**
     * Used for analytics purposes to describe how the link picker was invoked
     * Should be roughly equivalent to the `inputMethod` analytics value
     */
    invokeMethod?: string;
    editorAppearance?: EditorAppearance;
    /** Callback to execute on unmount */
    onClose?: () => void;
    onEscapeCallback?: Command;
    onClickAwayCallback?: Command;
}
export declare const EditorLinkPicker: ({ view, onCancel, invokeMethod, editorAppearance, onClose, onEscapeCallback, onClickAwayCallback, ...restProps }: EditorLinkPickerProps) => React.JSX.Element;
export {};
