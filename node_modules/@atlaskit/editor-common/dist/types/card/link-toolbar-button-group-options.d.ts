/// <reference types="react" />
import { type IntlShape } from 'react-intl-next';
import type { Command } from '../types';
import type { ButtonOptionProps } from './LinkToolbarButtonGroup';
import type { OptionConfig } from './types';
export declare const appearancePropsMap: {
    url: {
        title: {
            id: string;
            defaultMessage: string;
            description: string;
        };
        icon: {
            (props: import("@atlaskit/icon").NewCoreIconProps): JSX.Element;
            displayName: string;
        };
        iconFallback: (props: import("@atlaskit/icon").NewCoreIconProps) => import("react").JSX.Element;
    };
    inline: {
        title: {
            id: string;
            defaultMessage: string;
            description: string;
        };
        icon: {
            (props: import("@atlaskit/icon").NewCoreIconProps): JSX.Element;
            displayName: string;
        };
        iconFallback: (props: import("@atlaskit/icon").NewIconProps) => import("react").JSX.Element;
    };
    block: {
        title: {
            id: string;
            defaultMessage: string;
            description: string;
        };
        icon: {
            (props: import("@atlaskit/icon").NewCoreIconProps): JSX.Element;
            displayName: string;
        };
        iconFallback: (props: import("@atlaskit/icon").NewIconProps) => import("react").JSX.Element;
    };
    embed: {
        title: {
            id: string;
            defaultMessage: string;
            description: string;
        };
        icon: {
            (props: import("@atlaskit/icon").NewCoreIconProps): JSX.Element;
            displayName: string;
        };
        iconFallback: (props: import("@atlaskit/icon").NewIconProps) => import("react").JSX.Element;
    };
};
export declare const getButtonGroupOption: (intl: IntlShape, dispatchCommand: (command: Command) => void, { disabled, onClick, selected, appearance, testId, tooltip }: OptionConfig) => ButtonOptionProps;
