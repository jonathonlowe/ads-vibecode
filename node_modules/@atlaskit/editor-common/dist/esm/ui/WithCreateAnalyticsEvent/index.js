import _readOnlyError from "@babel/runtime/helpers/readOnlyError";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
import React from 'react';
import withAnalyticsEvents from '@atlaskit/analytics-next/withAnalyticsEvents';
export var WithCreateAnalyticsEvent = withAnalyticsEvents()( /*#__PURE__*/function (_React$Component) {
  function WithCreateAnalyticsEvent() {
    _classCallCheck(this, WithCreateAnalyticsEvent);
    return _callSuper(this, WithCreateAnalyticsEvent, arguments);
  }
  _inherits(WithCreateAnalyticsEvent, _React$Component);
  return _createClass(WithCreateAnalyticsEvent, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        render = _this$props.render,
        createAnalyticsEvent = _this$props.createAnalyticsEvent;
      return render(createAnalyticsEvent);
    }
  }]);
}(React.Component));