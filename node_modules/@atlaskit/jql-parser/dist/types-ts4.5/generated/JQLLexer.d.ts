import { ATN } from 'antlr4ts/atn/ATN';
import { CharStream } from 'antlr4ts/CharStream';
import { Lexer } from 'antlr4ts/Lexer';
import { Vocabulary } from 'antlr4ts/Vocabulary';
export declare class JQLLexer extends Lexer {
    static readonly LPAREN = 1;
    static readonly RPAREN = 2;
    static readonly COMMA = 3;
    static readonly LBRACKET = 4;
    static readonly RBRACKET = 5;
    static readonly BANG = 6;
    static readonly LT = 7;
    static readonly GT = 8;
    static readonly GTEQ = 9;
    static readonly LTEQ = 10;
    static readonly EQUALS = 11;
    static readonly NOT_EQUALS = 12;
    static readonly LIKE = 13;
    static readonly NOT_LIKE = 14;
    static readonly IN = 15;
    static readonly IS = 16;
    static readonly AND = 17;
    static readonly OR = 18;
    static readonly NOT = 19;
    static readonly EMPTY = 20;
    static readonly WAS = 21;
    static readonly CHANGED = 22;
    static readonly BEFORE = 23;
    static readonly AFTER = 24;
    static readonly FROM = 25;
    static readonly TO = 26;
    static readonly ON = 27;
    static readonly DURING = 28;
    static readonly ORDER = 29;
    static readonly BY = 30;
    static readonly ASC = 31;
    static readonly DESC = 32;
    static readonly POSNUMBER = 33;
    static readonly NEGNUMBER = 34;
    static readonly CUSTOMFIELD = 35;
    static readonly RESERVED_WORD = 36;
    static readonly STRING = 37;
    static readonly MATCHWS = 38;
    static readonly ERROR_RESERVED = 39;
    static readonly ERRORCHAR = 40;
    static readonly QUOTE_STRING = 41;
    static readonly UNCLOSED_QUOTE_STRING = 42;
    static readonly INVALID_QUOTE_STRING = 43;
    static readonly SQUOTE_STRING = 44;
    static readonly UNCLOSED_SQUOTE_STRING = 45;
    static readonly INVALID_SQUOTE_STRING = 46;
    static readonly QUOTED_STR = 1;
    static readonly SQUOTED_STR = 2;
    static readonly channelNames: string[];
    static readonly modeNames: string[];
    static readonly ruleNames: string[];
    private static readonly _LITERAL_NAMES;
    private static readonly _SYMBOLIC_NAMES;
    static readonly VOCABULARY: Vocabulary;
    get vocabulary(): Vocabulary;
    constructor(input: CharStream);
    get grammarFileName(): string;
    get ruleNames(): string[];
    get serializedATN(): string;
    get channelNames(): string[];
    get modeNames(): string[];
    private static readonly _serializedATNSegments;
    private static readonly _serializedATNSegment0;
    private static readonly _serializedATNSegment1;
    private static readonly _serializedATNSegment2;
    static readonly _serializedATN: string;
    static __ATN: ATN;
    static get _ATN(): ATN;
}
