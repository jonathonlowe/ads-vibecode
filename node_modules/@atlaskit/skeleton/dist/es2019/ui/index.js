/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import "./index.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
const shimmerKeyframes = null;
const skeletonStyles = null;
const activeShimmerStyles = null;

/**
 * __Skeleton__
 *
 * A skeleton acts as a placeholder for content, usually while the content loads.
 *
 * - [Examples](https://atlassian.design/components/skeleton/examples)
 * - [Code](https://atlassian.design/components/skeleton/code)
 */
const Skeleton = ({
  width,
  height,
  borderRadius = '100px',
  color,
  ShimmeringEndColor,
  isShimmering = false,
  groupName,
  testId
}) => {
  const groupDataAttribute = groupName && `data-${groupName}`;
  return /*#__PURE__*/React.createElement("div", _extends({
    "data-testid": testId,
    style: {
      width,
      height,
      borderRadius,
      backgroundColor: color,
      // Override the keyframes if both colors are provided, otherwise use the CSS variable fallbacks in our keyframes
      '--ds-skeleton-from-color': color && ShimmeringEndColor ? color : undefined,
      '--ds-skeleton-to-color': color && ShimmeringEndColor ? ShimmeringEndColor : undefined
    }
  }, groupDataAttribute && {
    [groupDataAttribute]: 'true'
  }, {
    className: ax(["_7hjf1yy8 _5sag12o8 _tip812c5 _1pglp3kn _bfhkn82g", isShimmering && "", isShimmering && "_j7hq1y0p"])
  }));
};
export default Skeleton;