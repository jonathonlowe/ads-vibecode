import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import { Interval } from 'antlr4ts/misc/Interval';
export var getMatchedText = function getMatchedText(tokenStream, startTokenIndex, stopToken, caretSelectionRange) {
  var matchedText = tokenStream.getText(Interval.of(startTokenIndex, stopToken.tokenIndex));
  var _caretSelectionRange = _slicedToArray(caretSelectionRange, 1),
    caretStartPosition = _caretSelectionRange[0];
  var tokenStopPosition = stopToken.stopIndex + 1;

  // We only want to return the text preceding the caret. If our caret starts before our stop token
  // ends then we need to slice all the characters after the caret from our matched text.
  if (caretStartPosition < tokenStopPosition) {
    var end = caretStartPosition - tokenStopPosition;
    return matchedText.slice(0, end);
  }
  return matchedText;
};