/* dismiss-button.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./dismiss-button.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { memo } from 'react';
import CloseIcon from '@atlaskit/icon/core/migration/close--cross';
import ChevronDownIcon from '@atlaskit/icon/utility/migration/chevron-down--hipchat-chevron-down';
import ChevronUpIcon from '@atlaskit/icon/utility/migration/chevron-up--hipchat-chevron-up';
import { Pressable } from '@atlaskit/primitives/compiled';
import { flagTextColorToken } from '../theme';
const styles = {
  button: "_16jlidpf _1o9zidpf _i0dl1wug _1dqoglyw _1e0c1txw _1bsb1tcg _4t3i1tcg _ca0qze3t _u5f3ze3t _n3tdze3t _19bvze3t _4cvr1h6o _1bah1h6o _80omtlke _o5721q9c"
};
const DismissButtonComponent = ({
  appearance,
  onClick,
  isBold,
  isExpanded,
  testId
}) => {
  let ButtonIcon = CloseIcon;
  let buttonLabel = 'Dismiss';
  let size = 'small';
  let buttonTestId = testId && `${testId}-dismiss`;
  if (isBold) {
    ButtonIcon = isExpanded ? ChevronUpIcon : ChevronDownIcon;
    buttonLabel = isExpanded ? 'Collapse' : 'Expand';
    size = 'medium';
    buttonTestId = testId && `${testId}-toggle`;
  }
  return /*#__PURE__*/React.createElement(Pressable, {
    xcss: styles.button,
    onClick: onClick
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop
    ,
    style: {
      background: 'none'
    },
    "aria-expanded": isBold ? isExpanded : undefined,
    testId: buttonTestId,
    "aria-label": buttonLabel
  }, /*#__PURE__*/React.createElement(ButtonIcon, {
    label: "",
    LEGACY_size: size,
    LEGACY_primaryColor: flagTextColorToken[appearance],
    color: flagTextColorToken[appearance]
  }));
};
const DismissButton = /*#__PURE__*/memo(DismissButtonComponent);

// eslint-disable-next-line @repo/internal/react/require-jsdoc
export default DismissButton;