/* flag.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
require("./flag.compiled.css");
var _react = _interopRequireWildcard(require("react"));
var React = _react;
var _runtime = require("@compiled/react/runtime");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _usePlatformLeafEventHandler = require("@atlaskit/analytics-next/usePlatformLeafEventHandler");
var _noop = _interopRequireDefault(require("@atlaskit/ds-lib/noop"));
var _heading = _interopRequireDefault(require("@atlaskit/heading"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _compiled = require("@atlaskit/primitives/compiled");
var _visuallyHidden = _interopRequireDefault(require("@atlaskit/visually-hidden"));
var _constants = require("./constants");
var _flagActions = _interopRequireDefault(require("./flag-actions"));
var _flagGroup = require("./flag-group");
var _internal = require("./internal");
var _theme = require("./theme");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var styles = {
  overflowWrap: "_1i4qfg65",
  flag: "_2rkosqtm _1reo15vq _18m915vq _v564z97a _16qs8sq4 _1pbyni7l _1bsb1osq"
};
var CSS_VAR_ICON_COLOR = '--flag-icon-color';
var oldDescriptionStyles = null;
var descriptionStyles = null;
var oldIconWrapperStyles = null;
var iconWrapperStyles = null;
var flagWrapperStyles = null;
var analyticsAttributes = {
  componentName: 'flag',
  packageName: "@atlaskit/flag",
  packageVersion: "17.1.3"
};
var transitionStyles = null;

/**
 * __Flag__
 *
 * A flag is used for confirmations, alerts, and acknowledgments that require minimal user interaction,
 * often displayed using a flag group.
 *
 * - [Examples](https://atlassian.design/components/flag/examples)
 * - [Code](https://atlassian.design/components/flag/code)
 * - [Usage](https://atlassian.design/components/flag/usage)
 */
var Flag = function Flag(props) {
  var _props$actions = props.actions,
    actions = _props$actions === void 0 ? [] : _props$actions,
    _props$appearance = props.appearance,
    appearance = _props$appearance === void 0 ? _constants.DEFAULT_APPEARANCE : _props$appearance,
    icon = props.icon,
    title = props.title,
    description = props.description,
    linkComponent = props.linkComponent,
    onMouseOver = props.onMouseOver,
    _props$onFocus = props.onFocus,
    onFocus = _props$onFocus === void 0 ? _noop.default : _props$onFocus,
    onMouseOut = props.onMouseOut,
    _props$onBlur = props.onBlur,
    onBlur = _props$onBlur === void 0 ? _noop.default : _props$onBlur,
    _props$onDismissed = props.onDismissed,
    onDismissedProp = _props$onDismissed === void 0 ? _noop.default : _props$onDismissed,
    testId = props.testId,
    id = props.id,
    analyticsContext = props.analyticsContext,
    delayAnnouncement = props.delayAnnouncement,
    _props$headingLevel = props.headingLevel,
    headingLevel = _props$headingLevel === void 0 ? 2 : _props$headingLevel;
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    isDelayToAnnounce = _useState2[0],
    setIsDelayToAnnounce = _useState2[1];
  var _useFlagGroup = (0, _flagGroup.useFlagGroup)(),
    onDismissedFromFlagGroup = _useFlagGroup.onDismissed,
    isDismissAllowed = _useFlagGroup.isDismissAllowed;
  var onDismissed = (0, _react.useCallback)(function (id, analyticsEvent) {
    onDismissedProp(id, analyticsEvent);
    onDismissedFromFlagGroup(id, analyticsEvent);
  }, [onDismissedProp, onDismissedFromFlagGroup]);
  var _useState3 = (0, _react.useState)(false),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    isExpanded = _useState4[0],
    setIsExpanded = _useState4[1];
  var onDismissedAnalytics = (0, _usePlatformLeafEventHandler.usePlatformLeafEventHandler)(_objectSpread({
    fn: onDismissed,
    action: 'dismissed',
    analyticsData: analyticsContext
  }, analyticsAttributes));
  var isBold = appearance !== _constants.DEFAULT_APPEARANCE;
  var toggleExpand = (0, _react.useCallback)(function () {
    setIsExpanded(function (previous) {
      return !previous;
    });
  }, []);
  var buttonActionCallback = (0, _react.useCallback)(function () {
    if (isDismissAllowed) {
      onDismissedAnalytics(id);
    }
  }, [onDismissedAnalytics, id, isDismissAllowed]);
  (0, _react.useEffect)(function () {
    // If buttons are removed as a prop, update isExpanded to be false
    if (isBold && isExpanded && !description && !actions.length) {
      setIsExpanded(false);
    }
  }, [actions.length, description, isBold, isExpanded]);
  (0, _react.useEffect)(function () {
    if (!delayAnnouncement) {
      return;
    }
    setTimeout(function () {
      setIsDelayToAnnounce(true);
    }, delayAnnouncement);
  }, [delayAnnouncement]);
  var onFocusAnalytics = (0, _usePlatformLeafEventHandler.usePlatformLeafEventHandler)(_objectSpread({
    fn: onFocus,
    action: 'focused',
    analyticsData: analyticsContext
  }, analyticsAttributes));
  var onBlurAnalytics = (0, _usePlatformLeafEventHandler.usePlatformLeafEventHandler)(_objectSpread({
    fn: onBlur,
    action: 'blurred',
    analyticsData: analyticsContext
  }, analyticsAttributes));
  var autoDismissProps = {
    onMouseOver: onMouseOver,
    onFocus: onFocusAnalytics,
    onMouseOut: onMouseOut,
    onBlur: onBlurAnalytics
  };
  var textColor = _theme.flagTextColor[appearance];
  var iconColor = _theme.flagIconColor[appearance];
  var iconGlyph = _theme.flagIconGlyph[appearance];
  var isDismissable = isBold || isDismissAllowed;
  var shouldRenderGap = !isBold && (description || actions.length) || isExpanded;
  // when delayAnnouncement is available we will use a hidden content for announcement
  var delayedAnnouncement = delayAnnouncement ? /*#__PURE__*/React.createElement(_visuallyHidden.default, null, title, description) : undefined;
  return /*#__PURE__*/React.createElement("div", (0, _extends2.default)({
    role: "alert",
    "data-testid": testId
  }, autoDismissProps, {
    className: (0, _runtime.ax)(["_1bsb1osq"])
  }), /*#__PURE__*/React.createElement(_compiled.Box, {
    padding: "space.200",
    backgroundColor: _theme.flagBackgroundColor[appearance],
    xcss: styles.flag
  }, /*#__PURE__*/React.createElement(_compiled.Inline, {
    alignBlock: (0, _platformFeatureFlags.fg)('platform_ads_component_no_icon_spacing_support') ? 'start' : 'stretch',
    space: "space.200"
  }, /*#__PURE__*/React.createElement("div", {
    "data-testid": testId && "".concat(testId, "-icon-container"),
    className: (0, _runtime.ax)([(0, _platformFeatureFlags.fg)('platform_ads_component_no_icon_spacing_support') ? "_1e0c1txw _1ul91tcg _1tke1tcg _4cvr1h6o _1bah1h6o _1o9zidpf _syaz16r9" : "_1e0c1txw _4cvrv2br _1o9zidpf _syaz16r9"]),
    style: _objectSpread(_objectSpread({}, (0, _defineProperty2.default)({}, CSS_VAR_ICON_COLOR, iconColor)), {}, {
      "--_11v68d2": (0, _runtime.ix)("var(".concat(CSS_VAR_ICON_COLOR, ")"))
    })
  }, icon || (iconGlyph && (0, _platformFeatureFlags.fg)('platform_ads_component_no_icon_spacing_support') ? iconGlyph : null)), /*#__PURE__*/React.createElement("span", {
    className: (0, _runtime.ax)(["_v5641hdc _16jlkb7n"])
  }, /*#__PURE__*/React.createElement(_compiled.Stack, {
    space: shouldRenderGap ? 'space.100' : 'space.0' // Gap exists even when not expanded due to Expander internals always being in the DOM
  }, isDelayToAnnounce && delayedAnnouncement, /*#__PURE__*/React.createElement(_compiled.Inline, {
    alignBlock: "stretch",
    space: "space.100",
    spread: "space-between"
  }, /*#__PURE__*/React.createElement(_compiled.Box, {
    paddingBlockStart: "space.050",
    paddingBlockEnd: "space.025",
    xcss: styles.overflowWrap
  }, /*#__PURE__*/React.createElement(_heading.default, {
    as: "h".concat(headingLevel),
    size: "xsmall",
    color: textColor
  }, /*#__PURE__*/React.createElement("span", {
    /* if isDelayToAnnounce is true, we will hide the content form screen reader to avoid duplicate announcement */
    "aria-hidden": isDelayToAnnounce
  }, title))), isDismissable ? !(isBold && !description && !actions.length) && /*#__PURE__*/React.createElement(_internal.DismissButton, {
    testId: testId,
    appearance: appearance,
    isBold: isBold,
    isExpanded: isExpanded,
    onClick: isBold ? toggleExpand : buttonActionCallback
  }) : null), /*#__PURE__*/React.createElement(_internal.Expander, {
    isExpanded: !isBold || isExpanded,
    testId: testId
  }, description && /*#__PURE__*/React.createElement("div", {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    style: {
      color: _theme.flagTextColorToken[appearance]
    },
    "data-testid": testId && "".concat(testId, "-description")
    /* if isDelayToAnnounce is true, we will hide the content form screen reader to avoid duplicate announcement */,
    "aria-hidden": isDelayToAnnounce,
    className: (0, _runtime.ax)([(0, _platformFeatureFlags.fg)('platform_ads_explicit_font_styles') ? "_11c82smr _1reo1wug _18m91wug _c71l53f4 _1i4qfg65" : "_1reo1wug _18m91wug _c71l53f4 _1i4qfg65"])
  }, description), /*#__PURE__*/React.createElement(_flagActions.default, {
    actions: actions,
    appearance: appearance,
    linkComponent: linkComponent,
    testId: testId
  })))))));
};
var _default = exports.default = Flag;