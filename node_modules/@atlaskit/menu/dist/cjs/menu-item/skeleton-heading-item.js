"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("@emotion/react");
var _deprecationWarning = require("@atlaskit/ds-lib/deprecation-warning");
var _noop = _interopRequireDefault(require("@atlaskit/ds-lib/noop"));
var _colors = require("@atlaskit/theme/colors");
var _skeletonShimmer = _interopRequireDefault(require("../internal/components/skeleton-shimmer"));
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var skeletonStyles = (0, _react.css)({
  paddingBlock: "var(--ds-space-0, 0px)",
  paddingInline: "var(--ds-space-200, 16px)",
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  '::after': {
    display: 'block',
    width: '30%',
    height: "var(--ds-space-100, 8px)",
    backgroundColor: "var(--ds-skeleton, ".concat(_colors.N20A, ")"),
    borderRadius: 100,
    content: '""'
  }
});
var defaultWidthStyles = (0, _react.css)({
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  '::after': {
    width: '30%'
  }
});
var customWidthStyles = (0, _react.css)({
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  '::after': {
    width: 'var(--width)'
  }
});

/**
 * __Skeleton heading item__
 *
 * A skeleton heading item is used in place of a heading item when its contents it not ready.
 *
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/menu/docs/skeleton-heading-item)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/menu)
 */
var SkeletonHeadingItem = function SkeletonHeadingItem(_ref) {
  var _ref$isShimmering = _ref.isShimmering,
    isShimmering = _ref$isShimmering === void 0 ? false : _ref$isShimmering,
    testId = _ref.testId,
    width = _ref.width,
    _ref$cssFn = _ref.cssFn,
    cssFn = _ref$cssFn === void 0 ? _noop.default : _ref$cssFn;
  (0, _deprecationWarning.propDeprecationWarning)("@atlaskit/menu" || '', 'cssFn', cssFn !== _noop.default, '' // TODO: Create DAC post when primitives/xcss are available as alternatives
  );

  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  var UNSAFE_overrides = (0, _react.css)(cssFn(undefined));
  return (0, _react.jsx)(_skeletonShimmer.default, {
    isShimmering: isShimmering
  }, function (_ref2) {
    var className = _ref2.className;
    return (0, _react.jsx)("div", {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
      className: className
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      ,
      style: {
        '--width': width
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      },
      css: [skeletonStyles, width ? customWidthStyles : defaultWidthStyles,
      // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage
      UNSAFE_overrides],
      "data-ds--menu--skeleton-heading-item": true,
      "data-testid": testId
    });
  });
};
var _default = exports.default = SkeletonHeadingItem;