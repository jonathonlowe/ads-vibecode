"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = require("react");
var _react2 = require("@emotion/react");
var _excluded = ["cssFn", "scrollContentLabel"];
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var defaultStyles = {
  flex: 1,
  overflow: 'auto',
  marginTop: "var(--ds-space-300, 24px)"
};
var contentCSS = function contentCSS() {
  return defaultStyles;
};
var Content = function Content(_ref) {
  var cssFn = _ref.cssFn,
    _ref$scrollContentLab = _ref.scrollContentLabel,
    scrollContentLabel = _ref$scrollContentLab === void 0 ? 'Scrollable content' : _ref$scrollContentLab,
    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    showContentFocus = _useState2[0],
    setContentFocus = _useState2[1];
  var scrollableRef = (0, _react.useRef)(null);
  (0, _react.useEffect)(function () {
    var setLazyContentFocus = function setLazyContentFocus() {
      var target = scrollableRef.current;
      target && setContentFocus(target.scrollHeight > target.clientHeight);
    };
    setLazyContentFocus();
  }, []);

  /**
   * I noticed the implementation at @atlaskit/checkbox would send the props to cssFn rather
   * than the defaultStyles as the overrides guide suggests. I went with what the overrides
   * guide suggested as it made more sense as a transformer of the current styles rather than
   * a complete override with no chance of partially changing styles.
   */
  return (0, _react2.jsx)("div", (0, _extends2.default)({
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    css: (0, _react2.css)(cssFn(defaultStyles)),
    ref: scrollableRef
    // tabindex is allowed here so that keyboard users can scroll content
    // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex
    ,
    tabIndex: showContentFocus ? 0 : undefined,
    role: showContentFocus ? 'region' : undefined,
    "aria-label": showContentFocus ? scrollContentLabel : undefined,
    "data-testid": "drawer-contents"
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, props));
};
var contentDefaults = {
  component: Content,
  cssFn: contentCSS
};
var _default = exports.default = contentDefaults;