import type { TimelineClock } from './timelineInterfaces';
import type { HeatmapEntrySource } from './types';
export type DOMObserversProps = {
    timeline: TimelineClock;
    onChange: (props: {
        startTime: DOMHighResTimeStamp;
        rect: DOMRectReadOnly;
        previousRect: DOMRectReadOnly | undefined;
        elementRef: WeakRef<HTMLElement>;
        visible: boolean;
        source: HeatmapEntrySource;
    }) => void;
    onDOMContentChange: (props: {
        targetRef: WeakRef<HTMLElement>;
    }) => void;
};
export declare class DOMObservers {
    private timeline;
    private mutations;
    private intersection;
    private performance;
    private mapVisibleNodeRects;
    constructor({ onDOMContentChange, onChange, timeline }: DOMObserversProps);
    observe(target: HTMLElement): void;
    disconnect(): void;
}
