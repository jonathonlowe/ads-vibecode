/// <reference types="react" />
import { type LatencyPercentileTargets, type TTVCTargets } from './internals/editorPerformanceMetrics';
type OnTTVC = (result: {
    ttvc: TTVCTargets;
    relativeTTVC: TTVCTargets;
}) => void;
type OnUserLatency = (result: {
    latency: LatencyPercentileTargets;
}) => void;
type OnTTAI = (result: {
    idleAt: DOMHighResTimeStamp;
}) => void;
/**
 *    onTTVC: (optional) Callback function that receives TTVC metrics.
 *       Type: (result: { ttvc: TTVCTargets; relativeTTVC: TTVCTargets }) => void
 *       ttvc: Object containing TTVC values for different percentiles.
 *       relativeTTVC: TTVC values relative to when the component was mounted.
 *
 *    onUserLatency: (optional) Callback function that receives user latency metrics.
 *        Type: (result: { latency: LatencyPercentileTargets }) => void
 *        latency: Object containing latency percentiles for different user event categories.
 *
 *    onTTAI: (Optional) Called once when the first idle time happen after the component is mounted
 *        Type: (result: { idleAt: DOMHighResTimeStamp }) => void
 *        idleAt: This number represents the moment the browser as truly idle
 */
type PerformanceMetricsProps = {
    onTTVC?: OnTTVC;
    onUserLatency?: OnUserLatency;
    onTTAI?: OnTTAI;
};
export type { TTVCTargets, LatencyPercentileTargets, OnUserLatency, OnTTVC, OnTTAI, PerformanceMetricsProps, };
export declare const PerformanceMetrics: import("react").MemoExoticComponent<({ onTTVC, onUserLatency, onTTAI }: PerformanceMetricsProps) => null>;
