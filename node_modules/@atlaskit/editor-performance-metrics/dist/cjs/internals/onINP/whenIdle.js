"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.whenIdle = void 0;
var _onHidden = require("./onHidden");
// Adapted from https://github.com/GoogleChrome/web-vitals/blob/main/src/lib/whenIdle.ts

var whenIdle = exports.whenIdle = function whenIdle(cb) {
  var rIC = window.requestIdleCallback || window.setTimeout;
  var handle = -1;
  cb = runOnce(cb);
  // If the document is hidden, run the callback immediately, otherwise
  // race an idle callback with the next `visibilitychange` event.
  if (document.visibilityState === 'hidden') {
    cb();
  } else {
    var cleanup = (0, _onHidden.onHidden)(function () {
      cb();
      cleanup();
    });
    handle = rIC(function () {
      cb();
      cleanup();
    });
  }
  return handle;
};

// Adapted from https://github.com/GoogleChrome/web-vitals/blob/main/src/lib/runOnce.ts
var runOnce = function runOnce(cb) {
  var called = false;
  return function () {
    if (!called) {
      cb();
      called = true;
    }
  };
};