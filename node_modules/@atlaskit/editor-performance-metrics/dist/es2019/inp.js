import { onINP } from './internals/onINP';
export const setupINPTracking = callback => {
  if (!isINPSupported()) {
    return;
  }
  return onINP(metric => {
    callback({
      value: metric.value
    });
  });
};
const isINPSupported = () => {
  var _process, _process$env;
  const isSSR = !window || typeof process !== 'undefined' && Boolean(((_process = process) === null || _process === void 0 ? void 0 : (_process$env = _process.env) === null || _process$env === void 0 ? void 0 : _process$env.REACT_SSR) || false);
  if (isSSR) {
    return false;
  }
  // Return if the browser doesn't support all APIs needed to measure INP.
  if (!('PerformanceEventTiming' in window && 'interactionId' in PerformanceEventTiming.prototype)) {
    return false;
  }
  if (!PerformanceObserver.supportedEntryTypes.includes('event') && !PerformanceObserver.supportedEntryTypes.includes('first-input')) {
    return false;
  }
  return true;
};