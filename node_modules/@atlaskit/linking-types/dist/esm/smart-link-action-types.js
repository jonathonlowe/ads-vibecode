import _createClass from "@babel/runtime/helpers/createClass";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import _wrapNativeSuper from "@babel/runtime/helpers/wrapNativeSuper";
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
/**
 * The enum that describes Smart Link action types
 */
export var SmartLinkActionType = /*#__PURE__*/function (SmartLinkActionType) {
  SmartLinkActionType["FollowEntityAction"] = "FollowEntityAction";
  SmartLinkActionType["GetStatusTransitionsAction"] = "GetStatusTransitionsAction";
  SmartLinkActionType["StatusUpdateAction"] = "StatusUpdateAction";
  SmartLinkActionType["UnfollowEntityAction"] = "UnfollowEntityAction";
  return SmartLinkActionType;
}({});

/**
 * Default type for an invoke request. Parametrized with the type of payload
 */

/**
 * Captures information about an action
 */

/**
 * payload needed by {@link SmartLinkActionType.StatusUpdateAction} action type
 */

/**
 * Default type for an Action Response
 */

/**
 * Type that signifies an error response from the product
 */

/**
 * Payload from GetStatusTransitions action that contains a list of available statuses
 */

export var InvokeError = /*#__PURE__*/function (_Error) {
  function InvokeError(message, errorCode) {
    var _this;
    _classCallCheck(this, InvokeError);
    _this = _callSuper(this, InvokeError, [message]);
    _this.errorCode = errorCode;
    return _this;
  }
  _inherits(InvokeError, _Error);
  return _createClass(InvokeError);
}( /*#__PURE__*/_wrapNativeSuper(Error));