import { useCallback } from 'react';
import { EventType } from '@atlaskit/jql-editor-common';
import { Action, ActionSubject } from '../../analytics';
export const getAutocompleteSuggestionsUrl = (field, query) => `/rest/api/latest/jql/autocompletedata/suggestions?fieldName=${field}&fieldValue=${query !== null && query !== void 0 ? query : ''}`;
export const useFetchFieldValues = (getSuggestions, createAndFireAnalyticsEvent) => {
  return useCallback(async (field, query) => {
    try {
      const data = await getSuggestions(getAutocompleteSuggestionsUrl(field, query));
      const div = document.createElement('div');
      const results = data.results.map(operand => {
        var _div$textContent;
        // The displayName from the API includes HTML tags to bold matching text e.g. `<b>o</b>pen`
        // We set this as innerHTML so we can get the raw textContent
        div.innerHTML = operand.displayName;
        return {
          name: (_div$textContent = div.textContent) !== null && _div$textContent !== void 0 ? _div$textContent : '',
          value: operand.value
        };
      });
      createAndFireAnalyticsEvent({
        action: Action.SUCCESS,
        actionSubject: ActionSubject.AUTOCOMPLETE_SUGGESTIONS,
        eventType: EventType.OPERATIONAL
      });
      return results;
    } catch (error) {
      createAndFireAnalyticsEvent({
        action: Action.FAILED,
        actionSubject: ActionSubject.AUTOCOMPLETE_SUGGESTIONS,
        eventType: EventType.OPERATIONAL
      });
      throw error;
    }
  }, [createAndFireAnalyticsEvent, getSuggestions]);
};