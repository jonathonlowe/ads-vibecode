/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';
import type { WrappedComponentProps } from 'react-intl-next';
import { ToolbarSize, type ExtractInjectionAPI } from '@atlaskit/editor-common/types';
import type { AlignmentPlugin } from '../../alignmentPluginType';
import { ToolbarType, type AlignmentPluginState, type AlignmentState } from '../../pm-plugins/types';
export interface State {
    isOpen: boolean;
}
export interface Props {
    pluginState: AlignmentPluginState | undefined;
    changeAlignment: (align: AlignmentState) => void;
    popupsMountPoint?: HTMLElement;
    popupsBoundariesElement?: HTMLElement;
    popupsScrollableElement?: HTMLElement;
    isReducedSpacing?: boolean;
    disabled?: boolean;
    api: ExtractInjectionAPI<AlignmentPlugin> | undefined;
    toolbarType: ToolbarType;
    toolbarSize?: ToolbarSize;
}
export declare class AlignmentToolbar extends React.Component<Props & WrappedComponentProps, State> {
    static displayName: string;
    private toolbarItemRef;
    state: State;
    render(): JSX.Element;
    componentDidUpdate(prevProps: Props): void;
    private changeAlignment;
    private toggleOpen;
    private toggleOpenByKeyboard;
    private handleOnItemActivated;
    private hide;
    private hideOnEscape;
}
declare const _default: React.FC<import("react-intl-next").WithIntlProps<Props & WrappedComponentProps>> & {
    WrappedComponent: React.ComponentType<Props & WrappedComponentProps>;
};
export default _default;
