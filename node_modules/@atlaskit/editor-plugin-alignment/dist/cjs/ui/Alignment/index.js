/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
require("./index.compiled.css");
var React = _interopRequireWildcard(require("react"));
var _runtime = require("@compiled/react/runtime");
var _reactIntlNext = require("react-intl-next");
var _keymaps = require("@atlaskit/editor-common/keymaps");
var _messages = require("@atlaskit/editor-common/messages");
var _iconMap = require("../ToolbarAlignment/icon-map");
var _AlignmentButton = _interopRequireDefault(require("./AlignmentButton"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var alignmentWrapper = null;

// eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage -- This rule thinks this isn't a `css()` call due to the name mapping
var alignmentWrapperStylesUnbounded = null;
var alignCenterKeyboardShortcut = _keymaps.alignCenter;
var alignRightKeyboardShortcut = _keymaps.alignRight;
var alignmentOptions = [{
  title: _messages.alignmentMessages.alignLeft,
  shortcut: _keymaps.alignLeft,
  value: 'start'
}, {
  title: _messages.alignmentMessages.alignCenter,
  shortcut: alignCenterKeyboardShortcut,
  value: 'center'
}, {
  title: _messages.alignmentMessages.alignRight,
  shortcut: alignRightKeyboardShortcut,
  value: 'end'
}];
function Alignment(_ref) {
  var onClick = _ref.onClick,
    selectedAlignment = _ref.selectedAlignment,
    className = _ref.className,
    intl = _ref.intl;
  return /*#__PURE__*/React.createElement("div", {
    "data-testid": "alignment-buttons"
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
    ,

    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    className: (0, _runtime.ax)(["_1e0c1txw _ca0qze3t _n3tdze3t _19bvu2gc _u5f3u2gc _p12f1q5e _gy1pv77o", "_1fvdglyw", className]),
    style: {
      "--_4v9t68": (0, _runtime.ix)("".concat(3 * 32 + 2 * 2, "px"))
    }
  }, alignmentOptions.map(function (alignment) {
    var value = alignment.value,
      title = alignment.title,
      shortcut = alignment.shortcut;
    var message = intl.formatMessage(title);
    return /*#__PURE__*/React.createElement(_AlignmentButton.default, {
      content: /*#__PURE__*/React.createElement(_iconMap.IconMap, {
        alignment: value
      }),
      key: value,
      value: value,
      label: message,
      shortcut: shortcut,
      onClick: onClick,
      isSelected: value === selectedAlignment
    });
  }));
}
var _default = exports.default = (0, _reactIntlNext.injectIntl)(Alignment);