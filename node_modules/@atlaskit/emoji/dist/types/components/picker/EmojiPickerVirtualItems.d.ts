/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import type { ReactNode } from 'react';
import { type Props as CategoryHeadingProps } from './EmojiPickerCategoryHeading';
import { type Props as EmojiRowProps } from './EmojiPickerEmojiRow';
import type { VirtualItem as VirtualItemContext } from '@tanstack/react-virtual';
export interface RenderItem {
    (context?: VirtualItemContext): ReactNode;
}
export interface VirtualItem<P> {
    height: number;
    props: P;
    renderItem: RenderItem;
}
export declare abstract class AbstractItem<P> implements VirtualItem<P> {
    readonly height: number;
    readonly props: P;
    constructor(props: P, height: number);
    abstract renderItem: RenderItem;
}
export declare class EmojisRowItem extends AbstractItem<EmojiRowProps> {
    constructor(props: EmojiRowProps);
    renderItem: (context?: VirtualItemContext) => JSX.Element;
}
export declare class LoadingItem extends AbstractItem<{}> {
    constructor();
    renderItem: () => JSX.Element;
}
export declare class CategoryHeadingItem extends AbstractItem<CategoryHeadingProps> {
    constructor(props: CategoryHeadingProps);
    renderItem: () => JSX.Element;
}
export declare const virtualItemRenderer: (rows: VirtualItem<CategoryHeadingProps | EmojiRowProps | {}>[], context: VirtualItemContext) => JSX.Element;
