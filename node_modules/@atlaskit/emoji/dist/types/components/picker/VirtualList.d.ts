import type { VirtualItem as VirtualItemContext } from '@tanstack/react-virtual';
import React from 'react';
type Props = {
    overscanRowCount: number;
    rowHeight: (index: number) => number;
    rowRenderer: (context: VirtualItemContext) => JSX.Element;
    onRowsRendered: (indexes: {
        startIndex: number;
    }) => void;
    rowCount: number;
    scrollToAlignment: 'start' | 'end';
    width: number;
    height: number;
};
export type ListRef = {
    /**
     * Scroll to the row by row index
     * @param index row index of virtual list
     */
    scrollToRow: (index?: number) => void;
    /**
     * Scroll to the row by row index, and focus on last emoji in that row
     * @param index row index of virtual list
     * @returns
     */
    scrollToRowAndFocusLastEmoji: (index?: number) => void;
    /**
     * Scroll to a emoji in virtual list and focus on it
     * @param rIndex row index of virtual list
     * @param cIndex column index of virtual list
     */
    scrollToEmojiAndFocus: (rIndex: number, cIndex: number) => void;
    /**
     * Update the focus index of virtual list, which will manage tabIndex via EmojiPickerListContext
     * @param rIndex row index of virtual list
     * @param cIndex column index of virtual list
     */
    updateFocusIndex: (rIndex: number, cIndex?: number) => void;
};
export declare const virtualListScrollContainerTestId = "virtual-list-scroll-container";
export declare const VirtualList: React.ForwardRefExoticComponent<Props & React.RefAttributes<ListRef>>;
export {};
