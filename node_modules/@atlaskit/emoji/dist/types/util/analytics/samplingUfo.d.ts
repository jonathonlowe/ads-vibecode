import type { UFOExperience } from '@atlaskit/ufo';
export interface UFOExperienceSampledRecords {
    [experienceName: string]: UFOExperienceSampledRecord;
}
interface SamplingInstancesRecord {
    [key: string]: boolean;
}
interface UFOExperienceSampledRecord {
    sampledInstance: SamplingInstancesRecord;
    sampled: boolean;
}
export interface WithSamplingUFOExperience extends Omit<UFOExperience, 'start'> {
    start: (options: {
        samplingRate: number;
        samplingFunc?: SamplingFunc;
        startTime?: number;
    }) => Promise<void>;
}
export declare const ufoExperiencesSampled: UFOExperienceSampledRecords;
type SamplingFunc = (rate: number) => boolean;
export declare const clearSampled: () => void;
/**
 * A random sampling function
 * sampling algorithm is from @atlassian/jira-coinflip at https://stash.atlassian.com/projects/JIRACLOUD/repos/jira-frontend/browse/src/packages/platform/app-framework/coinflip/src/index.tsx
 * E.g. isExperienceSampled(2) will pass 50% of the time
 * @param rate The chance that it will pass (1 in <rate> times)
 * @returns bool, if it passes or not
 */
export declare const isExperienceSampled: (rate: number) => boolean;
/**
 * This function is a temp solution to reduce the event traffic, as UFO package does not support it.
 *
 * e.g. Emoji Picker contains thousands of emojis, which means will trigger a large number of renderred events without sampling
 * @param ufoExperience
 * @returns
 */
export declare const withSampling: (ufoExperience: UFOExperience) => WithSamplingUFOExperience;
export {};
