/* EmojiPickerTabPanel.tsx generated by @compiled/babel-plugin v0.36.1 */
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import "./EmojiPickerTabPanel.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
import React, { PureComponent } from 'react';
import VisuallyHidden from '@atlaskit/visually-hidden';
import { injectIntl } from 'react-intl-next';
import { messages } from '../i18n';
import { RENDER_EMOJI_PICKER_LIST_TESTID } from './EmojiPickerList';
var emojiPickerList = null;

/**
 * TODO: have to use class component here as unit test is relying on ref.root. Will refactor this whole file + EmojiPickerList to functional component in future
 * ticket: COLLAB-2317
 */
var EmojiPickerTabPanelInternal = /*#__PURE__*/function (_PureComponent) {
  function EmojiPickerTabPanelInternal() {
    _classCallCheck(this, EmojiPickerTabPanelInternal);
    return _callSuper(this, EmojiPickerTabPanelInternal, arguments);
  }
  _inherits(EmojiPickerTabPanelInternal, _PureComponent);
  return _createClass(EmojiPickerTabPanelInternal, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        formatMessage = _this$props.intl.formatMessage,
        children = _this$props.children,
        showSearchResults = _this$props.showSearchResults;
      return /*#__PURE__*/React.createElement("div", {
        ref: "root",
        "data-testid": RENDER_EMOJI_PICKER_LIST_TESTID,
        id: RENDER_EMOJI_PICKER_LIST_TESTID,
        role: "tabpanel",
        "aria-label": formatMessage(messages.emojiPickerListPanel),
        className: ax(["_16jlkb7n _1o9zkb7n _i0dl1wug _1e0c1txw _2lx21bp4 _4t3iidpf"])
      }, /*#__PURE__*/React.createElement(VisuallyHidden, {
        id: "emoji-picker-table-description"
      }, formatMessage(messages.emojiPickerGrid, {
        showSearchResults: showSearchResults
      })), children);
    }
  }]);
}(PureComponent);
export default injectIntl(EmojiPickerTabPanelInternal);