/* EmojiPlaceholder.tsx generated by @compiled/babel-plugin v0.36.1 */
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import "./EmojiPlaceholder.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
import { fg } from '@atlaskit/platform-feature-flags';
import { N20A } from '@atlaskit/theme/colors';
import { defaultEmojiHeight } from '../../util/constants';
import { placeholder } from './styles';
var placeholderContainer = null;
var easeSweep = null;
var placeholderContainerAnimated = null;
export var emojiPlaceholderTestId = function emojiPlaceholderTestId(shortName) {
  return "emoji-placeholder-".concat(shortName);
};
var EmojiPlaceholder = function EmojiPlaceholder(props) {
  var shortName = props.shortName,
    _props$size = props.size,
    size = _props$size === void 0 ? defaultEmojiHeight : _props$size,
    showTooltip = props.showTooltip,
    representation = props.representation,
    _props$loading = props.loading,
    loading = _props$loading === void 0 ? false : _props$loading;
  var scaledWidth;
  var scaledHeight;
  if (representation && size) {
    var _width = representation.width;
    var _height = representation.height;
    if (_width && _height) {
      scaledWidth = size / _height * _width;
      scaledHeight = size;
    }
  }
  var width = scaledWidth || size;
  var height = scaledHeight || size;
  var style = {
    fill: 'f7f7f7',
    minWidth: "".concat(width, "px"),
    width: "".concat(width, "px"),
    height: "".concat(height, "px")
  };
  return /*#__PURE__*/React.createElement("span", {
    "data-testid": emojiPlaceholderTestId(shortName),
    "aria-busy": loading,
    role: "status",
    "aria-label": shortName
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    ,
    className: ax(["_19pk1n1a _2hwxidpf _otyr1n1a _18u0idpf _2rkosqtm _1reo15vq _18m915vq _kqswh2mm _1e0c1o8l _bfhkttw1 _s7n4nkob _o5721q9c _y3gn1h6o", loading && !fg('cc_complexit_fe_remove_emoji_animation') && "_16qqztlz _1kt9b3bt _cfu11ule _1cs8stnw _1ruskq2v _kfgt1osq _1mp41osq", placeholder]),
    title: showTooltip ? shortName : '',
    style: _objectSpread(_objectSpread({}, style), {}, {
      "--_12ncegi": ix("var(--ds-background-neutral, ".concat(N20A, ")")),
      "--_s082jg": ix("".concat(easeSweep, " 1s cubic-bezier(0.4, 0.0, 0.2, 1) infinite"))
    })
  });
};
export default EmojiPlaceholder;