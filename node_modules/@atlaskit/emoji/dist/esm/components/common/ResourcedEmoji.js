import React, { useEffect } from 'react';
import { ResourcedEmojiComponent } from './ResourcedEmojiComponent';
import { UfoErrorBoundary } from './UfoErrorBoundary';
import { sampledUfoRenderedEmoji, ufoExperiences } from '../../util/analytics';
import { SAMPLING_RATE_EMOJI_RENDERED_EXP } from '../../util/constants';
var ResourcedEmoji = function ResourcedEmoji(props) {
  var emojiId = props.emojiId,
    optimisticImageURL = props.optimisticImageURL;
  useEffect(function () {
    if (!emojiId) {
      return;
    }
    sampledUfoRenderedEmoji(emojiId).start({
      samplingRate: SAMPLING_RATE_EMOJI_RENDERED_EXP
    });
    ufoExperiences['emoji-rendered'].getInstance(emojiId.id || emojiId.shortName).addMetadata({
      source: 'ResourcedEmoji',
      emojiId: emojiId.id,
      isOptimisticImageURL: !!optimisticImageURL
    });
    return function () {
      sampledUfoRenderedEmoji(emojiId).abort({
        metadata: {
          source: 'ResourcedEmoji',
          reason: 'unmount'
        }
      });
    };
  }, [emojiId, optimisticImageURL]);
  return /*#__PURE__*/React.createElement(UfoErrorBoundary, {
    experiences: [ufoExperiences['emoji-rendered'].getInstance(props.emojiId.id || props.emojiId.shortName)]
  }, /*#__PURE__*/React.createElement(ResourcedEmojiComponent, props));
};
export default ResourcedEmoji;