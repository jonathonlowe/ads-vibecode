/* EmojiTypeAheadItem.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import "./EmojiTypeAheadItem.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
import React from 'react';
import { N30 } from '@atlaskit/theme/colors';
import { EmojiCommonProvider } from '../../context/EmojiCommonProvider';
import { leftClick } from '../../util/mouse';
import { toEmojiId } from '../../util/type-helpers';
import { EmojiPreviewComponent } from '../common/EmojiPreviewComponent';
import { typeaheadSelected } from './styles';
var typeAheadWidth = 350;
var typeAheadItem = null;
var selectedStyles = null;
var typeAheadItemRow = null;
export function EmojiTypeAheadItemInternal(props) {
  var emoji = props.emoji,
    onSelection = props.onSelection,
    onMouseMove = props.onMouseMove,
    selected = props.selected,
    emojiProvider = props.emojiProvider,
    forwardedRef = props.forwardedRef;
  var onEmojiSelected = React.useCallback(function (event) {
    if (leftClick(event) && onSelection) {
      event.preventDefault();
      onSelection(toEmojiId(emoji), emoji, event);
    }
  }, [emoji, onSelection]);
  var onEmojiMenuItemMouseMove = React.useCallback(function (event) {
    if (onMouseMove) {
      onMouseMove(toEmojiId(emoji), emoji, event);
    }
  }, [emoji, onMouseMove]);
  return /*#__PURE__*/React.createElement(EmojiCommonProvider, {
    emojiProvider: emojiProvider
  }, /*#__PURE__*/React.createElement("div", {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    className: ax(["_1reo15vq _18m915vq _80omtlke _1e0c1ule _2mzuglyw _1bsb1qjl", selected && "_bfhkptpz", "ak-emoji-typeahead-item ".concat(selected ? typeaheadSelected : '')]),
    onMouseDown: onEmojiSelected,
    onMouseMove: onEmojiMenuItemMouseMove,
    "data-emoji-id": emoji.shortName,
    ref: forwardedRef,
    style: {
      "--_n55fzx": ix("".concat(typeAheadWidth, "px")),
      "--_19g1tth": ix("var(--ds-background-neutral, ".concat(N30, ")"))
    }
  }, /*#__PURE__*/React.createElement("div", {
    className: ax(["_1e0c1txw _2lx2vrvc _1n261g80 _s7n4nkob"])
  }, emoji && /*#__PURE__*/React.createElement(EmojiPreviewComponent, {
    emoji: emoji
  }))));
}
var EmojiTypeAheadItem = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(EmojiTypeAheadItemInternal, _extends({}, props, {
    forwardedRef: ref
  }));
});
export default EmojiTypeAheadItem;