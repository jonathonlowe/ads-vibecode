import React from 'react';
import LoadingEmojiComponent, { type Props as LoadingProps, type State as LoadingState } from '../common/LoadingEmojiComponent';
import type { Props as ComponentProps } from './EmojiUploadComponent';
import type { EmojiProvider } from '../../api/EmojiResource';
import { type CreateUIAnalyticsEvent } from '@atlaskit/analytics-next';
export interface Props extends LoadingProps {
    createAnalyticsEvent?: CreateUIAnalyticsEvent;
}
export declare class EmojiUploaderInternal extends LoadingEmojiComponent<Props, LoadingState> {
    static AsyncLoadedComponent?: React.ComponentType<React.PropsWithChildren<ComponentProps>>;
    state: {
        asyncLoadedComponent: React.ComponentType<React.PropsWithChildren<ComponentProps>> | undefined;
    };
    constructor(props: Props);
    asyncLoadComponent(): void;
    renderLoaded(loadedEmojiProvider: EmojiProvider, EmojiUploadComponent: React.ComponentType<React.PropsWithChildren<ComponentProps>>): React.JSX.Element;
}
type EmojiUploader = EmojiUploaderInternal;
declare const EmojiUploader: React.ForwardRefExoticComponent<Omit<Props, keyof import("@atlaskit/analytics-next").WithAnalyticsEventsProps> & React.RefAttributes<any>>;
export default EmojiUploader;
