/* EmojiTypeAheadSpinner.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EmojiTypeAheadSpinner = EmojiTypeAheadSpinner;
require("./EmojiTypeAheadSpinner.compiled.css");
var React = _interopRequireWildcard(require("react"));
var _runtime = require("@compiled/react/runtime");
var _spinner = _interopRequireDefault(require("@atlaskit/spinner"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var emojiTypeAheadSpinner = null;
var typeAheadMaxHeight = 350;
var emojiTypeAheadSpinnerContainer = null;
function EmojiTypeAheadSpinner() {
  return /*#__PURE__*/React.createElement("div", {
    className: (0, _runtime.ax)(["_kqswh2mm _4t3i1j3k _ca0q2zkm _vchhusvi"]),
    style: {
      "--_b0e0gw": (0, _runtime.ix)("".concat(typeAheadMaxHeight, "px")),
      "--_9sen9w": (0, _runtime.ix)("".concat((typeAheadMaxHeight - 30) / 2, "px"))
    }
  }, /*#__PURE__*/React.createElement("div", {
    className: (0, _runtime.ax)(["_y3gn1h6o"])
  }, /*#__PURE__*/React.createElement(_spinner.default, {
    size: "medium",
    interactionName: "empji-type-ahead-list-spinner"
  })));
}