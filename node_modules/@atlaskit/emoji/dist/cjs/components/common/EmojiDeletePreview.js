/* EmojiDeletePreview.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.emojiDeletePreviewTestId = exports.default = void 0;
require("./EmojiDeletePreview.compiled.css");
var _react = _interopRequireWildcard(require("react"));
var React = _react;
var _runtime = require("@compiled/react/runtime");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _colors = require("@atlaskit/theme/colors");
var _reactIntlNext = require("react-intl-next");
var _new = _interopRequireDefault(require("@atlaskit/button/new"));
var _heading = _interopRequireDefault(require("@atlaskit/heading"));
var _reactFocusLock = _interopRequireDefault(require("react-focus-lock"));
var _i18n = require("../i18n");
var _CachingEmoji = _interopRequireDefault(require("./CachingEmoji"));
var _EmojiErrorMessage = _interopRequireWildcard(require("./EmojiErrorMessage"));
var _RetryableButton = _interopRequireDefault(require("./RetryableButton"));
var _visuallyHidden = _interopRequireDefault(require("@atlaskit/visually-hidden"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var deleteFooter = null;
var deletePreview = null;
var deleteText = null;
var previewButtonGroup = null;
var emojiDeletePreviewTestId = exports.emojiDeletePreviewTestId = 'emoji-delete-preview';
var deleteEmojiLabelId = 'fabric.emoji.delete.label.id';
var EmojiDeletePreview = /*#__PURE__*/function (_Component) {
  function EmojiDeletePreview(props) {
    var _this;
    (0, _classCallCheck2.default)(this, EmojiDeletePreview);
    _this = _callSuper(this, EmojiDeletePreview, [props]);
    (0, _defineProperty2.default)(_this, "onSubmit", function () {
      var _this$props = _this.props,
        emoji = _this$props.emoji,
        onDeleteEmoji = _this$props.onDeleteEmoji,
        onCloseDelete = _this$props.onCloseDelete;
      if (!_this.state.loading) {
        _this.setState({
          loading: true
        });
        onDeleteEmoji(emoji).then(function (success) {
          if (success) {
            onCloseDelete();
            return;
          }
          _this.setState({
            loading: false,
            error: true
          });
        });
      }
    });
    (0, _defineProperty2.default)(_this, "onCancel", function () {
      _this.props.onCloseDelete();
    });
    _this.state = {
      loading: false,
      error: false
    };
    return _this;
  }
  (0, _inherits2.default)(EmojiDeletePreview, _Component);
  return (0, _createClass2.default)(EmojiDeletePreview, [{
    key: "UNSAFE_componentWillUpdate",
    value: function UNSAFE_componentWillUpdate(nextProps) {
      if (!(0, _platformFeatureFlags.fg)('platform_editor_react18_elements_emoji') || !(0, _platformFeatureFlags.fg)('platform_editor_react18_elements_emoji_jira_bb')) {
        if (nextProps.emoji.id !== this.props.emoji.id) {
          this.setState({
            error: false
          });
        }
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if ((0, _platformFeatureFlags.fg)('platform_editor_react18_elements_emoji') || (0, _platformFeatureFlags.fg)('platform_editor_react18_elements_emoji_jira_bb')) {
        if (prevProps.emoji.id !== this.props.emoji.id) {
          this.setState({
            error: false
          });
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
        emoji = _this$props2.emoji,
        intl = _this$props2.intl;
      var _this$state = this.state,
        loading = _this$state.loading,
        error = _this$state.error;
      var formatMessage = intl.formatMessage;
      return /*#__PURE__*/React.createElement(_reactFocusLock.default, {
        noFocusGuards: true
      }, /*#__PURE__*/React.createElement("div", {
        "data-testid": emojiDeletePreviewTestId,
        className: (0, _runtime.ax)(["_ca0q19bv _u5f319bv _n3td19bv _19bv19bv _4t3i53f4 _1e0c1txw _2lx21bp4 _1bahesu3"])
      }, /*#__PURE__*/React.createElement("div", {
        className: (0, _runtime.ax)(["_11c8dcr7 _4t3ivbgk _pnmb1vvm _jwwg7vkz"]),
        style: {
          "--_bbz764": (0, _runtime.ix)("var(--ds-text-subtle, ".concat(_colors.N300, ")"))
        }
      }, /*#__PURE__*/React.createElement(_heading.default, {
        size: "xxsmall"
      }, /*#__PURE__*/React.createElement(_reactIntlNext.FormattedMessage, _i18n.messages.deleteEmojiTitle)), /*#__PURE__*/React.createElement(_reactIntlNext.FormattedMessage, (0, _extends2.default)({}, _i18n.messages.deleteEmojiDescription, {
        values: {
          emojiShortName: emoji.shortName
        }
      }))), /*#__PURE__*/React.createElement("div", {
        className: (0, _runtime.ax)(["_11c82smr _1e0c1txw _4t3i1ylp _4cvr1h6o _1bah1yb4 _19l3zwfg _rtyst9kd _m73io7ol _1txf1igg _1qz31b66"])
      }, /*#__PURE__*/React.createElement(_CachingEmoji.default, {
        emoji: emoji
      }), /*#__PURE__*/React.createElement("div", {
        className: (0, _runtime.ax)(["_1e0c1txw"])
      }, error ? !loading ? /*#__PURE__*/React.createElement(_EmojiErrorMessage.default, {
        message: formatMessage(_i18n.messages.deleteEmojiFailed),
        errorStyle: "delete",
        tooltip: true
      }) : null : null, /*#__PURE__*/React.createElement(_visuallyHidden.default, {
        id: deleteEmojiLabelId
      }, formatMessage(_i18n.messages.deleteEmojiLabel)), /*#__PURE__*/React.createElement(_RetryableButton.default, {
        label: formatMessage(_i18n.messages.deleteEmojiLabel),
        onSubmit: this.onSubmit,
        appearance: "danger",
        loading: loading,
        error: error,
        ariaLabelledBy: "".concat(_EmojiErrorMessage.emojiErrorScreenreaderTestId, " ").concat(deleteEmojiLabelId)
      }), /*#__PURE__*/React.createElement(_new.default, {
        appearance: "subtle",
        onClick: this.onCancel
      }, /*#__PURE__*/React.createElement(_reactIntlNext.FormattedMessage, _i18n.messages.cancelLabel))))));
    }
  }]);
}(_react.Component);
var _default = exports.default = (0, _reactIntlNext.injectIntl)(EmojiDeletePreview);