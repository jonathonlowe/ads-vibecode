"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ResourcedEmojiComponent = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _constants = require("../../util/constants");
var _typeHelpers = require("../../util/type-helpers");
var _types = require("../../types");
var _Emoji = _interopRequireDefault(require("./Emoji"));
var _EmojiPlaceholder = _interopRequireDefault(require("./EmojiPlaceholder"));
var _analytics = require("../../util/analytics");
var _EmojiCommonProvider = require("../../context/EmojiCommonProvider");
var _ufoExperiences = require("../../util/analytics/ufoExperiences");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var ResourcedEmojiComponentRenderStatesEnum = /*#__PURE__*/function (ResourcedEmojiComponentRenderStatesEnum) {
  ResourcedEmojiComponentRenderStatesEnum["INITIAL"] = "INITIAL";
  ResourcedEmojiComponentRenderStatesEnum["FALLBACK"] = "FALLBACK";
  ResourcedEmojiComponentRenderStatesEnum["EMOJI"] = "EMOJI";
  return ResourcedEmojiComponentRenderStatesEnum;
}(ResourcedEmojiComponentRenderStatesEnum || {});
var ResourcedEmojiComponent = exports.ResourcedEmojiComponent = function ResourcedEmojiComponent(props) {
  var emojiProvider = props.emojiProvider,
    emojiId = props.emojiId,
    _props$showTooltip = props.showTooltip,
    showTooltip = _props$showTooltip === void 0 ? false : _props$showTooltip,
    _props$customFallback = props.customFallback,
    customFallback = _props$customFallback === void 0 ? undefined : _props$customFallback,
    _props$fitToHeight = props.fitToHeight,
    fitToHeight = _props$fitToHeight === void 0 ? _constants.defaultEmojiHeight : _props$fitToHeight,
    _props$optimistic = props.optimistic,
    optimistic = _props$optimistic === void 0 ? false : _props$optimistic,
    _props$optimisticImag = props.optimisticImageURL,
    optimisticImageURL = _props$optimisticImag === void 0 ? undefined : _props$optimisticImag,
    editorEmoji = props.editorEmoji,
    onEmojiLoadSuccess = props.onEmojiLoadSuccess,
    onEmojiLoadFail = props.onEmojiLoadFail;
  var shortName = emojiId.shortName,
    id = emojiId.id,
    fallback = emojiId.fallback;
  var _useState = (0, _react.useState)(),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    emoji = _useState2[0],
    setEmoji = _useState2[1];
  var _useState3 = (0, _react.useState)(false),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    loaded = _useState4[0],
    setLoaded = _useState4[1];
  var _useState5 = (0, _react.useState)(false),
    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
    imageLoadError = _useState6[0],
    setImageLoadError = _useState6[1];
  var _useState7 = (0, _react.useState)(),
    _useState8 = (0, _slicedToArray2.default)(_useState7, 2),
    resolvedEmojiProvider = _useState8[0],
    setResolvedEmojiProvider = _useState8[1];
  var fetchOrGetEmoji = (0, _react.useCallback)( /*#__PURE__*/function () {
    var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(_emojiProvider, emojiId) {
      var optimisticFetch,
        reason,
        foundEmoji,
        _args = arguments;
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            optimisticFetch = _args.length > 2 && _args[2] !== undefined ? _args[2] : false;
            if (!_emojiProvider.fetchByEmojiId) {
              setEmoji(undefined);
              reason = 'missing fetchByEmojiId interface';
              onEmojiLoadFail && onEmojiLoadFail(emojiId.id, reason);
              (0, _analytics.sampledUfoRenderedEmoji)(emojiId).failure({
                metadata: {
                  reason: reason,
                  source: 'ResourcedEmojiComponent'
                }
              });
            }
            foundEmoji = _emojiProvider.fetchByEmojiId(emojiId, optimisticFetch);
            (0, _analytics.sampledUfoRenderedEmoji)(emojiId).mark(_types.UfoEmojiTimings.METADATA_START);
            if ((0, _typeHelpers.isPromise)(foundEmoji)) {
              setLoaded(false);
              foundEmoji.then(function (emoji) {
                setEmoji(emoji);
                if (!emoji) {
                  var _reason = 'failed to find';
                  onEmojiLoadFail && onEmojiLoadFail(emojiId.id, _reason);
                  // emoji is undefined
                  (0, _analytics.sampledUfoRenderedEmoji)(emojiId).failure({
                    metadata: {
                      reason: _reason,
                      source: 'ResourcedEmojiComponent',
                      data: {
                        emoji: {
                          id: emojiId.id,
                          shortName: emojiId.shortName
                        }
                      }
                    }
                  });
                }
              }).catch(function () {
                setEmoji(undefined);
                var reason = 'failed to load';
                onEmojiLoadFail && onEmojiLoadFail(emojiId.id, reason);
                (0, _analytics.sampledUfoRenderedEmoji)(emojiId).failure({
                  metadata: {
                    reason: reason,
                    source: 'ResourcedEmojiComponent',
                    data: {
                      emoji: {
                        id: emojiId.id,
                        shortName: emojiId.shortName
                      }
                    }
                  }
                });
              }).finally(function () {
                setLoaded(true);
                (0, _analytics.sampledUfoRenderedEmoji)(emojiId).mark(_types.UfoEmojiTimings.METADATA_END);
              });
            } else {
              setEmoji(foundEmoji);
              setLoaded(true);
              (0, _analytics.sampledUfoRenderedEmoji)(emojiId).mark(_types.UfoEmojiTimings.METADATA_END);
            }
          case 5:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function (_x, _x2) {
      return _ref.apply(this, arguments);
    };
  }(), [onEmojiLoadFail]);
  (0, _react.useEffect)(function () {
    if (!emojiId) {
      return;
    }
    if (!(0, _ufoExperiences.hasUfoMarked)((0, _analytics.sampledUfoRenderedEmoji)(emojiId), _types.UfoEmojiTimings.FMP_END)) {
      (0, _analytics.sampledUfoRenderedEmoji)(emojiId).markFMP();
    }
  }, [emojiId]);
  (0, _react.useMemo)(function () {
    if (!resolvedEmojiProvider || !emojiId) {
      return;
    }
    fetchOrGetEmoji(resolvedEmojiProvider, emojiId, optimistic);
  }, [resolvedEmojiProvider, emojiId, optimistic, fetchOrGetEmoji]);

  /**
   * Setting resolved emoji provider for optimistic rendering
   */
  (0, _react.useEffect)(function () {
    Promise.resolve(emojiProvider).then(function (emojiProvider) {
      setResolvedEmojiProvider(emojiProvider);
    });
  }, [emojiProvider]);
  var emojiRenderState = (0, _react.useMemo)(function () {
    if (!emoji && !loaded && !optimisticImageURL) {
      return ResourcedEmojiComponentRenderStatesEnum.INITIAL;
    } else if (!emoji && loaded || imageLoadError) {
      return ResourcedEmojiComponentRenderStatesEnum.FALLBACK;
    }
    return ResourcedEmojiComponentRenderStatesEnum.EMOJI;
  }, [emoji, loaded, optimisticImageURL, imageLoadError]);
  var optimisticEmojiDescription = (0, _react.useMemo)(function () {
    if (optimisticImageURL) {
      if (emoji && ((0, _typeHelpers.isImageRepresentation)(emoji.representation) || (0, _typeHelpers.isMediaRepresentation)(emoji === null || emoji === void 0 ? void 0 : emoji.representation))) {
        var _emoji$representation = emoji.representation,
          width = _emoji$representation.width,
          height = _emoji$representation.height;
        return _objectSpread(_objectSpread({}, emoji), {}, {
          representation: {
            width: width,
            height: height,
            imagePath: optimisticImageURL
          }
        });
      } else {
        return {
          id: id,
          shortName: shortName,
          fallback: fallback,
          type: '',
          category: '',
          representation: {
            height: fitToHeight || _constants.defaultEmojiHeight,
            width: fitToHeight || _constants.defaultEmojiHeight,
            imagePath: optimisticImageURL
          },
          searchable: true
        };
      }
    }
    return emoji;
  }, [emoji, optimisticImageURL, fallback, fitToHeight, id, shortName]);
  var handleOnLoadError = (0, _react.useCallback)(function (emojiId) {
    setImageLoadError(true);
    var reason = 'load error';
    onEmojiLoadFail && onEmojiLoadFail(emojiId.id, reason);
    (0, _analytics.sampledUfoRenderedEmoji)(emojiId).failure({
      metadata: {
        reason: reason,
        source: 'ResourcedEmojiComponent',
        emojiId: emojiId.id
      }
    });
  }, [onEmojiLoadFail]);
  var handleOnLoadSuccess = (0, _react.useCallback)(function (emojiId) {
    onEmojiLoadSuccess && onEmojiLoadSuccess(emojiId.id);
  }, [onEmojiLoadSuccess]);
  return /*#__PURE__*/_react.default.createElement(_EmojiCommonProvider.EmojiCommonProvider, {
    emojiProvider: resolvedEmojiProvider
  }, /*#__PURE__*/_react.default.createElement("span", {
    "data-emoji-id": id,
    "data-emoji-short-name": shortName,
    "data-emoji-text": fallback || shortName
  }, emojiRenderState === ResourcedEmojiComponentRenderStatesEnum.INITIAL && /*#__PURE__*/_react.default.createElement(_EmojiPlaceholder.default, {
    shortName: shortName,
    showTooltip: showTooltip,
    size: fitToHeight || _constants.defaultEmojiHeight,
    loading: true
  }), emojiRenderState === ResourcedEmojiComponentRenderStatesEnum.FALLBACK && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, customFallback || fallback || shortName), emojiRenderState === ResourcedEmojiComponentRenderStatesEnum.EMOJI && optimisticEmojiDescription && /*#__PURE__*/_react.default.createElement(_Emoji.default, {
    emoji: optimisticEmojiDescription,
    onLoadError: handleOnLoadError,
    onLoadSuccess: handleOnLoadSuccess,
    showTooltip: showTooltip,
    fitToHeight: fitToHeight,
    autoWidth: !!emoji ? false : true,
    editorEmoji: editorEmoji
  })));
};
var _default = exports.default = ResourcedEmojiComponent;