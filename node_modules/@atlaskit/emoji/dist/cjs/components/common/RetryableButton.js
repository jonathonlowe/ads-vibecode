/* RetryableButton.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.uploadEmojiButtonTestId = exports.retryUploadButtonTestId = exports.default = void 0;
require("./RetryableButton.compiled.css");
var React = _interopRequireWildcard(require("react"));
var _runtime = require("@compiled/react/runtime");
var _reactIntlNext = require("react-intl-next");
var _new = _interopRequireDefault(require("@atlaskit/button/new"));
var _spinner = _interopRequireDefault(require("@atlaskit/spinner"));
var _compiled = require("@atlaskit/primitives/compiled");
var _i18n = require("../i18n");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var buttonSpinner = null;
var retryUploadButtonTestId = exports.retryUploadButtonTestId = 'retry-upload-button';
var uploadEmojiButtonTestId = exports.uploadEmojiButtonTestId = 'upload-emoji-button';
var LoadingSpinner = function LoadingSpinner() {
  return /*#__PURE__*/React.createElement("span", {
    className: (0, _runtime.ax)(["_2hwx19bv _18u019bv"])
  }, /*#__PURE__*/React.createElement(_spinner.default, null));
};
var RetryButton = function RetryButton(props) {
  var onSubmit = props.onSubmit,
    ariaLabelledBy = props.ariaLabelledBy,
    ariaDescribedBy = props.ariaDescribedBy;
  return /*#__PURE__*/React.createElement(_reactIntlNext.FormattedMessage, _i18n.messages.retryLabel, function (retryLabel) {
    return /*#__PURE__*/React.createElement(_compiled.Box, {
      paddingInlineEnd: "space.050"
    }, /*#__PURE__*/React.createElement(_new.default, {
      appearance: "warning",
      onClick: onSubmit,
      testId: retryUploadButtonTestId,
      "aria-describedby": ariaDescribedBy,
      "aria-labelledby": ariaLabelledBy,
      autoFocus: true
    }, retryLabel));
  });
};
var UploadButton = function UploadButton(props) {
  var appearance = props.appearance,
    onSubmit = props.onSubmit,
    label = props.label,
    ariaLabelledBy = props.ariaLabelledBy,
    ariaDescribedBy = props.ariaDescribedBy;
  return /*#__PURE__*/React.createElement(_compiled.Box, {
    paddingInlineEnd: "space.050"
  }, /*#__PURE__*/React.createElement(_new.default, {
    appearance: appearance,
    onClick: onSubmit,
    testId: uploadEmojiButtonTestId,
    "aria-describedby": ariaDescribedBy,
    "aria-labelledby": ariaLabelledBy,
    autoFocus: true
  }, label));
};
var RetryableButton = function RetryableButton(props) {
  var loading = props.loading,
    error = props.error;
  if (loading) {
    return /*#__PURE__*/React.createElement(LoadingSpinner, null);
  }
  if (error) {
    return /*#__PURE__*/React.createElement(RetryButton, props);
  }
  return /*#__PURE__*/React.createElement(UploadButton, props);
};
var _default = exports.default = RetryableButton;