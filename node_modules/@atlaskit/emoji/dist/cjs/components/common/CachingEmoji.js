"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.CachingMediaEmoji = exports.CachingEmoji = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireWildcard(require("react"));
var _typeHelpers = require("../../util/type-helpers");
var _types = require("../../types");
var _logger = _interopRequireDefault(require("../../util/logger"));
var _Emoji = _interopRequireDefault(require("./Emoji"));
var _EmojiPlaceholder = _interopRequireDefault(require("./EmojiPlaceholder"));
var _EmojiFallback = _interopRequireDefault(require("./EmojiFallback"));
var _UfoErrorBoundary = require("./UfoErrorBoundary");
var _analytics = require("../../util/analytics");
var _constants = require("../../util/constants");
var _ufoExperiences = require("../../util/analytics/ufoExperiences");
var _useEmoji2 = require("../../hooks/useEmoji");
var _analytics2 = require("../../util/analytics/analytics");
var _excluded = ["emoji", "placeholderSize"],
  _excluded2 = ["emoji"],
  _excluded3 = ["emoji", "placeholderSize", "showTooltip", "fitToHeight", "children"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * Renders an emoji from a cached image, if required.
 */
var CachingEmoji = exports.CachingEmoji = function CachingEmoji(props) {
  // Optimisation to only render CachingMediaEmoji if necessary
  // slight performance hit, which accumulates for a large number of emoji.
  var emoji = props.emoji,
    placeholderSize = props.placeholderSize,
    restProps = (0, _objectWithoutProperties2.default)(props, _excluded);
  // start emoji rendered experience, it may have already started earlier in `ResourcedEmoji`.
  (0, _analytics.useSampledUFOComponentExperience)(_analytics.ufoExperiences['emoji-rendered'].getInstance(emoji.id || emoji.shortName), _constants.SAMPLING_RATE_EMOJI_RENDERED_EXP, {
    source: 'CachingEmoji',
    emojiId: emoji.id
  });
  (0, _react.useEffect)(function () {
    if (!(0, _ufoExperiences.hasUfoMarked)((0, _analytics.sampledUfoRenderedEmoji)(emoji), 'fmp')) {
      (0, _analytics.sampledUfoRenderedEmoji)(emoji).markFMP();
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  var emojiNode = function emojiNode() {
    if ((0, _typeHelpers.isMediaEmoji)(emoji)) {
      return /*#__PURE__*/_react.default.createElement(CachingMediaEmoji, (0, _extends2.default)({
        emoji: emoji,
        placeholderSize: placeholderSize
      }, restProps));
    }
    return /*#__PURE__*/_react.default.createElement(StandardEmoji, (0, _extends2.default)({
      emoji: emoji
    }, restProps));
  };
  return /*#__PURE__*/_react.default.createElement(_UfoErrorBoundary.UfoErrorBoundary, {
    experiences: [_analytics.ufoExperiences['emoji-rendered'].getInstance(props.emoji.id || props.emoji.shortName)]
  }, emojiNode());
};
var StandardEmoji = function StandardEmoji(props) {
  var emoji = props.emoji,
    restProps = (0, _objectWithoutProperties2.default)(props, _excluded2);
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    imageLoadError = _useState2[0],
    setImageLoadError = _useState2[1];
  var handleLoadError = function handleLoadError(_emojiId) {
    setImageLoadError(true);
  };
  if (imageLoadError) {
    return /*#__PURE__*/_react.default.createElement(_EmojiFallback.default, (0, _extends2.default)({
      emoji: emoji
    }, restProps));
  }
  return /*#__PURE__*/_react.default.createElement(_Emoji.default, (0, _extends2.default)({
    emoji: emoji,
    onLoadError: handleLoadError
  }, restProps));
};

/**
 * Rendering a media emoji image from a cache for media emoji, with different
 * rendering paths depending on caching strategy.
 */
var CachingMediaEmoji = exports.CachingMediaEmoji = function CachingMediaEmoji(props) {
  var emoji = props.emoji,
    placeholderSize = props.placeholderSize,
    showTooltip = props.showTooltip,
    fitToHeight = props.fitToHeight,
    children = props.children,
    restProps = (0, _objectWithoutProperties2.default)(props, _excluded3);
  var shortName = emoji.shortName,
    representation = emoji.representation;
  var _useState3 = (0, _react.useState)(),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    cachedEmoji = _useState4[0],
    setCachedEmoji = _useState4[1];
  var _useState5 = (0, _react.useState)(false),
    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
    inValidImage = _useState6[0],
    setInvalidImage = _useState6[1];
  var _useEmoji = (0, _useEmoji2.useEmoji)(),
    emojiProvider = _useEmoji.emojiProvider;
  var loadEmoji = (0, _react.useCallback)(function (emojiProvider) {
    (0, _logger.default)('Loading image via media cache', emoji.shortName);
    (0, _analytics.sampledUfoRenderedEmoji)(emoji).mark(_types.UfoEmojiTimings.MEDIA_START);
    emojiProvider.getMediaEmojiDescriptionURLWithInlineToken(emoji).then(function (cachedEmoji) {
      setCachedEmoji(cachedEmoji);
      setInvalidImage(false);
      (0, _analytics.sampledUfoRenderedEmoji)(emoji).mark(_types.UfoEmojiTimings.MEDIA_END);
    }).catch(function (error) {
      setCachedEmoji(undefined);
      setInvalidImage(true);
      (0, _analytics.sampledUfoRenderedEmoji)(emoji).failure({
        metadata: {
          error: (0, _analytics2.extractErrorInfo)(error),
          reason: 'failed to load media emoji',
          source: 'CachingMediaEmoji',
          emojiId: emoji.id
        }
      });
    });
  }, [emoji]);
  (0, _react.useEffect)(function () {
    if (emojiProvider) {
      loadEmoji(emojiProvider);
    }
  }, [emojiProvider, loadEmoji]);
  var handleLoadError = function handleLoadError(_emojiId) {
    (0, _analytics.sampledUfoRenderedEmoji)(_emojiId).failure({
      metadata: {
        reason: 'load error',
        source: 'CachingMediaEmoji',
        emojiId: _emojiId.id
      }
    });
    setInvalidImage(true);
  };
  if (cachedEmoji && !inValidImage) {
    return /*#__PURE__*/_react.default.createElement(_Emoji.default, (0, _extends2.default)({}, restProps, {
      showTooltip: showTooltip,
      fitToHeight: fitToHeight,
      emoji: cachedEmoji,
      onLoadError: handleLoadError
    }));
  }
  return /*#__PURE__*/_react.default.createElement(_EmojiPlaceholder.default, {
    size: fitToHeight || placeholderSize,
    shortName: shortName,
    showTooltip: showTooltip,
    representation: representation
  });
};
var _default = exports.default = /*#__PURE__*/(0, _react.memo)(CachingEmoji);