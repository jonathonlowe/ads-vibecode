/* EmojiErrorMessage.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./EmojiErrorMessage.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { R300, R400 } from '@atlaskit/theme/colors';
import Tooltip from '@atlaskit/tooltip';
import ErrorIcon from '@atlaskit/icon/core/migration/error';
import { useIntl } from 'react-intl-next';
import { messages } from '../i18n';
const errorMessageStyles = {
  chooseFile: "_1e0c1txw _syaz1l5o _u5f319bv _1bah1y6m",
  delete: "_1e0c1txw _syaz1ick _4cvr1h6o _1bahesu3 _u5f31b66",
  preview: "_1e0c116y _syaz1ick _u5f319bv _1bahesu3 _4cvr1h6o"
};
export const emojiErrorScreenreaderTestId = 'emoji-error-screenreader-message';
export const emojiErrorMessageTestId = 'emoji-error-message';
export const emojiErrorMessageTooltipTestId = 'emoji-error-message-tooltip';
export const emojiErrorIconTestId = 'emoji-error-icon';
const EmojiErrorMessage = props => {
  const {
    errorStyle,
    message,
    tooltip
  } = props;
  const {
    formatMessage
  } = useIntl();
  const visualContent = tooltip ? /*#__PURE__*/React.createElement("div", {
    "data-testid": emojiErrorMessageTestId,
    className: ax([errorMessageStyles[errorStyle]])
  }, /*#__PURE__*/React.createElement(Tooltip, {
    content: message,
    position: "top",
    testId: emojiErrorMessageTooltipTestId
  }, /*#__PURE__*/React.createElement(ErrorIcon, {
    color: "currentColor",
    label: formatMessage(messages.error),
    LEGACY_size: "medium",
    spacing: "spacious",
    testId: emojiErrorIconTestId
  }))) : /*#__PURE__*/React.createElement("div", {
    "data-testid": emojiErrorMessageTestId,
    className: ax([errorMessageStyles[errorStyle]])
  }, /*#__PURE__*/React.createElement(ErrorIcon, {
    color: "currentColor",
    label: formatMessage(messages.error),
    LEGACY_size: "small"
  }), message);
  return visualContent;
};
export default EmojiErrorMessage;