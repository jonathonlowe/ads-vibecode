import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import React from 'react';
import LoadingEmojiComponent from '../common/LoadingEmojiComponent';
import { withAnalyticsEvents } from '@atlaskit/analytics-next';
const emojiUploadModuleLoader = () => import( /* webpackChunkName:"@atlaskit-internal_emojiUploadComponent" */'./EmojiUploadComponent');
const emojiUploadLoader = () => emojiUploadModuleLoader().then(module => module.default);
export class EmojiUploaderInternal extends LoadingEmojiComponent {
  constructor(props) {
    super(props, {});
    // state initialised with static component to prevent
    // rerender when the module has already been loaded
    _defineProperty(this, "state", {
      asyncLoadedComponent: EmojiUploaderInternal.AsyncLoadedComponent
    });
  }
  asyncLoadComponent() {
    emojiUploadLoader().then(component => {
      EmojiUploaderInternal.AsyncLoadedComponent = component;
      this.setAsyncState(component);
    });
  }
  renderLoaded(loadedEmojiProvider, EmojiUploadComponent) {
    const {
      emojiProvider,
      ...otherProps
    } = this.props;
    return /*#__PURE__*/React.createElement(EmojiUploadComponent, _extends({
      emojiProvider: loadedEmojiProvider
    }, otherProps));
  }
}
const EmojiUploader = withAnalyticsEvents()(EmojiUploaderInternal);
export default EmojiUploader;