/* EmojiPickerListSearch.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./EmojiPickerListSearch.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
import SearchIcon from '@atlaskit/icon/core/migration/search';
import TextField from '@atlaskit/textfield';
import VisuallyHidden from '@atlaskit/visually-hidden';
import React, { useLayoutEffect, useRef, useState } from 'react';
import { useIntl } from 'react-intl-next';
import { useDebouncedCallback } from 'use-debounce';
import { EMOJI_SEARCH_DEBOUNCE } from '../../util/constants';
import { messages } from '../i18n';
const input = null;
const pickerSearch = null;
const searchIcon = null;
const hidden = null;
export const emojiPickerSearchTestId = 'emoji-picker-search';
export const EmojiPickerListSearch = props => {
  const {
    style,
    query,
    isVisible = true,
    resultsCount,
    onChange
  } = props;
  const textRef = useRef(null);
  const [dirty, setDirty] = useState(false);
  const {
    formatMessage
  } = useIntl();

  // Debounce callback
  const [debouncedSearch] = useDebouncedCallback(value => {
    onChange(value);
    setDirty(true);
  },
  // delay in ms
  EMOJI_SEARCH_DEBOUNCE);
  const handleOnChange = e => {
    debouncedSearch(e.target.value);
  };
  useLayoutEffect(() => {
    requestAnimationFrame(() => {
      if (textRef) {
        var _textRef$current;
        (_textRef$current = textRef.current) === null || _textRef$current === void 0 ? void 0 : _textRef$current.focus();
      }
    });
  }, []);
  return /*#__PURE__*/React.createElement("div", {
    style: style,
    className: ax(["_vchhusvi _ca0qutpp _n3tdutpp _19bvutpp _u5f3utpp _1bsb1osq", !isVisible && "_tzy4idpf _3um015vq _1e0cglyw"])
  }, /*#__PURE__*/React.createElement(VisuallyHidden, {
    id: "emoji-search-results-status",
    role: "status"
  }, dirty ? query === '' ? formatMessage(messages.searchResultsStatusSeeAll) : formatMessage(messages.searchResultsStatus, {
    count: resultsCount
  }) : null), /*#__PURE__*/React.createElement(TextField, {
    role: "searchbox",
    "aria-label": formatMessage(messages.searchLabel),
    autoComplete: "off",
    name: "search",
    placeholder: `${formatMessage(messages.searchPlaceholder)}...`,
    defaultValue: query || '',
    onChange: handleOnChange,
    elemBeforeInput: /*#__PURE__*/React.createElement("span", {
      className: ax(["_tzy4105o _18u01i6y"])
    }, /*#__PURE__*/React.createElement(SearchIcon, {
      LEGACY_margin: "0 0 0 2px",
      color: "currentColor",
      spacing: "spacious",
      label: ""
    })),
    testId: emojiPickerSearchTestId,
    ref: textRef,
    isCompact: true,
    className: ax(["_11c82smr _12ji1r31 _1qu2glyw _12y31o36 _vchhusvi _syaz1kw7 _80om1kw7 _1q51t94y _y4tize3t _85i5v77o _bozg12x7 _1bsb1osq _13xeglyw _1goxglyw"])
  }));
};