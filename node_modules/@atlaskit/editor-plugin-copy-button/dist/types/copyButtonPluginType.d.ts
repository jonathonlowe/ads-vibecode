import type { NextEditorPlugin, OptionalPlugin } from '@atlaskit/editor-common/types';
import type { AccessibilityUtilsPlugin } from '@atlaskit/editor-plugin-accessibility-utils';
import type { AnalyticsPlugin } from '@atlaskit/editor-plugin-analytics';
import type { MarkType } from '@atlaskit/editor-prosemirror/model';
declare const processCopyButtonItemsWithAnalytics: (state: import("prosemirror-state").EditorState) => (items: import("@atlaskit/editor-common/types").FloatingToolbarItem<import("@atlaskit/editor-common/types").Command>[], hoverDecoration: ((nodeType: import("prosemirror-model").NodeType | import("prosemirror-model").NodeType[], add: boolean, className?: string | undefined) => import("@atlaskit/editor-common/types").Command) | undefined) => import("@atlaskit/editor-common/types").FloatingToolbarItem<import("@atlaskit/editor-common/types").Command>[];
export type CopyButtonPlugin = NextEditorPlugin<'copyButton', {
    dependencies: [OptionalPlugin<AnalyticsPlugin>, OptionalPlugin<AccessibilityUtilsPlugin>];
    actions: {
        processCopyButtonItems: typeof processCopyButtonItemsWithAnalytics;
    };
}>;
export type CopyButtonPluginState = {
    copied: boolean;
    markSelection?: {
        start: number;
        end: number;
        markType: MarkType;
    };
};
export {};
