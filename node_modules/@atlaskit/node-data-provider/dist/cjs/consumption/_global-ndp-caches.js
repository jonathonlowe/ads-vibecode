"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._resetGlobalNdpCachesContext = _resetGlobalNdpCachesContext;
exports.useGlobalNdpCachesContext = useGlobalNdpCachesContext;
var _react = _interopRequireDefault(require("react"));
var GlobalNdpCachesContext = /*#__PURE__*/_react.default.createContext({});
function useGlobalNdpCachesContext() {
  var globalNdpCachesContextValue = _react.default.useContext(GlobalNdpCachesContext);
  return globalNdpCachesContextValue;
}

// The ndp caches currently use module scope to store the caches. This is not ideal, and a global provider
// will avoid the need for this.
// This function is used to reset the global ndp caches context in tests.
function _resetGlobalNdpCachesContext() {
  GlobalNdpCachesContext = /*#__PURE__*/_react.default.createContext({});
}