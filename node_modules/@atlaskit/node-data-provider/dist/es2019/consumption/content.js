/* eslint-disable @atlaskit/editor/no-re-export */
// Entry file

import React from 'react';
import { _resetGlobalNdpCachesContext } from './_global-ndp-caches';
import { useContentNodeDataProvidersSetup } from './_internal-context';
const ContentNodeDataProvidersContext = /*#__PURE__*/React.createContext(undefined);

/**
 *
 * @example
 * ```tsx
 * <ContentNodeDataProviders
 * 	contentType="page" contentId="9001"
 * 	adf={doc}
 * 	placeholder={<Spinner />}
 * 	existingProvidersCache={ssrProvidersCache}
 * 	getNodeDataProviders={getPageNodeDataProviders}
 * 	onCacheWarmed={trackCacheWarmed}
 * >
 * 	 <Editor />
 * </ContentNodeDataProviders>
 * ```
 */
export function ContentNodeDataProviders(props) {
  const contentNodeDataProviders = useContentNodeDataProvidersSetup({
    contentType: props.contentType,
    contentId: props.contentId
  }, {
    adfToUpdateWith: props.adf,
    existingProvidersCache: props.existingProvidersCache,
    getNodeDataProviders: props.getNodeDataProviders,
    onCacheWarmed: props.onCacheWarmed
  });
  return /*#__PURE__*/React.createElement(ContentNodeDataProvidersContext.Provider, {
    value: contentNodeDataProviders
  }, props.children);
}
export function useContentNodeDataProviders() {
  const contentNodeDataProvidersContext = React.useContext(ContentNodeDataProvidersContext);
  return contentNodeDataProvidersContext;
}
export {
/**
 * Exported for testing purposes only.
 *
 * This API will change.
 */
_resetGlobalNdpCachesContext as __testOnly_resetGlobalNdpCachesContext };