import { type DocNode } from '@atlaskit/adf-schema';
import { type NodeDataProviders, type NodeDataProvidersCache } from '../cache';
/**
 * Sets up nodeview data providers for a content node.
 *
 * This will return the cached node data providers if they exist, otherwise it will call the provided getNodeDataProviders function.
 *
 * Note: Calling this has side effects where caches for the nodeview data providers will continue to be built
 * in the background after this resolves to a set of nodeview data providers that can be used.
 */
export declare function useContentNodeDataProvidersSetup(content: {
    /**
     * The type of content.
     */
    contentType: 'page';
    contentId: string;
}, 
/**
 * Note: changes to this object will not be reflected in the cache.
 */
setupOptions: {
    /**
     * Note: this will only be used if no existing NodeDataProviders are found for the content.
     */
    adfToUpdateWith?: DocNode;
    existingProvidersCache?: NodeDataProvidersCache;
    getNodeDataProviders: () => NodeDataProviders;
    onCacheWarmed?: (_: {
        warmedNodeDataProvidersCache: NodeDataProvidersCache;
        nodeDataProviders: NodeDataProviders;
    }) => void;
}): NodeDataProviders | undefined;
