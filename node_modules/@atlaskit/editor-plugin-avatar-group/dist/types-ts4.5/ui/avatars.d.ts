/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import type { ReactNode } from 'react';
import React from 'react';
import { jsx } from '@emotion/react';
import type { EditorAnalyticsAPI } from '@atlaskit/editor-common/analytics';
import type { CollabParticipant } from '@atlaskit/editor-common/collab';
import type { ExtractInjectionAPI, FeatureFlags } from '@atlaskit/editor-common/types';
import type { ReadOnlyParticipants } from '@atlaskit/editor-plugin-collab-edit';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { AvatarGroupPlugin } from '../avatarGroupPluginType';
export interface AvatarsProps {
    sessionId?: string;
    participants: ReadOnlyParticipants | undefined;
    editorView?: EditorView;
    featureFlags: FeatureFlags;
    editorAnalyticsAPI: EditorAnalyticsAPI | undefined;
    editorAPI: ExtractInjectionAPI<AvatarGroupPlugin> | undefined;
    children: ReactNode;
}
export declare const scrollToCollabCursor: (editorAPI: ExtractInjectionAPI<AvatarGroupPlugin> | undefined, participants: CollabParticipant[], sessionId: string | undefined, index: number, editorAnalyticsAPI: EditorAnalyticsAPI | undefined) => void;
export declare const Avatars: React.MemoExoticComponent<(props: AvatarsProps) => jsx.JSX.Element | null>;
