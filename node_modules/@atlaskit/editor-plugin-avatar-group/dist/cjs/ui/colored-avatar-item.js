"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ColoredAvatarItem = void 0;
var _react = require("@emotion/react");
var _colors = require("@atlaskit/theme/colors");
var _styles = require("./styles");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var ColoredAvatarItem = exports.ColoredAvatarItem = function ColoredAvatarItem(props) {
  var _props$api$collabEdit, _props$api, _props$presenceId;
  var participantColor = (_props$api$collabEdit = (_props$api = props.api) === null || _props$api === void 0 || (_props$api = _props$api.collabEdit) === null || _props$api === void 0 || (_props$api = _props$api.actions) === null || _props$api === void 0 ? void 0 : _props$api.getAvatarColor((_props$presenceId = props.presenceId) !== null && _props$presenceId !== void 0 ? _props$presenceId : props.sessionId)) !== null && _props$api$collabEdit !== void 0 ? _props$api$collabEdit : {
    backgroundColor: "var(--ds-background-accent-red-subtle, ".concat(_colors.R100, ")"),
    textColor: "var(--ds-text-accent-gray-bolder, ".concat(_colors.N900, ")")
  };
  var avatar = props.name.substr(0, 1).toUpperCase();
  return (0, _react.jsx)("div", {
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    css: (0, _styles.badge)(participantColor === null || participantColor === void 0 ? void 0 : participantColor.backgroundColor, participantColor === null || participantColor === void 0 ? void 0 : participantColor.textColor),
    "data-testid": "editor-collab-badge"
  }, avatar);
};