import React from 'react';
import type { WrappedComponentProps } from 'react-intl-next';
import type { EditorAnalyticsAPI } from '@atlaskit/editor-common/analytics';
import type { CollabInviteToEditProps } from '@atlaskit/editor-common/collab';
import type { EventDispatcher } from '@atlaskit/editor-common/event-dispatcher';
import type { ExtractInjectionAPI, FeatureFlags } from '@atlaskit/editor-common/types';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { AvatarGroupPlugin } from '../avatarGroupPluginType';
export type AvatarsWithPluginStateProps = {
    editorView?: EditorView;
    eventDispatcher?: EventDispatcher;
    featureFlags: FeatureFlags;
    editorAnalyticsAPI: EditorAnalyticsAPI | undefined;
    editorAPI: ExtractInjectionAPI<AvatarGroupPlugin> | undefined;
} & CollabInviteToEditProps;
declare const _default: React.FC<import("react-intl-next").WithIntlProps<{
    editorView?: EditorView | undefined;
    eventDispatcher?: EventDispatcher<any> | undefined;
    featureFlags: FeatureFlags;
    editorAnalyticsAPI: EditorAnalyticsAPI | undefined;
    editorAPI: import("@atlaskit/editor-common/types").EditorInjectionAPI<"avatarGroup", {
        pluginConfiguration: import("../avatarGroupPluginType").AvatarGroupPluginOptions;
        dependencies: import("../avatarGroupPluginType").AvatarGroupPluginDependencies;
        actions: {
            getToolbarItem: ({ inviteToEditHandler, isInviteToEditButtonSelected, inviteToEditComponent, }: CollabInviteToEditProps) => JSX.Element | null;
        };
    }> | undefined;
} & CollabInviteToEditProps & WrappedComponentProps>> & {
    WrappedComponent: React.ComponentType<{
        editorView?: EditorView | undefined;
        eventDispatcher?: EventDispatcher<any> | undefined;
        featureFlags: FeatureFlags;
        editorAnalyticsAPI: EditorAnalyticsAPI | undefined;
        editorAPI: import("@atlaskit/editor-common/types").EditorInjectionAPI<"avatarGroup", {
            pluginConfiguration: import("../avatarGroupPluginType").AvatarGroupPluginOptions;
            dependencies: import("../avatarGroupPluginType").AvatarGroupPluginDependencies;
            actions: {
                getToolbarItem: ({ inviteToEditHandler, isInviteToEditButtonSelected, inviteToEditComponent, }: CollabInviteToEditProps) => JSX.Element | null;
            };
        }> | undefined;
    } & CollabInviteToEditProps & WrappedComponentProps>;
};
export default _default;
