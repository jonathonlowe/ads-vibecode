import type { EditorAnalyticsAPI, PasteSource } from '@atlaskit/editor-common/analytics';
import type { CardOptions } from '@atlaskit/editor-common/card';
import type { NodeType, Node as PMNode, Schema } from '@atlaskit/editor-prosemirror/model';
import { Mark, Slice } from '@atlaskit/editor-prosemirror/model';
import type { EditorState, Selection, Transaction } from '@atlaskit/editor-prosemirror/state';
export declare function isPastedFromWord(html?: string): boolean;
export declare function isPastedFromExcel(html?: string): boolean;
export declare const isSingleLine: (text: string) => boolean;
export declare function htmlContainsSingleFile(html: string): boolean;
export declare function getPasteSource(event: ClipboardEvent): PasteSource;
/**
 * Wrap link with angle brackets if they are not already contained in markdown url syntax (e.g. [text](url))
 *
 * This mitigate some issues in the markdown-it parser (or linkify where it would not parse the link correctly if it contains some characters.
 * @see https://product-fabric.atlassian.net/browse/ED-3159
 * @see https://github.com/markdown-it/markdown-it/issues/38
 *
 * This function was introduced in
 * https://stash.atlassian.com/projects/ATLASSIAN/repos/atlassian-frontend-monorepo/commits/64d0f30bbe7014#platform%2Fpackages%2Ffabric%2Feditor-core%2Fsrc%2Fplugins%2Fpaste%2Futil.ts
 *
 * If a right angle bracket or double quote is present in the url, the url will only be escaped up to the character before the right angle bracket (this is the same behaviour as in Google Docs).
 *
 * Tests in platform/packages/editor/editor-plugin-paste-tests/src/__tests__/playwright/paste.spec.ts
 * check behaviour of double quotes in url strings
 */
export declare function escapeLinks(text: string): string;
export declare function hasOnlyNodesOfType(...nodeTypes: NodeType[]): (slice: Slice) => boolean;
export declare function applyTextMarksToSlice(schema: Schema, marks?: readonly Mark[]): (slice: Slice) => Slice;
export declare function isEmptyNode(node: PMNode | null | undefined): boolean | null;
export declare function isCursorSelectionAtTextStartOrEnd(selection: Selection): boolean | null;
export declare function isPanelNode(node: PMNode | null | undefined): boolean;
export declare function isSelectionInsidePanel(selection: Selection): PMNode | null;
export declare const htmlHasInvalidLinkTags: (html?: string) => boolean;
export declare const removeDuplicateInvalidLinks: (html: string) => string;
export declare const addReplaceSelectedTableAnalytics: (state: EditorState, tr: Transaction, editorAnalyticsAPI: EditorAnalyticsAPI | undefined) => Transaction;
export declare const transformUnsupportedBlockCardToInline: (slice: Slice, state: EditorState, cardOptions?: CardOptions) => Slice;
