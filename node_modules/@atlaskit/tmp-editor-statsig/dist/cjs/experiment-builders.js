"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createBooleanExperiment = createBooleanExperiment;
exports.createMultivariateExperiment = createMultivariateExperiment;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _typeGuards = require("./type-guards");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
/**
 * Helper to create a boolean experiment configuration
 */
function createBooleanExperiment(config) {
  return _objectSpread(_objectSpread({}, config), {}, {
    typeGuard: _typeGuards.isBoolean,
    defaultValue: config.defaultValue
  });
}

/**
 * Helper to create a multivariate experiment configuration
 */
function createMultivariateExperiment(config) {
  return _objectSpread(_objectSpread({}, config), {}, {
    typeGuard: (0, _typeGuards.oneOf)(config.values),
    defaultValue: config.defaultValue
  });
}