/* eslint-disable @atlaskit/editor/no-re-export */
// Entry file in package.json

import { editorExperimentsConfig } from './experiments-config';
export let _overrides = {};
export let _paramOverrides = {};
export let _product;

/**
 * This function is used to set up the editor experiments for testing purposes.
 * It should be called before running code that depends on editor experiments.
 *
 * @example
 * ```ts
 * setupEditorExperiments('confluence', {
 *  'experiment-name': 'value',
 * });
 * ```
 */
export function setupEditorExperiments(product,
/**
 * Overrides are used to set the group of an experiment for testing purposes.
 * This is useful when you want to test a specific experiment group.
 */
groupOverrides,
/**
 * Param overrides are used to set the experiment parameters for testing purposes.
 * This is useful when you want to tweak the experiment parameters for testing.
 */
paramOverrides) {
  if (groupOverrides) {
    // When setting up overrides, we want to ensure that experiments don't end up with invalid
    // values.
    // For production usage -- this is done via the feature flag client which takes the type
    // and performs equivalent logic.
    // @ts-ignore
    groupOverrides = Object.entries(groupOverrides).reduce((acc, [key, value]) => {
      const config = editorExperimentsConfig[key];
      if (config) {
        acc = {
          ...acc,
          [key]: config.typeGuard(value) ? value : config.defaultValue
        };
      }
      return acc;
    }, {});
    _overrides = groupOverrides;
  }
  _product = product;
  if (paramOverrides) {
    _paramOverrides = paramOverrides;
  }
}