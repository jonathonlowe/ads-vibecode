import _defineProperty from "@babel/runtime/helpers/defineProperty";
import { bind } from 'bind-event-listener';
import { logException } from '@atlaskit/editor-common/monitoring';
import { DOMSerializer } from '@atlaskit/editor-prosemirror/model';
import { setDatePickerAt } from '../pm-plugins/actions';
import { dateToDOM } from './dateNodeSpec';
export class DateNodeView {
  static logError(error) {
    void logException(error, {
      location: 'editor-plugin-date/DateNodeView'
    });
  }
  constructor(node, view, getPos, intl) {
    _defineProperty(this, "dom", document.createElement('span'));
    this.node = node;
    try {
      const spec = dateToDOM(node, view.state, getPos, intl);
      const {
        dom
      } = DOMSerializer.renderSpec(document, spec);
      if (!(dom instanceof HTMLElement)) {
        throw new Error('DOMSerializer.renderSpec() did not return HTMLElement');
      }
      this.dom = dom;
      this.clickUnBind = bind(this.dom, {
        type: 'click',
        listener: event => {
          event.stopImmediatePropagation();
          const {
            state,
            dispatch
          } = view;
          setDatePickerAt(state.selection.from)(state, dispatch);
        }
      });
    } catch (error) {
      DateNodeView.logError(error instanceof Error ? error : new Error('Unknown error on DateNodeView constructor'));
      this.renderFallback();
    }
  }
  renderFallback() {
    const fallbackElement = document.createElement('span');
    fallbackElement.innerText = this.node.attrs.timestamp;
    this.dom.appendChild(fallbackElement);
  }
  destroy() {
    this.clickUnBind && this.clickUnBind();
  }
}