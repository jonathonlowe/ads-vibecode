import { isPastDate, timestampToString, timestampToTaskContext } from '@atlaskit/editor-common/utils';
export var getDateInformation = function getDateInformation(timestamp, intl, state, pos) {
  if (!state) {
    return {
      color: undefined,
      displayString: timestampToString(timestamp, intl)
    };
  }
  var doc = state.doc,
    selection = state.selection;
  var taskItem = state.schema.nodes.taskItem;

  // We fall back to selection.$from even though it does not cover all use cases
  // eg. upon Editor init, selection is at the start, not at the Date node
  var $nodePos = typeof pos === 'number' ? doc.resolve(pos) : selection.$from;
  var parent = $nodePos.parent;
  var withinIncompleteTask = parent.type === taskItem && parent.attrs.state !== 'DONE';
  var color = withinIncompleteTask && isPastDate(timestamp) ? 'red' : undefined;
  var displayString = withinIncompleteTask ? timestampToTaskContext(timestamp, intl) : timestampToString(timestamp, intl);
  return {
    displayString: displayString,
    color: color
  };
};