/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import "./index.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
import React from 'react';
import { injectIntl } from 'react-intl-next';
import Calendar from '@atlaskit/calendar';
import { INPUT_METHOD } from '@atlaskit/editor-common/analytics';
import { dateMessages as messages } from '@atlaskit/editor-common/messages';
import { PlainOutsideClickTargetRefContext, Popup, withOuterListeners } from '@atlaskit/editor-common/ui';
import { timestampToIsoFormat, timestampToUTCDate } from '@atlaskit/editor-common/utils';
import { akEditorFloatingDialogZIndex } from '@atlaskit/editor-shared-styles';
import { fg } from '@atlaskit/platform-feature-flags';
import { N0, N60A } from '@atlaskit/theme/colors';
import VisuallyHidden from '@atlaskit/visually-hidden';
var PopupWithListeners = withOuterListeners(Popup);
import DatePickerInput from './date-picker-input';

// eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage
var popupContentWrapper = null;
// eslint-disable-next-line @repo/internal/react/no-class-components
var DatePicker = /*#__PURE__*/function (_React$Component) {
  function DatePicker(props) {
    var _this;
    _classCallCheck(this, DatePicker);
    _this = _callSuper(this, DatePicker, [props]);

    // Ignored via go/ees005
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    _defineProperty(_this, "handleNewDate", function (date) {
      _this.props.onTextChanged(date);
      _this.setState({
        latestValidDate: date
      });
    });
    _defineProperty(_this, "handleKeyboardSubmitDate", function (date) {
      _this.props.onSelect(date, INPUT_METHOD.KEYBOARD);
    });
    _defineProperty(_this, "handleEmptySubmitDate", function () {
      _this.props.onDelete();
    });
    _defineProperty(_this, "handleOnChange", function (_ref) {
      var day = _ref.day,
        month = _ref.month,
        year = _ref.year;
      var date = {
        day: day,
        month: month,
        year: year
      };
      _this.setState({
        latestValidDate: date
      });
    });
    _defineProperty(_this, "closeDatePickerWithAnalytics", function () {
      _this.props.closeDatePickerWithAnalytics({
        date: _this.state.latestValidDate
      });
    });
    _defineProperty(_this, "handleRef", function (ref) {
      var elm = ref;
      if (elm) {
        elm.focus();
      }
    });
    var timestamp = props.element.getAttribute('timestamp');
    if (timestamp) {
      // Warning: The 'Date' return type of timestampToUTCDate() is not a JS date, it's more similar
      // to the DateType type
      var _timestampToUTCDate = timestampToUTCDate(timestamp),
        day = _timestampToUTCDate.day,
        month = _timestampToUTCDate.month,
        year = _timestampToUTCDate.year;
      var date = {
        day: day,
        month: month,
        year: year
      };
      _this.state = {
        selected: [timestampToIsoFormat(timestamp)],
        date: date,
        latestValidDate: date
      };
    }
    return _this;
  }
  _inherits(DatePicker, _React$Component);
  return _createClass(DatePicker, [{
    key: "render",
    value: function render() {
      var _this2 = this;
      var _this$props = this.props,
        element = _this$props.element,
        _onSelect = _this$props.onSelect,
        mountTo = _this$props.mountTo,
        boundariesElement = _this$props.boundariesElement,
        scrollableElement = _this$props.scrollableElement,
        intl = _this$props.intl,
        dispatchAnalyticsEvent = _this$props.dispatchAnalyticsEvent,
        isNew = _this$props.isNew,
        autoFocus = _this$props.autoFocus,
        weekStartDay = _this$props.weekStartDay;
      // Ignored via go/ees005
      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
      var timestamp = element.getAttribute('timestamp');
      if (this.state === null) {
        // Without this, you can blow up the page by slowing down cpu, opening date, typing after date
        // then clicking on date lozenge and typing quickly before it opens
        return null;
      }
      var _this$state = this.state,
        date = _this$state.date,
        selected = _this$state.selected,
        latestValidDate = _this$state.latestValidDate;
      var day = latestValidDate.day,
        month = latestValidDate.month,
        year = latestValidDate.year;
      if (!timestamp) {
        return null;
      }
      return /*#__PURE__*/React.createElement(PopupWithListeners
      // Ignored via go/ees005
      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
      , {
        target: element,
        offset: [0, 8],
        fitHeight: 370,
        fitWidth: 340,
        handleClickOutside: this.closeDatePickerWithAnalytics,
        handleEscapeKeydown: this.closeDatePickerWithAnalytics,
        zIndex: akEditorFloatingDialogZIndex,
        mountTo: mountTo,
        boundariesElement: boundariesElement,
        scrollableElement: scrollableElement,
        preventOverflow: true
      }, fg('editor_a11y_announce_date_picker_open') && /*#__PURE__*/React.createElement(VisuallyHidden, {
        "aria-atomic": true,
        role: "alert"
      }, intl.formatMessage(messages.datePickerOpenedAlert)), /*#__PURE__*/React.createElement(PlainOutsideClickTargetRefContext.Consumer, null, function (setOutsideClickTargetRef) {
        return /*#__PURE__*/React.createElement("div", {
          ref: setOutsideClickTargetRef,
          className: ax(["_2rko1sit _ca0qv77o _n3tdv77o _19bvv77o _u5f3v77o _16qskkzs _bfhk13b4"]),
          style: {
            "--_es7za0": ix("var(--ds-shadow-overlay, ".concat("0 4px 8px -2px ".concat(N60A, ", 0 0 1px ").concat(N60A), ")")),
            "--_1f6rtr1": ix("var(--ds-surface-overlay, ".concat(N0, ")"))
          }
        }, /*#__PURE__*/React.createElement(DatePickerInput, {
          date: date,
          onNewDate: _this2.handleNewDate,
          onSubmitDate: _this2.handleKeyboardSubmitDate,
          onEmptySubmit: _this2.handleEmptySubmitDate,
          locale: intl.locale,
          dispatchAnalyticsEvent: dispatchAnalyticsEvent,
          autoFocus: autoFocus,
          autoSelectAll: isNew
        }), /*#__PURE__*/React.createElement(Calendar, {
          onChange: _this2.handleOnChange,
          onSelect: function onSelect(date) {
            return _onSelect(date, INPUT_METHOD.PICKER);
          },
          day: day,
          month: month,
          year: year,
          selected: selected,
          ref: _this2.handleRef,
          weekStartDay: weekStartDay,
          testId: 'datepicker'
        }));
      }));
    }
  }]);
}(React.Component);
export default injectIntl(DatePicker);