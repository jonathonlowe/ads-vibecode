"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getPluginState = exports.default = void 0;
var _reactNodeView = require("@atlaskit/editor-common/react-node-view");
var _safePlugin = require("@atlaskit/editor-common/safe-plugin");
var _utils = require("@atlaskit/editor-common/utils");
var _experiments = require("@atlaskit/tmp-editor-statsig/experiments");
var _date = require("../nodeviews/date");
var _DateNodeView = require("../nodeviews/DateNodeView");
var _pluginKey = require("./plugin-key");
var _utils2 = require("./utils");
var _pluginFactory = (0, _utils.pluginFactory)(_pluginKey.pluginKey, _utils2.reducer, {
    mapping: _utils2.mapping,
    onSelectionChanged: _utils2.onSelectionChanged
  }),
  createPluginState = _pluginFactory.createPluginState,
  getPluginState = exports.getPluginState = _pluginFactory.getPluginState;
var createPlugin = function createPlugin(pmPluginFactoryParams) {
  var dispatch = pmPluginFactoryParams.dispatch;
  var newPluginState = {
    showDatePickerAt: null,
    isNew: false,
    isDateEmpty: false,
    focusDateInput: false
  };
  return new _safePlugin.SafePlugin({
    state: createPluginState(dispatch, newPluginState),
    key: _pluginKey.pluginKey,
    props: {
      nodeViews: {
        date: function date(node, view, getPos, decorations) {
          if ((0, _experiments.editorExperiment)('platform_editor_vanilla_dom', true, {
            exposure: true
          })) {
            return new _DateNodeView.DateNodeView(node, view, getPos, pmPluginFactoryParams.getIntl());
          }
          return (0, _reactNodeView.getInlineNodeViewProducer)({
            pmPluginFactoryParams: pmPluginFactoryParams,
            Component: _date.DateNodeView
          })(node, view, getPos, decorations);
        }
      }
    }
  });
};
var _default = exports.default = createPlugin;