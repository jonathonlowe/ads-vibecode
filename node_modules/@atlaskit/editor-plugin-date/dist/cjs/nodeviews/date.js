"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DateNodeView = DateNodeView;
var _react = _interopRequireDefault(require("react"));
var _reactIntlNext = require("react-intl-next");
var _date = require("@atlaskit/date");
var _styles = require("@atlaskit/editor-common/styles");
var _actions = require("../pm-plugins/actions");
var _utils = require("./utils");
function DateNodeView(props) {
  var _props$getPos;
  var timestamp = props.node.attrs.timestamp;
  var intl = (0, _reactIntlNext.useIntl)();
  var pos = (_props$getPos = props.getPos) === null || _props$getPos === void 0 ? void 0 : _props$getPos.call(props);
  var _getDateInformation = (0, _utils.getDateInformation)(timestamp, intl, props.view.state, pos),
    displayString = _getDateInformation.displayString,
    color = _getDateInformation.color;
  return (
    /*#__PURE__*/
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop, jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions -- Ignored via go/DSP-18766
    _react.default.createElement("span", {
      className: _styles.DateSharedCssClassName.DATE_WRAPPER,
      onClick: handleClick
    }, /*#__PURE__*/_react.default.createElement(_date.Date, {
      color: color,
      value: timestamp
    }, displayString))
  );
  function handleClick(event) {
    event.nativeEvent.stopImmediatePropagation();
    var _props$view = props.view,
      state = _props$view.state,
      dispatch = _props$view.dispatch;
    (0, _actions.setDatePickerAt)(state.selection.from)(state, dispatch);
  }
}