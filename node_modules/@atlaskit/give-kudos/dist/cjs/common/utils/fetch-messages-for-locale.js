"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fetchMessagesForLocale = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _en = _interopRequireDefault(require("../../i18n/en"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var localeMap = {
  pt: 'pt-BR',
  'pt-PT': 'pt-BR',
  'en-AU': 'en-GB'
};
var fetchMessagesForLocale = exports.fetchMessagesForLocale = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(locale) {
    var _ref2, _localeMap$locale, targetLocale, _messages, parentLocale, _messages2;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.prev = 0;
          targetLocale = ((_ref2 = (_localeMap$locale = localeMap[locale]) !== null && _localeMap$locale !== void 0 ? _localeMap$locale : locale) !== null && _ref2 !== void 0 ? _ref2 : '').replace('-', '_');
          if (targetLocale) {
            _context.next = 4;
            break;
          }
          throw new Error('No mapped locale');
        case 4:
          _context.next = 6;
          return function (specifier) {
            return new Promise(function (r) {
              return r(specifier);
            }).then(function (s) {
              return _interopRequireWildcard(require(s));
            });
          }( /* webpackChunkName: "@atlaskit-internal_@atlassian/team-central-i18n-[request]" */"../../i18n/".concat(targetLocale));
        case 6:
          _messages = _context.sent;
          return _context.abrupt("return", _messages.default);
        case 10:
          _context.prev = 10;
          _context.t0 = _context["catch"](0);
        case 12:
          _context.prev = 12;
          parentLocale = locale.split(/[-_]/)[0];
          _context.next = 16;
          return function (specifier) {
            return new Promise(function (r) {
              return r(specifier);
            }).then(function (s) {
              return _interopRequireWildcard(require(s));
            });
          }( /* webpackChunkName: "@atlaskit-internal_@atlassian/team-central-i18n-[request]" */"../../i18n/".concat(parentLocale));
        case 16:
          _messages2 = _context.sent;
          return _context.abrupt("return", _messages2.default);
        case 20:
          _context.prev = 20;
          _context.t1 = _context["catch"](12);
        case 22:
          return _context.abrupt("return", _en.default);
        case 23:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[0, 10], [12, 20]]);
  }));
  return function fetchMessagesForLocale(_x) {
    return _ref.apply(this, arguments);
  };
}();