import type { ReadonlyTransaction, Transaction } from '@atlaskit/editor-prosemirror/state';
import { ReplaceStep } from '@atlaskit/editor-prosemirror/transform';
interface TransactionMetadata {
    from: number;
    to: number;
    numReplaceSteps: number;
    isAllText: boolean;
    isReplacedWithSameSize: boolean;
}
/**
 * Checks if step adds inline char
 * @param s
 * @returns True if step adds inline char
 */
export declare const isStepText: (s: ReplaceStep) => boolean;
/**
 * Checks if step is an inline delete/backspace (replace range from -> from + 1 with empty content)
 * @param s
 * @returns True if delete/backspace
 */
export declare const isStepDelete: (s: ReplaceStep) => boolean;
/**
 * Get metadata from the transaction.
 * @param tr
 * @returns Min 'from', max 'to' (from + slice size, or mapped 'to', whichever is larger). If no steps, returns pos range of entire doc.
 * Number of ReplaceStep and ReplaceAroundStep steps 'numReplaceSteps'.
 * 'isAllText' if all steps are represent adding inline text or a backspace/delete or no-op
 */
export declare const getTrMetadata: (tr: Transaction | ReadonlyTransaction) => TransactionMetadata;
export {};
