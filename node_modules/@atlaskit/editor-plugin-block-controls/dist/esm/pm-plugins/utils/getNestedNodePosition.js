import { TextSelection } from '@atlaskit/editor-prosemirror/state';
import { findParentNodeOfType } from '@atlaskit/editor-prosemirror/utils';
export var getNestedNodePosition = function getNestedNodePosition(state) {
  var selection = state.selection;
  var nestedNodePos = selection.$from.before(1);
  if (selection instanceof TextSelection) {
    nestedNodePos = selection.$from.before();
    var $pos = state.doc.resolve(nestedNodePos);
    if ($pos.depth < 1) {
      return nestedNodePos;
    }
    var parentNodeOfSpecificTypes = findParentNodeOfType([state.schema.nodes.bulletList, state.schema.nodes.orderedList, state.schema.nodes.blockquote, state.schema.nodes.taskList, state.schema.nodes.decisionList])(state.selection);
    if (parentNodeOfSpecificTypes) {
      var parentNodeType = parentNodeOfSpecificTypes.node.type.name;
      nestedNodePos = ['bulletList', 'orderedList'].includes(parentNodeType) ? $pos.before($pos.depth - 1) : ['blockquote', 'taskList', 'decisionList'].includes(parentNodeType) ? $pos.before() : nestedNodePos;
    }
  } else {
    nestedNodePos = selection.$from.pos;
  }
  return nestedNodePos;
};