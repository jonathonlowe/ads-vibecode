import { SafePlugin } from '@atlaskit/editor-common/safe-plugin';
import { PluginKey } from '@atlaskit/editor-prosemirror/state';
import { handleKeyDown } from './handle-key-down';
import { handleMouseMove } from './handle-mouse-move';
export var interactionTrackingPluginKey = new PluginKey('interactionTrackingPlugin');
export var createInteractionTrackingPlugin = function createInteractionTrackingPlugin() {
  return new SafePlugin({
    key: interactionTrackingPluginKey,
    state: {
      init: function init() {
        return {
          isEditing: false
        };
      },
      apply: function apply(tr, pluginState) {
        var meta = tr.getMeta(interactionTrackingPluginKey);
        switch (meta === null || meta === void 0 ? void 0 : meta.type) {
          case 'startEditing':
            return {
              isEditing: true
            };
          case 'stopEditing':
            return {
              isEditing: false
            };
        }
        return pluginState;
      }
    },
    props: {
      handleKeyDown: handleKeyDown,
      handleDOMEvents: {
        mousemove: handleMouseMove
      }
    }
  });
};
export var getInteractionTrackingState = function getInteractionTrackingState(state) {
  return interactionTrackingPluginKey.getState(state);
};