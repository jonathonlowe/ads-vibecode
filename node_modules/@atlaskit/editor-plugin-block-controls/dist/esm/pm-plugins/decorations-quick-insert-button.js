import { createElement } from 'react';
import uuid from 'uuid';
import { Decoration } from '@atlaskit/editor-prosemirror/view';
import { fg } from '@atlaskit/platform-feature-flags';
import { QuickInsertWithVisibility, TypeAheadControl } from '../ui/quick-insert-button';
var TYPE_QUICK_INSERT = 'INSERT_BUTTON';
export var findQuickInsertInsertButtonDecoration = function findQuickInsertInsertButtonDecoration(decorations, from, to) {
  return decorations.find(from, to, function (spec) {
    return spec.type === TYPE_QUICK_INSERT;
  });
};
export var quickInsertButtonDecoration = function quickInsertButtonDecoration(api, formatMessage, rootPos, anchorName, nodeType, nodeViewPortalProviderAPI, rootAnchorName, rootNodeType, anchorRectCache) {
  var key = uuid();
  return Decoration.widget(rootPos, function (view, getPos) {
    var element = document.createElement('span');
    element.contentEditable = 'false';
    element.setAttribute('data-blocks-quick-insert-container', 'true');
    element.setAttribute('data-testid', 'block-ctrl-quick-insert-button');

    // all changes already under experiment
    if (fg('platform_editor_controls_widget_visibility')) {
      nodeViewPortalProviderAPI.render(function () {
        return /*#__PURE__*/createElement(QuickInsertWithVisibility, {
          api: api,
          getPos: getPos,
          formatMessage: formatMessage,
          view: view,
          nodeType: nodeType,
          anchorName: anchorName,
          rootAnchorName: rootAnchorName,
          rootNodeType: rootNodeType !== null && rootNodeType !== void 0 ? rootNodeType : nodeType,
          anchorRectCache: anchorRectCache
        });
      }, element, key);
    } else {
      nodeViewPortalProviderAPI.render(function () {
        return /*#__PURE__*/createElement(TypeAheadControl, {
          api: api,
          getPos: getPos,
          formatMessage: formatMessage,
          view: view,
          nodeType: nodeType,
          anchorName: anchorName,
          rootAnchorName: rootAnchorName,
          rootNodeType: rootNodeType !== null && rootNodeType !== void 0 ? rootNodeType : nodeType,
          anchorRectCache: anchorRectCache
        });
      }, element, key);
    }
    return element;
  }, {
    side: -2,
    type: TYPE_QUICK_INSERT,
    destroy: function destroy(_) {
      if (fg('platform_editor_fix_widget_destroy')) {
        nodeViewPortalProviderAPI.remove(key);
      }
    }
  });
};