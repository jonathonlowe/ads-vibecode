import { fg } from '@atlaskit/platform-feature-flags';
export const handleMouseDown = api => (view, event) => {
  if (!(event.target instanceof HTMLElement)) {
    return false;
  }
  if (!view.editable) {
    var _rootNode$type$name, _rootNode$type$name2;
    const targetPos = view.posAtDOM(event.target, 0);
    // always fetch top level position for mouseDown to avoid drag handle positions being incorrect
    const rootPos = view.state.doc.resolve(targetPos).before(1);
    const rootNode = view.state.doc.nodeAt(rootPos);
    if (!rootNode) {
      return false;
    }
    api === null || api === void 0 ? void 0 : api.core.actions.execute(api === null || api === void 0 ? void 0 : api.blockControls.commands.showDragHandleAt(rootPos, '', (_rootNode$type$name = rootNode.type.name) !== null && _rootNode$type$name !== void 0 ? _rootNode$type$name : '', undefined, rootPos, '', (_rootNode$type$name2 = rootNode.type.name) !== null && _rootNode$type$name2 !== void 0 ? _rootNode$type$name2 : ''));
  } else if (fg('platform_editor_controls_patch_5')) {
    const isDragHandle = event.target.closest('[data-editor-block-ctrl-drag-handle]') !== null;
    api === null || api === void 0 ? void 0 : api.core.actions.execute(api === null || api === void 0 ? void 0 : api.blockControls.commands.setSelectedViaDragHandle(isDragHandle));
  }
  return false;
};