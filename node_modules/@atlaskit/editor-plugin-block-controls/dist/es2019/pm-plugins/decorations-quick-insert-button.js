import { createElement } from 'react';
import uuid from 'uuid';
import { Decoration } from '@atlaskit/editor-prosemirror/view';
import { fg } from '@atlaskit/platform-feature-flags';
import { QuickInsertWithVisibility, TypeAheadControl } from '../ui/quick-insert-button';
const TYPE_QUICK_INSERT = 'INSERT_BUTTON';
export const findQuickInsertInsertButtonDecoration = (decorations, from, to) => {
  return decorations.find(from, to, spec => spec.type === TYPE_QUICK_INSERT);
};
export const quickInsertButtonDecoration = (api, formatMessage, rootPos, anchorName, nodeType, nodeViewPortalProviderAPI, rootAnchorName, rootNodeType, anchorRectCache) => {
  const key = uuid();
  return Decoration.widget(rootPos, (view, getPos) => {
    const element = document.createElement('span');
    element.contentEditable = 'false';
    element.setAttribute('data-blocks-quick-insert-container', 'true');
    element.setAttribute('data-testid', 'block-ctrl-quick-insert-button');

    // all changes already under experiment
    if (fg('platform_editor_controls_widget_visibility')) {
      nodeViewPortalProviderAPI.render(() => /*#__PURE__*/createElement(QuickInsertWithVisibility, {
        api,
        getPos,
        formatMessage,
        view,
        nodeType,
        anchorName,
        rootAnchorName,
        rootNodeType: rootNodeType !== null && rootNodeType !== void 0 ? rootNodeType : nodeType,
        anchorRectCache
      }), element, key);
    } else {
      nodeViewPortalProviderAPI.render(() => /*#__PURE__*/createElement(TypeAheadControl, {
        api,
        getPos,
        formatMessage,
        view,
        nodeType,
        anchorName,
        rootAnchorName,
        rootNodeType: rootNodeType !== null && rootNodeType !== void 0 ? rootNodeType : nodeType,
        anchorRectCache
      }), element, key);
    }
    return element;
  }, {
    side: -2,
    type: TYPE_QUICK_INSERT,
    destroy: _ => {
      if (fg('platform_editor_fix_widget_destroy')) {
        nodeViewPortalProviderAPI.remove(key);
      }
    }
  });
};