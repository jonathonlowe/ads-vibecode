import type { ExtractInjectionAPI } from '@atlaskit/editor-common/types';
import { type Transaction, type Selection } from '@atlaskit/editor-prosemirror/state';
import type { BlockControlsPlugin } from '../../blockControlsPluginType';
export declare const getMultiSelectionIfPosInside: (api: ExtractInjectionAPI<BlockControlsPlugin>, pos: number, tr?: Transaction) => {
    anchor?: number;
    head?: number;
};
/**
 *
 * @returns from and to positions of the selected content (after expansion)
 */
export declare const getSelectedSlicePosition: (handlePos: number, tr: Transaction, api: ExtractInjectionAPI<BlockControlsPlugin>) => {
    from: number;
    to: number;
};
/**
 * Takes a position and expands the selection to encompass the node at that position. Ignores empty or out of range selections.
 * Ignores positions that are in text blocks (i.e. not start of a node)
 * @returns TextSelection if expanded, otherwise returns Selection that was passed in.
 */
export declare const expandSelectionHeadToNodeAtPos: (selection: Selection, nodePos: number) => Selection;
/**
 * This swaps the anchor/head for NodeSelections when its anchor > pos.
 * This is because NodeSelection always has an anchor at the start of the node,
 * which may not align with the existing selection.
 */
export declare const alignAnchorHeadInDirectionOfPos: (selection: Selection, pos: number) => Selection;
