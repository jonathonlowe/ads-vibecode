import { type IntlShape } from 'react-intl-next';
import type { PortalProviderAPI } from '@atlaskit/editor-common/portal';
import { SafePlugin } from '@atlaskit/editor-common/safe-plugin';
import type { ExtractInjectionAPI } from '@atlaskit/editor-common/types';
import type { EditorState, ReadonlyTransaction } from '@atlaskit/editor-prosemirror/state';
import { PluginKey } from '@atlaskit/editor-prosemirror/state';
import { DecorationSet } from '@atlaskit/editor-prosemirror/view';
import type { BlockControlsPlugin, PluginState } from '../blockControlsPluginType';
import { AnchorRectCache } from './utils/anchor-utils';
export declare const key: PluginKey<PluginState>;
export interface FlagType {
    isMultiSelectEnabled: boolean;
}
export declare const getDecorations: (state: EditorState) => DecorationSet | undefined;
export declare const apply: (api: ExtractInjectionAPI<BlockControlsPlugin> | undefined, formatMessage: IntlShape['formatMessage'], tr: ReadonlyTransaction, currentState: PluginState, newState: EditorState, flags: FlagType, nodeViewPortalProviderAPI: PortalProviderAPI, anchorRectCache?: AnchorRectCache) => {
    decorations: DecorationSet;
    activeNode: any;
    isDragging: any;
    isMenuOpen: boolean | undefined;
    menuTriggerBy: any;
    editorHeight: any;
    editorWidthLeft: any;
    editorWidthRight: any;
    isResizerResizing: boolean;
    isDocSizeLimitEnabled: boolean | null;
    isPMDragging: any;
    multiSelectDnD: import("../blockControlsPluginType").MultiSelectDnD | undefined;
    isShiftDown: any;
    lastDragCancelled: any;
    isSelectedViaDragHandle: boolean;
};
export declare const createPlugin: (api: ExtractInjectionAPI<BlockControlsPlugin> | undefined, getIntl: () => IntlShape, nodeViewPortalProviderAPI: PortalProviderAPI) => SafePlugin<PluginState>;
