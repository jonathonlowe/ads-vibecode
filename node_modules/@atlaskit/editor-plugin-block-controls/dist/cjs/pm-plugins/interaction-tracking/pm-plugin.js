"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.interactionTrackingPluginKey = exports.getInteractionTrackingState = exports.createInteractionTrackingPlugin = void 0;
var _safePlugin = require("@atlaskit/editor-common/safe-plugin");
var _state = require("@atlaskit/editor-prosemirror/state");
var _handleKeyDown = require("./handle-key-down");
var _handleMouseMove = require("./handle-mouse-move");
var interactionTrackingPluginKey = exports.interactionTrackingPluginKey = new _state.PluginKey('interactionTrackingPlugin');
var createInteractionTrackingPlugin = exports.createInteractionTrackingPlugin = function createInteractionTrackingPlugin() {
  return new _safePlugin.SafePlugin({
    key: interactionTrackingPluginKey,
    state: {
      init: function init() {
        return {
          isEditing: false
        };
      },
      apply: function apply(tr, pluginState) {
        var meta = tr.getMeta(interactionTrackingPluginKey);
        switch (meta === null || meta === void 0 ? void 0 : meta.type) {
          case 'startEditing':
            return {
              isEditing: true
            };
          case 'stopEditing':
            return {
              isEditing: false
            };
        }
        return pluginState;
      }
    },
    props: {
      handleKeyDown: _handleKeyDown.handleKeyDown,
      handleDOMEvents: {
        mousemove: _handleMouseMove.handleMouseMove
      }
    }
  });
};
var getInteractionTrackingState = exports.getInteractionTrackingState = function getInteractionTrackingState(state) {
  return interactionTrackingPluginKey.getState(state);
};