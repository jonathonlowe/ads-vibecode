import type { Mark, Node as PMNode } from '@atlaskit/editor-prosemirror/model';
import type { Mappable } from '@atlaskit/editor-prosemirror/transform';
import { type AddMarkStep, type AddNodeMarkStep, ReplaceStep, Step, StepMap, StepResult } from '@atlaskit/editor-prosemirror/transform';
export declare class ViewModeStep extends Step {
    readonly inverted: boolean;
    readonly from: number;
    readonly to: number;
    readonly mark: Mark | undefined;
    private constructor();
    invert(doc: PMNode): ViewModeStep;
    apply(doc: PMNode): StepResult;
    merge(): null;
    map(mapping: Mappable): ViewModeStep | null;
    getMap(): StepMap;
    toJSON(): {
        stepType: string;
        from: number;
        to: number;
    };
    static fromJSON(): ReplaceStep;
    static from(step: AddMarkStep): ViewModeStep;
}
export declare class ViewModeNodeStep extends Step {
    readonly inverted: boolean;
    readonly pos: number;
    readonly mark: Mark | undefined;
    private constructor();
    invert(doc: PMNode): ViewModeNodeStep;
    apply(doc: PMNode): StepResult;
    merge(): null;
    map(mapping: Mappable): ViewModeNodeStep | null;
    getMap(): StepMap;
    toJSON(): {
        stepType: string;
        from: number;
        to: number;
    };
    static fromJSON(): ReplaceStep;
    static from(step: AddNodeMarkStep): ViewModeNodeStep;
}
