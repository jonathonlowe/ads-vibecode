"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("@emotion/react");
var _checkbox = _interopRequireDefault(require("@atlaskit/checkbox"));
var _inline = _interopRequireDefault(require("@atlaskit/primitives/inline"));
var _visuallyHidden = _interopRequireDefault(require("@atlaskit/visually-hidden"));
var _selectionProvider = require("./hooks/selection-provider");
var _useTable2 = require("./hooks/use-table");
var _bulkActionOverlay = require("./ui/bulk-action-overlay");
var _selectableCell = require("./ui/selectable-cell");
var _thead = require("./ui/thead");
var _tr = require("./ui/tr");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var THead = function THead(_ref) {
  var actions = _ref.actions,
    children = _ref.children;
  var _useTable = (0, _useTable2.useTable)(),
    isSelectable = _useTable.isSelectable;
  var _useSelection = (0, _selectionProvider.useSelection)(),
    _useSelection2 = (0, _slicedToArray2.default)(_useSelection, 2),
    state = _useSelection2[0],
    _useSelection2$ = _useSelection2[1],
    setAll = _useSelection2$.setAll,
    removeAll = _useSelection2$.removeAll;
  var isChecked = state.allChecked || state.anyChecked;
  return (0, _react.jsx)(_thead.THead, null, (0, _react.jsx)(_tr.TR, {
    isBodyRow: false
  }, isSelectable && (0, _react.jsx)(_selectableCell.SelectableCell, {
    as: "th"
  }, (0, _react.jsx)(_checkbox.default, {
    label: (0, _react.jsx)(_visuallyHidden.default, {
      id: "select-all"
    }, "Select all rows"),
    onChange: isChecked ? removeAll : setAll,
    isChecked: isChecked,
    isIndeterminate: state.anyChecked && !state.allChecked
  })), children, isSelectable && isChecked && (0, _react.jsx)(_bulkActionOverlay.BulkActionOverlay, null, (0, _react.jsx)("span", {
    style: {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      color: "var(--ds-text, #172B4D)",
      /* @ts-ignore migrate to Text */
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      fontWeight: "var(--ds-font-weight-medium, 500)"
    }
  }, state.checked.length, " selected"), actions && (0, _react.jsx)(_inline.default, {
    alignBlock: "stretch",
    space: "space.100"
  }, actions(state.checked)))));
};
var _default = exports.default = THead;