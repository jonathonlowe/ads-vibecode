"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _react2 = require("@emotion/react");
var _selectionProvider = require("./hooks/selection-provider");
var _useRowId = require("./hooks/use-row-id");
var _useTable2 = require("./hooks/use-table");
var _useTableBody = require("./hooks/use-table-body");
var _ui = require("./ui");
var _excluded = ["idx"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } /* eslint-disable @repo/internal/react/no-clone-element */ /**
 * @jsxRuntime classic
 * @jsx jsx
 */ // eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
/**
 * __Table body__
 */
function TBody(_ref) {
  var rows = _ref.rows,
    children = _ref.children;
  var _useTable = (0, _useTable2.useTable)(),
    sortFn = _useTable.sortFn;
  var _useSelection = (0, _selectionProvider.useSelection)(),
    _useSelection2 = (0, _slicedToArray2.default)(_useSelection, 2),
    _state = _useSelection2[0],
    _useSelection2$ = _useSelection2[1],
    removeAll = _useSelection2$.removeAll,
    setMax = _useSelection2$.setMax;
  // TODO: this seems like something the user should control or opt into.
  (0, _react.useEffect)(function () {
    removeAll === null || removeAll === void 0 || removeAll();
    // eslint-disable-next-line react-hooks/exhaustive-deps -- When the rows change, we [currently] want to call removeAll.
  }, [rows]);
  var childrenCount = _react.Children.count(children);
  var rowsLength = rows === null || rows === void 0 ? void 0 : rows.length;

  // Set data length (via setMax) whenever data changes
  (0, _react.useEffect)(function () {
    var numRows = rowsLength !== null && rowsLength !== void 0 ? rowsLength : childrenCount;
    setMax === null || setMax === void 0 || setMax(numRows);
  }, [rowsLength, childrenCount, setMax]);
  var sortedRows = (0, _react.useMemo)(function () {
    return rows === null || rows === void 0 ? void 0 : rows.map(function (row, idx) {
      return _objectSpread(_objectSpread({}, row), {}, {
        idx: idx
      });
    }).sort(sortFn);
  }, [rows, sortFn]);
  var renderedChildren = function () {
    if (typeof children === 'function') {
      return sortedRows === null || sortedRows === void 0 ? void 0 : sortedRows.map(function (_ref2) {
        var idx = _ref2.idx,
          row = (0, _objectWithoutProperties2.default)(_ref2, _excluded);
        return (0, _react2.jsx)(_useRowId.RowProvider, {
          key: idx,
          value: idx
        },
        // @ts-expect-error
        children(row));
      });
    }
    var childrenArray = Array.isArray(children) ? children : [children];
    return childrenArray.map(function (row, idx) {
      return (0, _react2.jsx)(_useRowId.RowProvider, {
        key: idx,
        value: idx
      }, row);
    });
  }();
  return (0, _react2.jsx)(_useTableBody.TableBodyProvider, {
    value: true
  }, (0, _react2.jsx)(_ui.TBody, null, renderedChildren));
}
var _default = exports.default = TBody;