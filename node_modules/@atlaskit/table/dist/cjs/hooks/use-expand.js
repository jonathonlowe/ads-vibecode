"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ExpandContextProvider = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _noop = _interopRequireDefault(require("@atlaskit/ds-lib/noop"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var ExpandContext = /*#__PURE__*/(0, _react.createContext)({
  isExpanded: false,
  toggleExpanded: _noop.default
});

/**
 * __Expand context provider__
 *
 * An expand context provider.
 */
var ExpandContextProvider = exports.ExpandContextProvider = function ExpandContextProvider(_ref) {
  var children = _ref.children,
    isExpandedProp = _ref.isExpanded,
    _ref$isDefaultExpande = _ref.isDefaultExpanded,
    isDefaultExpanded = _ref$isDefaultExpande === void 0 ? false : _ref$isDefaultExpande;
  var _useState = (0, _react.useState)(isDefaultExpanded),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    isExpanded = _useState2[0],
    setIsExpanded = _useState2[1];
  var toggleExpanded = (0, _react.useCallback)(function () {
    setIsExpanded(function (v) {
      return !v;
    });
  }, []);
  return /*#__PURE__*/_react.default.createElement(ExpandContext.Provider, {
    value: {
      isExpanded: isExpandedProp || isExpanded,
      toggleExpanded: toggleExpanded
    }
  }, children);
};
var useExpand = function useExpand() {
  return (0, _react.useContext)(ExpandContext);
};
var _default = exports.default = useExpand;