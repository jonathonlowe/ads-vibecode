"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useSorting = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var useSorting = exports.useSorting = function useSorting(sortKey) {
  var _useState = (0, _react.useState)(sortKey),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    localSortKey = _useState2[0],
    setLocalSortKey = _useState2[1];
  var _useState3 = (0, _react.useState)(),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    localSortDirection = _useState4[0],
    setLocalSortDirection = _useState4[1];
  var toggleSortDirection = (0, _react.useCallback)(function () {
    setLocalSortDirection(function (oldLocalSortDirection) {
      switch (oldLocalSortDirection) {
        case undefined:
          return 'ascending';
        case 'ascending':
          return 'descending';
        case 'descending':
          return 'ascending';
      }
    });
  }, []);
  var setSortState = (0, _react.useCallback)(function (key) {
    setLocalSortKey(function (localSortKey) {
      if (key !== localSortKey) {
        // sorting by different column
        setLocalSortDirection('ascending');
        return key;
      } else {
        toggleSortDirection();
      }
      return localSortKey;
    });
  }, [toggleSortDirection]);
  var sortFn = (0, _react.useCallback)(function (rowA, rowB) {
    if (localSortKey === 'unset') {
      return 0;
    }
    var ascendingComparator = rowA[localSortKey] < rowB[localSortKey] ? -1 : 1;
    return localSortDirection === 'ascending' ? ascendingComparator : -ascendingComparator;
  }, [localSortDirection, localSortKey]);
  return {
    sortKey: localSortKey,
    sortDirection: localSortDirection,
    setSortState: setSortState,
    sortFn: sortFn
  };
};