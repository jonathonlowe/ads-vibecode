"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _react2 = require("@emotion/react");
var _checkbox = _interopRequireDefault(require("@atlaskit/checkbox"));
var _visuallyHidden = _interopRequireDefault(require("@atlaskit/visually-hidden"));
var _selectionProvider = require("./hooks/selection-provider");
var _useRowId = require("./hooks/use-row-id");
var _ui = require("./ui");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var SelectableCellComponent = function SelectableCellComponent() {
  var _useSelection = (0, _selectionProvider.useSelection)(),
    _useSelection2 = (0, _slicedToArray2.default)(_useSelection, 2),
    _useSelection2$ = _useSelection2[0],
    allChecked = _useSelection2$.allChecked,
    checked = _useSelection2$.checked,
    toggleSelection = _useSelection2[1].toggleSelection;
  var idx = (0, _useRowId.useRowId)();
  var isChecked = (0, _react.useMemo)(function () {
    return allChecked || checked.includes(idx);
  }, [allChecked, checked, idx]);
  var onChange = (0, _react.useCallback)(function (e) {
    return toggleSelection === null || toggleSelection === void 0 ? void 0 : toggleSelection(idx, e.nativeEvent.shiftKey);
  }, [idx, toggleSelection]);
  return (0, _react2.jsx)(_ui.SelectableCell, {
    as: "td"
  }, (0, _react2.jsx)(_checkbox.default, {
    isChecked: isChecked,
    onChange: onChange,
    label: (0, _react2.jsx)(_visuallyHidden.default, null, "Select row ", idx + 1)
  }));
};
var SelectableCell = /*#__PURE__*/(0, _react.memo)(SelectableCellComponent);

// eslint-disable-next-line @repo/internal/react/require-jsdoc
var _default = exports.default = SelectableCell;