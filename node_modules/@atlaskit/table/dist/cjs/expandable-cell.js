"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = require("react");
var _react2 = require("@emotion/react");
var _new = require("@atlaskit/button/new");
var _chevronDownHipchatChevronDown = _interopRequireDefault(require("@atlaskit/icon/utility/migration/chevron-down--hipchat-chevron-down"));
var _chevronUpHipchatChevronUp = _interopRequireDefault(require("@atlaskit/icon/utility/migration/chevron-up--hipchat-chevron-up"));
var _useExpand2 = _interopRequireDefault(require("./hooks/use-expand"));
var _expandableCell = require("./ui/expandable-cell");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

/**
 * __Expandable cell__
 *
 * A cell with an expand button that controls the expanded state
 * of the `<ExpandableRow>`.
 */
var ExpandableCell = /*#__PURE__*/(0, _react.memo)(function () {
  var _useExpand = (0, _useExpand2.default)(),
    isExpanded = _useExpand.isExpanded,
    toggleExpanded = _useExpand.toggleExpanded;
  var handleClick = (0, _react.useCallback)(function () {
    toggleExpanded();
  }, [toggleExpanded]);
  var Icon = isExpanded ? _chevronUpHipchatChevronUp.default : _chevronDownHipchatChevronDown.default;
  return (0, _react2.jsx)(_expandableCell.ExpandableCell, {
    as: "td"
  }, (0, _react2.jsx)(_new.IconButton, {
    spacing: "compact",
    appearance: "subtle",
    icon: function icon(iconProps) {
      return (0, _react2.jsx)(Icon, (0, _extends2.default)({}, iconProps, {
        LEGACY_size: "small"
      }));
    },
    label: "Expand row",
    onClick: handleClick,
    "aria-pressed": isExpanded
  }));
});
var _default = exports.default = ExpandableCell;