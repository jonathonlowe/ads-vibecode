"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _react2 = require("@emotion/react");
var _selectionProvider = _interopRequireDefault(require("./hooks/selection-provider"));
var _useSorting2 = require("./hooks/use-sorting");
var _useTable = require("./hooks/use-table");
var _ui = require("./ui");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

/**
 * __Table__
 *
 * A data table is used to display dynamic data.
 *
 * - [Examples](https://atlassian.design/components/table/examples)
 */
function Table(_ref) {
  var children = _ref.children,
    isSelectable = _ref.isSelectable,
    _ref$sortKey = _ref.sortKey,
    sortKey = _ref$sortKey === void 0 ? 'unset' : _ref$sortKey,
    testId = _ref.testId;
  var _useSorting = (0, _useSorting2.useSorting)(sortKey),
    localSortKey = _useSorting.sortKey,
    sortDirection = _useSorting.sortDirection,
    setSortState = _useSorting.setSortState,
    sortFn = _useSorting.sortFn;
  var tableProviderState = (0, _react.useMemo)(function () {
    return {
      isSelectable: isSelectable,
      sortKey: localSortKey,
      sortDirection: sortDirection,
      setSortState: setSortState,
      sortFn: sortFn
    };
  }, [isSelectable, localSortKey, setSortState, sortDirection, sortFn]);
  return (0, _react2.jsx)(_useTable.TableProvider, {
    state: tableProviderState
  }, (0, _react2.jsx)(_ui.Table, {
    testId: testId
  }, isSelectable ? (0, _react2.jsx)(_selectionProvider.default, null, children) : children));
}
var _default = exports.default = Table;