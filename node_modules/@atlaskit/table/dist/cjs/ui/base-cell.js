"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BaseCell = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _react = _interopRequireWildcard(require("react"));
var _primitives = require("@atlaskit/primitives");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-sort
 */

var baseResetStyles = (0, _primitives.xcss)({
  display: 'table-cell',
  verticalAlign: 'middle',
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  ':first-of-type': {
    paddingInlineStart: 'space.100'
  },
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  ':last-of-type': {
    paddingInlineEnd: 'space.100'
  }
});
var alignMapStyles = {
  text: (0, _primitives.xcss)({
    textAlign: 'left'
  }),
  icon: (0, _primitives.xcss)({
    textAlign: 'center'
  }),
  number: (0, _primitives.xcss)({
    textAlign: 'right'
  })
};

/**
 * __BaseCell__
 *
 * @internal
 *
 * Basic cell element.
 */
var BaseCell = exports.BaseCell = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
  var testId = _ref.testId,
    as = _ref.as,
    children = _ref.children,
    _ref$align = _ref.align,
    align = _ref$align === void 0 ? 'text' : _ref$align,
    _ref$paddingBlock = _ref.paddingBlock,
    paddingBlock = _ref$paddingBlock === void 0 ? 'space.100' : _ref$paddingBlock,
    _ref$paddingInline = _ref.paddingInline,
    paddingInline = _ref$paddingInline === void 0 ? 'space.100' : _ref$paddingInline,
    backgroundColor = _ref.backgroundColor,
    scope = _ref.scope,
    width = _ref.width,
    xcss = _ref.xcss,
    sortDirection = _ref.sortDirection,
    colSpan = _ref.colSpan,
    rowSpan = _ref.rowSpan;
  // We're type coercing this as Compiled styles in an array isn't supported by the types
  // But the runtime accepts it none-the-wiser. We can remove this entire block and replace
  // it with cx(defaultStyles, focusRingStyles, xcssStyles) when we've moved away from Emotion.
  var styles = Array.isArray(xcss) ? xcss : [xcss];
  return /*#__PURE__*/_react.default.createElement(_primitives.Box, {
    xcss: [baseResetStyles, alignMapStyles[align]].concat((0, _toConsumableArray2.default)(styles)),
    ref: ref,
    scope: scope,
    backgroundColor: backgroundColor,
    paddingBlock: paddingBlock,
    paddingInline: paddingInline,
    as: as,
    testId: testId
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    ,
    style: width ? {
      width: width
    } : undefined,
    "aria-sort": sortDirection,
    colSpan: colSpan,
    rowSpan: rowSpan
  }, children);
});