"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ExpandIcon = void 0;
var _react = require("react");
var _react2 = require("@emotion/react");
var _chevronDownHipchatChevronDown = _interopRequireDefault(require("@atlaskit/icon/utility/migration/chevron-down--hipchat-chevron-down"));
var _chevronUpHipchatChevronUp = _interopRequireDefault(require("@atlaskit/icon/utility/migration/chevron-up--hipchat-chevron-up"));
/* eslint-disable no-unused-vars */
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

// TODO: Using HipChat icons as the standard icon set is missing large
// versions of `chevron-up` and `chevron-down`, despite already including
// `chevron-left-large` and `chevron-right-large`...

/**
 * __Expand icon__
 *
 * An icon used to display the expanded state in an `<ExpandableCell>`.
 */
var ExpandIcon = exports.ExpandIcon = /*#__PURE__*/(0, _react.memo)(function (_ref) {
  var isExpanded = _ref.isExpanded;
  switch (isExpanded) {
    case true:
      return (0, _react2.jsx)(_chevronUpHipchatChevronUp.default, {
        color: "currentColor",
        LEGACY_size: "small",
        label: "",
        LEGACY_primaryColor: "inherit"
      });
    case false:
      return (0, _react2.jsx)(_chevronDownHipchatChevronDown.default, {
        color: "currentColor",
        LEGACY_size: "small",
        label: "",
        LEGACY_primaryColor: "inherit"
      });
  }
});