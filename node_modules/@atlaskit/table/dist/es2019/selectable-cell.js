/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { memo, useCallback, useMemo } from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx } from '@emotion/react';
import Checkbox from '@atlaskit/checkbox';
import VisuallyHidden from '@atlaskit/visually-hidden';
import { useSelection } from './hooks/selection-provider';
import { useRowId } from './hooks/use-row-id';
import { SelectableCell as SelectableCellPrimitive } from './ui';
const SelectableCellComponent = () => {
  const [{
    allChecked,
    checked
  }, {
    toggleSelection
  }] = useSelection();
  const idx = useRowId();
  const isChecked = useMemo(() => allChecked || checked.includes(idx), [allChecked, checked, idx]);
  const onChange = useCallback(e => toggleSelection === null || toggleSelection === void 0 ? void 0 : toggleSelection(idx, e.nativeEvent.shiftKey), [idx, toggleSelection]);
  return jsx(SelectableCellPrimitive, {
    as: "td"
  }, jsx(Checkbox, {
    isChecked: isChecked,
    onChange: onChange,
    label: jsx(VisuallyHidden, null, "Select row ", idx + 1)
  }));
};
const SelectableCell = /*#__PURE__*/memo(SelectableCellComponent);

// eslint-disable-next-line @repo/internal/react/require-jsdoc
export default SelectableCell;