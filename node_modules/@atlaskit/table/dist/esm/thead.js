import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx } from '@emotion/react';
import Checkbox from '@atlaskit/checkbox';
import Inline from '@atlaskit/primitives/inline';
import VisuallyHidden from '@atlaskit/visually-hidden';
import { useSelection } from './hooks/selection-provider';
import { useTable } from './hooks/use-table';
import { BulkActionOverlay as BulkActionOverlayPrimitive } from './ui/bulk-action-overlay';
import { SelectableCell as SelectableCellPrimitive } from './ui/selectable-cell';
import { THead as THeadPrimitive } from './ui/thead';
import { TR as TRPrimitive } from './ui/tr';
var THead = function THead(_ref) {
  var actions = _ref.actions,
    children = _ref.children;
  var _useTable = useTable(),
    isSelectable = _useTable.isSelectable;
  var _useSelection = useSelection(),
    _useSelection2 = _slicedToArray(_useSelection, 2),
    state = _useSelection2[0],
    _useSelection2$ = _useSelection2[1],
    setAll = _useSelection2$.setAll,
    removeAll = _useSelection2$.removeAll;
  var isChecked = state.allChecked || state.anyChecked;
  return jsx(THeadPrimitive, null, jsx(TRPrimitive, {
    isBodyRow: false
  }, isSelectable && jsx(SelectableCellPrimitive, {
    as: "th"
  }, jsx(Checkbox, {
    label: jsx(VisuallyHidden, {
      id: "select-all"
    }, "Select all rows"),
    onChange: isChecked ? removeAll : setAll,
    isChecked: isChecked,
    isIndeterminate: state.anyChecked && !state.allChecked
  })), children, isSelectable && isChecked && jsx(BulkActionOverlayPrimitive, null, jsx("span", {
    style: {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      color: "var(--ds-text, #172B4D)",
      /* @ts-ignore migrate to Text */
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      fontWeight: "var(--ds-font-weight-medium, 500)"
    }
  }, state.checked.length, " selected"), actions && jsx(Inline, {
    alignBlock: "stretch",
    space: "space.100"
  }, actions(state.checked)))));
};
export default THead;