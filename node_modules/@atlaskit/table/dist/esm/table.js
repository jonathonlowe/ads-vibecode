/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { useMemo } from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx } from '@emotion/react';
import SelectionProvider from './hooks/selection-provider';
import { useSorting } from './hooks/use-sorting';
import { TableProvider } from './hooks/use-table';
import { Table as TablePrimitive } from './ui';
/**
 * __Table__
 *
 * A data table is used to display dynamic data.
 *
 * - [Examples](https://atlassian.design/components/table/examples)
 */
function Table(_ref) {
  var children = _ref.children,
    isSelectable = _ref.isSelectable,
    _ref$sortKey = _ref.sortKey,
    sortKey = _ref$sortKey === void 0 ? 'unset' : _ref$sortKey,
    testId = _ref.testId;
  var _useSorting = useSorting(sortKey),
    localSortKey = _useSorting.sortKey,
    sortDirection = _useSorting.sortDirection,
    setSortState = _useSorting.setSortState,
    sortFn = _useSorting.sortFn;
  var tableProviderState = useMemo(function () {
    return {
      isSelectable: isSelectable,
      sortKey: localSortKey,
      sortDirection: sortDirection,
      setSortState: setSortState,
      sortFn: sortFn
    };
  }, [isSelectable, localSortKey, setSortState, sortDirection, sortFn]);
  return jsx(TableProvider, {
    state: tableProviderState
  }, jsx(TablePrimitive, {
    testId: testId
  }, isSelectable ? jsx(SelectionProvider, null, children) : children));
}
export default Table;