import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import React, { createContext, useCallback, useContext, useState } from 'react';
import __noop from '@atlaskit/ds-lib/noop';
var ExpandContext = /*#__PURE__*/createContext({
  isExpanded: false,
  toggleExpanded: __noop
});

/**
 * __Expand context provider__
 *
 * An expand context provider.
 */
export var ExpandContextProvider = function ExpandContextProvider(_ref) {
  var children = _ref.children,
    isExpandedProp = _ref.isExpanded,
    _ref$isDefaultExpande = _ref.isDefaultExpanded,
    isDefaultExpanded = _ref$isDefaultExpande === void 0 ? false : _ref$isDefaultExpande;
  var _useState = useState(isDefaultExpanded),
    _useState2 = _slicedToArray(_useState, 2),
    isExpanded = _useState2[0],
    setIsExpanded = _useState2[1];
  var toggleExpanded = useCallback(function () {
    setIsExpanded(function (v) {
      return !v;
    });
  }, []);
  return /*#__PURE__*/React.createElement(ExpandContext.Provider, {
    value: {
      isExpanded: isExpandedProp || isExpanded,
      toggleExpanded: toggleExpanded
    }
  }, children);
};
var useExpand = function useExpand() {
  return useContext(ExpandContext);
};
export default useExpand;