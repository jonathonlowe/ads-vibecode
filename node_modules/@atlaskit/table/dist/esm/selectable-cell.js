import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { memo, useCallback, useMemo } from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx } from '@emotion/react';
import Checkbox from '@atlaskit/checkbox';
import VisuallyHidden from '@atlaskit/visually-hidden';
import { useSelection } from './hooks/selection-provider';
import { useRowId } from './hooks/use-row-id';
import { SelectableCell as SelectableCellPrimitive } from './ui';
var SelectableCellComponent = function SelectableCellComponent() {
  var _useSelection = useSelection(),
    _useSelection2 = _slicedToArray(_useSelection, 2),
    _useSelection2$ = _useSelection2[0],
    allChecked = _useSelection2$.allChecked,
    checked = _useSelection2$.checked,
    toggleSelection = _useSelection2[1].toggleSelection;
  var idx = useRowId();
  var isChecked = useMemo(function () {
    return allChecked || checked.includes(idx);
  }, [allChecked, checked, idx]);
  var onChange = useCallback(function (e) {
    return toggleSelection === null || toggleSelection === void 0 ? void 0 : toggleSelection(idx, e.nativeEvent.shiftKey);
  }, [idx, toggleSelection]);
  return jsx(SelectableCellPrimitive, {
    as: "td"
  }, jsx(Checkbox, {
    isChecked: isChecked,
    onChange: onChange,
    label: jsx(VisuallyHidden, null, "Select row ", idx + 1)
  }));
};
var SelectableCell = /*#__PURE__*/memo(SelectableCellComponent);

// eslint-disable-next-line @repo/internal/react/require-jsdoc
export default SelectableCell;