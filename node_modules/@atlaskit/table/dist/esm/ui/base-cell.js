import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import React, { forwardRef } from 'react';
import { Box, xcss } from '@atlaskit/primitives';

/**
 * https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-sort
 */

var baseResetStyles = xcss({
  display: 'table-cell',
  verticalAlign: 'middle',
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  ':first-of-type': {
    paddingInlineStart: 'space.100'
  },
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  ':last-of-type': {
    paddingInlineEnd: 'space.100'
  }
});
var alignMapStyles = {
  text: xcss({
    textAlign: 'left'
  }),
  icon: xcss({
    textAlign: 'center'
  }),
  number: xcss({
    textAlign: 'right'
  })
};

/**
 * __BaseCell__
 *
 * @internal
 *
 * Basic cell element.
 */
export var BaseCell = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var testId = _ref.testId,
    as = _ref.as,
    children = _ref.children,
    _ref$align = _ref.align,
    align = _ref$align === void 0 ? 'text' : _ref$align,
    _ref$paddingBlock = _ref.paddingBlock,
    paddingBlock = _ref$paddingBlock === void 0 ? 'space.100' : _ref$paddingBlock,
    _ref$paddingInline = _ref.paddingInline,
    paddingInline = _ref$paddingInline === void 0 ? 'space.100' : _ref$paddingInline,
    backgroundColor = _ref.backgroundColor,
    scope = _ref.scope,
    width = _ref.width,
    xcss = _ref.xcss,
    sortDirection = _ref.sortDirection,
    colSpan = _ref.colSpan,
    rowSpan = _ref.rowSpan;
  // We're type coercing this as Compiled styles in an array isn't supported by the types
  // But the runtime accepts it none-the-wiser. We can remove this entire block and replace
  // it with cx(defaultStyles, focusRingStyles, xcssStyles) when we've moved away from Emotion.
  var styles = Array.isArray(xcss) ? xcss : [xcss];
  return /*#__PURE__*/React.createElement(Box, {
    xcss: [baseResetStyles, alignMapStyles[align]].concat(_toConsumableArray(styles)),
    ref: ref,
    scope: scope,
    backgroundColor: backgroundColor,
    paddingBlock: paddingBlock,
    paddingInline: paddingInline,
    as: as,
    testId: testId
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    ,
    style: width ? {
      width: width
    } : undefined,
    "aria-sort": sortDirection,
    colSpan: colSpan,
    rowSpan: rowSpan
  }, children);
});