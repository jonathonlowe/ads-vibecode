import _extends from "@babel/runtime/helpers/extends";
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { memo, useCallback } from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx } from '@emotion/react';
import { IconButton } from '@atlaskit/button/new';
import ChevronDownIcon from '@atlaskit/icon/utility/migration/chevron-down--hipchat-chevron-down';
import ChevronUpIcon from '@atlaskit/icon/utility/migration/chevron-up--hipchat-chevron-up';
import useExpand from './hooks/use-expand';
import { ExpandableCell as ExpandableCellPrimitive } from './ui/expandable-cell';

/**
 * __Expandable cell__
 *
 * A cell with an expand button that controls the expanded state
 * of the `<ExpandableRow>`.
 */
var ExpandableCell = /*#__PURE__*/memo(function () {
  var _useExpand = useExpand(),
    isExpanded = _useExpand.isExpanded,
    toggleExpanded = _useExpand.toggleExpanded;
  var handleClick = useCallback(function () {
    toggleExpanded();
  }, [toggleExpanded]);
  var Icon = isExpanded ? ChevronUpIcon : ChevronDownIcon;
  return jsx(ExpandableCellPrimitive, {
    as: "td"
  }, jsx(IconButton, {
    spacing: "compact",
    appearance: "subtle",
    icon: function icon(iconProps) {
      return jsx(Icon, _extends({}, iconProps, {
        LEGACY_size: "small"
      }));
    },
    label: "Expand row",
    onClick: handleClick,
    "aria-pressed": isExpanded
  }));
});
export default ExpandableCell;