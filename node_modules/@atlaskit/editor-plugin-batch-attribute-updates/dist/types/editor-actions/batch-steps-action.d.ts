import { SetAttrsStep } from '@atlaskit/adf-schema/steps';
import { AttrStep } from '@atlaskit/editor-prosemirror/transform';
import type { BatchStepsAction } from '../batchAttributeUpdatesPluginType';
type AttributeData = {
    position: number;
    attrs: Record<string, unknown>;
};
export declare const parseStepAttributeData: (step: SetAttrsStep | AttrStep) => AttributeData;
type GroupedAttributeData = Array<AttributeData>;
export declare const groupAttributesPerPosition: (steps: Array<SetAttrsStep | AttrStep>) => GroupedAttributeData;
/**
 * Batches a series of attribute steps into a single `BatchAttrsStep`.
 *
 * This function takes a document and an array of steps, which should be instances of either
 * `SetAttrsStep` or `AttrStep`. It groups these steps by their position within the document
 * and aggregates their attributes. It then creates a `BatchAttrsStep` that applies all these
 * attribute changes at once.
 *
 * @param {Object} props - The properties required to batch steps.
 * @param {PMNode} props.doc - The ProseMirror document node in which the steps will be applied.
 * @param {Array<AttrStep | SetAttrsStep> | Array<Step>} props.steps - An array of steps that modify attributes.
 *
 * @returns {BatchAttrsStep} - A `BatchAttrsStep` that encapsulates all the attribute changes.
 *
 * @throws {Error} - Throws an error if any step in the steps array is not an attribute-related step.
 * @throws {Error} - Throws an error if a node does not exist at a given step position.
 */
export declare const batchSteps: BatchStepsAction;
export {};
