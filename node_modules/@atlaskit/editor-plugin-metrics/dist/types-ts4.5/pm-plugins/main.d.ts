import { SafePlugin } from '@atlaskit/editor-common/safe-plugin';
import { type ExtractInjectionAPI } from '@atlaskit/editor-common/types';
import { Fragment } from '@atlaskit/editor-prosemirror/model';
import { PluginKey, Selection } from '@atlaskit/editor-prosemirror/state';
import { type MetricsPlugin } from '../metricsPluginType';
import { type TrActionType } from './utils/check-tr-actions/types';
export declare const metricsKey: PluginKey<any>;
export type MetricsState = {
    intentToStartEditTime?: number;
    activeSessionTime: number;
    totalActionCount: number;
    contentSizeChanged: number;
    lastSelection?: Selection;
    actionTypeCount: ActionByType;
    timeOfLastTextInput?: number;
    shouldPersistActiveSession?: boolean;
    initialContent?: Fragment;
    previousTrType?: TrActionType;
    repeatedActionCount: number;
    safeInsertCount: number;
};
export type ActionByType = {
    textInputCount: number;
    nodeInsertionCount: number;
    nodeAttributeChangeCount: number;
    contentMovedCount: number;
    nodeDeletionCount: number;
    undoCount: number;
    markChangeCount: number;
    contentDeletedCount: number;
};
export declare const initialPluginState: MetricsState;
export declare const createPlugin: (api: ExtractInjectionAPI<MetricsPlugin> | undefined) => SafePlugin<MetricsState>;
