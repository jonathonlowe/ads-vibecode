"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.colorMacro = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _ = require(".");
var _commonMacro = require("./common-macro");
var _attrs = require("../utils/attrs");
var _text = require("../text");
var _color = require("../color");
var _text2 = require("../utils/text");
var colorMacro = exports.colorMacro = function colorMacro(_ref) {
  var input = _ref.input,
    position = _ref.position,
    schema = _ref.schema,
    context = _ref.context;
  return (0, _commonMacro.commonMacro)(input.substring(position), schema, {
    keyword: 'color',
    paired: true,
    context: context,
    rawContentProcessor: rawContentProcessor
  });
};
var rawContentProcessor = function rawContentProcessor(rawAttrs, rawContent, length, schema, context) {
  // Removed ISSUE_KEY for https://getsupport.atlassian.com/browse/MOVE-1738018
  // Issue keys were not being migrated correctly if they were inside the color macro.
  var ignoreTokenTypes = [_.TokenType.DOUBLE_DASH_SYMBOL, _.TokenType.TRIPLE_DASH_SYMBOL, _.TokenType.QUADRUPLE_DASH_SYMBOL, _.TokenType.TABLE];
  var parsedAttrs = (0, _attrs.parseAttrs)(rawAttrs);
  var content = (0, _text.parseString)({
    ignoreTokenTypes: ignoreTokenTypes,
    schema: schema,
    context: context,
    input: rawContent
  });
  var decoratedContent = content.map(function (n) {
    var mark = schema.marks.textColor.create({
      color: (0, _color.getEditorColor)(parsedAttrs) || '#000000'
    });

    // We don't want to mix `code` mark with others
    if (n.type.name === 'text' && !(0, _text2.hasAnyOfMarks)(n, ['textColor', 'code'])) {
      return n.mark([].concat((0, _toConsumableArray2.default)(n.marks), [mark]));
    }
    return n;
  });
  return {
    type: 'pmnode',
    nodes: decoratedContent,
    length: length
  };
};