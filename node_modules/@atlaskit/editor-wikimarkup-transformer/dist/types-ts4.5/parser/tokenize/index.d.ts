import { type Node as PMNode, type Schema } from '@atlaskit/editor-prosemirror/model';
import { type Context } from '../../interfaces';
export declare enum TokenType {
    ADF_MACRO = "ADF_MACRO",// {adf}
    ANCHOR_MACRO = "ANCHOR_MACRO",// {anchor}
    CODE_MACRO = "CODE_MACRO",// {code}
    QUOTE_MACRO = "QUOTE_MACRO",// {quote}
    NOFORMAT_MACRO = "NOFORMAT_MACRO",// {noformat}
    PANEL_MACRO = "PANEL_MACRO",// {panel}
    COLOR_MACRO = "COLOR_MACRO",// {color}
    LOREM_MACRO = "LOREM_MACRO",// {loremipsum}
    QUOTE = "QUOTE",
    STRING = "STRING",
    ISSUE_KEY = "ISSUE_KEY",
    LINK_FORMAT = "LINK_FORMAT",
    LINK_TEXT = "LINK_TEXT",
    MEDIA = "MEDIA",
    HEADING = "HEADING",
    LIST = "LIST",
    TABLE = "TABLE",
    RULER = "RULER",
    HARD_BREAK = "HARD_BREAK",// \\, \r, \n, \r\n
    DOUBLE_DASH_SYMBOL = "DOUBLE_DASH_SYMBOL",// --
    TRIPLE_DASH_SYMBOL = "TRIPLE_DASH_SYMBOL",// ---
    QUADRUPLE_DASH_SYMBOL = "QUADRUPLE_DASH_SYMBOL",// ----
    STRONG = "STRONG",// *strong*
    MONOSPACE = "MONOSPACE",// {{text}}
    SUPERSCRIPT = "SUPERSCRIPT",// ^superscript^
    SUBSCRIPT = "SUBSCRIPT",// ^subscript^
    EMPHASIS = "EMPHASIS",// _emphasis_
    CITATION = "CITATION",// ??citation??
    DELETED = "DELETED",// -deleted-
    INSERTED = "INSERTED",// +deleted+
    EMOJI = "EMOJI",// :)
    FORCE_LINE_BREAK = "FORCE_LINE_BREAK"
}
export interface TextToken {
    readonly type: 'text';
    readonly text: string;
    readonly length: number;
}
export interface PMNodeToken {
    readonly type: 'pmnode';
    readonly nodes: PMNode[];
    readonly length: number;
}
export type TokenErrCallback = (err: Error, tokenType: string) => void;
export type Token = TextToken | PMNodeToken;
export type TokenParser = ({ input, position, schema, context, }: {
    input: string;
    position: number;
    schema: Schema;
    context: Context;
}) => Token;
export declare function parseToken(input: string, type: TokenType, position: number, schema: Schema, context: Context): Token;
