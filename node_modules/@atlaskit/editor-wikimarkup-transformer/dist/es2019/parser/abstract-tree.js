import { parseString } from './text';
import { normalizePMNodes } from './utils/normalize';
export default class AbstractTree {
  constructor(schema, wikiMarkup) {
    this.schema = schema;
    this.wikiMarkup = wikiMarkup;
  }

  /**
   * Convert reduced macros tree into prosemirror model tree
   */
  getProseMirrorModel(context) {
    const content = parseString({
      context,
      ignoreTokenTypes: [],
      input: this.wikiMarkup,
      schema: this.schema
    });
    return this.schema.nodes.doc.createChecked({}, normalizePMNodes(content, this.schema, 'doc'));
  }
}