import { commonMacro } from './common-macro';
import { parseAttrs } from '../utils/attrs';
import { title } from '../utils/title';
export const noformatMacro = ({
  input,
  position,
  schema,
  context
}) => {
  return commonMacro(input.substring(position), schema, {
    keyword: 'noformat',
    paired: true,
    context,
    rawContentProcessor
  });
};
const rawContentProcessor = (rawAttrs, rawContent, length, schema, _context) => {
  const output = [];
  const {
    codeBlock
  } = schema.nodes;
  const parsedAttrs = parseAttrs(rawAttrs);
  // Ignored via go/ees005
  // eslint-disable-next-line require-unicode-regexp
  const trimedContent = rawContent.replace(/^\s+|\s+$/g, '');
  const textNode = trimedContent.length ? schema.text(trimedContent) : undefined;
  if (parsedAttrs.title) {
    output.push(title(parsedAttrs.title, schema));
  }
  output.push(codeBlock.createChecked({}, textNode));
  return {
    type: 'pmnode',
    nodes: output,
    length
  };
};