"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperationFailedAttributes = exports.getNetworkFields = exports.getErrorType = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));
var _getTraceId = require("../../utils/get-trace-id");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var getUrlPath = function getUrlPath(url) {
  try {
    return new URL(url).pathname;
  } catch (_unused) {
    return 'Failed to parse pathname from url';
  }
};
var getNetworkFields = exports.getNetworkFields = function getNetworkFields(error) {
  if (error instanceof Response) {
    return {
      traceId: (0, _getTraceId.getTraceId)(error),
      status: error.status,
      path: getUrlPath(error.url)
    };
  }
  return {
    traceId: null,
    status: null,
    path: null
  };
};
var getErrorType = exports.getErrorType = function getErrorType(error) {
  if (error instanceof Response) {
    return 'NetworkError';
  }
  if (error instanceof Error) {
    return error.name;
  }
  return (0, _typeof2.default)(error);
};
var getOperationFailedAttributes = exports.getOperationFailedAttributes = function getOperationFailedAttributes(err) {
  if (err instanceof Response) {
    return _objectSpread({
      error: 'NetworkError',
      errorType: 'NetworkError'
    }, getNetworkFields(err));
  }
  var error = err instanceof Error ? err : new Error('unknown error');
  return {
    error: error.name,
    errorType: error.name,
    traceId: null,
    status: null,
    path: null
  };
};