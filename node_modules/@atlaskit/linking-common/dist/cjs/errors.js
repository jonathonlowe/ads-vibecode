"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.APIError = void 0;
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _wrapNativeSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/wrapNativeSuper"));
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
//500
// Used to catch any other errors - not server-side.
var APIError = exports.APIError = /*#__PURE__*/function (_Error) {
  function APIError(kind, hostname, message, type, extensionKey) {
    var _this;
    (0, _classCallCheck2.default)(this, APIError);
    _this = _callSuper(this, APIError, ["".concat(kind, ": ").concat(message)]);
    _this.kind = kind;
    _this.hostname = hostname;
    _this.message = message;
    _this.type = type;
    _this.extensionKey = extensionKey;
    _this.name = 'APIError';
    // The error type received from the server.
    _this.type = type;
    // The kind mapped to on the client.
    _this.kind = kind;
    // The message received from the server.
    _this.message = message;
    // The hostname of the URL which failed - do NOT log this (contains PII/UGC).
    _this.hostname = hostname;
    // The extensionKey passed from the error response from ORS
    _this.extensionKey = extensionKey;
    return _this;
  }
  (0, _inherits2.default)(APIError, _Error);
  return (0, _createClass2.default)(APIError);
}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));