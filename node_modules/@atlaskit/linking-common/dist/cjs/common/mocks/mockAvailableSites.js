"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mockAvailableSitesWithError = exports.mockAvailableSitesForGatewayUrl = exports.mockAvailableSites = void 0;
var _client = _interopRequireDefault(require("fetch-mock/cjs/client"));
var _availableSitesResult = require("./available-sites-result");
// eslint-disable-next-line import/no-extraneous-dependencies
// @ts-ignore - This was added due to this import failing with 'no declaration file found for 'fetch-mock/cjs/client' in the Jira Typecheck when the platform is being locally consumed, as Jira does not contain the 'platform/fetch-mock.d.ts' typing. Additionally since this is a custom typing with no properties set it is already adding no type value

var fetchAvailableSiteEndpoint = /\/gateway\/api\/available-sites/;
var mockAvailableSites = exports.mockAvailableSites = function mockAvailableSites(responseData) {
  _client.default.post(fetchAvailableSiteEndpoint, responseData || _availableSitesResult.mockedAvailableSitesResult, {
    delay: 10,
    overwriteRoutes: true
  });
};

/**
 * Mock availableSites for a specific gatewayBaseUrl. Only matches requests with the gatewayBaseUrl in the url.
 * @param gatewayBaseUrl Base url without trailing slash
 */
var mockAvailableSitesForGatewayUrl = exports.mockAvailableSitesForGatewayUrl = function mockAvailableSitesForGatewayUrl(gatewayBaseUrl) {
  _client.default.post("".concat(gatewayBaseUrl, "/gateway/api/available-sites"), _availableSitesResult.mockedAvailableSitesResultWithGatewayBaseUrl, {
    delay: 10,
    overwriteRoutes: true
  });
};
var mockAvailableSitesWithError = exports.mockAvailableSitesWithError = function mockAvailableSitesWithError() {
  _client.default.post(fetchAvailableSiteEndpoint, 503, {
    delay: 10,
    overwriteRoutes: true
  });
};