"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NetworkError = void 0;
exports.request = request;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _wrapNativeSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/wrapNativeSuper"));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var ALLOWED_RESPONSE_STATUS_CODES = [200, 401, 404];
var NetworkError = exports.NetworkError = /*#__PURE__*/function (_Error) {
  function NetworkError(error) {
    (0, _classCallCheck2.default)(this, NetworkError);
    return _callSuper(this, NetworkError, [error]);
  }
  (0, _inherits2.default)(NetworkError, _Error);
  return (0, _createClass2.default)(NetworkError);
}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));
function request(_x, _x2, _x3, _x4) {
  return _request.apply(this, arguments);
}
function _request() {
  _request = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(method, url, data, headers) {
    var statuses,
      requestConfig,
      response,
      text,
      _args = arguments;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          statuses = _args.length > 4 && _args[4] !== undefined ? _args[4] : ALLOWED_RESPONSE_STATUS_CODES;
          requestConfig = _objectSpread({
            method: method,
            credentials: 'include',
            headers: _objectSpread({
              Accept: 'application/json',
              'Cache-Control': 'no-cache',
              'Content-Type': 'application/json'
            }, headers)
          }, data ? {
            body: JSON.stringify(data)
          } : {});
          _context.prev = 2;
          _context.next = 5;
          return fetch(url, requestConfig);
        case 5:
          response = _context.sent;
          if (!(response.ok || statuses !== null && statuses !== void 0 && statuses.includes(response.status))) {
            _context.next = 17;
            break;
          }
          if (!statuses.includes(204)) {
            _context.next = 14;
            break;
          }
          _context.next = 10;
          return response.text();
        case 10:
          text = _context.sent;
          return _context.abrupt("return", text ? JSON.parse(text) : undefined);
        case 14:
          _context.next = 16;
          return response.json();
        case 16:
          return _context.abrupt("return", _context.sent);
        case 17:
          throw response;
        case 20:
          _context.prev = 20;
          _context.t0 = _context["catch"](2);
          if (!(typeof _context.t0 === 'string' || _context.t0 instanceof TypeError)) {
            _context.next = 24;
            break;
          }
          throw new NetworkError(_context.t0);
        case 24:
          throw _context.t0;
        case 25:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[2, 20]]);
  }));
  return _request.apply(this, arguments);
}