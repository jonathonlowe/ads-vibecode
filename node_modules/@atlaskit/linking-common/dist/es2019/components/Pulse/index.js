/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./index.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
import { fg } from '@atlaskit/platform-feature-flags';
import React, { useRef } from 'react';
const pulseKeyframes = null;
const pulseStyles = null;
const commonStyles = null;
export const Pulse = ({
  children,
  showPulse = false,
  onAnimationIteration,
  onAnimationStart,
  testId = 'discovery-pulse',
  isInline = false
}) => {
  // this ref is to persist the animation through rerenders
  const pulseStarted = useRef(false);
  if (showPulse) {
    pulseStarted.current = true;
  }
  const stopPropagation = React.useCallback(e => {
    e.stopPropagation();
  }, []);
  const WrapperTag = isInline ? 'span' : 'div';
  if (fg('platform_ssr_smartlinks_editor')) {
    return /*#__PURE__*/React.createElement(WrapperTag, {
      "data-testid": testId,
      onAnimationIteration: onAnimationIteration,
      onAnimationStart: onAnimationStart,
      className: ax(["_1e0c1nu9", pulseStarted.current && "", pulseStarted.current && "_2rko1l7b _y44v3445 _16qs1tze"])
    }, /*#__PURE__*/React.createElement("span", {
      onAnimationIteration: stopPropagation,
      onAnimationStart: stopPropagation
    }, children));
  }
  return /*#__PURE__*/React.createElement("div", {
    "data-testid": testId,
    onAnimationIteration: onAnimationIteration,
    onAnimationStart: onAnimationStart,
    className: ax(["_1e0c1nu9", pulseStarted.current && "", pulseStarted.current && "_2rko1l7b _y44v3445 _16qs1tze"])
  }, /*#__PURE__*/React.createElement("span", {
    onAnimationIteration: stopPropagation,
    onAnimationStart: stopPropagation
  }, children));
};
export default Pulse;