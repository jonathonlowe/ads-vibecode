/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./index.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { B50, N30, N40, N50, N60 } from '@atlaskit/theme/colors';
const placeholderShimmer = null;
const appearanceValues = {
  darkGray: {
    animation: `var(--ds-background-accent-gray-subtle, ${N60})`
  },
  gray: {
    animation: `var(--ds-skeleton, ${N40})`
  },
  blue: {
    animation: "var(--ds-background-information-hovered, #cce0ff)"
  }
};
const spanSkeletonStyles = null;
const spanSkeletonBackgroundStyleMap = {
  gray: "_bfhk1cs6",
  blue: "_bfhk1hdx",
  darkGray: "_bfhk1gk7"
};
export const SpanSkeleton = ({
  width,
  appearance = 'gray',
  height = 14,
  borderRadius = 0,
  isShimmering = true,
  testId,
  style = {}
}) => {
  return /*#__PURE__*/React.createElement("span", {
    "data-testid": testId,
    style: {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop
      ...style,
      height: (typeof height === 'number' ? `${height}px` : height) || 'auto',
      width: (typeof width === 'number' ? `${width}px` : width) || 'auto',
      borderRadius: (typeof borderRadius === 'number' ? `${borderRadius}px` : borderRadius) || 0,
      backgroundImage: `linear-gradient(
    to right,
    transparent 0%,
    ${appearanceValues[appearance].animation} 20%,
    transparent 40%,
    transparent 100%
  )`,
      backgroundSize: isShimmering ? `40px ${height}` : '0px'
    },
    className: ax(["_y44v198l _uiztglyw _12vemgnk", spanSkeletonBackgroundStyleMap[appearance]])
  });
};
export const Skeleton = ({
  width,
  appearance = 'gray',
  height = 14,
  borderRadius = 0,
  isShimmering = true,
  testId,
  style = {}
}) => {
  return /*#__PURE__*/React.createElement("div", {
    "data-testid": testId,
    style: {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop
      ...style,
      height: (typeof height === 'number' ? `${height}px` : height) || 'auto',
      width: (typeof width === 'number' ? `${width}px` : width) || 'auto',
      borderRadius: (typeof borderRadius === 'number' ? `${borderRadius}px` : borderRadius) || 0,
      backgroundImage: `linear-gradient(
    to right,
    transparent 0%,
    ${appearanceValues[appearance].animation} 20%,
    transparent 40%,
    transparent 100%
  )`,
      backgroundSize: isShimmering ? `40px ${height}` : '0px'
    },
    className: ax(["_y44v198l _uiztglyw _12vemgnk", spanSkeletonBackgroundStyleMap[appearance]])
  });
};
export default Skeleton;