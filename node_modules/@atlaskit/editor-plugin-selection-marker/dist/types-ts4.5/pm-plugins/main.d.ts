import { SafePlugin } from '@atlaskit/editor-common/safe-plugin';
import type { ExtractInjectionAPI } from '@atlaskit/editor-common/types';
import type { EditorState, ReadonlyTransaction } from '@atlaskit/editor-prosemirror/state';
import { PluginKey } from '@atlaskit/editor-prosemirror/state';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import { DecorationSet } from '@atlaskit/editor-prosemirror/view';
import type { SelectionMarkerPlugin } from '../selectionMarkerPluginType';
export interface PluginState {
    decorations: DecorationSet;
    shouldHideDecorations: boolean;
    forceHide: boolean;
    decorationType: DecorationType;
}
export declare const key: PluginKey<PluginState>;
type DecorationType = 'blur' | 'highlight' | 'none';
export declare const applyNextPluginState: (tr: ReadonlyTransaction, currentState: PluginState, oldEditorState: EditorState) => PluginState | {
    decorations: DecorationSet;
    shouldHideDecorations: any;
    forceHide: any;
    decorationType: "blur" | "none";
};
export declare const createPlugin: (api: ExtractInjectionAPI<SelectionMarkerPlugin> | undefined) => SafePlugin<PluginState>;
export declare function dispatchShouldHideDecorations(editorView: EditorView, shouldHideDecorations: boolean): void;
export {};
