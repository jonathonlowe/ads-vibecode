/* DecisionList.tsx generated by @compiled/babel-plugin v0.36.1 */
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import "./DecisionList.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
import React, { PureComponent } from 'react';
/*
	Increasing specificity with double ampersand to ensure these rules take
	priority over the global styles applied to 'ol' elements.
*/
var listStyles = null;
var DecisionList = /*#__PURE__*/function (_PureComponent) {
  function DecisionList() {
    _classCallCheck(this, DecisionList);
    return _callSuper(this, DecisionList, arguments);
  }
  _inherits(DecisionList, _PureComponent);
  return _createClass(DecisionList, [{
    key: "render",
    value: function render() {
      var children = this.props.children;
      if (!children) {
        return null;
      }

      // Data attributes are required for copy and paste from rendered content
      // to the editor to preserve the decision.
      // This allows the editor to differentiate between numbered and ordered lists,
      // and action items, which all share the common `<li>` element.
      // The value of `data-decision-local-id` should be discarded upon paste, with a
      // a new uuid generated by the editor for the cloned content.
      return /*#__PURE__*/React.createElement("ol", {
        "data-decision-list-local-id": "",
        "data-node-type": "decisionList",
        className: ax(["_1braglyw _1yxxidpf"])
      }, React.Children.map(children, function (child, idx) {
        var _ref = child.props,
          localId = _ref.localId;
        return /*#__PURE__*/React.createElement("li", {
          key: idx,
          "data-decision-local-id": localId || '',
          "data-decision-state": "DECIDED"
        }, child);
      }));
    }
  }]);
}(PureComponent);
export { DecisionList as default };