/* TaskList.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./TaskList.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
import React from 'react';
import { PureComponent } from 'react';
import { FabricElementsAnalyticsContext } from '@atlaskit/analytics-namespaced-context';
const listStyles = null;
const taskListStyles = null;
export default class TaskList extends PureComponent {
  render() {
    const {
      listId,
      children
    } = this.props;
    const listSize = React.Children.count(children);
    if (!children) {
      return null;
    }

    // Data attributes are required for copy and paste from rendered content
    // to the editor to preserve the task.
    // This allows the editor to differentiate between numbered and ordered lists,
    // and action items, which all share the common `<li>` element.
    // The value of `data-task-local-id` should be discarded upon paste, with a
    // a new uuid generated by the editor for the cloned content.
    return /*#__PURE__*/React.createElement("div", {
      "data-task-list-local-id": "",
      className: ax(["_2mzuglyw _19bvidpf"])
    }, React.Children.map(children, (child, idx) => {
      const {
        localId
      } = child.props;
      return /*#__PURE__*/React.createElement(FabricElementsAnalyticsContext, {
        data: {
          listLocalId: listId,
          listSize,
          position: idx
        }
      }, /*#__PURE__*/React.createElement("div", {
        key: idx,
        "data-task-local-id": localId || '',
        className: ax(["_19pk1b66"])
      }, child));
    }));
  }
}