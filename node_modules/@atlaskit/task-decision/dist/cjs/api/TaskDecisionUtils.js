"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findIndex = exports.convertServiceTaskToTask = exports.convertServiceTaskStateToBaseItem = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["creationDate", "lastUpdateDate", "creatorId", "lastUpdaterId"],
  _excluded2 = ["lastUpdateDate"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var convertServiceTaskToTask = exports.convertServiceTaskToTask = function convertServiceTaskToTask(serviceTask) {
  var creationDate = serviceTask.creationDate,
    lastUpdateDate = serviceTask.lastUpdateDate,
    creatorId = serviceTask.creatorId,
    lastUpdaterId = serviceTask.lastUpdaterId,
    other = (0, _objectWithoutProperties2.default)(serviceTask, _excluded);
  return _objectSpread({
    creationDate: creationDate && new Date(creationDate) || undefined,
    lastUpdateDate: new Date(lastUpdateDate),
    creator: creatorId,
    lastUpdater: lastUpdaterId
  }, other);
};
var convertServiceTaskStateToBaseItem = exports.convertServiceTaskStateToBaseItem = function convertServiceTaskStateToBaseItem(serviceTaskInfo) {
  var lastUpdateDate = serviceTaskInfo.lastUpdateDate,
    other = (0, _objectWithoutProperties2.default)(serviceTaskInfo, _excluded2);
  return _objectSpread({
    type: 'TASK',
    lastUpdateDate: new Date(lastUpdateDate)
  }, other);
};
var findIndex = exports.findIndex = function findIndex(array, predicate) {
  var index = -1;
  array.some(function (item, i) {
    if (predicate(item)) {
      index = i;
      return true;
    }
    return false;
  });
  return index;
};