import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';
import { FormattedMessage } from 'react-intl-next';
import { B400, N200, N800 } from '@atlaskit/theme/colors';
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx } from '@emotion/react';
import { AddOptionAvatar } from '../AddOptionAvatar';
import { AvatarItemOption, textWrapper } from '../AvatarItemOption';
import { messages } from '../i18n';
var getAddEmailMessage = function getAddEmailMessage(validity) {
  return validity === 'POTENTIAL' ? messages.continueToAddEmail : messages.selectToAddEmail;
};
export var EmailOption = /*#__PURE__*/function (_React$PureComponent) {
  function EmailOption() {
    var _this;
    _classCallCheck(this, EmailOption);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, EmailOption, [].concat(args));
    _defineProperty(_this, "getLozengeProps", function () {
      return typeof _this.props.email.lozenge === 'string' ? {
        text: _this.props.email.lozenge
      } : _this.props.email.lozenge;
    });
    _defineProperty(_this, "renderPrimaryText", function () {
      var id = _this.props.email.id;
      return jsx("span", {
        key: "name"
        // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
        ,
        css: textWrapper(_this.props.isSelected ? "var(--ds-text-selected, ".concat(B400, ")") : "var(--ds-text, ".concat(N800, ")"))
      }, id);
    });
    _defineProperty(_this, "renderSecondaryText", function (label) {
      return jsx("span", {
        // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
        css: textWrapper(_this.props.isSelected ? "var(--ds-text-selected, ".concat(B400, ")") : "var(--ds-text-subtlest, ".concat(N200, ")")),
        "data-testid": "user-picker-email-secondary-text"
      }, label);
    });
    _defineProperty(_this, "renderOption", function (label) {
      return jsx(AvatarItemOption, {
        avatar: jsx(AddOptionAvatar, {
          label: label
        }),
        lozenge: _this.getLozengeProps(),
        isDisabled: _this.props.email.isDisabled,
        primaryText: _this.renderPrimaryText(),
        secondaryText: _this.renderSecondaryText(label)
      });
    });
    return _this;
  }
  _inherits(EmailOption, _React$PureComponent);
  return _createClass(EmailOption, [{
    key: "render",
    value: function render() {
      var _this2 = this;
      var _this$props = this.props,
        label = _this$props.label,
        emailValidity = _this$props.emailValidity;
      return label !== undefined ? this.renderOption(label) : jsx(FormattedMessage, getAddEmailMessage(emailValidity), function (label) {
        return _this2.renderOption(label);
      });
    }
  }]);
}(React.PureComponent);