/* ClearIndicator.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import "./ClearIndicator.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
import React from 'react';
import { components } from '@atlaskit/select';
var AsyncTooltip = /*#__PURE__*/React.lazy(function () {
  return import( /* webpackChunkName: "@atlaskit-internal_@atlaskit/tooltip" */'@atlaskit/tooltip').then(function (module) {
    return {
      default: module.default
    };
  });
});
var clearIndicatorStyles = {
  root: "_v5641ppt _tzy4kb7n _ca0qze3t _u5f3ze3t _n3tdze3t _19bvze3t _30l3s4qr _1mhjidpf"
};
export var ClearIndicator = /*#__PURE__*/function (_React$PureComponent) {
  function ClearIndicator() {
    var _this;
    _classCallCheck(this, ClearIndicator);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, ClearIndicator, [].concat(args));
    _defineProperty(_this, "handleMouseDown", function (event) {
      if (event && event.type === 'mousedown' && event.button !== 0) {
        return;
      }
      // Prevent focus when clear on blurred state
      var _this$props = _this.props,
        clearValue = _this$props.clearValue,
        selectProps = _this$props.selectProps;
      clearValue();
      //@ts-ignore react-select unsupported props
      if (selectProps && !selectProps.isFocused) {
        event.stopPropagation();
      }
    });
    return _this;
  }
  _inherits(ClearIndicator, _React$PureComponent);
  return _createClass(ClearIndicator, [{
    key: "render",
    value: function render() {
      var clearValueLabel = this.props.selectProps.clearValueLabel;
      var Indicator = /*#__PURE__*/React.createElement(components.ClearIndicator, _extends({}, this.props, {
        innerProps: _objectSpread(_objectSpread({}, this.props.innerProps), {}, {
          onMouseDown: this.handleMouseDown
        }),
        xcss: clearIndicatorStyles.root
      }));
      return clearValueLabel ? /*#__PURE__*/React.createElement(React.Suspense, {
        fallback: Indicator
      }, /*#__PURE__*/React.createElement(AsyncTooltip, {
        content: clearValueLabel
      }, Indicator)) : Indicator;
    }
  }]);
}(React.PureComponent);