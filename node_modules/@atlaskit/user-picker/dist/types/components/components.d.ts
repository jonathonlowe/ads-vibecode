/// <reference types="react" />
import { ClearIndicator } from './ClearIndicator';
import { MultiValue } from './MultiValue';
import { MultiValueContainer } from './MultiValueContainer';
import { Input } from './Input';
import { SingleValueContainer } from './SingleValueContainer';
import { PopupInput } from './PopupInput';
import { PopupControl } from './PopupControl';
import { Menu } from './Menu';
/**
 * Memoize getComponents to avoid rerenders.
 */
export declare const getComponents: import("memoize-one").MemoizedFn<(multi?: boolean, anchor?: React.ComponentType<any>, showClearIndicator?: boolean) => {
    Control: import("react").ComponentType<any>;
    Option: import("react").FC<import("./Option").OptionProps>;
    MultiValue?: undefined;
    DropdownIndicator?: undefined;
    SingleValue?: undefined;
    ClearIndicator?: undefined;
    ValueContainer?: undefined;
    Input?: undefined;
    Menu?: undefined;
} | {
    MultiValue: typeof MultiValue;
    DropdownIndicator: null;
    SingleValue: (props: import("./SingleValue").Props) => JSX.Element | null;
    ClearIndicator: typeof ClearIndicator | null;
    Option: import("react").FC<import("./Option").OptionProps>;
    ValueContainer: typeof MultiValueContainer | typeof SingleValueContainer;
    Input: typeof Input;
    Menu: typeof Menu;
    Control: (props: import("@atlaskit/select").ControlProps<any>) => JSX.Element;
}>;
export declare const getPopupComponents: import("memoize-one").MemoizedFn<(hasPopupTitle: boolean) => {
    DropdownIndicator: null;
    SingleValue: (props: import("./SingleValue").Props) => JSX.Element | null;
    ClearIndicator: typeof ClearIndicator;
    Option: import("react").FC<import("./Option").OptionProps>;
    ValueContainer: typeof SingleValueContainer;
    Input: typeof PopupInput;
} | {
    Control: typeof PopupControl;
    DropdownIndicator: null;
    SingleValue: (props: import("./SingleValue").Props) => JSX.Element | null;
    ClearIndicator: typeof ClearIndicator;
    Option: import("react").FC<import("./Option").OptionProps>;
    ValueContainer: typeof SingleValueContainer;
    Input: typeof PopupInput;
}>;
