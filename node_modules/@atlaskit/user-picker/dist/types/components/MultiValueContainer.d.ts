/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { type MultiValueProps } from '@atlaskit/select';
import React from 'react';
import { type Option, type User } from '../types';
export type State = {
    valueSize: number;
    previousValueSize: number;
};
type Props = MultiValueProps<Option<User>[], true> & {
    innerProps?: ValueContainerInnerProps;
};
type ValueContainerInnerProps = {
    ref: React.RefObject<HTMLDivElement>;
};
export declare class MultiValueContainer extends React.PureComponent<Props, State> {
    static getDerivedStateFromProps(nextProps: Props, prevState: State): {
        valueSize: number;
        previousValueSize: number;
    };
    private valueContainerInnerProps;
    private timeoutId;
    constructor(props: Props);
    componentDidUpdate(): void;
    componentWillUnmount(): void;
    scrollToBottom: () => void;
    private showPlaceholder;
    private addPlaceholder;
    private renderChildren;
    onValueContainerClick: any;
    render(): JSX.Element;
}
export {};
