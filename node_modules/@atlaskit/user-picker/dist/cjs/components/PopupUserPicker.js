"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PopupUserPickerWithoutAnalytics = exports.PopupUserPicker = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _analyticsNext = require("@atlaskit/analytics-next");
var _select = require("@atlaskit/select");
var _react = _interopRequireDefault(require("react"));
var _components = require("./components");
var _styles = require("./styles");
var _popup = require("./popup");
var _BaseUserPicker = require("./BaseUserPicker");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var PopupUserPickerWithoutAnalytics = exports.PopupUserPickerWithoutAnalytics = /*#__PURE__*/function (_React$Component) {
  function PopupUserPickerWithoutAnalytics() {
    var _this;
    (0, _classCallCheck2.default)(this, PopupUserPickerWithoutAnalytics);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, PopupUserPickerWithoutAnalytics, [].concat(args));
    (0, _defineProperty2.default)(_this, "state", {
      flipped: false
    });
    (0, _defineProperty2.default)(_this, "handleFlipStyle", function (data) {
      var flipped = data.flipped,
        transform = data.styles.transform,
        height = data.popper.height;
      _this.setState({
        flipped: flipped
      });
      if (!flipped) {
        return data;
      }
      data.styles.transform = transform + "translate(0, ".concat(height, "px) translate(0, -100%)");
      return data;
    });
    return _this;
  }
  (0, _inherits2.default)(PopupUserPickerWithoutAnalytics, _React$Component);
  return (0, _createClass2.default)(PopupUserPickerWithoutAnalytics, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        target = _this$props.target,
        popupTitle = _this$props.popupTitle,
        boundariesElement = _this$props.boundariesElement,
        isMulti = _this$props.isMulti,
        offset = _this$props.offset,
        placement = _this$props.placement,
        rootBoundary = _this$props.rootBoundary,
        shouldFlip = _this$props.shouldFlip,
        styles = _this$props.styles,
        strategy = _this$props.strategy;
      var width = this.props.width;
      var selectStyles = (0, _styles.getPopupStyles)(width, isMulti, styles,
      // eslint-disable-next-line @atlaskit/platform/no-preconditioning, @atlaskit/platform/ensure-feature-flag-prefix
      (0, _platformFeatureFlags.fg)('platform-component-visual-refresh') && (0, _platformFeatureFlags.fg)('visual-refresh-user-picker'));
      return /*#__PURE__*/_react.default.createElement(_BaseUserPicker.BaseUserPickerWithoutAnalytics, (0, _extends2.default)({}, this.props, {
        SelectComponent: _select.PopupSelect,
        width: width,
        styles: selectStyles,
        components: (0, _components.getPopupComponents)(!!popupTitle),
        pickerProps: (0, _popup.getPopupProps)(width, target, this.handleFlipStyle, boundariesElement, offset, placement, rootBoundary, shouldFlip, popupTitle, strategy)
      }));
    }
  }]);
}(_react.default.Component);
(0, _defineProperty2.default)(PopupUserPickerWithoutAnalytics, "defaultProps", {
  boundariesElement: 'viewport',
  width: 300,
  isMulti: false,
  offset: [0, 0],
  placement: 'auto',
  rootBoundary: 'viewport',
  shouldFlip: true,
  strategy: 'fixed'
});
var PopupUserPicker = exports.PopupUserPicker = (0, _analyticsNext.withAnalyticsEvents)()(PopupUserPickerWithoutAnalytics);