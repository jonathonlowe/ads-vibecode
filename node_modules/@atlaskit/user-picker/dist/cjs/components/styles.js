"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getStyles = exports.getPopupStyles = exports.INDICATOR_WIDTH = exports.BORDER_PADDING = exports.AVATAR_PADDING = void 0;
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _colors = require("@atlaskit/theme/colors");
var _memoizeOne = _interopRequireDefault(require("memoize-one"));
var _select = require("@atlaskit/select");
var _excluded = ["paddingTop", "paddingBottom", "paddingLeft", "paddingRight"],
  _excluded2 = ["paddingTop", "paddingBottom", "position"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var BORDER_PADDING = exports.BORDER_PADDING = "var(--ds-space-075, 6px)";
var AVATAR_PADDING = exports.AVATAR_PADDING = 6;
var INDICATOR_WIDTH = exports.INDICATOR_WIDTH = 39;
var getStyles = exports.getStyles = (0, _memoizeOne.default)(function (width, isMulti, isCompact, overrideStyles, isInvalid, isVisualRefresh, isPopupStyles) {
  var styles = {
    menu: function menu(css, state) {
      return _objectSpread(_objectSpread({}, css), {}, {
        width: width,
        minWidth: state.selectProps.menuMinWidth,
        zIndex: '400'
      });
    },
    menuList: function menuList(css) {
      return _objectSpread(_objectSpread({}, css), {}, {
        zIndex: '400'
      });
    },
    control: function control(css, state) {
      var isMulti = state.selectProps.isMulti;
      return _objectSpread(_objectSpread({}, css), {}, {
        width: width,
        borderColor: isInvalid ? "var(--ds-border-danger, ".concat(_colors.R400, ")") : state.isFocused ? "var(--ds-border-focused, ".concat(css.borderColor, ")") : state.selectProps.subtle || state.selectProps.noBorder ? 'transparent' : "var(--ds-border-input, ".concat(_colors.N90, ")"),
        backgroundColor: state.isFocused ? "var(--ds-background-input, ".concat(css['backgroundColor'], ")") : state.selectProps.subtle ? 'transparent' : state.selectProps.textFieldBackgroundColor ? "var(--ds-background-input, ".concat(_colors.N10, ")") : "var(--ds-background-input, ".concat(_colors.N20, ")"),
        '&:hover .fabric-user-picker__clear-indicator': {
          opacity: 1
        },
        ':hover': _objectSpread(_objectSpread({}, css[':hover']), {}, {
          borderColor: isInvalid ? "var(--ds-border-danger, ".concat(_colors.R400, ")") : state.isFocused ? css[':hover'] ? "var(--ds-border-focused, ".concat(css[':hover'].borderColor, ")") : "var(--ds-border-focused, ".concat(_colors.B100, ")") : state.selectProps.subtle ? 'transparent' : "var(--ds-border-input, ".concat(_colors.N90, ")"),
          backgroundColor: state.selectProps.subtle && state.selectProps.hoveringClearIndicator ? "var(--ds-background-danger, ".concat(_colors.R50, ")") : state.isFocused ? css[':hover'] ? "var(--ds-background-input, ".concat(css[':hover'].backgroundColor, ")") : "var(--ds-background-input, ".concat(_colors.N0, ")") : state.isDisabled ? "var(--ds-background-disabled, ".concat(_colors.N10, ")") : "var(--ds-background-input-hovered, ".concat(_colors.N30, ")")
        }),
        padding: 0,
        minHeight: isCompact ? 'none' : 44,
        /* IE 11 needs to set height explicitly to be vertical align when being in not compact mode */
        height: isCompact || isMulti ? '100%' : 44,
        maxWidth: '100%'
      });
    },
    clearIndicator: function clearIndicator(_ref) {
      var paddingTop = _ref.paddingTop,
        paddingBottom = _ref.paddingBottom,
        paddingLeft = _ref.paddingLeft,
        paddingRight = _ref.paddingRight,
        css = (0, _objectWithoutProperties2.default)(_ref, _excluded);
      return _objectSpread(_objectSpread({}, css), {}, {
        // By default show clear indicator, except for on devices where "hover" is supported.
        // This means mobile devices (which do not support hover) will be able to see the clear indicator.
        opacity: 1,
        '@media (hover: hover) and (pointer: fine)': {
          opacity: 0
        },
        transition: css.transition + ', opacity 150ms',
        paddingTop: 0,
        padding: 0,
        ':hover': {
          color: "var(--ds-icon-danger, ".concat(_colors.R400, ")")
        }
      });
    },
    indicatorsContainer: function indicatorsContainer(css) {
      return _objectSpread(_objectSpread({}, css), {}, {
        paddingRight: "var(--ds-space-050, 4px)"
      });
    },
    valueContainer: function valueContainer(_ref2, state) {
      var paddingTop = _ref2.paddingTop,
        paddingBottom = _ref2.paddingBottom,
        position = _ref2.position,
        css = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);
      var isMulti = state.selectProps.isMulti;
      return _objectSpread(_objectSpread({}, css), {}, {
        gridTemplateColumns: 'auto 1fr',
        paddingTop: isCompact ? 0 : BORDER_PADDING,
        paddingBottom: isCompact ? 0 : BORDER_PADDING,
        paddingLeft: isMulti ? BORDER_PADDING : 0,
        overflowX: 'hidden',
        overflowY: 'auto',
        scrollbarWidth: 'none',
        maxHeight: state.selectProps.maxPickerHeight || '100%',
        '::-webkit-scrollbar': {
          width: 0,
          background: 'transparent'
        }
      });
    },
    multiValue: function multiValue(css) {
      return _objectSpread(_objectSpread({}, css), {}, {
        borderRadius: 24,
        cursor: 'default'
      });
    },
    multiValueLabel: function multiValueLabel(css) {
      return _objectSpread(_objectSpread({}, css), {}, {
        display: 'flex'
      });
    },
    multiValueRemove: function multiValueRemove(css) {
      return _objectSpread(_objectSpread({}, css), {}, {
        borderRadius: 24,
        cursor: 'pointer'
      });
    },
    placeholder: function placeholder(css, state) {
      // fix styling in IE 11: when the position is absolute and `left` prop is not defined,
      // IE and other browsers auto calculate value of "left" prop differently,
      // so we want to explicitly set value for the `left` property
      if (css.position === 'absolute' && !css.left) {
        css.left = "".concat(BORDER_PADDING, "px");
      }
      return _objectSpread(_objectSpread({}, css), {}, {
        gridArea: '1/2/2/3',
        paddingLeft: state.selectProps.isMulti ? 0 : BORDER_PADDING,
        /* Margin left right of 2px set by default */
        // margin: `0 ${BORDER_PADDING}px`,
        margin: 0,
        whiteSpace: 'nowrap',
        overflow: 'hidden',
        textOverflow: 'ellipsis'
      });
    },
    option: function option(css) {
      if (isVisualRefresh) {
        return _objectSpread(_objectSpread({}, css), {}, {
          overflow: 'hidden',
          paddingLeft: isPopupStyles ? "var(--ds-space-200, 16px)" : "var(--ds-space-100, 8px)",
          paddingRight: isPopupStyles ? "var(--ds-space-200, 16px)" : "var(--ds-space-100, 8px)"
        });
      }
      return _objectSpread(_objectSpread({}, css), {}, {
        overflow: 'hidden'
      });
    },
    input: function input(css, state) {
      return _objectSpread(_objectSpread({}, css), {}, {
        gridArea: '1/2/2/3',
        gridTemplateColumns: isMulti && state.placeholder ? '0 123px' : css.gridTemplateColumns,
        /* Necessary to make input height and tag height the same. */
        margin: "var(--ds-space-050, 4px)".concat(" 0"),
        /* Padding top and bottom of 2 is set by default. */
        paddingTop: 0,
        paddingBottom: 0,
        paddingLeft: state.selectProps.isMulti ? 0 : BORDER_PADDING,
        '& input::placeholder': {
          /* Chrome, Firefox, Opera, Safari 10.1+ */
          color: "var(--ds-text-subtlest, ".concat(_colors.N100, ")"),
          opacity: 1 /* Firefox */
        },
        '& input:-ms-input-placeholder': {
          /* Internet Explorer 10-11 */
          color: "var(--ds-text-subtlest, ".concat(_colors.N100, ")")
        }
      });
    },
    singleValue: function singleValue(css) {
      return _objectSpread(_objectSpread({}, css), {}, {
        margin: 0,
        gridArea: '1/2/2/3'
      });
    }
  };
  return overrideStyles ? (0, _select.mergeStyles)(styles, overrideStyles) : styles;
});
var getPopupStyles = exports.getPopupStyles = (0, _memoizeOne.default)(function (width, isMulti, overrideStyles, isVisualRefresh) {
  return _objectSpread({}, getStyles(width, isMulti, false, overrideStyles, false, isVisualRefresh, true));
});