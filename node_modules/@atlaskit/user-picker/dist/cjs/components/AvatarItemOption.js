"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.textWrapper = exports.AvatarItemOption = void 0;
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@emotion/react");
var _lozenge = _interopRequireDefault(require("@atlaskit/lozenge"));
var _utils = require("./utils");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != (0, _typeof2.default)(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; } /**
 * @jsxRuntime classic
 * @jsx jsx
 */ // eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var AsyncTooltip = /*#__PURE__*/_react.default.lazy(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_@atlaskit/tooltip" */'@atlaskit/tooltip'));
  }).then(function (module) {
    return {
      default: module.default
    };
  });
});
var wrapper = function wrapper(isDisabled) {
  return (0, _react2.css)({
    alignItems: 'center',
    boxSizing: 'border-box',
    display: 'flex',
    // eslint-disable-next-line @atlaskit/design-system/use-tokens-typography
    lineHeight: 1,
    outline: 'none',
    margin: 0,
    width: '100%',
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    cursor: isDisabled ? 'not-allowed' : 'pointer',
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    opacity: isDisabled ? "var(--ds-opacity-disabled, 0.4)" : undefined
  });
};
var optionWrapper = (0, _react2.css)({
  maxWidth: '100%',
  minWidth: 0,
  flex: '1 1 100%',
  // eslint-disable-next-line @atlaskit/design-system/use-tokens-typography
  lineHeight: '1.4',
  paddingLeft: "var(--ds-space-100, 8px)"
});
var getTextStyle = function getTextStyle(isSecondary) {
  var secondaryCssArgs = isSecondary ? {
    font: "var(--ds-font-body-small, normal 400 11px/16px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)"
  } : {};
  return (0, _react2.css)(_objectSpread({
    margin: 0,
    overflowX: 'hidden',
    textOverflow: 'ellipsis',
    whiteSpace: 'nowrap'
  }, secondaryCssArgs));
};
var additionalInfo = (0, _react2.css)({
  float: 'right'
});
var textWrapper = exports.textWrapper = function textWrapper(color) {
  return (0, _react2.css)({
    overflow: 'hidden',
    textOverflow: 'ellipsis',
    display: 'inline',
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    color: color
  });
};
var AvatarItemOption = exports.AvatarItemOption = function AvatarItemOption(_ref) {
  var avatar = _ref.avatar,
    isDisabled = _ref.isDisabled,
    lozenge = _ref.lozenge,
    primaryText = _ref.primaryText,
    secondaryText = _ref.secondaryText;
  var renderLozenge = function renderLozenge() {
    if ((0, _utils.isLozengeText)(lozenge)) {
      if (lozenge !== null && lozenge !== void 0 && lozenge.tooltip) {
        // Note that entire Lozenge must be wrapped in the Tooltip (rather than just the
        // Lozenge text) or tooltip won't work
        return (0, _react2.jsx)(_react.default.Suspense, {
          fallback: (0, _react2.jsx)(_lozenge.default, lozenge, lozenge.text)
        }, (0, _react2.jsx)(AsyncTooltip, {
          content: lozenge.tooltip
        }, (0, _react2.jsx)(_lozenge.default, lozenge, lozenge.text)));
      }
      return (0, _react2.jsx)(_lozenge.default, lozenge, lozenge.text);
    }
    return lozenge;
  };
  return (
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
    (0, _react2.jsx)("span", {
      css: wrapper(isDisabled)
    }, avatar, (0, _react2.jsx)("div", {
      css: optionWrapper
    }, (0, _react2.jsx)("div", null, (0, _react2.jsx)("div", {
      css: getTextStyle()
    }, primaryText), secondaryText && (0, _react2.jsx)("div", {
      css: getTextStyle(true)
    }, secondaryText))), lozenge && (0, _react2.jsx)("div", {
      css: additionalInfo
    }, renderLozenge()))
  );
};