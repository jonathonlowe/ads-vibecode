"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.groupOptionIconWrapper = exports.GroupOption = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _reactIntlNext = require("react-intl-next");
var _react2 = require("@emotion/react");
var _colors = require("@atlaskit/theme/colors");
var _peopleGroupPeople = _interopRequireDefault(require("@atlaskit/icon/core/migration/people-group--people"));
var _AvatarItemOption = require("../AvatarItemOption");
var _i18n = require("../i18n");
var _HighlightText = require("../HighlightText");
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } /**
 * @jsxRuntime classic
 * @jsx jsx
 */ // eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var groupOptionIconWrapper = exports.groupOptionIconWrapper = (0, _react2.css)({
  padding: "var(--ds-space-025, 2px)",
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  '> span': {
    backgroundColor: "var(--ds-background-neutral, ".concat(_colors.N20, ")"),
    borderRadius: '50%',
    padding: "var(--ds-space-050, 4px)"
  }
});
var GroupOption = exports.GroupOption = /*#__PURE__*/function (_React$PureComponent) {
  function GroupOption() {
    var _this;
    (0, _classCallCheck2.default)(this, GroupOption);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, GroupOption, [].concat(args));
    (0, _defineProperty2.default)(_this, "getPrimaryText", function () {
      var _this$props = _this.props,
        isSelected = _this$props.isSelected,
        _this$props$group = _this$props.group,
        name = _this$props$group.name,
        highlight = _this$props$group.highlight;
      return [(0, _react2.jsx)("span", {
        key: "name"
        // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
        ,
        css: (0, _AvatarItemOption.textWrapper)(isSelected ? "var(--ds-text-selected, ".concat(_colors.B400, ")") : "var(--ds-text, ".concat(_colors.N800, ")"))
      }, (0, _react2.jsx)(_HighlightText.HighlightText, {
        highlights: highlight && highlight.name
      }, name))];
    });
    (0, _defineProperty2.default)(_this, "renderAvatar", function () {
      return (0, _react2.jsx)("span", {
        css: groupOptionIconWrapper
      }, (0, _react2.jsx)(_peopleGroupPeople.default, {
        color: "currentColor",
        label: "group-icon",
        LEGACY_size: "medium",
        spacing: "spacious"
      }));
    });
    (0, _defineProperty2.default)(_this, "renderByline", function () {
      var _this$props2 = _this.props,
        isSelected = _this$props2.isSelected,
        group = _this$props2.group;
      return (0, _react2.jsx)("span", {
        // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
        css: (0, _AvatarItemOption.textWrapper)(isSelected ? "var(--ds-text-selected, ".concat(_colors.B400, ")") : "var(--ds-text-subtlest, ".concat(_colors.N200, ")")),
        "data-testid": "user-picker-group-secondary-text"
      }, group.byline ? group.byline : (0, _react2.jsx)(_reactIntlNext.FormattedMessage, _i18n.messages.groupByline));
    });
    (0, _defineProperty2.default)(_this, "getLozengeProps", function () {
      return typeof _this.props.group.lozenge === 'string' ? {
        text: _this.props.group.lozenge
      } : _this.props.group.lozenge;
    });
    return _this;
  }
  (0, _inherits2.default)(GroupOption, _React$PureComponent);
  return (0, _createClass2.default)(GroupOption, [{
    key: "render",
    value: function render() {
      return (0, _react2.jsx)(_AvatarItemOption.AvatarItemOption, {
        avatar: this.renderAvatar(),
        isDisabled: this.props.group.isDisabled,
        lozenge: this.getLozengeProps(),
        primaryText: this.getPrimaryText(),
        secondaryText: this.renderByline()
      });
    }
  }]);
}(_react.default.PureComponent);