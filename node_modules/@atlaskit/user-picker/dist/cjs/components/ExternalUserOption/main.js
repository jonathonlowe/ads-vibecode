"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.imageContainer = exports.emailDomainWrapper = exports.ExternalUserOption = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@emotion/react");
var _colors = require("@atlaskit/theme/colors");
var _tooltip = _interopRequireDefault(require("@atlaskit/tooltip"));
var _analyticsNext = require("@atlaskit/analytics-next");
var _analytics = require("../../analytics");
var _AvatarItemOption = require("../AvatarItemOption");
var _SizeableAvatar = require("../SizeableAvatar");
var _ExternalUserSourcesContainer = require("../ExternalUserSourcesContainer");
var _InfoIcon = _interopRequireDefault(require("./InfoIcon"));
var _ExternalAvatarItemOption = require("./ExternalAvatarItemOption");
var _SourcesTooltipContent = require("./SourcesTooltipContent");
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } /**
 * @jsxRuntime classic
 * @jsx jsx
 */ // eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var imageContainer = exports.imageContainer = (0, _react2.css)({
  height: '16px',
  width: '16px',
  paddingRight: "var(--ds-space-050, 4px)",
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center'
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var emailDomainWrapper = exports.emailDomainWrapper = (0, _react2.css)({
  fontWeight: "var(--ds-font-weight-bold, 700)"
});
var ExternalUserOptionImpl = /*#__PURE__*/function (_React$PureComponent) {
  function ExternalUserOptionImpl() {
    var _this;
    (0, _classCallCheck2.default)(this, ExternalUserOptionImpl);
    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }
    _this = _callSuper(this, ExternalUserOptionImpl, [].concat(_args));
    (0, _defineProperty2.default)(_this, "getPrimaryText", function () {
      var name = _this.props.user.name;
      return (0, _react2.jsx)("span", {
        key: "name"
        // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
        ,
        css: (0, _AvatarItemOption.textWrapper)(_this.props.isSelected ? "var(--ds-text-selected, ".concat(_colors.B400, ")") : "var(--ds-text, ".concat(_colors.N800, ")"))
      }, name);
    });
    (0, _defineProperty2.default)(_this, "renderSecondaryText", function () {
      var _this$props$user = _this.props.user,
        byline = _this$props$user.byline,
        email = _this$props$user.email;
      if (!byline && !email) {
        return;
      }
      var textColor = _this.props.isSelected ? "var(--ds-text-selected, ".concat(_colors.B400, ")") : "var(--ds-text-subtlest, ".concat(_colors.N200, ")");

      // Render byline if present
      if (byline) {
        // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
        return (0, _react2.jsx)("span", {
          css: (0, _AvatarItemOption.textWrapper)(textColor)
        }, byline);
      }

      // Render email if byline isn't present
      if (email) {
        var _email$split = email.split('@'),
          _email$split2 = (0, _slicedToArray2.default)(_email$split, 2),
          emailUser = _email$split2[0],
          emailDomain = _email$split2[1];
        var emailDomainWithAt = "@".concat(emailDomain);
        return (
          // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
          (0, _react2.jsx)("span", {
            css: (0, _AvatarItemOption.textWrapper)(textColor)
          }, emailUser, (0, _react2.jsx)("span", {
            css: emailDomainWrapper
          }, emailDomainWithAt))
        );
      }
    });
    (0, _defineProperty2.default)(_this, "renderAvatar", function () {
      var _this$props = _this.props,
        avatarUrl = _this$props.user.avatarUrl,
        status = _this$props.status;
      return (0, _react2.jsx)(_SizeableAvatar.SizeableAvatar, {
        appearance: "big",
        src: avatarUrl,
        presence: status
      });
    });
    (0, _defineProperty2.default)(_this, "fireEvent", function (eventCreator) {
      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }
      var createAnalyticsEvent = _this.props.createAnalyticsEvent;
      if (createAnalyticsEvent) {
        (0, _analytics.createAndFireEventInElementsChannel)(eventCreator.apply(void 0, args))(createAnalyticsEvent);
      }
    });
    (0, _defineProperty2.default)(_this, "onShow", function () {
      var user = _this.props.user;
      _this.fireEvent(_analytics.userInfoEvent, user.sources, user.id);
    });
    (0, _defineProperty2.default)(_this, "getSourcesInfoTooltip", function () {
      return _this.props.user.isExternal ? (0, _react2.jsx)(_tooltip.default, {
        content: _this.formattedTooltipContent(),
        position: 'right-start',
        onShow: _this.onShow
      }, (0, _react2.jsx)(_InfoIcon.default, null)) : undefined;
    });
    return _this;
  }
  (0, _inherits2.default)(ExternalUserOptionImpl, _React$PureComponent);
  return (0, _createClass2.default)(ExternalUserOptionImpl, [{
    key: "render",
    value: function render() {
      return (0, _react2.jsx)(_ExternalAvatarItemOption.ExternalAvatarItemOption, {
        avatar: this.renderAvatar(),
        isDisabled: this.props.user.isDisabled,
        primaryText: this.getPrimaryText(),
        secondaryText: this.renderSecondaryText(),
        sourcesInfoTooltip: this.getSourcesInfoTooltip()
      });
    }
  }, {
    key: "formattedTooltipContent",
    value: function formattedTooltipContent() {
      var _this$props$user2 = this.props.user,
        id = _this$props$user2.id,
        requiresSourceHydration = _this$props$user2.requiresSourceHydration,
        sources = _this$props$user2.sources;
      return (0, _react2.jsx)(_ExternalUserSourcesContainer.ExternalUserSourcesContainer, {
        accountId: id,
        shouldFetchSources: Boolean(requiresSourceHydration),
        initialSources: sources
      }, function (sourceData) {
        return (0, _react2.jsx)(_SourcesTooltipContent.SourcesTooltipContent, sourceData);
      });
    }
  }]);
}(_react.default.PureComponent);
var ExternalUserOption = exports.ExternalUserOption = (0, _analyticsNext.withAnalyticsEvents)()(ExternalUserOptionImpl);