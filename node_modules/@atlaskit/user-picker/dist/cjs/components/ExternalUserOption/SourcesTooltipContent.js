"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SourcesTooltipContent = void 0;
var _primitives = require("@atlaskit/primitives");
var _react = _interopRequireDefault(require("react"));
var _reactIntlNext = require("react-intl-next");
var _logo = require("@atlaskit/logo");
var _spinner = _interopRequireDefault(require("@atlaskit/spinner/spinner"));
var _slack = require("../assets/slack");
var _google = require("../assets/google");
var _microsoft = require("../assets/microsoft");
var _i18n = require("../i18n");
var sourcesTooltipContainer = (0, _primitives.xcss)({
  paddingBottom: 'space.050',
  paddingRight: 'space.050'
});
var sourceWrapperStyles = (0, _primitives.xcss)({
  paddingTop: 'space.050',
  display: 'flex',
  alignItems: 'center'
});
var SUPPORTED_SOURCES = [{
  sourceType: 'jira',
  icon: /*#__PURE__*/_react.default.createElement(_logo.JiraIcon, {
    size: 'xsmall'
  }),
  label: _i18n.messages.jiraSource
}, {
  sourceType: 'confluence',
  icon: /*#__PURE__*/_react.default.createElement(_logo.ConfluenceIcon, {
    size: 'xsmall'
  }),
  label: _i18n.messages.confluenceSource
}, {
  sourceType: 'other-atlassian',
  icon: /*#__PURE__*/_react.default.createElement(_logo.AtlassianIcon, {
    size: 'xsmall'
  }),
  label: _i18n.messages.otherAtlassianSource
}, {
  sourceType: 'slack',
  icon: /*#__PURE__*/_react.default.createElement(_slack.SlackIcon, null),
  label: _i18n.messages.slackProvider
}, {
  sourceType: 'google',
  icon: /*#__PURE__*/_react.default.createElement(_google.GoogleIcon, null),
  label: _i18n.messages.googleProvider
}, {
  sourceType: 'microsoft',
  icon: /*#__PURE__*/_react.default.createElement(_microsoft.MicrosoftIcon, null),
  label: _i18n.messages.microsoftProvider
}];
var imageContainerStyles = (0, _primitives.xcss)({
  height: '16px',
  width: '16px',
  paddingRight: 'space.050',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center'
});
var SourcesTooltipContent = exports.SourcesTooltipContent = function SourcesTooltipContent(_ref) {
  var sources = _ref.sources,
    sourcesLoading = _ref.sourcesLoading;
  var sourcesToRender = _react.default.useMemo(function () {
    return SUPPORTED_SOURCES.filter(function (supportedSource) {
      return sources.includes(supportedSource.sourceType);
    });
  }, [sources]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, !sourcesLoading && sources.length === 0 ? /*#__PURE__*/_react.default.createElement(_primitives.Box, {
    as: "span"
  }, /*#__PURE__*/_react.default.createElement(_reactIntlNext.FormattedMessage, _i18n.messages.externalUserSourcesError)) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_primitives.Box, {
    as: "span"
  }, /*#__PURE__*/_react.default.createElement(_reactIntlNext.FormattedMessage, _i18n.messages.externalUserSourcesHeading)), /*#__PURE__*/_react.default.createElement(_primitives.Box, {
    xcss: sourcesTooltipContainer
  }, sourcesLoading && /*#__PURE__*/_react.default.createElement(_spinner.default, {
    size: "small",
    appearance: "invert"
  }), !sourcesLoading && sourcesToRender.map(function (_ref2) {
    var sourceType = _ref2.sourceType,
      icon = _ref2.icon,
      label = _ref2.label;
    return /*#__PURE__*/_react.default.createElement(_primitives.Box, {
      xcss: sourceWrapperStyles,
      key: sourceType
    }, /*#__PURE__*/_react.default.createElement(_primitives.Box, {
      as: "span",
      xcss: imageContainerStyles
    }, icon), /*#__PURE__*/_react.default.createElement(_primitives.Box, {
      as: "span"
    }, /*#__PURE__*/_react.default.createElement(_reactIntlNext.FormattedMessage, label)));
  }))));
};