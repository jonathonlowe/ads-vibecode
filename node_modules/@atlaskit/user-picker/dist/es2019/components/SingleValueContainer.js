/* SingleValueContainer.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import "./SingleValueContainer.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
import React from 'react';
import { components } from '@atlaskit/select';
import { SizeableAvatar } from './SizeableAvatar';
import ValueContainerWrapper from './ValueContainerWrapper';
const valueContainerStyles = {
  root: "_yv0e5bpd _ca0q12x7 _n3td12x7 _19bvze3t _1reo15vq _18m91wug _1fjgglyw _c71l1osq _1suq1j28 _1ke8idpf"
};
const placeholderIconContainer = null;
const wrapperStyle = null;
const showUserAvatar = (inputValue, value) => value && value.data && inputValue === value.label;
export class SingleValueContainer extends React.Component {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "renderAvatar", () => {
      const {
        hasValue,
        //@ts-ignore react-select unsupported props
        selectProps: {
          appearance,
          isFocused,
          inputValue,
          value,
          placeholderAvatar
        }
      } = this.props;
      if (isFocused || !hasValue) {
        return /*#__PURE__*/React.createElement(SizeableAvatar, {
          appearance: appearance,
          type: placeholderAvatar,
          src: showUserAvatar(inputValue, value) ? value.data.avatarUrl : undefined
        });
      }
      return null;
    });
    //@ts-ignore react-select unsupported props
    _defineProperty(this, "onValueContainerClick", this.props.selectProps.onValueContainerClick);
    _defineProperty(this, "Wrapper", ({
      children
    }) => {
      return this.onValueContainerClick ? /*#__PURE__*/React.createElement("div", {
        onMouseDown: this.onValueContainerClick,
        className: ax(["_16jlkb7n"])
      }, children) : children;
    });
  }
  render() {
    const {
      children,
      ...valueContainerProps
    } = this.props;
    return /*#__PURE__*/React.createElement(ValueContainerWrapper, {
      isEnabled: this.onValueContainerClick,
      onMouseDown: this.onValueContainerClick
    }, /*#__PURE__*/React.createElement(components.ValueContainer, _extends({}, valueContainerProps, {
      xcss: valueContainerStyles.root
    }), /*#__PURE__*/React.createElement("div", {
      className: ax(["_nd5l1kqh _19bv12x7 _vwz4idpf"])
    }, this.renderAvatar()), children));
  }
}