import React, { useMemo } from 'react';
import { useIntl, IntlProvider } from 'react-intl-next';
import { getMessagesForLocale } from '../util/i18n-util';
const EMPTY = {};
const useI18n = locale => {
  const [messages, setMessages] = React.useState(EMPTY);
  React.useEffect(() => {
    let aborted = false;
    setMessages(EMPTY);
    getMessagesForLocale(locale).then(messages => {
      if (!aborted) {
        setMessages(messages);
      }
    }).catch(error => {
      // eslint-disable-next-line no-console
      console.error(error);
    });
    return () => {
      aborted = true;
    };
  }, [locale]);
  return messages;
};
const MessagesIntlProvider = props => {
  const intl = useIntl();
  const {
    children
  } = props;
  const messages = useI18n(intl.locale);
  const mergedMessages = useMemo(() => {
    return {
      ...intl.messages,
      ...messages
    };
  }, [intl.messages, messages]);
  return /*#__PURE__*/React.createElement(IntlProvider, {
    locale: intl.locale,
    messages: mergedMessages
  }, children);
};
export default MessagesIntlProvider;