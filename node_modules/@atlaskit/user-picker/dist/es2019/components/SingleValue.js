/* SingleValue.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./SingleValue.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { components } from '@atlaskit/select';
import { SizeableAvatar } from './SizeableAvatar';
import { getAvatarUrl, isTeam } from './utils';
import { VerifiedTeamIcon } from '@atlaskit/people-teams-ui-public/verified-team-icon';
import { fg } from '@atlaskit/platform-feature-flags';
import { Box, Flex, Inline } from '@atlaskit/primitives/compiled';
const styles = {
  avatarItem: "_1reo15vq _18m915vq _4cvr1h6o _1ul953f4",
  avatarItemTextWrapper: "_16jlkb7n _1o9zkb7n _i0dl1osq _1ul9idpf _p12f1osq _bozgu2gc _vwz419ii",
  avatarItemText: "_syaz1fxt _1reo15vq _1bto1l2s _o5721q9c"
};
const ElementAfter = props => {
  const {
    data: {
      data
    }
  } = props;
  if (isTeam(data) && data.verified) {
    return /*#__PURE__*/React.createElement(VerifiedTeamIcon, null);
  }
  return null;
};
export const SingleValue = props => {
  const {
    data: {
      label,
      data
    },
    //@ts-ignore react-select unsupported props
    selectProps: {
      appearance,
      isFocused
    }
  } = props;
  return !isFocused ? /*#__PURE__*/React.createElement(components.SingleValue, props, /*#__PURE__*/React.createElement(Flex, {
    xcss: styles.avatarItem
  }, /*#__PURE__*/React.createElement(SizeableAvatar, {
    src: getAvatarUrl(data),
    appearance: appearance,
    type: isTeam(data) && fg('verified-team-in-user-picker') ? 'team' : 'person'
  }), /*#__PURE__*/React.createElement(Box, {
    xcss: styles.avatarItem
  }, /*#__PURE__*/React.createElement("div", {
    className: ax([styles.avatarItemTextWrapper])
  }, /*#__PURE__*/React.createElement(Box, {
    xcss: styles.avatarItemText
  }, fg('verified-team-in-user-picker') ? /*#__PURE__*/React.createElement(Inline, {
    alignBlock: "center"
  }, label, /*#__PURE__*/React.createElement(ElementAfter, props)) : label))))) : null;
};