/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';
import { type OptionType } from '@atlaskit/select';
import { jsx } from '@emotion/react';
import { type Option, type UserPickerProps } from '../types';
import { type MultiValueProps } from '@atlaskit/select';
export declare const scrollToValue: (valueContainer: HTMLDivElement, control: HTMLElement) => void;
type Props = MultiValueProps<OptionType> & {
    isFocused?: boolean;
    data: Option;
    innerProps: any;
    removeProps: {
        onClick: Function;
    };
    selectProps: UserPickerProps;
    ref?: React.RefObject<HTMLDivElement>;
};
export declare class MultiValue extends React.Component<Props> {
    private containerRef;
    constructor(props: Props);
    componentDidUpdate(): void;
    shouldComponentUpdate(nextProps: Props): boolean;
    getElemBefore: () => jsx.JSX.Element;
    getElemAfter: () => jsx.JSX.Element | null;
    render(): jsx.JSX.Element;
}
export {};
