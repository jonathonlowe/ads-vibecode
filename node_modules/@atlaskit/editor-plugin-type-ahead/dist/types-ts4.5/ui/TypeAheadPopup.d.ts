/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';
import { jsx } from '@emotion/react';
import type { SelectItemMode } from '@atlaskit/editor-common/type-ahead';
import type { ExtractInjectionAPI, TypeAheadHandler, TypeAheadItem } from '@atlaskit/editor-common/types';
import type { DecorationSet, EditorView } from '@atlaskit/editor-prosemirror/view';
import { CloseSelectionOptions } from '../pm-plugins/constants';
import type { TypeAheadPlugin } from '../typeAheadPluginType';
import type { OnSelectItem, TypeAheadErrorInfo } from '../types';
type TypeAheadPopupProps = {
    triggerHandler: TypeAheadHandler;
    editorView: EditorView;
    anchorElement: HTMLElement;
    popupsMountPoint?: HTMLElement;
    popupsBoundariesElement?: HTMLElement;
    popupsScrollableElement?: HTMLElement;
    items: Array<TypeAheadItem>;
    errorInfo: TypeAheadErrorInfo;
    selectedIndex: number;
    setSelectedItem: OnSelectItem;
    decorationSet: DecorationSet;
    isEmptyQuery: boolean;
    onItemInsert: (mode: SelectItemMode, index: number) => void;
    cancel: (params: {
        setSelectionAt: CloseSelectionOptions;
        addPrefixTrigger: boolean;
        forceFocusOnEditor: boolean;
    }) => void;
    api: ExtractInjectionAPI<TypeAheadPlugin> | undefined;
    showViewMore?: boolean;
};
export declare const TypeAheadPopup: React.MemoExoticComponent<(props: TypeAheadPopupProps) => jsx.JSX.Element>;
export {};
