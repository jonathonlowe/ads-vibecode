"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.updateSelectedIndex = void 0;
var _actions = require("../actions");
var _itemIsDisabled = require("../item-is-disabled");
var _key = require("../key");
var updateSelectedIndex = exports.updateSelectedIndex = function updateSelectedIndex(selectedIndex, api) {
  return function (state, dispatch) {
    var pluginState = _key.pluginKey.getState(state);
    if ((pluginState === null || pluginState === void 0 ? void 0 : pluginState.selectedIndex) === selectedIndex) {
      return false;
    }

    // If the new index is disabled ignore this call, we can use the previous index
    if ((0, _itemIsDisabled.itemIsDisabled)(pluginState === null || pluginState === void 0 ? void 0 : pluginState.items[selectedIndex], api)) {
      return false;
    }
    var tr = state.tr;
    tr.setMeta(_key.pluginKey, {
      action: _actions.ACTIONS.UPDATE_SELECTED_INDEX,
      params: {
        selectedIndex: selectedIndex
      }
    });
    if (dispatch) {
      dispatch(tr);
    }
    return true;
  };
};