"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ContentComponent = ContentComponent;
var _react = _interopRequireDefault(require("react"));
var _hooks = require("@atlaskit/editor-common/hooks");
var _typeAhead = require("@atlaskit/editor-common/type-ahead");
var _experiments = require("@atlaskit/tmp-editor-statsig/experiments");
var _TypeAheadMenu = require("./modern/TypeAheadMenu");
var _TypeAheadMenu2 = require("./TypeAheadMenu");
function ContentComponent(_ref) {
  var _typeAheadState$trigg;
  var api = _ref.api,
    editorView = _ref.editorView,
    popupMountRef = _ref.popupMountRef;
  var _useSharedPluginState = (0, _hooks.useSharedPluginState)(api, ['typeAhead']),
    typeAheadState = _useSharedPluginState.typeAheadState;
  if (!typeAheadState) {
    return null;
  }
  if (
  // TODO: ED-26959 - Also requires a check for editor appearance (needs to be enabled for full-page/full-width editor only ?)
  !(0, _experiments.editorExperiment)('platform_editor_insertion', 'control') && ((_typeAheadState$trigg = typeAheadState.triggerHandler) === null || _typeAheadState$trigg === void 0 ? void 0 : _typeAheadState$trigg.id) === _typeAhead.TypeAheadAvailableNodes.QUICK_INSERT) {
    return /*#__PURE__*/_react.default.createElement(_TypeAheadMenu.TypeAheadMenu, {
      editorView: editorView,
      popupMountRef: popupMountRef,
      typeAheadState: typeAheadState,
      api: api
    });
  } else {
    return /*#__PURE__*/_react.default.createElement(_TypeAheadMenu2.TypeAheadMenu, {
      editorView: editorView,
      popupMountRef: popupMountRef,
      typeAheadState: typeAheadState,
      api: api
    });
  }
}