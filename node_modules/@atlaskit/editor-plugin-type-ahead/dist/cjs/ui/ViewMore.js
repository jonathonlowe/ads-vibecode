"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ViewMore = void 0;
var _react = require("react");
var _react2 = require("@emotion/react");
var _reactIntlNext = require("react-intl-next");
var _messages = require("@atlaskit/editor-common/messages");
var _showMoreHorizontalEditorMore = _interopRequireDefault(require("@atlaskit/icon/core/migration/show-more-horizontal--editor-more"));
var _menu = require("@atlaskit/menu");
var _colors = require("@atlaskit/theme/colors");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var buttonStyles = (0, _react2.css)({
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  '& > button:hover': {
    backgroundColor: "var(--ds-background-neutral-subtle-hovered, ".concat(_colors.N30, ")")
  },
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  '& > button:focus': {
    backgroundColor: "var(--ds-background-neutral-subtle-hovered, ".concat(_colors.N30, ")"),
    outline: 'none'
  }
});
var ViewMore = exports.ViewMore = function ViewMore(_ref) {
  var onClick = _ref.onClick,
    isFocused = _ref.isFocused;
  var _useIntl = (0, _reactIntlNext.useIntl)(),
    formatMessage = _useIntl.formatMessage;
  var ref = (0, _react.useRef)(null);
  (0, _react.useEffect)(function () {
    if (isFocused && ref.current) {
      ref.current.focus();
    }
  }, [isFocused]);
  (0, _react.useEffect)(function () {
    if (!ref.current) {
      return;
    }
    var element = ref.current;
    var handleEnter = function handleEnter(e) {
      if (e.key === 'Enter') {
        onClick();
        // Prevent keydown listener in TypeaheadList from handling Enter pressed
        e.stopPropagation();
      } else if (e.key === 'Tab') {
        // TypeaheadList will try to insert selected item on Tab press
        // hence stop propagation to prevent that and treat this as noop
        e.stopPropagation();
        e.preventDefault();
      }
    };

    // Ignored via go/ees005
    // eslint-disable-next-line @repo/internal/dom-events/no-unsafe-event-listeners
    element === null || element === void 0 || element.addEventListener('keydown', handleEnter);
    return function () {
      // Ignored via go/ees005
      // eslint-disable-next-line @repo/internal/dom-events/no-unsafe-event-listeners
      element === null || element === void 0 || element.removeEventListener('keydown', handleEnter);
    };
  });
  return (0, _react2.jsx)(_menu.Section, {
    hasSeparator: true
  }, (0, _react2.jsx)("span", {
    css: buttonStyles
  }, (0, _react2.jsx)(_menu.ButtonItem, {
    ref: ref,
    onClick: onClick,
    iconBefore: (0, _react2.jsx)(_showMoreHorizontalEditorMore.default, {
      label: ""
    }),
    "aria-describedby": formatMessage(_messages.toolbarInsertBlockMessages.viewMore),
    "data-testid": "quick-insert-view-more-elements-item"
  }, formatMessage(_messages.toolbarInsertBlockMessages.viewMore))));
};