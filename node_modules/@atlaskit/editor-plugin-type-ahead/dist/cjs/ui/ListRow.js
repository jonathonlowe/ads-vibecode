"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ListRow = ListRow;
var _react = _interopRequireWildcard(require("react"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function ListRow(_ref) {
  var children = _ref.children,
    registerChild = _ref.registerChild,
    measure = _ref.measure,
    index = _ref.index,
    style = _ref.style,
    isVisible = _ref.isVisible,
    isScrolling = _ref.isScrolling,
    onMouseMove = _ref.onMouseMove;
  var childElementRef = (0, _react.useRef)(null);
  var setListElementRef = function setListElementRef(element) {
    registerChild === null || registerChild === void 0 || registerChild(element !== null && element !== void 0 ? element : undefined);
  };
  (0, _react.useEffect)(function () {
    // Do not measure if the row is not visible or is scrolling for performance reasons.
    if (!childElementRef.current || !isVisible || isScrolling) {
      return;
    }
    var observer = new ResizeObserver(function () {
      return measure();
    });
    observer.observe(childElementRef.current);
    return function () {
      return observer.disconnect();
    };
  }, [isScrolling, isVisible, measure]);
  return (
    /*#__PURE__*/
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop
    _react.default.createElement("div", {
      ref: setListElementRef,
      style: style,
      "data-index": index
    }, /*#__PURE__*/_react.default.createElement("div", {
      ref: childElementRef,
      "data-testid": "list-item-height-observed-".concat(index),
      onMouseMove: onMouseMove
    }, children))
  );
}