/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { useEffect, useRef } from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css, jsx } from '@emotion/react';
import { useIntl } from 'react-intl-next';
import { toolbarInsertBlockMessages as messages } from '@atlaskit/editor-common/messages';
import ShowMoreHorizontalIcon from '@atlaskit/icon/core/migration/show-more-horizontal--editor-more';
import { ButtonItem, Section } from '@atlaskit/menu';
import { N30 } from '@atlaskit/theme/colors';
const buttonStyles = css({
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  '& > button:hover': {
    backgroundColor: `var(--ds-background-neutral-subtle-hovered, ${N30})`
  },
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  '& > button:focus': {
    backgroundColor: `var(--ds-background-neutral-subtle-hovered, ${N30})`,
    outline: 'none'
  }
});
export const ViewMore = ({
  onClick,
  isFocused
}) => {
  const {
    formatMessage
  } = useIntl();
  const ref = useRef(null);
  useEffect(() => {
    if (isFocused && ref.current) {
      ref.current.focus();
    }
  }, [isFocused]);
  useEffect(() => {
    if (!ref.current) {
      return;
    }
    const {
      current: element
    } = ref;
    const handleEnter = e => {
      if (e.key === 'Enter') {
        onClick();
        // Prevent keydown listener in TypeaheadList from handling Enter pressed
        e.stopPropagation();
      } else if (e.key === 'Tab') {
        // TypeaheadList will try to insert selected item on Tab press
        // hence stop propagation to prevent that and treat this as noop
        e.stopPropagation();
        e.preventDefault();
      }
    };

    // Ignored via go/ees005
    // eslint-disable-next-line @repo/internal/dom-events/no-unsafe-event-listeners
    element === null || element === void 0 ? void 0 : element.addEventListener('keydown', handleEnter);
    return () => {
      // Ignored via go/ees005
      // eslint-disable-next-line @repo/internal/dom-events/no-unsafe-event-listeners
      element === null || element === void 0 ? void 0 : element.removeEventListener('keydown', handleEnter);
    };
  });
  return jsx(Section, {
    hasSeparator: true
  }, jsx("span", {
    css: buttonStyles
  }, jsx(ButtonItem, {
    ref: ref,
    onClick: onClick,
    iconBefore: jsx(ShowMoreHorizontalIcon, {
      label: ""
    }),
    "aria-describedby": formatMessage(messages.viewMore),
    "data-testid": "quick-insert-view-more-elements-item"
  }, formatMessage(messages.viewMore))));
};