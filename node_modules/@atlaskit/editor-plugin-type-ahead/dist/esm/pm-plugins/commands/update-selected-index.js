import { ACTIONS } from '../actions';
import { itemIsDisabled } from '../item-is-disabled';
import { pluginKey as typeAheadPluginKey } from '../key';
export var updateSelectedIndex = function updateSelectedIndex(selectedIndex, api) {
  return function (state, dispatch) {
    var pluginState = typeAheadPluginKey.getState(state);
    if ((pluginState === null || pluginState === void 0 ? void 0 : pluginState.selectedIndex) === selectedIndex) {
      return false;
    }

    // If the new index is disabled ignore this call, we can use the previous index
    if (itemIsDisabled(pluginState === null || pluginState === void 0 ? void 0 : pluginState.items[selectedIndex], api)) {
      return false;
    }
    var tr = state.tr;
    tr.setMeta(typeAheadPluginKey, {
      action: ACTIONS.UPDATE_SELECTED_INDEX,
      params: {
        selectedIndex: selectedIndex
      }
    });
    if (dispatch) {
      dispatch(tr);
    }
    return true;
  };
};