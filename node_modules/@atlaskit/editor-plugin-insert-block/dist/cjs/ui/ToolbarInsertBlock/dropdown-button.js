"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DropDownButton = void 0;
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@emotion/react");
var _keymaps = require("@atlaskit/editor-common/keymaps");
var _uiMenu = require("@atlaskit/editor-common/ui-menu");
var _addEditorAdd = _interopRequireDefault(require("@atlaskit/icon/core/migration/add--editor-add"));
var _chevronDown = _interopRequireDefault(require("@atlaskit/icon/utility/migration/chevron-down"));
var _styles = require("./styles");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var DropDownButtonIcon = /*#__PURE__*/_react.default.memo(function (props) {
  return (
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    (0, _react2.jsx)("span", {
      css: _styles.triggerWrapper
    }, (0, _react2.jsx)(_addEditorAdd.default, {
      label: props.label,
      color: "currentColor",
      spacing: "spacious"
    }), (0, _react2.jsx)("span", null, (0, _react2.jsx)(_chevronDown.default, {
      label: "",
      color: "currentColor",
      LEGACY_margin: "0 0 0 -8px"
    })))
  );
});
var DropDownButton = exports.DropDownButton = /*#__PURE__*/_react.default.memo(function (props) {
  return (0, _react2.jsx)(_uiMenu.ToolbarButton, {
    ref: props.handleRef,
    selected: props.selected,
    disabled: props.disabled,
    onClick: props.onClick,
    onKeyDown: props.onKeyDown,
    spacing: props.spacing,
    "aria-expanded": props['aria-expanded'],
    "aria-haspopup": props['aria-haspopup'],
    "aria-keyshortcuts": props['aria-keyshortcuts'],
    "aria-label": "".concat(props.label),
    iconBefore: (0, _react2.jsx)(DropDownButtonIcon, {
      label: ""
    }),
    title: (0, _react2.jsx)(_keymaps.ToolTipContent, {
      description: props.label,
      shortcutOverride: "/"
    })
  });
});