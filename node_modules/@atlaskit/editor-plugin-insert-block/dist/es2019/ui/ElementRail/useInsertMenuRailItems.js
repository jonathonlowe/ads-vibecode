import { useMemo } from 'react';
import { useIntl } from 'react-intl-next';
import { useSharedPluginState } from '@atlaskit/editor-common/hooks';
import { createItems } from '../ToolbarInsertBlock/create-items';
export const useInsertMenuRailItems = (editorView, options, api) => {
  const {
    formatMessage
  } = useIntl();
  const {
    dateState,
    hyperlinkState,
    imageUploadState,
    mentionState,
    emojiState,
    blockTypeState,
    mediaState,
    typeAheadState,
    placeholderTextState
  } = useSharedPluginState(api, ['hyperlink', 'date', 'imageUpload', 'mention', 'emoji', 'blockType', 'media', 'typeAhead', 'placeholderText']);
  const [_, dropdownItems] = useMemo(() => {
    var _ref;
    return createItems({
      isTypeAheadAllowed: Boolean(typeAheadState === null || typeAheadState === void 0 ? void 0 : typeAheadState.isAllowed),
      tableSupported: !!editorView.state.schema.nodes.table,
      tableSelectorSupported: options.tableSelectorSupported && !!editorView.state.schema.nodes.table,
      mediaUploadsEnabled: (_ref = mediaState && mediaState.allowsUploads) !== null && _ref !== void 0 ? _ref : undefined,
      mediaSupported: !!mediaState,
      imageUploadSupported: !!(api !== null && api !== void 0 && api.imageUpload),
      imageUploadEnabled: imageUploadState === null || imageUploadState === void 0 ? void 0 : imageUploadState.enabled,
      mentionsSupported: !!(mentionState && mentionState.mentionProvider),
      mentionsDisabled: !!(mentionState && !mentionState.canInsertMention),
      actionSupported: !!editorView.state.schema.nodes.taskItem,
      decisionSupported: !!editorView.state.schema.nodes.decisionItem,
      linkSupported: !!hyperlinkState,
      linkDisabled: !hyperlinkState || !hyperlinkState.canInsertLink || !!hyperlinkState.activeLinkMark,
      emojiDisabled: !emojiState || !emojiState.emojiProvider,
      nativeStatusSupported: options.nativeStatusSupported,
      dateEnabled: !!dateState,
      placeholderTextEnabled: placeholderTextState && placeholderTextState.allowInserting,
      horizontalRuleEnabled: options.horizontalRuleEnabled,
      layoutSectionEnabled: Boolean(api === null || api === void 0 ? void 0 : api.layout),
      expandEnabled: !!options.allowExpand,
      showElementBrowserLink: options.showElementBrowserLink,
      emojiProvider: emojiState === null || emojiState === void 0 ? void 0 : emojiState.emojiProvider,
      availableWrapperBlockTypes: blockTypeState && blockTypeState.availableWrapperBlockTypes,
      insertMenuItems: options.insertMenuItems,
      schema: editorView.state.schema,
      // numberOfButtons controls what items are returned and eventually display in the insert menu - but it relies on the main toolbar width which
      // is not easily available here. I've used 7 as it's the value used for most widths see toolbarSizeToButtons
      numberOfButtons: 7,
      formatMessage,
      isNewMenuEnabled: true
    });
  }, [api === null || api === void 0 ? void 0 : api.imageUpload, api === null || api === void 0 ? void 0 : api.layout, blockTypeState, dateState, editorView.state.schema, emojiState, formatMessage, hyperlinkState, imageUploadState === null || imageUploadState === void 0 ? void 0 : imageUploadState.enabled, mediaState, mentionState, options.allowExpand, options.horizontalRuleEnabled, options.insertMenuItems, options.nativeStatusSupported, options.showElementBrowserLink, options.tableSelectorSupported, placeholderTextState, typeAheadState === null || typeAheadState === void 0 ? void 0 : typeAheadState.isAllowed]);
  return dropdownItems;
};