/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./index.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { forwardRef, Fragment } from 'react';
import { useIntl } from 'react-intl-next';
import { fg } from '@atlaskit/platform-feature-flags';
import { Text } from '@atlaskit/primitives/compiled';
import { B100, B400, B50, N20, N200, N300, N400, N40A } from '@atlaskit/theme/colors';
/* eslint-disable-next-line @atlassian/tangerine/import/no-parent-imports */
import { transformTimeStamp } from '../../../transformTimeStamp';
export const testIds = {
  searchResultItem: 'link-search-list-item',
  searchResultIcon: 'link-search-list-item-icon'
};
const isSVG = icon => icon.startsWith('<svg') && icon.endsWith('</svg>');
const base64SVG = icon => `data:image/svg+xml;base64,${Buffer.from(icon).toString('base64')}`;
const itemIconStyles = null;
const listItemContextStyles = null;
const listItemContainerStyles = null;
const listItemContainerInnerStyles = null;
const listItemContainerInnerStylesA11yRefresh = null;
const listItemContainerInnerStylesSeparatorLinkPickerRefresh = null;
const itemNameStyles = null;
const imgStyles = null;
const listItemBaseStyles = null;
const ListItemIcon = props => {
  const {
    item,
    intl
  } = props;
  const {
    icon,
    iconAlt
  } = item;
  if (!icon) {
    return null;
  }
  const alt = typeof iconAlt === 'string' ? iconAlt : intl.formatMessage(iconAlt);
  if (typeof icon !== 'string') {
    const Glyph = icon;
    return /*#__PURE__*/React.createElement("span", {
      className: ax(["_1ul9pxbi _19pk1b66 _2hwxutpp"])
    }, /*#__PURE__*/React.createElement(Glyph, {
      alt: alt,
      "data-testid": testIds.searchResultIcon
    }));
  }
  return /*#__PURE__*/React.createElement("span", {
    className: ax(["_1ul9pxbi _19pk1b66 _2hwxutpp"])
  }, /*#__PURE__*/React.createElement("img", {
    "data-testid": testIds.searchResultIcon,
    src: isSVG(icon) ? base64SVG(icon) : icon,
    alt: alt,
    className: ax(["_p12fpxbi"])
  }));
};
const ListItemSubtitle = ({
  items: [firstItem, secondItem]
}) => {
  return /*#__PURE__*/React.createElement("div", {
    "data-testid": `${testIds.searchResultItem}-subtitle`,
    className: ax(["_11c81o8v _syaz14xw _1e0c1txw"])
  }, /*#__PURE__*/React.createElement("div", {
    className: ax(["_1reo15vq _18m915vq _1bto1l2s"])
  }, /*#__PURE__*/React.createElement("span", {
    className: ax([fg('bandicoots-a11y-link-picker-styling') ? "_syaz1a45 _o5721q9c" : "_syaz1wmz _o5721q9c"])
  }, firstItem)), secondItem && /*#__PURE__*/React.createElement("div", {
    className: ax([fg('bandicoots-a11y-link-picker-styling') ? "_syaz1a45 _o5721q9c" : "_syaz1wmz _o5721q9c"])
  }, fg('platform-linking-visual-refresh-link-picker') ? /*#__PURE__*/React.createElement("span", {
    className: ax(["_syazxs3e"])
  }, /*#__PURE__*/React.createElement(Fragment, null, "\xA0 \u2022\xA0 ")) : /*#__PURE__*/React.createElement(Fragment, null, "\xA0 \u2022\xA0 "), /*#__PURE__*/React.createElement(Fragment, null, secondItem)));
};
const getDefaultSubtitleItems = (item, intl) => {
  const container = item.container;
  const date = transformTimeStamp(intl, item.lastViewedDate, item.lastUpdatedDate);
  if (container) {
    if (date) {
      return [container, date];
    }
    return [container];
  }
  if (date) {
    return [date];
  }
  return undefined;
};
const listItemActive = null;
const listItemSelected = null;
const listItemFocusStyles = null;
export const LinkSearchListItem = /*#__PURE__*/forwardRef(({
  item,
  selected,
  id,
  role,
  onSelect,
  tabIndex,
  onKeyDown,
  onFocus,
  nameMaxLines = 1
}, ref) => {
  const intl = useIntl();
  const handleSelect = () => onSelect(item.objectId);
  const subtitleItems = item.subtitleItems || getDefaultSubtitleItems(item, intl);
  return /*#__PURE__*/React.createElement("div", {
    role: role,
    id: id,
    "aria-selected": selected,
    "data-testid": testIds.searchResultItem,
    onKeyDown: onKeyDown,
    onClick: handleSelect,
    onFocus: onFocus,
    tabIndex: tabIndex,
    ref: ref,
    className: ax(["_19pkidpf _2hwxidpf _otyridpf _18u0idpf _1e0c1txw _ca0qu2gc _n3tdu2gc _19bvsy6a _u5f3fxbg _80omtlke", !selected && "_irr31dko _1dbz1l95", selected && "_bfhk29zg _16qs1l95", "_nt751r31 _49pcglyw _1hvw1o36 _1a3b1r31 _4fprglyw _5goinqa1 _7ehi1tx3"])
  }, /*#__PURE__*/React.createElement(ListItemIcon, {
    item: item,
    intl: intl
  }), /*#__PURE__*/React.createElement("div", {
    className: ax(["_1reo15vq _18m915vq _ae4v1h6o _1bsb1osq"])
  }, /*#__PURE__*/React.createElement(Text, {
    maxLines: nameMaxLines
  }, /*#__PURE__*/React.createElement("span", {
    "data-testid": `${testIds.searchResultItem}-title`,
    title: item.name
  }, item.name)), subtitleItems && /*#__PURE__*/React.createElement(ListItemSubtitle, {
    items: subtitleItems
  })));
});