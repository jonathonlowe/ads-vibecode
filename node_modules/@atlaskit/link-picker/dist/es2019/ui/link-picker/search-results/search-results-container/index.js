/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./index.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { useLayoutEffect, useRef } from 'react';
import { fg } from '@atlaskit/platform-feature-flags';
import { MinHeightContainer } from '../../../../common/ui/min-height-container';
const flexColumn = null;
export const SearchResultsContainer = ({
  hasTabs,
  adaptiveHeight,
  isLoadingResults,
  children
}) => {
  const ref = useRef(null);
  const currentHeight = useRef(null);
  const fixedMinHeight = fg('platform-linking-visual-refresh-link-picker') ? hasTabs ? '296px' : '251px' : hasTabs ? '347px' : '302px';
  const adaptiveMinHeight = isLoadingResults && !!currentHeight.current ? `${currentHeight.current}px` : 'auto';
  const minheight = adaptiveHeight ? adaptiveMinHeight : fixedMinHeight;
  useLayoutEffect(() => {
    if (ref.current && adaptiveHeight && !isLoadingResults) {
      currentHeight.current = ref.current.getBoundingClientRect().height;
    }
  });
  return /*#__PURE__*/React.createElement(MinHeightContainer, {
    ref: ref,
    minHeight: minheight,
    className: ax(["_1e0c1txw _2lx21bp4 _1bah1y6m _1bsb1osq"])
  }, children);
};