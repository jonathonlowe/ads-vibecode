import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
import { defineMessages, FormattedMessage, useIntl } from 'react-intl-next';
import { isFedRamp } from '@atlaskit/atlassian-context';
import Button from '@atlaskit/button';
import NewButton from '@atlaskit/button/new';
import Link from '@atlaskit/link';
import { fg } from '@atlaskit/platform-feature-flags';
import { GenericErrorSVG } from '../../../../common/generic-error-svg';
import { GenericErrorSVGV2 } from '../../../../common/generic-error-svg-v2';
import { EmptyState } from '../../../../common/ui/empty-state';
export const CONTACT_SUPPORT_LINK = 'https://support.atlassian.com/contact/';
export const CONTACT_SUPPORT_LINK_FEDRAMP = 'https://gcs.atlassian-us-gov-mod.net/servicedesk/customer/portals';
export const messages = defineMessages({
  searchErrorHeader: {
    id: 'fabric.linkPicker.search.error.heading',
    defaultMessage: 'Weâ€™re having trouble loading data.',
    description: 'Heading message shown when a search throws an error'
  },
  searchErrorDescription: {
    id: 'fabric.linkPicker.search.error.description',
    defaultMessage: 'Refresh the page, or contact <a>Atlassian Support</a> if this keeps happening.',
    description: 'Describes possible actions when search throws an error'
  },
  searchErrorAction: {
    id: 'fabric.linkPicker.search.error.retry',
    defaultMessage: 'Refresh',
    description: 'Describe the action user can take to retry the search'
  }
});
export const testIds = {
  searchError: 'link-search-error'
};
export const LinkSearchError = ({
  onRetry
}) => {
  const intl = useIntl();
  const ButtonComponent = fg('platform-link-picker-remove-legacy-button') ? NewButton : Button;
  return /*#__PURE__*/React.createElement(EmptyState, {
    testId: testIds.searchError,
    header: intl.formatMessage(messages.searchErrorHeader),
    description: /*#__PURE__*/React.createElement(FormattedMessage, _extends({}, messages.searchErrorDescription, {
      values: {
        a: label => fg('platform-link-picker-remove-legacy-button') ? /*#__PURE__*/React.createElement(Link, {
          href: isFedRamp() ? CONTACT_SUPPORT_LINK_FEDRAMP : CONTACT_SUPPORT_LINK,
          target: "_blank",
          rel: "noopener noreferrer"
        }, label) : /*#__PURE__*/React.createElement(Button, {
          appearance: "link",
          spacing: "none",
          href: isFedRamp() ? CONTACT_SUPPORT_LINK_FEDRAMP : CONTACT_SUPPORT_LINK,
          target: "_blank",
          rel: "noopener noreferrer"
        }, label)
      }
    })),
    action: onRetry && fg('platform-linking-visual-refresh-link-picker') ? /*#__PURE__*/React.createElement(ButtonComponent, {
      appearance: "primary",
      onClick: onRetry
    }, /*#__PURE__*/React.createElement(FormattedMessage, messages.searchErrorAction)) : null,
    renderImage: fg('platform-linking-visual-refresh-link-picker') ? () => /*#__PURE__*/React.createElement(GenericErrorSVGV2, null) : () => /*#__PURE__*/React.createElement(GenericErrorSVG, null)
  });
};