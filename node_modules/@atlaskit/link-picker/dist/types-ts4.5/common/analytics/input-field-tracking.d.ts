import React from 'react';
import { type LinkPickerAnalyticsContextType } from '../../common/utils/analytics/analytics.codegen';
type InputFields = 'link' | 'displayText';
/**
 * Wraps an input field and connects it to the link picker analytics context to provide a baseline of analytics tracking
 * @param WrappedComponent The input field to be tracked
 * @param field The name of the field (ie matching actionSubjectId)
 * @param filterOnChangeEventAttrs Function to hook into and filter/customise the default attribute tracking logic
 * @returns HOC Input field with tracking
 */
export declare const withInputFieldTracking: <P extends {
    onBlur?: ((e: React.FocusEvent<HTMLInputElement>) => void) | undefined;
    onChange?: ((e: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
    onClear?: Function | undefined;
    onFocus?: ((e: React.FocusEvent<HTMLInputElement>) => void) | undefined;
}, Field extends InputFields>(WrappedComponent: React.ComponentType<P>, field: Field, filterOnChangeEventAttrs?: <OnChangeAttributes extends Partial<LinkPickerAnalyticsContextType>>(event: React.ChangeEvent<HTMLInputElement>, attributes: OnChangeAttributes) => OnChangeAttributes) => React.ComponentType<P>;
export {};
