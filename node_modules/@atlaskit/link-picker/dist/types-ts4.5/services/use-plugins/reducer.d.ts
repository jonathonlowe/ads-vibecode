/// <reference types="react" />
import { type LinkSearchListItemData } from '../../common/types';
export interface PluginState {
    items: LinkSearchListItemData[] | null;
    error: unknown | null;
    isLoading: boolean;
}
export declare const ACTION_CLEAR = "CLEAR";
export declare const ACTION_LOADING = "LOADING";
export declare const ACTION_SUCCESS = "SUCCESS";
export declare const ACTION_ERRORED = "ERROR";
interface ClearAction {
    type: typeof ACTION_CLEAR;
}
interface ResolveLoadingAction {
    type: typeof ACTION_LOADING;
}
interface ResolveSuccessAction {
    type: typeof ACTION_SUCCESS;
    payload: Pick<PluginState, 'items' | 'isLoading'>;
}
interface ResolveErrorAction {
    type: typeof ACTION_ERRORED;
    payload: PluginState['error'];
}
export type ReducerAction = ClearAction | ResolveLoadingAction | ResolveSuccessAction | ResolveErrorAction;
export declare const INITIAL_STATE: PluginState;
export declare function reducer(state: PluginState, action: ReducerAction): PluginState;
export declare const usePluginReducer: () => [
    PluginState,
    import("react").Dispatch<ReducerAction>
];
export {};
