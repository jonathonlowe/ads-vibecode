import { type LinkPickerPlugin, type LinkPickerState, type ResolveResult } from '../../common/types';
export declare class CancellationError extends Error {
}
export declare const cancellable: <T extends unknown>(promise: Promise<T>) => {
    promise: Promise<T>;
    cancel: () => void;
};
/**
 * Wraps the resolve with a cancellation wrapper and makes promise + generator plugin resolves more compatible
 * Calling cancel for generator plugin prevents it from yielding any further updates
 */
export declare const resolvePluginUpdates: (plugin: LinkPickerPlugin, state: LinkPickerState) => {
    cancel: () => void;
    next: () => Promise<{
        done?: boolean;
        value: ResolveResult;
    }>;
};
