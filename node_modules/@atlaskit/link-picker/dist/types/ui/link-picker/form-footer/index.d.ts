/// <reference types="react" />
import { type MessageDescriptor } from 'react-intl-next';
import { type LinkPickerPluginAction, type LinkPickerState, type LinkSearchListItemData } from '../../../common/types';
export declare const messages: {
    cancelButton: {
        id: string;
        defaultMessage: string;
        description: string;
    };
    submittingStatusMessage: {
        id: string;
        defaultMessage: string;
        description: string;
    };
};
export declare const testIds: {
    readonly insertButton: "link-picker-insert-button";
    readonly cancelButton: "link-picker-cancel-button";
    readonly actionButton: "link-picker-action-button";
    readonly submitStatusA11yIndicator: "link-picker-submit-status-a11y-indicator";
};
interface FormFooterProps extends React.HTMLAttributes<HTMLElement> {
    /** If the results section appears to be loading, impact whether the submit button is disabled */
    isLoading: boolean;
    /** Controls showing a "submission in-progres" UX */
    isSubmitting?: boolean;
    error: unknown | null;
    url: string;
    queryState: LinkPickerState | null;
    items: LinkSearchListItemData[] | null;
    isEditing?: boolean;
    onCancel?: () => void;
    action?: LinkPickerPluginAction;
    customSubmitButtonLabel?: MessageDescriptor;
    submitMessageId?: string;
    hideSubmitButton?: boolean;
}
export declare const FormFooter: import("react").MemoExoticComponent<({ isLoading, isSubmitting, error, url, queryState, items, isEditing, onCancel, action, customSubmitButtonLabel, submitMessageId, hideSubmitButton, className, ...restProps }: FormFooterProps) => JSX.Element | null>;
export {};
