import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
import React, { Component } from 'react';
// eslint-disable-next-line @repo/internal/react/no-class-components
export var BaseErrorBoundary = /*#__PURE__*/function (_Component) {
  function BaseErrorBoundary(props) {
    var _this;
    _classCallCheck(this, BaseErrorBoundary);
    _this = _callSuper(this, BaseErrorBoundary, [props]);
    _this.state = {
      hasError: false
    };
    return _this;
  }
  _inherits(BaseErrorBoundary, _Component);
  return _createClass(BaseErrorBoundary, [{
    key: "componentDidCatch",
    value: function componentDidCatch(error, info) {
      var onError = this.props.onError;
      onError && onError(error, info);
      this.setState({
        hasError: true
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
        children = _this$props.children,
        ErrorComponent = _this$props.ErrorComponent;
      var hasError = this.state.hasError;
      if (hasError && ErrorComponent) {
        return /*#__PURE__*/React.createElement(ErrorComponent, null);
      }
      return children;
    }
  }]);
}(Component);