/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./index.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import Heading from '@atlaskit/heading';
import { fg } from '@atlaskit/platform-feature-flags';
import { Flex, Text } from '@atlaskit/primitives/compiled';
var styles = {
  container: "_1pfhoahv _6rthoahv _y3gn1h6o",
  containerV2: "_ca0q1ejb _u5f3oahv _19bvoahv _n3td1jfw _y3gn1h6o"
};
export var EmptyState = function EmptyState(_ref) {
  var testId = _ref.testId,
    header = _ref.header,
    description = _ref.description,
    action = _ref.action,
    renderImage = _ref.renderImage;
  if (fg('platform-linking-visual-refresh-link-picker')) {
    return /*#__PURE__*/React.createElement(Flex, {
      xcss: styles.containerV2,
      testId: testId,
      direction: "column",
      alignItems: "center",
      gap: "space.200"
    }, renderImage === null || renderImage === void 0 ? void 0 : renderImage(), /*#__PURE__*/React.createElement(Heading, {
      size: "small",
      as: "h2"
    }, header), description && /*#__PURE__*/React.createElement(Text, {
      as: "p",
      color: "color.text"
    }, description), action && action);
  }
  return /*#__PURE__*/React.createElement(Flex, {
    xcss: styles.container,
    testId: testId,
    direction: "column",
    alignItems: "center",
    gap: "space.300"
  }, renderImage === null || renderImage === void 0 ? void 0 : renderImage(), /*#__PURE__*/React.createElement(Flex, {
    direction: "column",
    alignItems: "center",
    gap: "space.200"
  }, /*#__PURE__*/React.createElement(Heading, {
    size: "medium",
    as: "h2"
  }, header), description && /*#__PURE__*/React.createElement(Text, {
    as: "p",
    color: "color.text"
  }, description)));
};