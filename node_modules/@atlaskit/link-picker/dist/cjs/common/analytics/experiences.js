"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ufoExperience = exports.succeedUfoExperience = exports.startUfoExperience = exports.failUfoExperience = exports.abortUfoExperience = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _ufo = require("@atlaskit/ufo");
var ufoExperience = exports.ufoExperience = {
  mounted: 'component-mounted'
};
var ufoExperiences = (0, _defineProperty2.default)({}, ufoExperience.mounted, new _ufo.ConcurrentExperience(ufoExperience.mounted, {
  type: _ufo.ExperienceTypes.Load,
  performanceType: _ufo.ExperiencePerformanceTypes.PageSegmentLoad,
  platform: {
    component: 'link-picker'
  }
}));
var startUfoExperience = exports.startUfoExperience = function startUfoExperience(experienceName, id, metadata) {
  var experience = ufoExperiences[experienceName].getInstance(id);
  experience.start();
  if (metadata) {
    experience.addMetadata(metadata);
  }
};
var succeedUfoExperience = exports.succeedUfoExperience = function succeedUfoExperience(experienceName, id, metadata) {
  var experience = ufoExperiences[experienceName].getInstance(id);
  experience.success({
    metadata: metadata
  });
};
var failUfoExperience = exports.failUfoExperience = function failUfoExperience(experienceName, id, metadata) {
  var experience = ufoExperiences[experienceName].getInstance(id);
  experience.failure({
    metadata: metadata
  });
};
var abortUfoExperience = exports.abortUfoExperience = function abortUfoExperience(experienceName, id, metadata) {
  var experience = ufoExperiences[experienceName].getInstance(id);
  experience.abort({
    metadata: metadata
  });
};