"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.usePlugins = usePlugins;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _analyticsNext = require("@atlaskit/analytics-next");
var _convertToError = require("@atlaskit/frontend-utilities/convert-to-error");
var _analytics = require("../../common/analytics");
var _constants = require("../../common/constants");
var _analytics2 = _interopRequireDefault(require("../../common/utils/analytics/analytics.codegen"));
var _reducer = require("./reducer");
var _utils = require("./utils");
function usePlugins(state, activeTab, plugins) {
  var _activePlugin$tabKey;
  var _useAnalyticsEvents = (0, _analyticsNext.useAnalyticsEvents)(),
    createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;
  var _useState = (0, _react.useState)(0),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    retries = _useState2[0],
    setRetries = _useState2[1];
  var _usePluginReducer = (0, _reducer.usePluginReducer)(),
    _usePluginReducer2 = (0, _slicedToArray2.default)(_usePluginReducer, 2),
    pluginState = _usePluginReducer2[0],
    dispatch = _usePluginReducer2[1];
  var _useLinkPickerAnalyti = (0, _analytics.useLinkPickerAnalytics)(),
    trackAttribute = _useLinkPickerAnalyti.trackAttribute;
  var activePlugin = plugins === null || plugins === void 0 ? void 0 : plugins[activeTab];
  trackAttribute('tab', (_activePlugin$tabKey = activePlugin === null || activePlugin === void 0 ? void 0 : activePlugin.tabKey) !== null && _activePlugin$tabKey !== void 0 ? _activePlugin$tabKey : null);

  // This useEffect block must be called before any other to ensure onActivation is fired at before resolve
  (0, _react.useEffect)(function () {
    if (activePlugin && activePlugin.UNSAFE_onActivation) {
      activePlugin.UNSAFE_onActivation();
    }
  }, [activePlugin]);
  (0, _react.useEffect)(function () {
    if (!activePlugin) {
      return;
    }
    if (!state) {
      dispatch({
        type: 'CLEAR'
      });
      return;
    }
    dispatch({
      type: 'LOADING'
    });
    var _resolvePluginUpdates = (0, _utils.resolvePluginUpdates)(activePlugin, state),
      next = _resolvePluginUpdates.next,
      cancel = _resolvePluginUpdates.cancel;
    var updateResults = /*#__PURE__*/function () {
      var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
        var _isLoading, _yield$next, value, done;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              _isLoading = true;
            case 2:
              if (!_isLoading) {
                _context.next = 12;
                break;
              }
              _context.next = 5;
              return next();
            case 5:
              _yield$next = _context.sent;
              value = _yield$next.value;
              done = _yield$next.done;
              _isLoading = !done;
              dispatch({
                type: 'SUCCESS',
                payload: {
                  items: limit(value.data),
                  isLoading: !done
                }
              });
              _context.next = 2;
              break;
            case 12:
              _context.next = 17;
              break;
            case 14:
              _context.prev = 14;
              _context.t0 = _context["catch"](0);
              if (!(_context.t0 instanceof _utils.CancellationError)) {
                dispatch({
                  type: 'ERROR',
                  payload: _context.t0
                });
                createAnalyticsEvent((0, _analytics2.default)('operational.resultsResolve.failed', {
                  error: (0, _convertToError.convertToError)(_context.t0).toString()
                })).fire(_constants.ANALYTICS_CHANNEL);
              }
            case 17:
            case "end":
              return _context.stop();
          }
        }, _callee, null, [[0, 14]]);
      }));
      return function updateResults() {
        return _ref.apply(this, arguments);
      };
    }();
    updateResults();
    return cancel;
  }, [activePlugin, state, retries, createAnalyticsEvent, dispatch]);
  var tabs = (0, _react.useMemo)(function () {
    if (!plugins || plugins.length <= 1) {
      return [];
    }
    return plugins.filter(function (plugin) {
      return !!plugin.tabTitle;
    }).map(function (plugin) {
      return {
        tabTitle: plugin.tabTitle
      };
    });
  }, [plugins]);
  var handleRetry = (0, _react.useCallback)(function () {
    setRetries(function (prev) {
      return ++prev;
    });
  }, []);
  var items = pluginState.items,
    isLoading = pluginState.isLoading,
    error = pluginState.error;
  return {
    tabs: tabs,
    items: items,
    isLoading: isLoading,
    activePlugin: activePlugin,
    isActivePlugin: !!activePlugin,
    error: error,
    retry: handleRetry,
    errorFallback: activePlugin === null || activePlugin === void 0 ? void 0 : activePlugin.errorFallback,
    pluginAction: activePlugin === null || activePlugin === void 0 ? void 0 : activePlugin.action
  };
}
function limit(items) {
  return items.slice(0, _constants.RECENT_SEARCH_LIST_SIZE);
}