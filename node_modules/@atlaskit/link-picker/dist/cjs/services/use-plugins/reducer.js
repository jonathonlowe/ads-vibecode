"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.INITIAL_STATE = exports.ACTION_SUCCESS = exports.ACTION_LOADING = exports.ACTION_ERRORED = exports.ACTION_CLEAR = void 0;
exports.reducer = reducer;
exports.usePluginReducer = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = require("react");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var ACTION_CLEAR = exports.ACTION_CLEAR = 'CLEAR';
var ACTION_LOADING = exports.ACTION_LOADING = 'LOADING';
var ACTION_SUCCESS = exports.ACTION_SUCCESS = 'SUCCESS';
var ACTION_ERRORED = exports.ACTION_ERRORED = 'ERROR';
var INITIAL_STATE = exports.INITIAL_STATE = {
  items: null,
  error: null,
  isLoading: false
};
function reducer(state, action) {
  switch (action.type) {
    case ACTION_CLEAR:
      return _objectSpread({}, INITIAL_STATE);
    case ACTION_LOADING:
      return _objectSpread(_objectSpread({}, INITIAL_STATE), {}, {
        isLoading: true
      });
    case ACTION_SUCCESS:
      return _objectSpread(_objectSpread(_objectSpread({}, state), action.payload), {}, {
        error: null
      });
    case ACTION_ERRORED:
      return _objectSpread(_objectSpread({}, INITIAL_STATE), {}, {
        error: action.payload
      });
    default:
      return state;
  }
}
var usePluginReducer = exports.usePluginReducer = function usePluginReducer() {
  return (0, _react.useReducer)(reducer, INITIAL_STATE);
};