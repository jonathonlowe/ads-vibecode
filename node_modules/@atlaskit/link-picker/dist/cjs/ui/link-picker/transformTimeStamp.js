"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transformTimeStamp = void 0;
var _isYesterday = _interopRequireDefault(require("date-fns/isYesterday"));
var _date = require("../../common/utils/date");
var _dateUtils = require("../../common/utils/dateUtils");
var _messages = require("./messages");
var formatTime = function formatTime(timeStamp, intl) {
  var isAbsolute = (0, _date.isMoreThanOneWeekAgo)(timeStamp);
  if (isAbsolute) {
    return intl.formatDate(timeStamp, {
      month: 'long',
      day: 'numeric',
      year: 'numeric'
    });
  }
  var _selectUnit = (0, _dateUtils.selectUnit)(timeStamp, new Date(), {
      day: 7 // treat a week as 7 days (default is 5)
    }),
    value = _selectUnit.value,
    unit = _selectUnit.unit;
  //formats as 'yesterday' instead of '1 day ago'
  if ((0, _isYesterday.default)(timeStamp)) {
    return intl.formatRelativeTime(value, unit, {
      numeric: 'auto'
    });
  }
  return intl.formatRelativeTime(value, unit);
};
var renderAbsoluteOrRelativeDate = function renderAbsoluteOrRelativeDate(timeStamp, pageAction, intl) {
  return intl.formatMessage(_messages.timeMessages[pageAction], {
    time: formatTime(timeStamp, intl)
  });
};
var transformTimeStamp = exports.transformTimeStamp = function transformTimeStamp(intl, lastViewedDate, lastUpdatedDate) {
  if (lastViewedDate) {
    return renderAbsoluteOrRelativeDate(lastViewedDate, 'viewed', intl);
  }
  if (lastUpdatedDate) {
    return renderAbsoluteOrRelativeDate(lastUpdatedDate, 'updated', intl);
  }
};