"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TrackMount = TrackMount;
var _react = require("react");
var _analyticsNext = require("@atlaskit/analytics-next");
var _experiences = require("../../../common/analytics/experiences");
var _constants = require("../../../common/constants");
var _analytics = _interopRequireDefault(require("../../../common/utils/analytics/analytics.codegen"));
var _sessionProvider = require("../../../controllers/session-provider");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

/**
 * UFO + Analytics tracking for component mount (and unmount)
 */
function TrackMount() {
  var _useAnalyticsEvents = (0, _analyticsNext.useAnalyticsEvents)(),
    createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;
  var linkPickerSessionId = (0, _sessionProvider.useLinkPickerSessionId)();
  (0, _react.useLayoutEffect)(function () {
    (0, _experiences.succeedUfoExperience)(_experiences.ufoExperience.mounted, linkPickerSessionId);
  }, [linkPickerSessionId]);
  (0, _react.useLayoutEffect)(function () {
    // Anything in here is fired on component mount.
    createAnalyticsEvent((0, _analytics.default)('ui.inlineDialog.viewed.linkPicker', {})).fire(_constants.ANALYTICS_CHANNEL);
    return function () {
      // Anything in here is fired on component unmount.
      createAnalyticsEvent((0, _analytics.default)('ui.inlineDialog.closed.linkPicker', {})).fire(_constants.ANALYTICS_CHANNEL);
    };
  }, [createAnalyticsEvent]);
  return null;
}