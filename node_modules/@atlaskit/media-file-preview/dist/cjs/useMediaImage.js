"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useMediaImage = void 0;
var _react = require("react");
var _useFilePreview2 = require("./useFilePreview");
var useMediaImage = exports.useMediaImage = function useMediaImage(_ref) {
  var identifier = _ref.identifier,
    resizeMode = _ref.resizeMode,
    dimensions = _ref.dimensions,
    ssr = _ref.ssr,
    mediaBlobUrlAttrs = _ref.mediaBlobUrlAttrs,
    traceContext = _ref.traceContext,
    skipRemote = _ref.skipRemote,
    allowAnimated = _ref.allowAnimated,
    upscale = _ref.upscale,
    maxAge = _ref.maxAge,
    onLoadCallback = _ref.onLoad,
    onErrorCallback = _ref.onError;
  var _useFilePreview = (0, _useFilePreview2.useFilePreview)({
      identifier: identifier,
      resizeMode: resizeMode,
      dimensions: dimensions,
      ssr: ssr,
      mediaBlobUrlAttrs: mediaBlobUrlAttrs,
      traceContext: traceContext,
      skipRemote: skipRemote,
      allowAnimated: allowAnimated,
      upscale: upscale,
      maxAge: maxAge
    }),
    preview = _useFilePreview.preview,
    status = _useFilePreview.status,
    error = _useFilePreview.error,
    onImageError = _useFilePreview.onImageError,
    onImageLoad = _useFilePreview.onImageLoad,
    getSsrScriptProps = _useFilePreview.getSsrScriptProps;
  var onLoad = (0, _react.useCallback)(function () {
    onLoadCallback && onLoadCallback();
    onImageLoad(preview);
  }, [onImageLoad, onLoadCallback, preview]);
  var onError = (0, _react.useCallback)(function () {
    onErrorCallback && onErrorCallback();
    onImageError(preview);
  }, [onErrorCallback, onImageError, preview]);
  var getImgProps = (0, _react.useCallback)(function () {
    return {
      src: preview === null || preview === void 0 ? void 0 : preview.dataURI,
      onLoad: onLoad,
      onError: onError,
      'data-test-file-id': identifier.id,
      'data-test-collection': identifier.collectionName,
      'data-test-preview-source': preview === null || preview === void 0 ? void 0 : preview.source
    };
  }, [identifier.collectionName, identifier.id, onError, onLoad, preview === null || preview === void 0 ? void 0 : preview.dataURI, preview === null || preview === void 0 ? void 0 : preview.source]);
  return {
    status: status,
    error: error,
    getImgProps: getImgProps,
    getSsrScriptProps: getSsrScriptProps
  };
};