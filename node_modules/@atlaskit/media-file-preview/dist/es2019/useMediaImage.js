import { useCallback } from 'react';
import { useFilePreview } from './useFilePreview';
export const useMediaImage = ({
  identifier,
  resizeMode,
  dimensions,
  ssr,
  mediaBlobUrlAttrs,
  traceContext,
  skipRemote,
  allowAnimated,
  upscale,
  maxAge,
  onLoad: onLoadCallback,
  onError: onErrorCallback
}) => {
  const {
    preview,
    status,
    error,
    onImageError,
    onImageLoad,
    getSsrScriptProps
  } = useFilePreview({
    identifier,
    resizeMode,
    dimensions,
    ssr,
    mediaBlobUrlAttrs,
    traceContext,
    skipRemote,
    allowAnimated,
    upscale,
    maxAge
  });
  const onLoad = useCallback(() => {
    onLoadCallback && onLoadCallback();
    onImageLoad(preview);
  }, [onImageLoad, onLoadCallback, preview]);
  const onError = useCallback(() => {
    onErrorCallback && onErrorCallback();
    onImageError(preview);
  }, [onErrorCallback, onImageError, preview]);
  const getImgProps = useCallback(() => ({
    src: preview === null || preview === void 0 ? void 0 : preview.dataURI,
    onLoad,
    onError,
    'data-test-file-id': identifier.id,
    'data-test-collection': identifier.collectionName,
    'data-test-preview-source': preview === null || preview === void 0 ? void 0 : preview.source
  }), [identifier.collectionName, identifier.id, onError, onLoad, preview === null || preview === void 0 ? void 0 : preview.dataURI, preview === null || preview === void 0 ? void 0 : preview.source]);
  return {
    status,
    error,
    getImgProps,
    getSsrScriptProps
  };
};