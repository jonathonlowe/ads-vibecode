import { type MutableRefObject } from 'react';
import { type MediaFilePreviewDimensions } from './types';
/**
 * Checks if at least one of next dimensions is bigger than current
 * If a single dimension is undefined, returns false
 */
export declare const isBigger: (current?: MediaFilePreviewDimensions, next?: MediaFilePreviewDimensions) => boolean;
export declare const createRequestDimensions: (dimensions: Partial<MediaFilePreviewDimensions>) => Partial<MediaFilePreviewDimensions> | undefined;
/** Stores the provided value in a ref object to avoid "component rerenders" when the value is used as a hook dependency */
export declare function useCurrentValueRef<T>(value: T): MutableRefObject<T>;
