import { type FilePreview, type MediaBlobUrlAttrs, type MediaClient, type MediaStoreGetFileImageParams } from '@atlaskit/media-client';
import { type MediaTraceContext, type SSR } from '@atlaskit/media-common';
import { type MediaFilePreview, type MediaFilePreviewDimensions } from '../types';
export declare const getSSRPreview: (ssr: SSR, mediaClient: MediaClient, id: string, params: MediaStoreGetFileImageParams, mediaBlobUrlAttrs?: MediaBlobUrlAttrs) => MediaFilePreview;
export declare const isLocalPreview: (preview: MediaFilePreview) => boolean;
export declare const isRemotePreview: (preview: MediaFilePreview) => boolean;
export declare const isSSRClientPreview: (preview: MediaFilePreview) => boolean;
export declare const isSSRDataPreview: (preview: MediaFilePreview) => boolean;
export declare const isSSRPreview: (preview: MediaFilePreview) => boolean;
export declare const getAndCacheRemotePreview: (mediaClient: MediaClient, id: string, dimensions: MediaFilePreviewDimensions, params: MediaStoreGetFileImageParams, mediaBlobUrlAttrs?: MediaBlobUrlAttrs, traceContext?: MediaTraceContext) => Promise<MediaFilePreview>;
export declare const getAndCacheLocalPreview: (id: string, filePreview: FilePreview | Promise<FilePreview>, dimensions: MediaFilePreviewDimensions, mode: MediaStoreGetFileImageParams['mode'], mediaBlobUrlAttrs?: MediaBlobUrlAttrs) => Promise<MediaFilePreview>;
