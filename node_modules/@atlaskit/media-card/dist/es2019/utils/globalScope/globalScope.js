import { printFunctionCall, printScript } from '../printScript';
// ----- WARNING -----
// This is a very sensitive fraction of code.
// Any changes to this file must be tested directly in product before merging.
// The scripts printed here might differ from what we observe in our internal tests
// due to minimification, for example.

export const GLOBAL_MEDIA_CARD_SSR = 'mediaCardSsr';
export const GLOBAL_MEDIA_NAMESPACE = '__MEDIA_INTERNAL';
export function getMediaGlobalScope(globalScope = window) {
  // Must match GLOBAL_MEDIA_NAMESPACE. Can't reference the constant from here.
  const namespace = '__MEDIA_INTERNAL';
  if (!globalScope[namespace]) {
    globalScope[namespace] = {};
  }
  return globalScope[namespace];
}
export function getMediaCardSSR(globalScope = window) {
  const globalMedia = getMediaGlobalScope(globalScope);
  // Must match GLOBAL_MEDIA_CARD_SSR. Can't reference the constant from here.
  const key = 'mediaCardSsr';
  if (!globalMedia[key]) {
    globalMedia[key] = {};
  }
  return globalMedia[key];
}
const dashed = param => param ? `-${param}` : '';
export const getKey = ({
  id,
  collectionName,
  occurrenceKey
}) => `${id}${dashed(collectionName)}${dashed(occurrenceKey)}`;
export const storeDataURI = (key, dataURI, dimensions, error, globalScope = window) => {
  const mediaCardSsr = getMediaCardSSR(globalScope);
  mediaCardSsr[key] = {
    dataURI,
    dimensions,
    error
  };
};
const generateScript = (identifier, dataURI, dimensions, error) => {
  const functionCall = printFunctionCall(storeDataURI, getKey(identifier), dataURI, dimensions, error);
  return printScript([getMediaCardSSR.toString(), getMediaGlobalScope.toString(), functionCall]);
};
export const generateScriptProps = (identifier, dataURI, dimensions, error) => ({
  dangerouslySetInnerHTML: {
    __html: generateScript(identifier, dataURI, dimensions, error)
  }
});