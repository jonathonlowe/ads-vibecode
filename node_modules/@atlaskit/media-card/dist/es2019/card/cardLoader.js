import _extends from "@babel/runtime/helpers/extends";
import React, { useContext } from 'react';
import Loadable from 'react-loadable';
import { CardLoading } from '../utils/lightCards/cardLoading';
import UFOSegment from '@atlaskit/react-ufo/segment';
const MediaCardContext = /*#__PURE__*/React.createContext({});
const CardLoadingWithContext = () => {
  const props = useContext(MediaCardContext);
  return /*#__PURE__*/React.createElement(CardLoading, _extends({}, props, {
    interactionName: "media-card-async-loading"
  }));
};
const MediaCardWithMediaClientProvider = Loadable({
  loader: () => import( /* webpackChunkName: "@atlaskit-internal_media-card-with-media-client" */'./cardWithMediaClient').then(mod => mod.CardWithMediaClient),
  loading: () => /*#__PURE__*/React.createElement(CardLoadingWithContext, null)
});
const CardLoader = props => {
  return /*#__PURE__*/React.createElement(UFOSegment, {
    name: "media-card",
    mode: "list"
  }, /*#__PURE__*/React.createElement(MediaCardContext.Provider, {
    value: props
  }, /*#__PURE__*/React.createElement(MediaCardWithMediaClientProvider, props)));
};
CardLoader.preload = () => MediaCardWithMediaClientProvider.preload();
export default CardLoader;