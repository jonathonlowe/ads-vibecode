import React from 'react';
import { useAnalyticsEvents } from '@atlaskit/analytics-next';
import { CardActionButton } from './cardActionButton';
import Tooltip from '@atlaskit/tooltip';
import { fireMediaCardEvent } from '../../../../utils/analytics';
export const CardActionIconButton = ({
  icon,
  label,
  filename,
  triggerColor,
  onClick,
  isPrimary,
  variant,
  isDisabled,
  tooltip
}) => {
  const {
    createAnalyticsEvent
  } = useAnalyticsEvents();

  // this is to prevent currently focused text to loose cursor on clicking card action
  // this does not prevent onclick behavior
  const onMouseDown = event => {
    event.preventDefault();
  };
  const handleClick = e => {
    const actionSubjectId = isPrimary ? 'mediaCardPrimaryActionButton' : 'mediaCardSecondaryActionButton';
    fireMediaCardEvent({
      eventType: 'ui',
      action: 'clicked',
      actionSubject: 'button',
      actionSubjectId,
      attributes: {
        label
      }
    }, createAnalyticsEvent);
    onClick === null || onClick === void 0 ? void 0 : onClick(e);
  };
  const cardActionButton = /*#__PURE__*/React.createElement(CardActionButton, {
    onClick: handleClick,
    onMouseDown: onMouseDown
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    ,
    style: {
      color: triggerColor
    },
    label: filename ? `${filename} â€” ${label}` : label,
    variant: variant,
    disabled: isDisabled
  }, icon);
  return tooltip ? /*#__PURE__*/React.createElement(Tooltip, {
    content: tooltip,
    position: "bottom",
    tag: "span"
  }, cardActionButton) : cardActionButton;
};