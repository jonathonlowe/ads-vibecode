import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
import { useAnalyticsEvents } from '@atlaskit/analytics-next';
import MoreIcon from '@atlaskit/icon/core/migration/show-more-horizontal--more';
import DropdownMenu, { DropdownItemGroup, DropdownItem } from '@atlaskit/dropdown-menu';
import { withAnalyticsEvents } from '@atlaskit/analytics-next';
import { createAndFireMediaCardEvent, fireMediaCardEvent } from '../../../../utils/analytics';
import { CardActionButton } from './cardActionButton';
// Trick applied due to the lack of props type of DropdownItem
const DropdownItemWithProps = props => /*#__PURE__*/React.createElement(DropdownItem, _extends({
  testId: "media-card-actions-menu-item"
}, props));
const createDropdownItemWithAnalytics = (action, index) => {
  const {
    label,
    handler,
    isDisabled
  } = action;
  const DropdownItemWithAnalytics = withAnalyticsEvents({
    onClick: createAndFireMediaCardEvent({
      eventType: 'ui',
      action: 'clicked',
      actionSubject: 'button',
      actionSubjectId: 'mediaCardDropDownMenuItem',
      attributes: {
        label
      }
    })
  })(DropdownItemWithProps);
  return /*#__PURE__*/React.createElement(DropdownItemWithAnalytics, {
    key: index,
    onClick: () => handler(),
    isDisabled: isDisabled
  }, label);
};
export const CardActionsDropdownMenu = ({
  actions,
  triggerColor,
  onOpenChange,
  triggerVariant
}) => {
  const {
    createAnalyticsEvent
  } = useAnalyticsEvents();
  if (actions.length > 0) {
    return /*#__PURE__*/React.createElement(DropdownMenu, {
      testId: "media-card-actions-menu",
      onOpenChange: onOpenChange,
      trigger: ({
        triggerRef,
        isSelected,
        testId,
        onClick,
        ...providedProps
      }) => /*#__PURE__*/React.createElement(CardActionButton, _extends({
        variant: triggerVariant
        // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
        ,
        style: {
          color: triggerColor
        },
        ref: triggerRef,
        onClick: e => {
          fireMediaCardEvent({
            eventType: 'ui',
            action: 'clicked',
            actionSubject: 'button',
            actionSubjectId: 'mediaCardDropDownMenu',
            attributes: {}
          }, createAnalyticsEvent);
          onClick === null || onClick === void 0 ? void 0 : onClick(e);
        }
      }, providedProps), /*#__PURE__*/React.createElement(MoreIcon, {
        color: "currentColor",
        spacing: "spacious",
        label: "more"
      }))
    }, /*#__PURE__*/React.createElement(DropdownItemGroup, null, actions.map(createDropdownItemWithAnalytics)));
  } else {
    return null;
  }
};