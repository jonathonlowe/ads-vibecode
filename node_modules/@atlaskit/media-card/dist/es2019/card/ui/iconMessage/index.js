import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
import { IconMessageWrapper } from './iconMessageWrapper';
import { messages } from '@atlaskit/media-ui';
import { FormattedMessage } from 'react-intl-next';
export const IconMessage = ({
  messageDescriptor,
  animated = false
}) => {
  return /*#__PURE__*/React.createElement(IconMessageWrapper, {
    animated: animated
  }, /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement(FormattedMessage, messageDescriptor)));
};
export const CreatingPreview = ({
  disableAnimation
}) => /*#__PURE__*/React.createElement(IconMessage, {
  messageDescriptor: messages.creating_preview,
  animated: !disableAnimation
});
export const PreviewUnavailable = props => /*#__PURE__*/React.createElement(IconMessage, _extends({}, props, {
  messageDescriptor: messages.preview_unavailable
}));
export const FailedToLoad = props => /*#__PURE__*/React.createElement(IconMessage, _extends({}, props, {
  messageDescriptor: messages.failed_to_load
}));
export const FailedToUpload = props => /*#__PURE__*/React.createElement(IconMessage, _extends({}, props, {
  messageDescriptor: messages.failed_to_upload
}));