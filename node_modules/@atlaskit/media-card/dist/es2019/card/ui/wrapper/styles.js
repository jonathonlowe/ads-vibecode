// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css } from '@emotion/react';
import { borderRadius } from '@atlaskit/media-ui';
import { N20, B100 } from '@atlaskit/theme/colors';
import { hideNativeBrowserTextSelectionStyles } from '@atlaskit/editor-shared-styles/selection';
import { transition } from '../styles';
import { fixedBlanketStyles, blanketClassName } from '../blanket/styles';
import { fixedActionBarStyles, actionsBarClassName } from '../actionsBar/styles';
import { generateResponsiveStyles, getClickablePlayButtonStyles, getCursorStyle, getSelectableTickBoxStyles, getWrapperDimensions, getWrapperShadow } from '../styles';
export const wrapperStyles = ({
  breakpoint,
  dimensions,
  appearance,
  disableOverlay,
  displayBackground,
  selected,
  isPlayButtonClickable,
  isTickBoxSelectable,
  shouldDisplayTooltip,
  mediaCardCursor
}) => css`
	${transition()}
	box-sizing: border-box;
	* {
		box-sizing: border-box;
	}
	position: relative;
	font-family: ${"var(--ds-font-family-body, ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)"};
	${getWrapperDimensions(dimensions, appearance)}
	${displayBackground && `background: ${`var(--ds-background-neutral, ${N20})`};`}
  ${borderRadius}
  ${getCursorStyle(mediaCardCursor)}
  ${getWrapperShadow(disableOverlay, selected)}
  ${generateResponsiveStyles(breakpoint)};
	${selected ? hideNativeBrowserTextSelectionStyles : ''}

	/* We use classnames from here exceptionally to be able to handle styles when the Card is on hover */
  ${getClickablePlayButtonStyles(isPlayButtonClickable)}
  ${getSelectableTickBoxStyles(isTickBoxSelectable)}
  &:hover .${blanketClassName} {
		${fixedBlanketStyles}
	}
	&:hover .${actionsBarClassName}, &:focus-within .${actionsBarClassName} {
		${fixedActionBarStyles}
	}

	/* Tooltip does not support percentage dimensions. We enforce them here */
	${shouldDisplayTooltip && `> div { width: 100%; height: 100%; }`}

	button:focus + & {
		outline: solid 2px ${`var(--ds-border-focused, ${B100})`};
	}
`;
wrapperStyles.displayName = 'NewFileExperienceWrapper';