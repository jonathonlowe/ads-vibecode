import React, { type PropsWithChildren } from 'react';
import { type WithMediaClientConfigProps } from '@atlaskit/media-client-react';
import { type MediaInlineCardProps } from './mediaInlineCard';
export type MediaInlineCardWithMediaClientConfigProps = WithMediaClientConfigProps<MediaInlineCardProps>;
type MediaInlineCardWithMediaClientConfigComponent = React.ComponentType<MediaInlineCardWithMediaClientConfigProps>;
type ErrorBoundaryComponent = React.ComponentType<PropsWithChildren<{
    data?: {
        [k: string]: any;
    };
    isSelected?: boolean;
}>>;
export interface MediaInlineCardLoaderState {
    MediaInlineCard?: MediaInlineCardWithMediaClientConfigComponent;
    ErrorBoundary?: ErrorBoundaryComponent;
}
export default class MediaInlineCardLoader extends React.PureComponent<MediaInlineCardWithMediaClientConfigProps & MediaInlineCardLoaderState, MediaInlineCardLoaderState> {
    static displayName: string;
    static MediaInlineCard?: MediaInlineCardWithMediaClientConfigComponent;
    static ErrorBoundary?: ErrorBoundaryComponent;
    mounted: boolean;
    state: MediaInlineCardLoaderState;
    componentDidMount(): Promise<void>;
    componentWillUnmount(): Promise<void>;
    render(): React.JSX.Element;
}
export {};
