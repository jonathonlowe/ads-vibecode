import React from 'react';
import { type FileIdentifier, type FileState, type MediaFileArtifacts } from '@atlaskit/media-client';
import { type NumericalCardDimensions } from '@atlaskit/media-common';
import { type CardDimensions } from '../types';
import { type WithAnalyticsEventsProps, type UIAnalyticsEvent } from '@atlaskit/analytics-next';
import type { CardPreview } from '../types';
export interface InlinePlayerOwnProps {
    identifier: FileIdentifier;
    dimensions?: CardDimensions;
    originalDimensions?: NumericalCardDimensions;
    autoplay: boolean;
    selected?: boolean;
    onFullscreenChange?: (fullscreen: boolean) => void;
    onError?: (error: Error) => void;
    readonly onClick?: (event: React.MouseEvent<HTMLDivElement>, analyticsEvent?: UIAnalyticsEvent) => void;
    testId?: string;
    readonly cardPreview?: CardPreview;
    readonly forwardRef?: React.Ref<HTMLDivElement>;
    readonly videoControlsWrapperRef?: React.Ref<HTMLDivElement>;
}
export type InlinePlayerProps = InlinePlayerOwnProps & WithAnalyticsEventsProps;
export declare const getPreferredVideoArtifact: (fileState: FileState) => keyof MediaFileArtifacts | undefined;
export declare const InlinePlayerBase: ({ identifier, onError, onClick, dimensions, originalDimensions, selected, testId, forwardRef, autoplay, cardPreview, onFullscreenChange, videoControlsWrapperRef, }: InlinePlayerProps) => React.JSX.Element;
export declare const InlinePlayer: React.ForwardRefExoticComponent<Omit<InlinePlayerProps, "ref"> & React.RefAttributes<HTMLDivElement>>;
