import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
import React from 'react';
import { Component } from 'react';
import { getDimensionsWithDefault } from './getDimensionsWithDefault';
import { Wrapper } from './lightCardWrappers';
import SpinnerIcon from '@atlaskit/spinner';
export var CardLoading = /*#__PURE__*/function (_Component) {
  function CardLoading() {
    _classCallCheck(this, CardLoading);
    return _callSuper(this, CardLoading, arguments);
  }
  _inherits(CardLoading, _Component);
  return _createClass(CardLoading, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        dimensionsProp = _this$props.dimensions,
        testId = _this$props.testId,
        interactionName = _this$props.interactionName;
      var dimensions = getDimensionsWithDefault(dimensionsProp);
      return /*#__PURE__*/React.createElement(Wrapper, {
        "data-testid": testId || 'media-card-loading',
        "data-test-loading": true,
        dimensions: dimensions,
        "data-vc": "media-card-loading"
      }, /*#__PURE__*/React.createElement(SpinnerIcon, {
        interactionName: interactionName || 'media-card-loading'
      }));
    }
  }]);
}(Component);