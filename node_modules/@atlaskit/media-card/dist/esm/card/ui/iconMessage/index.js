import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
import { IconMessageWrapper } from './iconMessageWrapper';
import { messages } from '@atlaskit/media-ui';
import { FormattedMessage } from 'react-intl-next';
export var IconMessage = function IconMessage(_ref) {
  var messageDescriptor = _ref.messageDescriptor,
    _ref$animated = _ref.animated,
    animated = _ref$animated === void 0 ? false : _ref$animated;
  return /*#__PURE__*/React.createElement(IconMessageWrapper, {
    animated: animated
  }, /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement(FormattedMessage, messageDescriptor)));
};
export var CreatingPreview = function CreatingPreview(_ref2) {
  var disableAnimation = _ref2.disableAnimation;
  return /*#__PURE__*/React.createElement(IconMessage, {
    messageDescriptor: messages.creating_preview,
    animated: !disableAnimation
  });
};
export var PreviewUnavailable = function PreviewUnavailable(props) {
  return /*#__PURE__*/React.createElement(IconMessage, _extends({}, props, {
    messageDescriptor: messages.preview_unavailable
  }));
};
export var FailedToLoad = function FailedToLoad(props) {
  return /*#__PURE__*/React.createElement(IconMessage, _extends({}, props, {
    messageDescriptor: messages.failed_to_load
  }));
};
export var FailedToUpload = function FailedToUpload(props) {
  return /*#__PURE__*/React.createElement(IconMessage, _extends({}, props, {
    messageDescriptor: messages.failed_to_upload
  }));
};