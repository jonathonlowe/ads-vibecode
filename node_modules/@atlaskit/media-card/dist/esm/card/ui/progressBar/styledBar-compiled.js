/* styledBar-compiled.tsx generated by @compiled/babel-plugin v0.36.1 */
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import "./styledBar-compiled.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
import { Breakpoint, getTitleBoxHeight, responsiveSettings } from '../common';
var height = 3;
var padding = 1;
var width = 95; // %

var smallSizeSettings = {
  marginBottom: 4
};
var largeSizeSettings = {
  marginBottom: 12
};
export function generateResponsiveStyles(breakpoint, positionBottom, showOnTop) {
  var multiplier = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
  var setting = breakpoint === Breakpoint.SMALL ? smallSizeSettings : largeSizeSettings;
  var marginPositionBottom = responsiveSettings[breakpoint].titleBox.verticalPadding;
  var marginBottom = setting.marginBottom * multiplier + (positionBottom ? marginPositionBottom : getTitleBoxHeight(breakpoint));
  var spacing = "".concat(marginBottom, "px");
  return showOnTop ? {
    top: spacing
  } : {
    bottom: spacing
  };
}
var styledBarStyles = null;
var styleChild = null;
export var StyledBar = function StyledBar(props) {
  var progress = props.progress,
    breakpoint = props.breakpoint,
    positionBottom = props.positionBottom,
    showOnTop = props.showOnTop;
  return /*#__PURE__*/React.createElement("div", {
    id: "styledBar",
    role: "progressbar",
    "aria-valuenow": progress,
    className: ax(["_1reo15vq _18m915vq _1yt4xh0m _2rko1l7b _kqswstnw _1bsb1b7y _1ltv1ghs _bfhkrcrw _4t3i12iw _vchhusvi"]),
    style: _objectSpread(_objectSpread({}, generateResponsiveStyles(breakpoint, positionBottom, showOnTop)), {}, {
      "--_1xe2l1p": ix("".concat(width, "%")),
      "--_15ce6z9": ix("".concat(height + padding * 2, "px")),
      "--_cw4itz": ix("".concat(padding, "px"))
    })
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      width: "".concat(progress, "%")
    },
    className: ax(["_2rko1l7b _bfhk1p0d _1e0c1ule _4t3i1osq"])
  }));
};
StyledBar.displayName = 'StyledProgressBar';