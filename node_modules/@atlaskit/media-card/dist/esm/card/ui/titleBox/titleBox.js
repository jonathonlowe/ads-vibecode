import React from 'react';
import { injectIntl } from 'react-intl-next';
import LockFilledIcon from '@atlaskit/icon/utility/migration/lock-locked--lock-filled';
import { Truncate } from '@atlaskit/media-ui/truncateText';
import { formatDate } from '@atlaskit/media-ui/formatDate';
import { TitleBoxWrapper, TitleBoxFooter, TitleBoxHeader, TitleBoxIcon } from './titleBoxComponents';
var placeholderText = ' ';
var isValidTimestamp = function isValidTimestamp(timeStamp) {
  return new Date(timeStamp).getTime() > 0;
};
export var TitleBox = injectIntl(function (_ref) {
  var _intl$locale;
  var name = _ref.name,
    createdAt = _ref.createdAt,
    breakpoint = _ref.breakpoint,
    titleBoxBgColor = _ref.titleBoxBgColor,
    titleBoxIcon = _ref.titleBoxIcon,
    hidden = _ref.hidden,
    intl = _ref.intl;
  return /*#__PURE__*/React.createElement(TitleBoxWrapper, {
    hidden: hidden,
    breakpoint: breakpoint,
    titleBoxBgColor: titleBoxBgColor
  }, /*#__PURE__*/React.createElement(TitleBoxHeader, {
    hasIconOverlap: !!titleBoxIcon && !createdAt
  }, /*#__PURE__*/React.createElement(Truncate, {
    text: name !== null && name !== void 0 ? name : placeholderText
  })), /*#__PURE__*/React.createElement(TitleBoxFooter, {
    hasIconOverlap: !!titleBoxIcon
  }, createdAt !== undefined && isValidTimestamp(createdAt) ? formatDate(createdAt, (_intl$locale = intl === null || intl === void 0 ? void 0 : intl.locale) !== null && _intl$locale !== void 0 ? _intl$locale : 'en') : placeholderText), titleBoxIcon === 'LockFilledIcon' && /*#__PURE__*/React.createElement(TitleBoxIcon, null, /*#__PURE__*/React.createElement(LockFilledIcon, {
    color: "currentColor",
    label: "",
    LEGACY_size: "small"
  })));
}, {
  enforceContext: false
});