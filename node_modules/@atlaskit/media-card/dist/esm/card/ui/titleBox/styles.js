// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css } from '@emotion/react';
import { responsiveSettings, getTitleBoxHeight, Breakpoint } from '../common';
import { N0, N800 } from '@atlaskit/theme/colors';
import { rgba } from '../styles';
var generateResponsiveStyles = function generateResponsiveStyles() {
  var breakpoint = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Breakpoint.SMALL;
  var setting = responsiveSettings[breakpoint];
  var verticalPadding = setting.titleBox.verticalPadding;
  var horizontalPadding = setting.titleBox.horizontalPadding;
  var height = getTitleBoxHeight(breakpoint);
  return "height: ".concat(height, "px;\n    padding: ").concat(verticalPadding, "px ").concat(horizontalPadding, "px;");
};
var HEX_REGEX = /^#[0-9A-F]{6}$/i;
export var titleBoxWrapperStyles = function titleBoxWrapperStyles(_ref) {
  var breakpoint = _ref.breakpoint,
    _ref$display = _ref.display,
    display = _ref$display === void 0 ? 'flex' : _ref$display,
    titleBoxBgColor = _ref.titleBoxBgColor;
  return css({
    position: 'absolute',
    bottom: 0,
    width: '100%',
    backgroundColor: "var(--ds-surface, ".concat(
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    rgba(titleBoxBgColor && HEX_REGEX.test(titleBoxBgColor) ? titleBoxBgColor : N0, 1), ")"),
    color: "var(--ds-text, ".concat(N800, ")"),
    cursor: 'inherit',
    pointerEvents: 'none',
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    display: display,
    flexDirection: 'column',
    justifyContent: 'center'
  },
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  generateResponsiveStyles(breakpoint));
};
titleBoxWrapperStyles.displayName = 'TitleBoxWrapper';
var infoStyles = "white-space: nowrap;overflow: hidden;";
var iconOverlapStyles = "padding-right: 10px;";
export var titleBoxHeaderStyles = function titleBoxHeaderStyles(_ref2) {
  var hasIconOverlap = _ref2.hasIconOverlap;
  return css({
    fontWeight: "var(--ds-font-weight-semibold, 600)"
  },
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  infoStyles,
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  hasIconOverlap && iconOverlapStyles);
};
titleBoxHeaderStyles.displayName = 'FailedTitleBoxHeader';
export var titleBoxFooterStyles = function titleBoxFooterStyles(_ref3) {
  var hasIconOverlap = _ref3.hasIconOverlap;
  return css({
    textOverflow: 'ellipsis'
  },
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  infoStyles,
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  hasIconOverlap && iconOverlapStyles);
};
titleBoxFooterStyles.displayName = 'TitleBoxFooter';

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
export var titleBoxIconStyles = css({
  position: 'absolute',
  right: "var(--ds-space-050, 4px)",
  bottom: '0px'
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
export var newTitleBoxIconStyles = css({
  position: 'absolute',
  right: "var(--ds-space-050, 4px)",
  bottom: "var(--ds-space-050, 4px)"
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
export var errorMessageWrapperStyles = css({
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'flex-start',
  paddingInlineStart: "var(--ds-space-025, 2px)",
  gap: "var(--ds-space-025, 2px)",
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  span: {
    verticalAlign: 'middle',
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
    ':nth-child(2)': {
      marginLeft: "var(--ds-space-050, 4px)",
      marginRight: "var(--ds-space-050, 4px)"
    }
  }
});