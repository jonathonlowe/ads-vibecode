/* imageRendererV2.tsx generated by @compiled/babel-plugin v0.36.1 */
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import "./imageRendererV2.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
import React, { useState, useRef, useEffect } from 'react';
import { calculateDimensions, calculateInitialDimensions } from './helpers';
import { useCurrentValueRef } from '../../../utils/useCurrentValueRef';
import { ImageRendererWrapper } from './wrapper';
import { isFileIdentifier } from '@atlaskit/media-client';
var baseStyles = null;
var backgroundStyles = null;
export var ImageRenderer = function ImageRenderer(_ref) {
  var cardPreview = _ref.cardPreview,
    _ref$alt = _ref.alt,
    alt = _ref$alt === void 0 ? '' : _ref$alt,
    _ref$resizeMode = _ref.resizeMode,
    resizeMode = _ref$resizeMode === void 0 ? 'crop' : _ref$resizeMode,
    onImageLoad = _ref.onImageLoad,
    onImageError = _ref.onImageError,
    onDisplayImage = _ref.onDisplayImage,
    mediaType = _ref.mediaType,
    nativeLazyLoad = _ref.nativeLazyLoad,
    forceSyncDisplay = _ref.forceSyncDisplay,
    identifier = _ref.identifier,
    wrapperRef = _ref.wrapperRef,
    useWhiteBackground = _ref.useWhiteBackground,
    testId = _ref.testId;
  var onDisplayImageRef = useCurrentValueRef(onDisplayImage);
  useEffect(function () {
    if (mediaType === 'image') {
      var _onDisplayImageRef$cu;
      (_onDisplayImageRef$cu = onDisplayImageRef.current) === null || _onDisplayImageRef$cu === void 0 || _onDisplayImageRef$cu.call(onDisplayImageRef);
    }
  }, [mediaType, onDisplayImageRef]);
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    didRender = _useState2[0],
    setDidRender = _useState2[1];
  var _useState3 = useState(calculateInitialDimensions(resizeMode)),
    _useState4 = _slicedToArray(_useState3, 2),
    resolvedDimensions = _useState4[0],
    setResolvedDimensions = _useState4[1];
  var imgRef = useRef(null);
  var onLoad = function onLoad(evt) {
    wrapperRef.current && setResolvedDimensions(calculateDimensions(evt.currentTarget, wrapperRef.current, resizeMode));
    setDidRender(true);
    cardPreview && (onImageLoad === null || onImageLoad === void 0 ? void 0 : onImageLoad(cardPreview));
  };
  var onError = function onError() {
    onImageError && cardPreview && onImageError(cardPreview);
  };
  useEffect(function () {
    if (imgRef.current && wrapperRef.current && imgRef.current) {
      setResolvedDimensions(calculateDimensions(imgRef.current, wrapperRef.current, resizeMode));
    }
  }, [resizeMode, wrapperRef]);
  return cardPreview ? /*#__PURE__*/React.createElement(ImageRendererWrapper, null, /*#__PURE__*/React.createElement("img", {
    ref: imgRef,
    "data-testid": testId,
    "data-fileid": isFileIdentifier(identifier) ? identifier.id : null,
    "data-filecollection": isFileIdentifier(identifier) ? identifier.collectionName : null,
    "data-resizemode": resizeMode,
    "data-source": cardPreview.source,
    src: cardPreview.dataURI,
    alt: alt,
    onLoad: onLoad,
    onError: onError,
    loading: nativeLazyLoad ? 'lazy' : undefined,
    style: _objectSpread({
      visibility: didRender || forceSyncDisplay ? 'visible' : 'hidden'
    }, resolvedDimensions),
    className: ax(["_5ral1f51", useWhiteBackground && "_bfhku67f"])
  })) : null;
};