import _extends from "@babel/runtime/helpers/extends";
import React, { useEffect } from 'react';
import { MediaImage } from '@atlaskit/media-ui';
import { resizeModeToMediaImageProps } from './resizeModeToMediaImageProps';
import { useCurrentValueRef } from '../../../utils/useCurrentValueRef';
export var ImageRenderer = function ImageRenderer(_ref) {
  var cardPreview = _ref.cardPreview,
    alt = _ref.alt,
    resizeMode = _ref.resizeMode,
    onImageLoad = _ref.onImageLoad,
    onImageError = _ref.onImageError,
    onDisplayImage = _ref.onDisplayImage,
    mediaType = _ref.mediaType,
    nativeLazyLoad = _ref.nativeLazyLoad,
    forceSyncDisplay = _ref.forceSyncDisplay;
  var onDisplayImageRef = useCurrentValueRef(onDisplayImage);
  useEffect(function () {
    // TODO: trigger accordingly with the succeeded event. This could be a breaking change
    if (mediaType === 'image') {
      var _onDisplayImageRef$cu;
      (_onDisplayImageRef$cu = onDisplayImageRef.current) === null || _onDisplayImageRef$cu === void 0 || _onDisplayImageRef$cu.call(onDisplayImageRef);
    }
  }, [mediaType, onDisplayImageRef]);
  var onLoad = function onLoad() {
    onImageLoad && cardPreview && onImageLoad(cardPreview);
  };
  var onError = function onError() {
    onImageError && cardPreview && onImageError(cardPreview);
  };
  return /*#__PURE__*/React.createElement(MediaImage, _extends({
    dataURI: cardPreview === null || cardPreview === void 0 ? void 0 : cardPreview.dataURI,
    alt: alt,
    previewOrientation: cardPreview === null || cardPreview === void 0 ? void 0 : cardPreview.orientation,
    onImageLoad: onLoad,
    onImageError: onError,
    loading: nativeLazyLoad ? 'lazy' : undefined,
    forceSyncDisplay: forceSyncDisplay
  }, resizeModeToMediaImageProps(resizeMode)));
};