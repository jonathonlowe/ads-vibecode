import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["fileName", "innerRef"];
import React from 'react';
import { injectIntl, IntlProvider, useIntl } from 'react-intl-next';
import { messages } from '@atlaskit/media-ui';
import { Pressable } from '@atlaskit/primitives';
import VisuallyHidden from '@atlaskit/visually-hidden';
var OpenMediaViewerButton = function OpenMediaViewerButton(_ref) {
  var fileName = _ref.fileName,
    innerRef = _ref.innerRef,
    props = _objectWithoutProperties(_ref, _excluded);
  var intl = useIntl();
  return /*#__PURE__*/React.createElement(VisuallyHidden, null, /*#__PURE__*/React.createElement(Pressable, _extends({
    ref: innerRef
  }, props), intl.formatMessage(messages.open_file_in_viewer, {
    name: fileName
  })));
};
var OpenMediaViewerButtonWrapper = function OpenMediaViewerButtonWrapper(props) {
  return props.intl ? /*#__PURE__*/React.createElement(OpenMediaViewerButton, props) : /*#__PURE__*/React.createElement(IntlProvider, {
    locale: "en"
  }, /*#__PURE__*/React.createElement(OpenMediaViewerButton, props));
};
export default injectIntl(OpenMediaViewerButtonWrapper, {
  enforceContext: false
});