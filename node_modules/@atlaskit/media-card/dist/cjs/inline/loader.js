"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _mediaUi = require("@atlaskit/media-ui");
var _analyticsNext = require("@atlaskit/analytics-next");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var MediaInlineCardLoader = exports.default = /*#__PURE__*/function (_React$PureComponent) {
  function MediaInlineCardLoader() {
    var _this;
    (0, _classCallCheck2.default)(this, MediaInlineCardLoader);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, MediaInlineCardLoader, [].concat(args));
    (0, _defineProperty2.default)(_this, "mounted", false);
    (0, _defineProperty2.default)(_this, "state", {
      MediaInlineCard: MediaInlineCardLoader.MediaInlineCard,
      ErrorBoundary: MediaInlineCardLoader.ErrorBoundary
    });
    return _this;
  }
  (0, _inherits2.default)(MediaInlineCardLoader, _React$PureComponent);
  return (0, _createClass2.default)(MediaInlineCardLoader, [{
    key: "componentDidMount",
    value: function () {
      var _componentDidMount = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
        var _yield$Promise$all, _yield$Promise$all2, mediaClient, cardModule, mediaInlineErrorBoundaryModule;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              this.mounted = true;
              if (this.state.MediaInlineCard) {
                _context.next = 17;
                break;
              }
              _context.prev = 2;
              _context.next = 5;
              return Promise.all([Promise.resolve().then(function () {
                return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_media-client-react" */'@atlaskit/media-client-react'));
              }), Promise.resolve().then(function () {
                return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_inline-media-card" */'./mediaInlineCard'));
              }), Promise.resolve().then(function () {
                return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_media-inline-error-boundary" */'./mediaInlineAnalyticsErrorBoundary'));
              })]);
            case 5:
              _yield$Promise$all = _context.sent;
              _yield$Promise$all2 = (0, _slicedToArray2.default)(_yield$Promise$all, 3);
              mediaClient = _yield$Promise$all2[0];
              cardModule = _yield$Promise$all2[1];
              mediaInlineErrorBoundaryModule = _yield$Promise$all2[2];
              MediaInlineCardLoader.MediaInlineCard = mediaClient.withMediaClient(cardModule.MediaInlineCard);
              MediaInlineCardLoader.ErrorBoundary = mediaInlineErrorBoundaryModule.default;
              if (this.mounted) {
                this.setState({
                  MediaInlineCard: MediaInlineCardLoader.MediaInlineCard,
                  ErrorBoundary: MediaInlineCardLoader.ErrorBoundary
                });
              }
              _context.next = 17;
              break;
            case 15:
              _context.prev = 15;
              _context.t0 = _context["catch"](2);
            case 17:
            case "end":
              return _context.stop();
          }
        }, _callee, this, [[2, 15]]);
      }));
      function componentDidMount() {
        return _componentDidMount.apply(this, arguments);
      }
      return componentDidMount;
    }()
  }, {
    key: "componentWillUnmount",
    value: function () {
      var _componentWillUnmount = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              this.mounted = false;
            case 1:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function componentWillUnmount() {
        return _componentWillUnmount.apply(this, arguments);
      }
      return componentWillUnmount;
    }()
  }, {
    key: "render",
    value: function render() {
      var _this$state = this.state,
        MediaInlineCard = _this$state.MediaInlineCard,
        ErrorBoundary = _this$state.ErrorBoundary;
      var analyticsContext = {
        packageVersion: "@atlaskit/media-card",
        packageName: "79.2.0",
        componentName: 'mediaInlineCard',
        component: 'mediaInlineCard'
      };
      if (!MediaInlineCard || !ErrorBoundary) {
        return /*#__PURE__*/_react.default.createElement(_mediaUi.MediaInlineCardLoadingView, {
          message: ""
        });
      }
      return /*#__PURE__*/_react.default.createElement(_analyticsNext.AnalyticsContext, {
        data: analyticsContext
      }, /*#__PURE__*/_react.default.createElement(ErrorBoundary, {
        isSelected: this.props.isSelected
      }, /*#__PURE__*/_react.default.createElement(MediaInlineCard, this.props)));
    }
  }]);
}(_react.default.PureComponent);
(0, _defineProperty2.default)(MediaInlineCardLoader, "displayName", 'MediaInlineCardLoader');