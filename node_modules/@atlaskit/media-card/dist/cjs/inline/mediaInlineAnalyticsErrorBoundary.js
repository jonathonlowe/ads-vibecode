"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _analyticsNext = require("@atlaskit/analytics-next");
var _colors = require("@atlaskit/theme/colors");
var _warning = _interopRequireDefault(require("@atlaskit/icon/utility/migration/warning"));
var _analytics = require("../utils/analytics");
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var ErrorBoundaryComponent = function ErrorBoundaryComponent(_ref) {
  var message = _ref.message,
    isSelected = _ref.isSelected;
  var selectedStyle = {
    cursor: 'pointer',
    boxShadow: "0 0 0 1px ".concat("var(--ds-border-selected, ".concat(_colors.B300, ")")),
    outline: 'none',
    userSelect: 'none',
    borderColor: 'transparent'
  };

  /* Note:
    - styling is borrowed from packages/media/media-ui/src/MediaInlineCard/Frame/styled.ts
    - because we are not using styled components, we are not able to use themed(), here is the "themed" property of color and backgroundColor
      color: `${themed({
       light: token('color.text', N900),
       dark: token('color.text', DN600),
     })}`,
     backgroundColor: `${themed({
       light: token('color.background.neutral', N30A),
       dark: token('color.background.neutral', DN80),
     })}`,
    */

  var style = _objectSpread({
    // eslint-disable-next-line @atlaskit/design-system/use-tokens-typography
    lineHeight: '16px',
    padding: "var(--ds-space-025, 2px)".concat(" ", "var(--ds-space-050, 4px)"),
    marginRight: "var(--ds-space-negative-025, -2px)",
    WebkitBoxDecorationBreak: 'clone',
    display: 'inline-flex',
    gap: "var(--ds-space-050, 4px)",
    alignItems: 'center',
    borderRadius: '3px',
    color: "var(--ds-text, ".concat(_colors.N900, ")"),
    backgroundColor: "var(--ds-background-neutral, ".concat(_colors.N30A, ")"),
    userSelect: 'text',
    transition: 'all 0.1s ease-in-out 0s',
    cursor: 'pointer'
  }, isSelected ? _objectSpread({}, selectedStyle) : {
    userSelect: 'text'
  });
  return (
    /*#__PURE__*/
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    _react.default.createElement("span", {
      style: style
    }, /*#__PURE__*/_react.default.createElement(_warning.default, {
      LEGACY_margin: "0 ".concat("var(--ds-space-negative-050, -4px)", " 0 0"),
      label: "error",
      LEGACY_size: "small",
      color: "var(--ds-icon-danger, ".concat(_colors.R300, ")")
    }), message)
  );
};
var WrappedMediaInlineAnalyticsErrorBoundary = /*#__PURE__*/function (_React$Component) {
  function WrappedMediaInlineAnalyticsErrorBoundary(props) {
    var _this;
    (0, _classCallCheck2.default)(this, WrappedMediaInlineAnalyticsErrorBoundary);
    _this = _callSuper(this, WrappedMediaInlineAnalyticsErrorBoundary, [props]);
    (0, _defineProperty2.default)(_this, "fireOperationalEvent", function (error, info) {
      var _window;
      var _this$props = _this.props,
        _this$props$data = _this$props.data,
        data = _this$props$data === void 0 ? {} : _this$props$data,
        createAnalyticsEvent = _this$props.createAnalyticsEvent;
      var payload = {
        eventType: 'operational',
        action: 'failed',
        actionSubject: 'mediaInlineRender',
        attributes: _objectSpread({
          browserInfo: (_window = window) !== null && _window !== void 0 && (_window = _window.navigator) !== null && _window !== void 0 && _window.userAgent ? window.navigator.userAgent : 'unknown',
          error: error,
          failReason: 'unexpected-error',
          info: info
        }, data)
      };
      (0, _analytics.fireMediaCardEvent)(payload, createAnalyticsEvent);
    });
    _this.state = {
      hasError: false
    };
    return _this;
  }
  (0, _inherits2.default)(WrappedMediaInlineAnalyticsErrorBoundary, _React$Component);
  return (0, _createClass2.default)(WrappedMediaInlineAnalyticsErrorBoundary, [{
    key: "componentDidCatch",
    value: function componentDidCatch(error, info) {
      try {
        this.fireOperationalEvent(error, info);
        this.setState({
          hasError: true
        });
      } catch (e) {}
    }
  }, {
    key: "render",
    value: function render() {
      var hasError = this.state.hasError;
      var _this$props2 = this.props,
        children = _this$props2.children,
        isSelected = _this$props2.isSelected;
      return hasError ? /*#__PURE__*/_react.default.createElement(ErrorBoundaryComponent, {
        message: "We couldn't load this content",
        isSelected: isSelected
      }) : children;
    }
  }]);
}(_react.default.Component); // @ts-ignore: [PIT-1685] Fails in post-office due to backwards incompatibility issue with React 18
(0, _defineProperty2.default)(WrappedMediaInlineAnalyticsErrorBoundary, "displayName", 'MediaInlineAnalyticsErrorBoundary');
var MediaInlineAnalyticsErrorBoundary = (0, _analyticsNext.withAnalyticsEvents)()(WrappedMediaInlineAnalyticsErrorBoundary);
var _default = exports.default = MediaInlineAnalyticsErrorBoundary;