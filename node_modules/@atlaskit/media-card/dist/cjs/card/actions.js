"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.attachDetailsToActions = attachDetailsToActions;
exports.createDownloadAction = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _download = _interopRequireDefault(require("@atlaskit/icon/core/migration/download"));
var _mediaUi = require("@atlaskit/media-ui");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function attachDetailsToActions(actions, details) {
  return actions.map(function (action) {
    return _objectSpread(_objectSpread({}, action), {}, {
      handler: function handler() {
        action.handler({
          type: 'file',
          details: details
        });
      }
    });
  });
}
var createDownloadAction = exports.createDownloadAction = function createDownloadAction(baseAction, formatMessage) {
  var isDisabled = baseAction.isDisabled;
  var label = isDisabled ? 'Download Disabled' : 'Download';
  var tooltip = isDisabled ? formatMessage(_mediaUi.messages.download_disabled_security_policy) : undefined;
  return _objectSpread(_objectSpread({}, baseAction), {}, {
    label: label,
    tooltip: tooltip,
    icon: /*#__PURE__*/_react.default.createElement(_download.default, {
      color: isDisabled ? "var(--ds-icon-disabled, #091E424F)" : 'currentColor',
      spacing: "spacious",
      label: "Download"
    })
  });
};