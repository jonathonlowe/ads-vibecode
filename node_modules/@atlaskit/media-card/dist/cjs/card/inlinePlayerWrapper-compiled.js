/* inlinePlayerWrapper-compiled.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.inlinePlayerClassName = exports.InlinePlayerWrapper = void 0;
require("./inlinePlayerWrapper-compiled.compiled.css");
var React = _interopRequireWildcard(require("react"));
var _runtime = require("@compiled/react/runtime");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _getDimensionsWithDefault = require("../utils/lightCards/getDimensionsWithDefault");
var _vcMedia = require("@atlaskit/react-ufo/vc-media");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var hideNativeBrowserTextSelectionStyles = null;
var selectedBorderStyle = null;

/*
 * Used to display the blue border around a selected card without
 * shrinking the image OR growing the card size
 */
var borderStyle = null;
var inlinePlayerClassName = exports.inlinePlayerClassName = 'media-card-inline-player';
var inlinePlayerWrapperStyles = null;

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var InlinePlayerWrapper = exports.InlinePlayerWrapper = function InlinePlayerWrapper(props) {
  var testId = props.testId,
    selected = props.selected,
    dimensions = props.dimensions,
    onClick = props.onClick,
    innerRef = props.innerRef;
  return /*#__PURE__*/React.createElement("div", (0, _extends2.default)({
    id: "inlinePlayerWrapper",
    "data-testid": testId
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    ,
    className: (0, _runtime.ax)(["_1reo15vq _18m915vq _2rko1sit _kqswh2mm _p12f1osq _c71l1osq _1y2k1osq _z18o1osq", selected && "_1p1y1j28 _1rk81j28 _14r11j28 _1np21j28", "_14mj1sit _aetrb3bt _z0ai1osq _1qdg1osq _18postnw _15l2idpf _631ousvi _11fnglyw", selected && "_eq4314x9", inlinePlayerClassName]),
    onClick: onClick,
    ref: innerRef
  }, _vcMedia.VcMediaWrapperProps, {
    style: {
      width: (0, _getDimensionsWithDefault.getDimensionsWithDefault)(dimensions).width || '100%',
      height: (0, _getDimensionsWithDefault.getDimensionsWithDefault)(dimensions).height || 'auto',
      "--_f9up2s": (0, _runtime.ix)("1px solid ".concat("var(--ds-border-selected, #0C66E4)"))
    }
  }), props.children);
};