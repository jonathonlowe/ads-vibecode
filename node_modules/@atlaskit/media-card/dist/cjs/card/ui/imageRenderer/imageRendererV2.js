/* imageRendererV2.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ImageRenderer = void 0;
require("./imageRendererV2.compiled.css");
var _runtime = require("@compiled/react/runtime");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _helpers = require("./helpers");
var _useCurrentValueRef = require("../../../utils/useCurrentValueRef");
var _wrapper = require("./wrapper");
var _mediaClient = require("@atlaskit/media-client");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var baseStyles = null;
var backgroundStyles = null;
var ImageRenderer = exports.ImageRenderer = function ImageRenderer(_ref) {
  var cardPreview = _ref.cardPreview,
    _ref$alt = _ref.alt,
    alt = _ref$alt === void 0 ? '' : _ref$alt,
    _ref$resizeMode = _ref.resizeMode,
    resizeMode = _ref$resizeMode === void 0 ? 'crop' : _ref$resizeMode,
    onImageLoad = _ref.onImageLoad,
    onImageError = _ref.onImageError,
    onDisplayImage = _ref.onDisplayImage,
    mediaType = _ref.mediaType,
    nativeLazyLoad = _ref.nativeLazyLoad,
    forceSyncDisplay = _ref.forceSyncDisplay,
    identifier = _ref.identifier,
    wrapperRef = _ref.wrapperRef,
    useWhiteBackground = _ref.useWhiteBackground,
    testId = _ref.testId;
  var onDisplayImageRef = (0, _useCurrentValueRef.useCurrentValueRef)(onDisplayImage);
  (0, _react.useEffect)(function () {
    if (mediaType === 'image') {
      var _onDisplayImageRef$cu;
      (_onDisplayImageRef$cu = onDisplayImageRef.current) === null || _onDisplayImageRef$cu === void 0 || _onDisplayImageRef$cu.call(onDisplayImageRef);
    }
  }, [mediaType, onDisplayImageRef]);
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    didRender = _useState2[0],
    setDidRender = _useState2[1];
  var _useState3 = (0, _react.useState)((0, _helpers.calculateInitialDimensions)(resizeMode)),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    resolvedDimensions = _useState4[0],
    setResolvedDimensions = _useState4[1];
  var imgRef = (0, _react.useRef)(null);
  var onLoad = function onLoad(evt) {
    wrapperRef.current && setResolvedDimensions((0, _helpers.calculateDimensions)(evt.currentTarget, wrapperRef.current, resizeMode));
    setDidRender(true);
    cardPreview && (onImageLoad === null || onImageLoad === void 0 ? void 0 : onImageLoad(cardPreview));
  };
  var onError = function onError() {
    onImageError && cardPreview && onImageError(cardPreview);
  };
  (0, _react.useEffect)(function () {
    if (imgRef.current && wrapperRef.current && imgRef.current) {
      setResolvedDimensions((0, _helpers.calculateDimensions)(imgRef.current, wrapperRef.current, resizeMode));
    }
  }, [resizeMode, wrapperRef]);
  return cardPreview ? /*#__PURE__*/_react.default.createElement(_wrapper.ImageRendererWrapper, null, /*#__PURE__*/_react.default.createElement("img", {
    ref: imgRef,
    "data-testid": testId,
    "data-fileid": (0, _mediaClient.isFileIdentifier)(identifier) ? identifier.id : null,
    "data-filecollection": (0, _mediaClient.isFileIdentifier)(identifier) ? identifier.collectionName : null,
    "data-resizemode": resizeMode,
    "data-source": cardPreview.source,
    src: cardPreview.dataURI,
    alt: alt,
    onLoad: onLoad,
    onError: onError,
    loading: nativeLazyLoad ? 'lazy' : undefined,
    style: _objectSpread({
      visibility: didRender || forceSyncDisplay ? 'visible' : 'hidden'
    }, resolvedDimensions),
    className: (0, _runtime.ax)(["_5ral1f51", useWhiteBackground && "_bfhku67f"])
  })) : null;
};