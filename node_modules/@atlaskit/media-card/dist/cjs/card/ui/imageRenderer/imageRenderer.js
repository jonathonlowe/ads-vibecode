"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ImageRenderer = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _mediaUi = require("@atlaskit/media-ui");
var _resizeModeToMediaImageProps = require("./resizeModeToMediaImageProps");
var _useCurrentValueRef = require("../../../utils/useCurrentValueRef");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var ImageRenderer = exports.ImageRenderer = function ImageRenderer(_ref) {
  var cardPreview = _ref.cardPreview,
    alt = _ref.alt,
    resizeMode = _ref.resizeMode,
    onImageLoad = _ref.onImageLoad,
    onImageError = _ref.onImageError,
    onDisplayImage = _ref.onDisplayImage,
    mediaType = _ref.mediaType,
    nativeLazyLoad = _ref.nativeLazyLoad,
    forceSyncDisplay = _ref.forceSyncDisplay;
  var onDisplayImageRef = (0, _useCurrentValueRef.useCurrentValueRef)(onDisplayImage);
  (0, _react.useEffect)(function () {
    // TODO: trigger accordingly with the succeeded event. This could be a breaking change
    if (mediaType === 'image') {
      var _onDisplayImageRef$cu;
      (_onDisplayImageRef$cu = onDisplayImageRef.current) === null || _onDisplayImageRef$cu === void 0 || _onDisplayImageRef$cu.call(onDisplayImageRef);
    }
  }, [mediaType, onDisplayImageRef]);
  var onLoad = function onLoad() {
    onImageLoad && cardPreview && onImageLoad(cardPreview);
  };
  var onError = function onError() {
    onImageError && cardPreview && onImageError(cardPreview);
  };
  return /*#__PURE__*/_react.default.createElement(_mediaUi.MediaImage, (0, _extends2.default)({
    dataURI: cardPreview === null || cardPreview === void 0 ? void 0 : cardPreview.dataURI,
    alt: alt,
    previewOrientation: cardPreview === null || cardPreview === void 0 ? void 0 : cardPreview.orientation,
    onImageLoad: onLoad,
    onImageError: onError,
    loading: nativeLazyLoad ? 'lazy' : undefined,
    forceSyncDisplay: forceSyncDisplay
  }, (0, _resizeModeToMediaImageProps.resizeModeToMediaImageProps)(resizeMode)));
};