"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generateResponsiveStyles = generateResponsiveStyles;
exports.styledBarStyles = void 0;
var _react = require("@emotion/react");
var _mediaUi = require("@atlaskit/media-ui");
var _styles = require("../styles");
var _colors = require("@atlaskit/theme/colors");
var _common = require("../common");
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var height = 3;
var padding = 1;
var width = 95; // %
var left = (100 - width) / 2; // %

var smallSizeSettings = {
  marginBottom: 4
};
var largeSizeSettings = {
  marginBottom: 12
};
function generateResponsiveStyles(breakpoint, positionBottom, showOnTop) {
  var multiplier = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
  var setting = breakpoint === _common.Breakpoint.SMALL ? smallSizeSettings : largeSizeSettings;
  var marginPositionBottom = _common.responsiveSettings[breakpoint].titleBox.verticalPadding;
  var marginBottom = setting.marginBottom * multiplier + (positionBottom ? marginPositionBottom : (0, _common.getTitleBoxHeight)(breakpoint));
  return "\n    ".concat(showOnTop ? 'top' : 'bottom', ": ").concat(marginBottom, "px\n  ");
}

/* eslint-disable @atlaskit/design-system/ensure-design-token-usage */
var getStyledBarStylesBasedOnProps = function getStyledBarStylesBasedOnProps(_ref) {
  var progress = _ref.progress,
    breakpoint = _ref.breakpoint,
    positionBottom = _ref.positionBottom,
    showOnTop = _ref.showOnTop;
  return "\n".concat(_mediaUi.borderRadius, "\noverflow: hidden;\nposition: absolute;\nwidth: ").concat(width, "%;\nleft: ").concat(left, "%;\nbackground-color: ").concat((0, _styles.rgba)(_colors.N0, 0.8), ";\nheight: ").concat(height + padding * 2, "px;\npadding: ").concat(padding, "px;\nbox-sizing: border-box;\n\n::before {\n  content: '';\n  width: ").concat(progress, "%;\n  height: 100%;\n  background-color: #44546F;\n  ").concat(_mediaUi.borderRadius, "\n  display: block;\n}\n").concat(generateResponsiveStyles(breakpoint, positionBottom, showOnTop), "\n");
};
/* eslint-enable @atlaskit/design-system/ensure-design-token-usage */

var styledBarStyles = exports.styledBarStyles = function styledBarStyles(props) {
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  return (0, _react.css)(getStyledBarStylesBasedOnProps(props));
};
styledBarStyles.displayName = 'StyledProgressBar';