"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.inlinePlayerWrapperStyles = exports.inlinePlayerClassName = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = require("@emotion/react");
var _constants = require("@atlaskit/theme/constants");
var _getDimensionsWithDefault = require("../utils/lightCards/getDimensionsWithDefault");
var _selection = require("@atlaskit/editor-shared-styles/selection");
var _templateObject; // eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
/*
 * Used to display the blue border around a selected card without
 * shrinking the image OR growing the card size
 */
var getSelectedBorderStyle = function getSelectedBorderStyle(_ref) {
  var selected = _ref.selected;
  return "\n    ".concat(selected ? _selection.hideNativeBrowserTextSelectionStyles : '', "\n\n    &::after {\n      content: '';\n      width: 100%;\n      height: 100%;\n      position: absolute;\n      top: 0;\n      box-sizing: border-box;\n      pointer-events: none;\n      ").concat(_constants.borderRadius, "\n      ").concat(selected ? (0, _selection.getSelectionStyles)([_selection.SelectionStyle.Border]) : '', "\n    }\n  ");
};
var inlinePlayerClassName = exports.inlinePlayerClassName = 'media-card-inline-player';
var inlinePlayerWrapperStyles = exports.inlinePlayerWrapperStyles = function inlinePlayerWrapperStyles(_ref2) {
  var dimensions = _ref2.dimensions,
    selected = _ref2.selected;
  return (0, _react.css)(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2.default)(["\n\twidth: ", ";\n\theight: ", ";\n\toverflow: hidden;\n\tborder-radius: ", "px;\n\tposition: relative;\n\tmax-width: 100%;\n\tmax-height: 100%;\n\n\t", "\n\n\tvideo {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n"])), (0, _getDimensionsWithDefault.getDimensionsWithDefault)(dimensions).width || '100%', (0, _getDimensionsWithDefault.getDimensionsWithDefault)(dimensions).height || 'auto', (0, _constants.borderRadius)(), getSelectedBorderStyle(selected));
};
inlinePlayerWrapperStyles.displayName = 'InlinePlayerWrapper';