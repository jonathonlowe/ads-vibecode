/* svgImage-compiled.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SvgView = void 0;
require("./svgImage-compiled.compiled.css");
var _runtime = require("@compiled/react/runtime");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _errors = require("../../errors");
var _helpers = require("./helpers");
var _mediaSvg = require("@atlaskit/media-svg");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var getErrorReason = function getErrorReason(svgReason) {
  switch (svgReason) {
    case 'img-error':
      return 'svg-img-error';
    case 'binary-fetch':
      return 'svg-binary-fetch';
    case 'blob-to-datauri':
      return 'svg-blob-to-datauri';
    default:
      return 'svg-unknown-error';
  }
};
var svgRendererStyles = null;
var svgRendererMaxDimensionStyles = null;
var SvgView = exports.SvgView = function SvgView(_ref) {
  var identifier = _ref.identifier,
    resizeMode = _ref.resizeMode,
    onLoad = _ref.onLoad,
    onError = _ref.onError,
    wrapperRef = _ref.wrapperRef,
    alt = _ref.alt;
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    didSvgRender = _useState2[0],
    setDidSvgRender = _useState2[1];
  var _useState3 = (0, _react.useState)({}),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    svgDimensions = _useState4[0],
    setSvgDimensions = _useState4[1];
  var imgRef = (0, _react.useRef)(null);
  var calculateDimensions = (0, _react.useCallback)(function (targetImgElem) {
    if (!wrapperRef.current || !targetImgElem) {
      return;
    }
    setSvgDimensions((0, _helpers.calculateSvgDimensions)(targetImgElem, wrapperRef.current, resizeMode));
  }, [resizeMode, wrapperRef]);
  var onSvgLoad = function onSvgLoad(evt) {
    calculateDimensions(evt.currentTarget);
    setDidSvgRender(true);
    onLoad === null || onLoad === void 0 || onLoad();
  };
  var onSvgError = function onSvgError(err) {
    var error = new _errors.MediaCardError(getErrorReason(err.primaryReason), err.secondaryError);
    onError === null || onError === void 0 || onError(error);
  };
  (0, _react.useEffect)(function () {
    if (imgRef.current) {
      calculateDimensions(imgRef.current);
    }
  }, [imgRef, calculateDimensions]);
  var _useResolveSvg = (0, _mediaSvg.useResolveSvg)(identifier, onSvgError),
    svgUrl = _useResolveSvg.svgUrl,
    source = _useResolveSvg.source;
  var width = svgDimensions.width,
    height = svgDimensions.height;
  return svgUrl && source ? /*#__PURE__*/_react.default.createElement("img", {
    "data-testid": 'media-card-svg',
    "data-fileid": identifier.id,
    "data-filecollection": identifier.collectionName,
    "data-source": source,
    src: svgUrl,
    alt: alt,
    style: _objectSpread({
      visibility: didSvgRender ? 'visible' : 'hidden'
    }, svgDimensions),
    onLoad: onSvgLoad,
    onError: function onError() {
      onSvgError(new _mediaSvg.MediaSVGError('img-error'));
    },
    ref: imgRef,
    className: (0, _runtime.ax)(["_5ral1f51 _bfhku67f", !width && !height && "_p12f1osq _c71l1osq"])
  }) : null;
};