"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.calculateSvgDimensions = void 0;
var calculateSvgDimensions = exports.calculateSvgDimensions = function calculateSvgDimensions(imgElement, parentElement, resizeMode) {
  var naturalWidth = imgElement.naturalWidth,
    width = imgElement.width,
    naturalHeight = imgElement.naturalHeight,
    height = imgElement.height;
  // Firefox & Safari can't always read the "natural" dimensions correctly.
  // When these are undefined or zero, we replace them with the rendered values
  var imgWidth = naturalWidth || width;
  var imgHeight = naturalHeight || height;
  var _parentElement$getBou = parentElement.getBoundingClientRect(),
    parentWidth = _parentElement$getBou.width,
    parentHeight = _parentElement$getBou.height;
  if (resizeMode === 'fit' || resizeMode === 'full-fit') {
    return {
      maxWidth: "min(100%, ".concat(imgWidth, "px)"),
      maxHeight: "min(100%, ".concat(imgHeight, "px)")
    };
  }
  var imgRatio = imgWidth / imgHeight;
  var cardRatio = parentWidth / parentHeight;
  var isImageLandscapier = imgRatio > cardRatio;
  if (resizeMode === 'stretchy-fit') {
    if (isImageLandscapier) {
      return {
        width: '100%',
        maxHeight: '100%'
      };
    } else {
      return {
        height: '100%',
        maxWidth: '100%'
      };
    }
  }
  if (resizeMode === 'crop') {
    if (isImageLandscapier) {
      return {
        height: imgHeight,
        maxHeight: '100%'
      };
    } else {
      return {
        width: imgWidth,
        maxWidth: '100%'
      };
    }
  }
  return {};
};