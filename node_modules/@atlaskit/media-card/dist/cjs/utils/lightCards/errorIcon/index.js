"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ErrorIcon = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = require("@emotion/react");
var _react2 = require("react");
var _warningEditorWarning = _interopRequireDefault(require("@atlaskit/icon/core/migration/warning--editor-warning"));
var _styles = require("./styles");
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } /**
 * @jsxRuntime classic
 * @jsx jsx
 */ // eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var ErrorIcon = exports.ErrorIcon = /*#__PURE__*/function (_Component) {
  function ErrorIcon() {
    (0, _classCallCheck2.default)(this, ErrorIcon);
    return _callSuper(this, ErrorIcon, arguments);
  }
  (0, _inherits2.default)(ErrorIcon, _Component);
  return (0, _createClass2.default)(ErrorIcon, [{
    key: "render",
    value: function render() {
      var size = this.props.size;
      return (
        // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
        (0, _react.jsx)("div", {
          css: _styles.errorIconWrapperStyles
        }, (0, _react.jsx)(_warningEditorWarning.default, {
          color: "currentColor",
          label: "Error",
          LEGACY_size: size
        }))
      );
    }
  }]);
}(_react2.Component);
(0, _defineProperty2.default)(ErrorIcon, "defaultProps", {
  size: 'small'
});