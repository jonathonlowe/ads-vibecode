import React from 'react';
import { type BrowserProps } from './browser';
import { type WithMediaClientConfigProps } from '@atlaskit/media-client-react';
import { type BrowserConfig } from '../../types';
type BrowserWithMediaClientConfigProps = WithMediaClientConfigProps<Omit<BrowserProps, 'config'> & {
    config?: BrowserConfig;
}>;
type BrowserWithMediaClientConfigComponent = React.ComponentType<BrowserWithMediaClientConfigProps>;
type State = {
    Browser?: BrowserWithMediaClientConfigComponent;
};
export declare class BrowserLoader extends React.PureComponent<BrowserWithMediaClientConfigProps, State> {
    private mounted;
    static displayName: string;
    static Browser?: BrowserWithMediaClientConfigComponent;
    state: {
        Browser: BrowserWithMediaClientConfigComponent | undefined;
    };
    componentDidMount(): void;
    componentWillUnmount(): void;
    UNSAFE_componentWillMount(): Promise<void>;
    render(): React.JSX.Element | null;
}
export {};
