"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DropzoneLoader = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var DropzoneLoader = exports.DropzoneLoader = /*#__PURE__*/function (_React$PureComponent) {
  function DropzoneLoader() {
    var _this;
    (0, _classCallCheck2.default)(this, DropzoneLoader);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, DropzoneLoader, [].concat(args));
    (0, _defineProperty2.default)(_this, "state", {
      Dropzone: DropzoneLoader.Dropzone,
      MediaPickerErrorBoundary: DropzoneLoader.MediaPickerErrorBoundary
    });
    return _this;
  }
  (0, _inherits2.default)(DropzoneLoader, _React$PureComponent);
  return (0, _createClass2.default)(DropzoneLoader, [{
    key: "UNSAFE_componentWillMount",
    value: function () {
      var _UNSAFE_componentWillMount = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
        var _yield$Promise$all, _yield$Promise$all2, mediaClient, dropzoneModule, mediaPickerErrorBoundaryModule;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              if (!(!this.state.Dropzone || !this.state.MediaPickerErrorBoundary)) {
                _context.next = 16;
                break;
              }
              _context.prev = 1;
              _context.next = 4;
              return Promise.all([Promise.resolve().then(function () {
                return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_media-client-react" */'@atlaskit/media-client-react'));
              }), Promise.resolve().then(function () {
                return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_media-dropzone" */'./dropzone'));
              }), Promise.resolve().then(function () {
                return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_media-picker-error-boundary" */'../media-picker-analytics-error-boundary'));
              })]);
            case 4:
              _yield$Promise$all = _context.sent;
              _yield$Promise$all2 = (0, _slicedToArray2.default)(_yield$Promise$all, 3);
              mediaClient = _yield$Promise$all2[0];
              dropzoneModule = _yield$Promise$all2[1];
              mediaPickerErrorBoundaryModule = _yield$Promise$all2[2];
              // @ts-ignore: [PIT-1685] Fails in post-office due to backwards incompatibility issue with React 18
              DropzoneLoader.Dropzone = mediaClient.withMediaClient(dropzoneModule.Dropzone);
              DropzoneLoader.MediaPickerErrorBoundary = mediaPickerErrorBoundaryModule.default;
              this.setState({
                Dropzone: DropzoneLoader.Dropzone,
                MediaPickerErrorBoundary: DropzoneLoader.MediaPickerErrorBoundary
              });
              _context.next = 16;
              break;
            case 14:
              _context.prev = 14;
              _context.t0 = _context["catch"](1);
            case 16:
            case "end":
              return _context.stop();
          }
        }, _callee, this, [[1, 14]]);
      }));
      function UNSAFE_componentWillMount() {
        return _UNSAFE_componentWillMount.apply(this, arguments);
      }
      return UNSAFE_componentWillMount;
    }()
  }, {
    key: "render",
    value: function render() {
      var _this$state = this.state,
        Dropzone = _this$state.Dropzone,
        MediaPickerErrorBoundary = _this$state.MediaPickerErrorBoundary;
      if (!Dropzone || !MediaPickerErrorBoundary) {
        return null;
      }
      return /*#__PURE__*/_react.default.createElement(MediaPickerErrorBoundary, null, /*#__PURE__*/_react.default.createElement(Dropzone, this.props));
    }
  }]);
}(_react.default.PureComponent);
(0, _defineProperty2.default)(DropzoneLoader, "displayName", 'AsyncDropzone');