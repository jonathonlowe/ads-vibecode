import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _regeneratorRuntime from "@babel/runtime/regenerator";
import { getImageInfo, getFileInfo } from '@atlaskit/media-ui';
export function getPreviewFromImage(_x, _x2) {
  return _getPreviewFromImage.apply(this, arguments);
}
function _getPreviewFromImage() {
  _getPreviewFromImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(file, devicePixelRatio) {
    var fileInfo, imageInfo, width, height, scaleFactor, preview;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return getFileInfo(file);
        case 2:
          fileInfo = _context.sent;
          _context.next = 5;
          return getImageInfo(fileInfo);
        case 5:
          imageInfo = _context.sent;
          if (!(imageInfo === null)) {
            _context.next = 10;
            break;
          }
          return _context.abrupt("return", {
            file: file
          });
        case 10:
          width = imageInfo.width, height = imageInfo.height, scaleFactor = imageInfo.scaleFactor;
          preview = {
            file: file,
            dimensions: {
              width: width,
              height: height
            },
            scaleFactor: devicePixelRatio || scaleFactor
          };
          return _context.abrupt("return", preview);
        case 13:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return _getPreviewFromImage.apply(this, arguments);
}
export var SCALE_FACTOR_DEFAULT = 1;