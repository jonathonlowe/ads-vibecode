import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
import React from 'react';
import AnalyticsErrorBoundary from '@atlaskit/analytics-next/AnalyticsErrorBoundary';
import { ANALYTICS_MEDIA_CHANNEL } from '@atlaskit/media-common';
var MediaPickerAnalyticsErrorBoundary = /*#__PURE__*/function (_React$Component) {
  function MediaPickerAnalyticsErrorBoundary() {
    _classCallCheck(this, MediaPickerAnalyticsErrorBoundary);
    return _callSuper(this, MediaPickerAnalyticsErrorBoundary, arguments);
  }
  _inherits(MediaPickerAnalyticsErrorBoundary, _React$Component);
  return _createClass(MediaPickerAnalyticsErrorBoundary, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        _this$props$data = _this$props.data,
        data = _this$props$data === void 0 ? {} : _this$props$data,
        children = _this$props.children;
      return /*#__PURE__*/React.createElement(AnalyticsErrorBoundary, {
        channel: ANALYTICS_MEDIA_CHANNEL,
        data: data
      }, children);
    }
  }]);
}(React.Component);
_defineProperty(MediaPickerAnalyticsErrorBoundary, "displayName", 'MediaPickerAnalyticsErrorBoundary');
export { MediaPickerAnalyticsErrorBoundary as default };