import React from 'react';
import { type WithMediaClientConfigProps } from '@atlaskit/media-client-react';
import { type DropzoneProps } from './dropzone';
import { type MediaPickerAnalyticsErrorBoundaryProps } from '../media-picker-analytics-error-boundary';
export type DropzoneWithMediaClientConfigProps = WithMediaClientConfigProps<DropzoneProps>;
type DropzoneWithMediaClientConfigComponent = React.ComponentType<DropzoneWithMediaClientConfigProps>;
type MediaPickerErrorBoundaryComponent = React.ComponentType<MediaPickerAnalyticsErrorBoundaryProps>;
export type State = {
    Dropzone?: DropzoneWithMediaClientConfigComponent;
    MediaPickerErrorBoundary?: MediaPickerErrorBoundaryComponent;
};
export declare class DropzoneLoader extends React.PureComponent<DropzoneWithMediaClientConfigProps, State> {
    static displayName: string;
    static Dropzone?: DropzoneWithMediaClientConfigComponent;
    static MediaPickerErrorBoundary?: MediaPickerErrorBoundaryComponent;
    state: {
        Dropzone: DropzoneWithMediaClientConfigComponent | undefined;
        MediaPickerErrorBoundary: MediaPickerErrorBoundaryComponent | undefined;
    };
    UNSAFE_componentWillMount(): Promise<void>;
    render(): React.JSX.Element | null;
}
export {};
