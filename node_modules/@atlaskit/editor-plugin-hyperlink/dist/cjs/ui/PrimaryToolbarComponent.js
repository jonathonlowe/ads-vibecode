"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PrimaryToolbarComponent = void 0;
var _react = require("react");
var _react2 = require("@emotion/react");
var _reactIntlNext = require("react-intl-next");
var _analytics = require("@atlaskit/editor-common/analytics");
var _keymaps = require("@atlaskit/editor-common/keymaps");
var _messages = require("@atlaskit/editor-common/messages");
var _uiMenu = require("@atlaskit/editor-common/ui-menu");
var _link = _interopRequireDefault(require("@atlaskit/icon/core/link"));
/* eslint-disable @atlaskit/design-system/no-css-tagged-template-expression -- needs manual remediation */
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var PrimaryToolbarComponentWithIntl = function PrimaryToolbarComponentWithIntl(_ref) {
  var api = _ref.api,
    intl = _ref.intl;
  var formatMessage = intl.formatMessage;
  var content = formatMessage(_messages.toolbarInsertBlockMessages.link);
  var onClick = (0, _react.useCallback)(function () {
    var _api$core, _api$hyperlink;
    api === null || api === void 0 || (_api$core = api.core) === null || _api$core === void 0 || _api$core.actions.execute(api === null || api === void 0 || (_api$hyperlink = api.hyperlink) === null || _api$hyperlink === void 0 ? void 0 : _api$hyperlink.commands.showLinkToolbar(_analytics.INPUT_METHOD.TOOLBAR));
  }, [api]);
  return (0, _react2.jsx)(_uiMenu.ToolbarButton, {
    onClick: onClick,
    "aria-haspopup": "dialog",
    "aria-keyshortcuts": (0, _keymaps.getAriaKeyshortcuts)(_keymaps.addLink),
    "aria-label": content,
    testId: content,
    title: content,
    iconBefore: (0, _react2.jsx)(_link.default, {
      label: content,
      color: "currentColor",
      spacing: "spacious"
    })
  });
};
var PrimaryToolbarComponent = exports.PrimaryToolbarComponent = (0, _reactIntlNext.injectIntl)(PrimaryToolbarComponentWithIntl);