import { emoji } from '@atlaskit/adf-schema';
import { convertToInlineCss } from '@atlaskit/editor-common/lazy-node-view';
import { editorExperiment } from '@atlaskit/tmp-editor-statsig/experiments';
const isSSR = Boolean(process.env.REACT_SSR);

/**
 * Wrapper for ADF emoji node spec to augment toDOM implementation
 * with fallback UI for lazy node view rendering / window virtualization
 * @nodeSpecException:toDOM patch
 * @returns
 */
export const emojiNodeSpec = () => {
  if (isSSR || editorExperiment('platform_editor_inline_node_virtualization', 'off')) {
    return emoji;
  }
  return {
    ...emoji,
    toDOM: node => emojiToDom(node)
  };
};
export function emojiToDom(node) {
  // From packages/elements/emoji/src/components/common/EmojiPlaceholder.tsx
  const {
    shortName,
    id,
    text
  } = node.attrs;
  const attrs = {
    'data-emoji-short-name': shortName,
    'data-emoji-id': id,
    'data-emoji-text': text,
    contenteditable: 'false',
    style: convertToInlineCss({
      content: "''",
      fill: "var(--ds-background-neutral, #091E420F)",
      minWidth: `20px`,
      width: `20px`,
      height: `20px`,
      position: 'relative',
      margin: '-1px 0',
      display: 'inline-block',
      background: "var(--ds-background-neutral, #091E420F)",
      borderRadius: "var(--ds-border-radius-100, 3px)",
      overflow: 'hidden',
      verticalAlign: 'middle',
      whiteSpace: 'nowrap',
      textAlign: 'center'
    }),
    'aria-busy': 'true',
    'aria-label': shortName,
    class: 'emoji-common-placeholder'
  };
  return ['span', attrs];
}