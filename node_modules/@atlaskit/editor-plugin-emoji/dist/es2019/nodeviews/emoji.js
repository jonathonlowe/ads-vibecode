import React from 'react';
import { useIntl } from 'react-intl-next';
import { messages } from '@atlaskit/editor-common/emoji';
import { useSharedPluginState } from '@atlaskit/editor-common/hooks';
import Emoji from '../ui/Emoji';
import { NdpEmoji } from '../ui/NdpEmoji';
const EmojiAssistiveTextComponent = /*#__PURE__*/React.memo(({
  emojiShortName
}) => {
  const intl = useIntl();
  return (
    /*#__PURE__*/
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop, @atlaskit/design-system/use-tokens-typography -- Ignored via go/DSP-18766
    React.createElement("span", {
      style: {
        fontSize: 0
      }
    }, `${intl.formatMessage(messages.emojiNodeLabel)} ${emojiShortName}`)
  );
});
const useEmojiProvider = pluginInjectionApi => {
  const {
    emojiState
  } = useSharedPluginState(pluginInjectionApi, ['emoji']);
  return emojiState === null || emojiState === void 0 ? void 0 : emojiState.emojiProvider;
};
export function EmojiNodeView(props) {
  var _props$options;
  const {
    shortName,
    id,
    text
  } = props.node.attrs;
  const emojiProvider = useEmojiProvider(props.api);
  if ((_props$options = props.options) !== null && _props$options !== void 0 && _props$options.emojiNodeDataProvider) {
    return /*#__PURE__*/React.createElement(NdpEmoji, {
      node: props.node,
      emojiNodeDataProvider: props.options.emojiNodeDataProvider
    });
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EmojiAssistiveTextComponent, {
    emojiShortName: shortName
  }), /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement(Emoji, {
    emojiProvider: emojiProvider,
    providers: props.providerFactory,
    id: id,
    shortName: shortName,
    fallback: text
  })));
}