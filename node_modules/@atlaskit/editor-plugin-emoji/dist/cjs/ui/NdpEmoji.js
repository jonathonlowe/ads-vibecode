"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NdpEmoji = NdpEmoji;
var _react = _interopRequireWildcard(require("react"));
var _react2 = require("@emotion/react");
var _reactIntlNext = require("react-intl-next");
var _emoji = require("@atlaskit/editor-common/emoji");
var _pluginHooks = require("@atlaskit/node-data-provider/plugin-hooks");
var _LoadableSimpleEmoji = require("./LoadableSimpleEmoji");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled

function NdpEmoji(props) {
  var emojiNode = props.node;
  var value = (0, _pluginHooks.useNodeDataProviderGet)({
    node: emojiNode,
    provider: props.emojiNodeDataProvider
  });
  if (value.state === 'loading') {
    return (0, _react2.jsx)(EmojiCommonWrapper, {
      emojiNode: emojiNode
    }, (0, _react2.jsx)(_LoadableSimpleEmoji.LoadableSimpleEmojiPlaceholder, {
      shortName: emojiNode.attrs.shortName
    }));
  }
  if (value.state === 'failed') {
    return (0, _react2.jsx)(EmojiCommonWrapper, {
      emojiNode: emojiNode
    }, (0, _react2.jsx)(_react.Fragment, null, emojiNode.attrs.text || emojiNode.attrs.shortName));
  }
  return (0, _react2.jsx)(EmojiCommonWrapper, {
    emojiNode: emojiNode
  }, (0, _react2.jsx)(_LoadableSimpleEmoji.LoadableSimpleEmoji, {
    emojiDescription: value.result
  }));
}
var clickSelectWrapperStyle = (0, _react2.css)({
  userSelect: 'all'
});
var EmojiAssistiveTextComponent = /*#__PURE__*/_react.default.memo(function (_ref) {
  var emojiShortName = _ref.emojiShortName;
  var intl = (0, _reactIntlNext.useIntl)();
  return (
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop, @atlaskit/design-system/use-tokens-typography -- Ignored via go/DSP-18766
    (0, _react2.jsx)("span", {
      style: {
        fontSize: 0
      }
    }, "".concat(intl.formatMessage(_emoji.messages.emojiNodeLabel), " ").concat(emojiShortName))
  );
});
function EmojiCommonWrapper(_ref2) {
  var emojiNode = _ref2.emojiNode,
    children = _ref2.children;
  return (0, _react2.jsx)(_react.Fragment, null, (0, _react2.jsx)(EmojiAssistiveTextComponent, {
    emojiShortName: emojiNode.attrs.shortName
  }), (0, _react2.jsx)("span", null, (0, _react2.jsx)("span", {
    css: clickSelectWrapperStyle
  }, (0, _react2.jsx)("span", {
    "data-emoji-id": emojiNode.attrs.id,
    "data-emoji-short-name": emojiNode.attrs.shortName,
    "data-emoji-text": emojiNode.attrs.text || emojiNode.attrs.shortName
  }, children))));
}