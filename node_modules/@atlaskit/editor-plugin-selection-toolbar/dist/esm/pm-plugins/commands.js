import { ACTION, ACTION_SUBJECT, ACTION_SUBJECT_ID, EVENT_TYPE } from '@atlaskit/editor-common/analytics';
import { TextSelection } from '@atlaskit/editor-prosemirror/state';
import { fg } from '@atlaskit/platform-feature-flags';
import { selectionToolbarPluginKey } from './plugin-key';
export var toggleToolbar = function toggleToolbar(_ref) {
  var hide = _ref.hide;
  return function (_ref2) {
    var tr = _ref2.tr;
    tr.setMeta(selectionToolbarPluginKey, {
      hide: hide
    });
    return tr;
  };
};
export var updateToolbarDocking = function updateToolbarDocking(_ref3) {
  var toolbarDocking = _ref3.toolbarDocking;
  return function (_ref4) {
    var tr = _ref4.tr;
    tr.setMeta(selectionToolbarPluginKey, {
      toolbarDocking: toolbarDocking
    });
    return tr;
  };
};
export var setToolbarDocking = function setToolbarDocking(_ref5) {
  var toolbarDocking = _ref5.toolbarDocking,
    userPreferencesProvider = _ref5.userPreferencesProvider,
    editorAnalyticsApi = _ref5.editorAnalyticsApi;
  return function (_ref6) {
    var tr = _ref6.tr;
    // We currently ignore any update failures, need to confirm this is the desired behaviour
    userPreferencesProvider === null || userPreferencesProvider === void 0 || userPreferencesProvider.updatePreference('toolbarDockingInitialPosition', toolbarDocking);
    tr.setMeta(selectionToolbarPluginKey, {
      toolbarDocking: toolbarDocking
    });
    if (toolbarDocking === 'top') {
      // Remove the selection if the toolbar is docked to the top
      tr.setSelection(TextSelection.create(tr.doc, tr.selection.head));
    }
    if (fg('platform_editor_controls_patch_2')) {
      editorAnalyticsApi === null || editorAnalyticsApi === void 0 || editorAnalyticsApi.attachAnalyticsEvent({
        action: ACTION.UPDATED,
        actionSubject: ACTION_SUBJECT.USER_PREFERENCES,
        actionSubjectId: ACTION_SUBJECT_ID.SELECTION_TOOLBAR_PREFERENCES,
        attributes: {
          toolbarDocking: toolbarDocking
        },
        eventType: EVENT_TYPE.TRACK
      })(tr);
    }
    return tr;
  };
};