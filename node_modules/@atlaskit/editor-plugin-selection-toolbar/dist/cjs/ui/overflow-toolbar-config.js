/* overflow-toolbar-config.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOverflowPrimaryToolbarConfig = exports.getOverflowFloatingToolbarConfig = void 0;
var React = _interopRequireWildcard(require("react"));
var _runtime = require("@compiled/react/runtime");
var _messages = require("@atlaskit/editor-common/messages");
var _dockToolbarTop = _interopRequireDefault(require("@atlaskit/icon-lab/core/dock-toolbar-top"));
var _minus = _interopRequireDefault(require("@atlaskit/icon/core/minus"));
var _checkMark = _interopRequireDefault(require("@atlaskit/icon/utility/check-mark"));
var _menu = require("@atlaskit/menu");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
// New editor controls
var getOverflowFloatingToolbarConfig = exports.getOverflowFloatingToolbarConfig = function getOverflowFloatingToolbarConfig(_ref) {
  var api = _ref.api,
    toolbarDocking = _ref.toolbarDocking,
    intl = _ref.intl;
  var isDockedToTop = toolbarDocking === 'top';
  var dropdownOptions = [{
    type: 'overflow-dropdown-heading',
    title: intl.formatMessage(_messages.selectionToolbarMessages.toolbarAppears)
  }, {
    title: intl.formatMessage(_messages.selectionToolbarMessages.toolbarPositionInline),
    onClick: function onClick() {
      var _api$selectionToolbar, _api$selectionToolbar2, _api$selectionToolbar3;
      return (_api$selectionToolbar = api === null || api === void 0 || (_api$selectionToolbar2 = api.selectionToolbar.actions) === null || _api$selectionToolbar2 === void 0 || (_api$selectionToolbar3 = _api$selectionToolbar2.setToolbarDocking) === null || _api$selectionToolbar3 === void 0 ? void 0 : _api$selectionToolbar3.call(_api$selectionToolbar2, 'none')) !== null && _api$selectionToolbar !== void 0 ? _api$selectionToolbar : false;
    },
    icon: (0, _minus.default)({
      label: ''
    }),
    selected: !isDockedToTop,
    elemAfter: !isDockedToTop ? /*#__PURE__*/React.createElement(_checkMark.default, {
      label: ""
    }) : undefined
  }, {
    title: intl.formatMessage(_messages.selectionToolbarMessages.toolbarPositionFixedAtTop),
    onClick: function onClick() {
      var _api$selectionToolbar4, _api$selectionToolbar5, _api$selectionToolbar6;
      return (_api$selectionToolbar4 = api === null || api === void 0 || (_api$selectionToolbar5 = api.selectionToolbar.actions) === null || _api$selectionToolbar5 === void 0 || (_api$selectionToolbar6 = _api$selectionToolbar5.setToolbarDocking) === null || _api$selectionToolbar6 === void 0 ? void 0 : _api$selectionToolbar6.call(_api$selectionToolbar5, 'top')) !== null && _api$selectionToolbar4 !== void 0 ? _api$selectionToolbar4 : false;
    },
    icon: (0, _dockToolbarTop.default)({
      label: ''
    }),
    selected: isDockedToTop,
    elemAfter: isDockedToTop ? /*#__PURE__*/React.createElement(_checkMark.default, {
      label: ""
    }) : undefined
  }];
  return [{
    type: 'separator',
    fullHeight: true
  }, {
    type: 'overflow-dropdown',
    dropdownWidth: 240,
    options: dropdownOptions
  }];
};
var getOverflowPrimaryToolbarConfig = exports.getOverflowPrimaryToolbarConfig = function getOverflowPrimaryToolbarConfig(_ref2) {
  var api = _ref2.api,
    intl = _ref2.intl;
  return [{
    items: [{
      content: /*#__PURE__*/React.createElement(_menu.HeadingItem, null, intl.formatMessage(_messages.selectionToolbarMessages.toolbarAppears)),
      value: {
        name: ''
      },
      isDisabled: true
    }, {
      content: intl.formatMessage(_messages.selectionToolbarMessages.toolbarPositionInline),
      value: {
        name: 'contextual'
      },
      onClick: function onClick() {
        var _api$selectionToolbar7, _api$selectionToolbar8, _api$selectionToolbar9;
        return (_api$selectionToolbar7 = api === null || api === void 0 || (_api$selectionToolbar8 = api.selectionToolbar.actions) === null || _api$selectionToolbar8 === void 0 || (_api$selectionToolbar9 = _api$selectionToolbar8.setToolbarDocking) === null || _api$selectionToolbar9 === void 0 ? void 0 : _api$selectionToolbar9.call(_api$selectionToolbar8, 'none')) !== null && _api$selectionToolbar7 !== void 0 ? _api$selectionToolbar7 : false;
      },
      elemBefore: (0, _minus.default)({
        label: ''
      })
    }, {
      content: intl.formatMessage(_messages.selectionToolbarMessages.toolbarPositionFixedAtTop),
      value: {
        name: 'fixed'
      },
      onClick: function onClick() {
        var _api$selectionToolbar10, _api$selectionToolbar11, _api$selectionToolbar12;
        return (_api$selectionToolbar10 = api === null || api === void 0 || (_api$selectionToolbar11 = api.selectionToolbar.actions) === null || _api$selectionToolbar11 === void 0 || (_api$selectionToolbar12 = _api$selectionToolbar11.setToolbarDocking) === null || _api$selectionToolbar12 === void 0 ? void 0 : _api$selectionToolbar12.call(_api$selectionToolbar11, 'top')) !== null && _api$selectionToolbar10 !== void 0 ? _api$selectionToolbar10 : false;
      },
      isActive: true,
      elemBefore: (0, _dockToolbarTop.default)({
        label: ''
      }),
      elemAfter: /*#__PURE__*/React.createElement(_checkMark.default, {
        label: ""
      })
    }]
  }];
};