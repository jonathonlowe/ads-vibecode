"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.updateToolbarDocking = exports.toggleToolbar = exports.setToolbarDocking = void 0;
var _analytics = require("@atlaskit/editor-common/analytics");
var _state = require("@atlaskit/editor-prosemirror/state");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _pluginKey = require("./plugin-key");
var toggleToolbar = exports.toggleToolbar = function toggleToolbar(_ref) {
  var hide = _ref.hide;
  return function (_ref2) {
    var tr = _ref2.tr;
    tr.setMeta(_pluginKey.selectionToolbarPluginKey, {
      hide: hide
    });
    return tr;
  };
};
var updateToolbarDocking = exports.updateToolbarDocking = function updateToolbarDocking(_ref3) {
  var toolbarDocking = _ref3.toolbarDocking;
  return function (_ref4) {
    var tr = _ref4.tr;
    tr.setMeta(_pluginKey.selectionToolbarPluginKey, {
      toolbarDocking: toolbarDocking
    });
    return tr;
  };
};
var setToolbarDocking = exports.setToolbarDocking = function setToolbarDocking(_ref5) {
  var toolbarDocking = _ref5.toolbarDocking,
    userPreferencesProvider = _ref5.userPreferencesProvider,
    editorAnalyticsApi = _ref5.editorAnalyticsApi;
  return function (_ref6) {
    var tr = _ref6.tr;
    // We currently ignore any update failures, need to confirm this is the desired behaviour
    userPreferencesProvider === null || userPreferencesProvider === void 0 || userPreferencesProvider.updatePreference('toolbarDockingInitialPosition', toolbarDocking);
    tr.setMeta(_pluginKey.selectionToolbarPluginKey, {
      toolbarDocking: toolbarDocking
    });
    if (toolbarDocking === 'top') {
      // Remove the selection if the toolbar is docked to the top
      tr.setSelection(_state.TextSelection.create(tr.doc, tr.selection.head));
    }
    if ((0, _platformFeatureFlags.fg)('platform_editor_controls_patch_2')) {
      editorAnalyticsApi === null || editorAnalyticsApi === void 0 || editorAnalyticsApi.attachAnalyticsEvent({
        action: _analytics.ACTION.UPDATED,
        actionSubject: _analytics.ACTION_SUBJECT.USER_PREFERENCES,
        actionSubjectId: _analytics.ACTION_SUBJECT_ID.SELECTION_TOOLBAR_PREFERENCES,
        attributes: {
          toolbarDocking: toolbarDocking
        },
        eventType: _analytics.EVENT_TYPE.TRACK
      })(tr);
    }
    return tr;
  };
};