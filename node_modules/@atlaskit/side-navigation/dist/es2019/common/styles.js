import { B400, B50, N30, N500 } from '@atlaskit/theme/colors';
/**
 * Allows chaining of style functions on top of base style functions
 * @param baseStyle the base custom cssFn
 * @param newStyle a new cssFn to be applied after the base style
 *
 * @deprecated Please avoid using this prop as we intend to remove the prop completely in a future release. See DSP-2682 for more information.
 */
export const overrideStyleFunction = (baseStyle, newStyle = () => ({})) => {
  return state => {
    return [baseStyle(state), newStyle(state)];
  };
};
const defaultStyles = {
  '&:hover': {
    color: `var(--ds-text-subtle, ${N500})`,
    backgroundColor: `var(--ds-background-neutral-subtle-hovered, ${N30})`
  },
  '&:active': {
    color: `var(--ds-text-subtle, ${B400})`,
    backgroundColor: `var(--ds-background-neutral-subtle-pressed, ${B50})`
  }
};
const selectedStyles = {
  backgroundColor: `var(--ds-background-selected, ${N30})`,
  color: `var(--ds-text-selected, ${B400})`,
  ':visited': {
    color: `var(--ds-text-selected, ${B400})`
  },
  '&:hover': {
    backgroundColor: `var(--ds-background-selected-hovered, ${N30})`,
    color: `var(--ds-text-selected, ${N500})`
  },
  '&:active': {
    backgroundColor: `var(--ds-background-selected-pressed, ${B50})`,
    color: `var(--ds-text-selected, ${B400})`
  }
};
export const baseSideNavItemStyle = ({
  isSelected,
  isDisabled
}) => {
  return {
    // This padding is set to ensure that the center of the left icon
    // is approximately center aligned with the horizontal app switcher.
    paddingBlock: "var(--ds-space-100, 8px)",
    paddingInline: "var(--ds-space-100, 8px)",
    borderRadius: "var(--ds-border-radius, 3px)",
    // -- TODO: DELETE THESE COLOR OVERRIDES WHEN CLEANING UP FALLBACK THEMING --
    // Menu and side navigation are now color aligned so they do not need this!
    // See: https://product-fabric.atlassian.net/browse/DSP-1684
    backgroundColor: "var(--ds-background-neutral-subtle, transparent)",
    ...(!isDisabled && !isSelected && defaultStyles),
    ...(!isDisabled && isSelected && selectedStyles),
    // -- END TODO --------------------------------------------------------------

    ['& [data-item-elem-before]']: {
      height: '1.5rem',
      width: '1.5rem'
    }
  };
};
export const sectionHeaderSpacingStyles = () => {
  return {
    paddingInline: "var(--ds-space-100, 8px)"
  };
};