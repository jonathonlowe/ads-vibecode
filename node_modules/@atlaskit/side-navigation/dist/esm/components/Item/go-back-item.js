import _extends from "@babel/runtime/helpers/extends";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["cssFn", "iconBefore", "onClick", "isSelected"];
import React, { forwardRef, useCallback, useState } from 'react';
import ArrowLeftIcon from '@atlaskit/icon/core/migration/arrow-left--arrow-left-circle';
import { N10 } from '@atlaskit/theme/colors';
import ButtonItem from './button-item';
/**
 * __Go back item__
 *
 * A go back item is used to provide a customized "go back" button in nested
 * navigations.
 *
 * - [Examples](https://atlassian.design/components/side-navigation/examples#go-back-item)
 * - [Code](https://atlassian.design/components/side-navigation/code)
 */
var GoBackItem = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var cssFn = _ref.cssFn,
    _ref$iconBefore = _ref.iconBefore,
    iconBefore = _ref$iconBefore === void 0 ? /*#__PURE__*/React.createElement(ArrowLeftIcon, {
      color: "currentColor",
      LEGACY_secondaryColor: "var(--ds-surface, ".concat(N10, ")"),
      label: ""
    }) : _ref$iconBefore,
    onClick = _ref.onClick,
    isSelected = _ref.isSelected,
    rest = _objectWithoutProperties(_ref, _excluded);
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    isInteracted = _useState2[0],
    setIsInteracted = _useState2[1];
  var onClickHandler = useCallback(function (e) {
    if (isInteracted) {
      return;
    }
    setIsInteracted(true);
    onClick && onClick(e);
  }, [onClick, isInteracted]);
  return /*#__PURE__*/React.createElement(ButtonItem, _extends({
    isSelected: isSelected
    // eslint-disable-next-line @repo/internal/react/no-unsafe-overrides
    ,
    cssFn: cssFn,
    iconBefore: iconBefore,
    onClick: onClickHandler,
    ref: ref
  }, rest));
});
export default GoBackItem;