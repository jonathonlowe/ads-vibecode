/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
require("./index.compiled.css");
var _react = _interopRequireWildcard(require("react"));
var React = _react;
var _runtime = require("@compiled/react/runtime");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _menu = require("@atlaskit/menu");
var _colors = require("@atlaskit/theme/colors");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var sidebarMinWidth = '240px';
var sideNavStyles = null;

/**
 * __Side navigation__
 *
 * A highly composable side navigation component that supports nested views.
 *
 * - [Examples](https://atlassian.design/components/side-navigation/examples)
 * - [Code](https://atlassian.design/components/side-navigation/code)
 * - [Usage](https://atlassian.design/components/side-navigation/usage)
 */
var SideNavigation = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var children = props.children,
    testId = props.testId,
    label = props.label,
    _props$isServer = props.isServer,
    isServer = _props$isServer === void 0 ? false : _props$isServer,
    _props$isSSRPlacehold = props.isSSRPlaceholderEnabled,
    isSSRPlaceholderEnabled = _props$isSSRPlacehold === void 0 ? false : _props$isSSRPlacehold;
  return /*#__PURE__*/React.createElement("nav", (0, _extends2.default)({
    ref: ref,
    "data-testid": testId,
    "aria-label": label,
    "data-vc": "side-navigation".concat(isServer ? '-ssr' : '')
  }, isServer && isSSRPlaceholderEnabled && {
    'data-ssr-placeholder': 'side-navigation-placeholder'
  }, !isServer && isSSRPlaceholderEnabled && {
    'data-ssr-placeholder-replace': 'side-navigation-placeholder'
  }, {
    className: (0, _runtime.ax)(["_1reo15vq _18m915vq _1e0c1txw _1bsb1osq _1ul9p3fh _4t3i1osq _kqswh2mm _2lx21bp4 _bfhkxkvu _syaz1425"]),
    style: {
      "--_4p0s90": (0, _runtime.ix)("var(--ds-surface, ".concat(_colors.N10, ")")),
      "--_13a5t4u": (0, _runtime.ix)("var(--ds-text-subtle, ".concat(_colors.N500, ")"))
    }
  }), /*#__PURE__*/React.createElement(_menu.SELECTION_STYLE_CONTEXT_DO_NOT_USE.Provider, {
    value: "notch"
  }, children));
});
var _default = exports.default = SideNavigation;