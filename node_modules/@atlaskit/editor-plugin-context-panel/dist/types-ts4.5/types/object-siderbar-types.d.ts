import { type FC } from 'react';
import type { MessageDescriptor } from 'react-intl-next';
export type ObjectSidebarBehavior = 'push' | 'cover';
export type ObjectSidebarPanelCloseOptions = {
    canClosePanel?: () => boolean;
    onPanelClose?: () => void;
};
type PanelElement = FC | (() => React.ReactElement<any, any> | null);
export type ObjectSidebarPanel = {
    id: string;
    headerComponentElements: {
        HeaderIcon?: PanelElement;
        headerLabel?: MessageDescriptor;
        HeaderAfterIconElement?: PanelElement;
        HeaderRightAlignedElement?: PanelElement;
        HeaderBeforeIconElement?: PanelElement;
        headerStyles?: {
            setGrayBackground?: boolean;
        };
    };
    BodyComponent: PanelElement;
    FooterComponent?: PanelElement;
    closeOptions?: ObjectSidebarPanelCloseOptions;
};
export type ShowObjectSidebar = (panel: ObjectSidebarPanel, behavior?: ObjectSidebarBehavior, panelWidth?: number) => void;
export type HideObjectSidebar = () => void;
export type HideObjectSidebarById = (id: ObjectSidebarPanel['id']) => void;
export {};
