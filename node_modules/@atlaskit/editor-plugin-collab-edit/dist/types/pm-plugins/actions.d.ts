import { type EditorAnalyticsAPI } from '@atlaskit/editor-common/analytics';
import type { CollabEventConnectionData, CollabEventInitData, CollabEventPresenceData, CollabEventRemoteData, CollabSendableSelection, CollabTelepointerPayload } from '@atlaskit/editor-common/collab';
import type { Selection } from '@atlaskit/editor-prosemirror/state';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { PrivateCollabEditOptions } from '../types';
export declare const registerAllCustomSteps: () => void;
export declare const handleInit: (initData: CollabEventInitData, view: EditorView, options?: PrivateCollabEditOptions, editorAnalyticsApi?: EditorAnalyticsAPI) => void;
export declare const handleConnection: (connectionData: CollabEventConnectionData, view: EditorView) => void;
export declare const handlePresence: (presenceData: CollabEventPresenceData, view: EditorView) => void;
export declare const applyRemoteData: (remoteData: CollabEventRemoteData, view: EditorView, options: PrivateCollabEditOptions) => void;
export declare const applyRemoteSteps: (json: any[], view: EditorView, userIds?: (number | string)[], options?: PrivateCollabEditOptions) => void;
export declare const handleTelePointer: (telepointerData: CollabTelepointerPayload, view: EditorView) => void;
export declare const getSendableSelection: (selection: Selection) => CollabSendableSelection;
