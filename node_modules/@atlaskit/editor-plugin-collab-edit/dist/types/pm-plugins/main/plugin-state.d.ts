import type { ReadonlyTransaction } from '@atlaskit/editor-prosemirror/state';
import { DecorationSet } from '@atlaskit/editor-prosemirror/view';
import type { ReadOnlyParticipants } from '../../types';
import { Participants } from '../participants';
/**
 * Returns position where it's possible to place a decoration.
 */
export declare const getValidPos: (tr: ReadonlyTransaction, pos: number) => number;
export declare class PluginState {
    private decorationSet;
    private participants;
    private onError;
    private sid?;
    isReady: boolean;
    get decorations(): DecorationSet;
    get activeParticipants(): ReadOnlyParticipants;
    get sessionId(): string | undefined;
    constructor(decorations: DecorationSet, participants: Participants, sessionId?: string, collabInitalised?: boolean, onError?: (err: Error) => void);
    getInitial(sessionId: string): string;
    getPresenceId(sessionId: string): string;
    apply(tr: ReadonlyTransaction): PluginState;
    static eq(a: PluginState, b: PluginState): boolean;
    static init(config: any): PluginState;
}
