import React from 'react';
import { useSharedPluginState } from '@atlaskit/editor-common/hooks';
import { ASSETS_LIST_OF_LINKS_DATASOURCE_ID, AssetsConfigModal, CONFLUENCE_SEARCH_DATASOURCE_ID, ConfluenceSearchConfigModal, JIRA_LIST_OF_LINKS_DATASOURCE_ID, JiraIssuesConfigModal } from '@atlaskit/link-datasource';
import { EditorSmartCardProviderValueGuard, useSmartLinkContext } from '@atlaskit/link-provider';
import { DatasourceErrorBoundary } from '../datasourceErrorBoundary';
import { DatasourceModal } from './index';
const ModalWithState = ({
  api,
  editorView
}) => {
  const cardContext = useSmartLinkContext();
  const {
    cardState
  } = useSharedPluginState(api, ['card']);
  if (!cardState) {
    return null;
  }
  const {
    showDatasourceModal,
    datasourceModalType
  } = cardState;
  if (!showDatasourceModal || !datasourceModalType) {
    return null;
  }
  const {
    datasourceId,
    componentType
  } = modalTypeToComponentMap[datasourceModalType];
  return /*#__PURE__*/React.createElement(DatasourceErrorBoundary, {
    view: editorView,
    datasourceModalType: datasourceModalType
  }, /*#__PURE__*/React.createElement(DatasourceModal, {
    view: editorView,
    cardContext: cardContext,
    datasourceId: datasourceId,
    componentType: componentType
  }));
};
const SafeModalWithState = /*#__PURE__*/React.memo(({
  api,
  editorView
}) => {
  return /*#__PURE__*/React.createElement(EditorSmartCardProviderValueGuard, null, /*#__PURE__*/React.createElement(ModalWithState, {
    api: api,
    editorView: editorView
  }));
});
export const modalTypeToComponentMap = {
  jira: {
    componentType: JiraIssuesConfigModal,
    datasourceId: JIRA_LIST_OF_LINKS_DATASOURCE_ID
  },
  'confluence-search': {
    componentType: ConfluenceSearchConfigModal,
    datasourceId: CONFLUENCE_SEARCH_DATASOURCE_ID
  },
  assets: {
    componentType: AssetsConfigModal,
    datasourceId: ASSETS_LIST_OF_LINKS_DATASOURCE_ID
  }
};
export default SafeModalWithState;