"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ToolbarViewedEvent = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _useAnalyticsEvents2 = require("@atlaskit/analytics-next/useAnalyticsEvents");
var _linkProvider = require("@atlaskit/link-provider");
var _utils = require("../pm-plugins/utils");
var _EditorAnalyticsContext = require("./EditorAnalyticsContext");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
/**
 * Handles firing the toolbar viewed event
 */
var ToolbarViewedEventBase = function ToolbarViewedEventBase(_ref) {
  var url = _ref.url,
    display = _ref.display,
    cardContext = _ref.cardContext;
  var _useAnalyticsEvents = (0, _useAnalyticsEvents2.useAnalyticsEvents)(),
    createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;
  var store = cardContext === null || cardContext === void 0 ? void 0 : cardContext.store;
  (0, _react.useEffect)(function () {
    createAnalyticsEvent({
      action: 'viewed',
      actionSubject: 'inlineDialog',
      actionSubjectId: 'editLinkToolbar',
      eventType: 'ui',
      attributes: _objectSpread(_objectSpread({}, (0, _utils.getResolvedAttributesFromStore)(url, display, store)), {}, {
        display: display
      })
    }).fire('media');
  }, [createAnalyticsEvent, display, url, store]);
  return null;
};

/**
 * Provides analytics context and card context
 */
var ToolbarViewedEvent = exports.ToolbarViewedEvent = function ToolbarViewedEvent(_ref2) {
  var url = _ref2.url,
    display = _ref2.display,
    editorView = _ref2.editorView;
  var cardContext = (0, _linkProvider.useSmartLinkContext)();
  return /*#__PURE__*/_react.default.createElement(_EditorAnalyticsContext.EditorAnalyticsContext, {
    editorView: editorView
  }, url ? /*#__PURE__*/_react.default.createElement(ToolbarViewedEventBase, {
    url: url,
    display: display,
    cardContext: cardContext
  }) : null);
};