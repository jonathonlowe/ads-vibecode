"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isDatasourceTableLayout = exports.getDatasource = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _utils = require("@atlaskit/editor-prosemirror/utils");
var _utils2 = require("../../pm-plugins/utils");
var _types = require("./types");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var getDatasource = exports.getDatasource = function getDatasource(editorView) {
  var _editorView$state = editorView.state,
    selection = _editorView$state.selection,
    schema = _editorView$state.schema;
  var blockCard = schema.nodes.blockCard;
  var findResult = (0, _utils.findSelectedNodeOfType)([blockCard])(selection);
  if (findResult && (0, _utils2.isDatasourceNode)(findResult.node)) {
    return _objectSpread(_objectSpread({}, findResult), {}, {
      node: findResult.node
    });
  }
  return {
    node: undefined,
    pos: undefined
  };
};
var isDatasourceTableLayout = exports.isDatasourceTableLayout = function isDatasourceTableLayout(layout) {
  return _types.DATASOURCE_TABLE_LAYOUTS.some(function (l) {
    return l === layout;
  });
};