"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.lazyInlineCardView = void 0;
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));
var _lazyNodeView = require("@atlaskit/editor-common/lazy-node-view");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _experiments = require("@atlaskit/tmp-editor-statsig/experiments");
var _inlineCard = require("./inlineCard");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != (0, _typeof2.default)(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var lazyInlineCardView = exports.lazyInlineCardView = function lazyInlineCardView(props) {
  var isPageSSRed = props.isPageSSRed || false;
  if ((0, _experiments.editorExperiment)('platform_editor_exp_lazy_node_views', false) || isPageSSRed && (0, _platformFeatureFlags.fg)('platform_ssr_smartlinks_editor')) {
    return (0, _inlineCard.inlineCardNodeView)(props);
  }
  return (0, _lazyNodeView.withLazyLoading)({
    nodeName: 'inlineCard',
    getNodeViewOptions: function getNodeViewOptions() {},
    loader: function loader() {
      var result = Promise.resolve().then(function () {
        return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_editor-plugin-inline-card-item-nodeview" */
        './inlineCard'));
      }).then(function (_ref) {
        var inlineCardNodeView = _ref.inlineCardNodeView;
        return inlineCardNodeView(props);
      });
      return result;
    }
  });
};