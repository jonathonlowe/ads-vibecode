import React from 'react';
import type { DatasourceModalType } from '@atlaskit/editor-common/types';
import type { APIError } from '@atlaskit/linking-common';
import type { DatasourceProps } from '../nodeviews/datasource';
export type DatasourceErrorBoundaryProps = React.PropsWithChildren<{
    url?: string;
    unsupportedComponent?: React.ComponentType<React.PropsWithChildren<unknown>>;
    handleError?: () => void;
    view: DatasourceProps['view'];
    datasourceModalType?: DatasourceModalType;
    datasourceId?: string;
}>;
export declare class DatasourceErrorBoundary extends React.Component<DatasourceErrorBoundaryProps> {
    state: {
        isError: boolean;
        error: null;
    };
    static getDerivedStateFromError(error: Error | APIError): {
        isError: boolean;
        error: Error | APIError;
    };
    componentDidCatch(error: Error | APIError): void;
    render(): string | number | boolean | Iterable<React.ReactNode> | React.JSX.Element | null | undefined;
}
