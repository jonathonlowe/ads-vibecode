import { type Node } from '@atlaskit/editor-prosemirror/model';
import { type ReadonlyTransaction, type Transaction } from '@atlaskit/editor-prosemirror/state';
import { type Entity, EVENT_SUBJECT } from './types';
export declare function isDatasourceNode(node: Node): boolean;
/**
 * Determine if a node is considered to be a link
 */
export declare const isLinkNode: (node: Node) => boolean;
export declare function getNodeSubject(node: Node): EVENT_SUBJECT | null;
/**
 * Analytics appearance for link object
 */
export declare function appearanceForLink(node: Node): "url" | import("@atlaskit/editor-common/provider-factory").CardAppearance;
export declare function getUrl(node: Node): string | undefined;
export declare const getNodeContext: (doc: Node, pos: number) => string;
export declare const findAtPositions: (tr: Transaction | ReadonlyTransaction, positions: number[]) => Entity[];
export declare const findInNodeRange: (doc: Node, from: number, to: number, predicate: (node: Node) => boolean) => Entity[];
/**
 * Returns whether or not two sets of links appear to likely be the same set of links
 * That they are in the same order and that both their hrefs and appearances match
 */
export declare const areSameNodes: (setA: Entity[], setB: Entity[]) => boolean;
