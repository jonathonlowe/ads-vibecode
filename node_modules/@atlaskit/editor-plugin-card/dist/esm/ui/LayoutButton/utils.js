import _defineProperty from "@babel/runtime/helpers/defineProperty";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
import { findSelectedNodeOfType } from '@atlaskit/editor-prosemirror/utils';
import { isDatasourceNode } from '../../pm-plugins/utils';
import { DATASOURCE_TABLE_LAYOUTS } from './types';
export var getDatasource = function getDatasource(editorView) {
  var _editorView$state = editorView.state,
    selection = _editorView$state.selection,
    schema = _editorView$state.schema;
  var blockCard = schema.nodes.blockCard;
  var findResult = findSelectedNodeOfType([blockCard])(selection);
  if (findResult && isDatasourceNode(findResult.node)) {
    return _objectSpread(_objectSpread({}, findResult), {}, {
      node: findResult.node
    });
  }
  return {
    node: undefined,
    pos: undefined
  };
};
export var isDatasourceTableLayout = function isDatasourceTableLayout(layout) {
  return DATASOURCE_TABLE_LAYOUTS.some(function (l) {
    return l === layout;
  });
};