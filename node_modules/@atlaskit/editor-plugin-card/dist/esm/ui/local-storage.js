import { StorageClient } from '@atlaskit/frontend-utilities';
export var LOCAL_STORAGE_CLIENT_KEY = '@atlaskit/editor-plugin-card';
export var LOCAL_STORAGE_DISCOVERED_KEY = 'discovered';
export var LOCAL_STORAGE_DISCOVERY_KEY_SMART_LINK = 'smart-link-upgrade-pulse';
export var LOCAL_STORAGE_DISCOVERY_KEY_TOOLBAR = 'toolbar-upgrade-pulse';
export var ONE_DAY_IN_MILLISECONDS = 86400000;
var storageClient = new StorageClient(LOCAL_STORAGE_CLIENT_KEY);
export var isLocalStorageKeyDiscovered = function isLocalStorageKeyDiscovered(key) {
  try {
    var localStorageValue = storageClient.getItem(key);
    return !!localStorageValue && localStorageValue === LOCAL_STORAGE_DISCOVERED_KEY;
  } catch (_unused) {
    // If localStorage is not available, don't show feature discovery component. Treat it as 'discovered'.
    return true;
  }
};
export var markLocalStorageKeyDiscovered = function markLocalStorageKeyDiscovered(key, expiration) {
  try {
    storageClient.setItemWithExpiry(key, LOCAL_STORAGE_DISCOVERED_KEY, expiration);
  } catch (_unused2) {
    // silent error
  }
};