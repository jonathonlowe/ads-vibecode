import type { CardProvider } from '@atlaskit/editor-common/provider-factory';
import type { DatasourceModalType } from '@atlaskit/editor-common/types';
import type { Transaction } from '@atlaskit/editor-prosemirror/state';
import type { DatasourceAdfView } from '@atlaskit/linking-common';
import type { SmartLinkEvents } from '@atlaskit/smart-card';
import type { CardInfo, CardPluginAction, Request } from '../types';
import type { DatasourceTableLayout } from '../ui/LayoutButton/types';
export declare const cardAction: (tr: Transaction, action: CardPluginAction) => Transaction;
export declare const resolveCard: (url: string) => (tr: Transaction) => Transaction;
export declare const queueCards: (requests: Request[]) => (tr: Transaction) => Transaction;
export declare const registerCard: (info: CardInfo) => (tr: Transaction) => Transaction;
export declare const removeCard: (info: Partial<CardInfo>) => (tr: Transaction) => Transaction;
export declare const registerRemoveOverlay: (callback: () => void, info?: CardInfo) => (tr: Transaction) => Transaction;
export declare const registerSmartCardEvents: (smartLinkEvents: SmartLinkEvents) => (tr: Transaction) => Transaction;
export declare const setProvider: (cardProvider: CardProvider | null) => (tr: Transaction) => Transaction;
export declare const setDatasourceTableRef: (datasourceTableRef?: HTMLElement) => (tr: Transaction) => Transaction;
export declare const setCardLayout: (layout: DatasourceTableLayout) => (tr: Transaction) => Transaction;
export declare const setCardLayoutAndDatasourceTableRef: ({ layout, datasourceTableRef, }: {
    layout: DatasourceTableLayout;
    datasourceTableRef?: HTMLElement | undefined;
}) => (tr: Transaction) => Transaction;
export declare const showLinkToolbar: (tr: Transaction) => Transaction;
export declare const hideLinkToolbar: (tr: Transaction) => Transaction;
export declare const showDatasourceModal: (modalType: DatasourceModalType) => (tr: Transaction) => Transaction;
export declare const hideDatasourceModal: (tr: Transaction) => Transaction;
export declare const clearOverlayCandidate: (tr: Transaction) => Transaction;
export declare const setDatasourceStash: (tr: Transaction, datasourceStash: {
    url: string;
    views: DatasourceAdfView[];
}) => Transaction;
export declare const removeDatasourceStash: (tr: Transaction, url: string) => Transaction;
