import React from 'react';
export type PulseDiscoveryMode = 'start' | 'iteration';
export interface PulseProps {
    /**
     * The component around which the Pulse should be displayed
     */
    children: JSX.Element;
    /**
     * The key that is used in local storage to identify the descoverability of a feature where the Pulse is used
     */
    localStorageKey: string;
    /**
     * The time in ms after which the key in local storage will be considered expired and the Pulse will be shown again
     */
    localStorageKeyExpirationInMs?: number;
    /**
     * Indicates when the feature is considered discovered. If "start" is passed, local storage key will be invalidated
     * as soon as the animation starts. If "iteration" is passed (the default one), it will be invalidated after the first iteration
     */
    discoveryMode?: PulseDiscoveryMode;
    shouldShowPulse?: boolean;
    testId?: string;
    isInline?: boolean;
}
export declare const DiscoveryPulse: ({ children, localStorageKey, localStorageKeyExpirationInMs, discoveryMode, shouldShowPulse, testId, isInline, }: PulseProps) => React.JSX.Element;
