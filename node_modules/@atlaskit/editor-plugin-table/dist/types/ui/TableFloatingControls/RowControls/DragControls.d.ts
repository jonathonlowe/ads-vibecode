import React from 'react';
import type { ExtractInjectionAPI } from '@atlaskit/editor-common/types';
import type { Node as PmNode } from '@atlaskit/editor-prosemirror/model';
import type { Selection } from '@atlaskit/editor-prosemirror/state';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { TablePlugin } from '../../../tablePluginType';
import type { CellHoverMeta } from '../../../types';
type DragControlsProps = {
    editorView: EditorView;
    tableRef: HTMLTableElement;
    tableNode?: PmNode;
    tableWidth: number;
    tableActive?: boolean;
    hoveredCell?: CellHoverMeta;
    isInDanger?: boolean;
    isTableHovered?: boolean;
    isResizing?: boolean;
    hoverRows: (rows: number[], danger?: boolean) => void;
    selectRow: (row: number, expand: boolean) => void;
    selectRows: (rowIndexes: number[]) => void;
    updateCellHoverLocation: (rowIndex: number) => void;
    api?: ExtractInjectionAPI<TablePlugin>;
    selection?: Selection;
};
export declare const DragControls: ({ tableRef, tableNode, tableWidth, hoveredCell, tableActive, editorView, isInDanger, isResizing, isTableHovered, hoverRows, selectRow, selectRows, updateCellHoverLocation, api, selection, }: DragControlsProps) => React.JSX.Element | null;
export declare const DragControlsWithSelection: ({ editorView, tableRef, tableNode, tableWidth, tableActive, hoveredCell, isInDanger, isTableHovered, isResizing, hoverRows, selectRow, selectRows, updateCellHoverLocation, api, }: Exclude<DragControlsProps, 'selection'>) => React.JSX.Element;
export {};
