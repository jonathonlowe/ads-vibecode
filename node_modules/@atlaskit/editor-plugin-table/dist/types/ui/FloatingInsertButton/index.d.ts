import React from 'react';
import type { WrappedComponentProps } from 'react-intl-next';
import type { DispatchAnalyticsEvent, EditorAnalyticsAPI } from '@atlaskit/editor-common/analytics';
import type { GetEditorContainerWidth, GetEditorFeatureFlags } from '@atlaskit/editor-common/types';
import type { Node as PmNode } from '@atlaskit/editor-prosemirror/model';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { PluginInjectionAPI } from '../../types';
export interface Props {
    editorView: EditorView;
    getEditorContainerWidth: GetEditorContainerWidth;
    tableRef?: HTMLElement;
    tableNode?: PmNode;
    insertColumnButtonIndex?: number;
    insertRowButtonIndex?: number;
    isHeaderColumnEnabled?: boolean;
    isHeaderRowEnabled?: boolean;
    isDragAndDropEnabled?: boolean;
    isTableScalingEnabled?: boolean;
    mountPoint?: HTMLElement;
    boundariesElement?: HTMLElement;
    scrollableElement?: HTMLElement;
    hasStickyHeaders?: boolean;
    api: PluginInjectionAPI | undefined | null;
    dispatchAnalyticsEvent?: DispatchAnalyticsEvent;
    editorAnalyticsAPI?: EditorAnalyticsAPI;
    getEditorFeatureFlags?: GetEditorFeatureFlags;
    isChromelessEditor?: boolean;
    isCommentEditor?: boolean;
}
export declare class FloatingInsertButton extends React.Component<Props & WrappedComponentProps, any> {
    static displayName: string;
    constructor(props: Props & WrappedComponentProps);
    render(): React.JSX.Element | null;
    private getCellPosition;
    private insertRow;
    private insertColumn;
}
declare const _default: React.FC<import("react-intl-next").WithIntlProps<Props & WrappedComponentProps>> & {
    WrappedComponent: React.ComponentType<Props & WrappedComponentProps>;
};
export default _default;
