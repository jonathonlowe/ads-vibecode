import type { EditorAnalyticsAPI } from '@atlaskit/editor-common/analytics';
import { type PortalProviderAPI } from '@atlaskit/editor-common/portal';
import type { EditorState, Transaction } from '@atlaskit/editor-prosemirror/state';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { PluginInjectionAPI } from '../types';
export declare const handleBlur: (view: EditorView, event: Event) => boolean;
export declare const handleFocus: (view: EditorView, event: Event) => boolean;
export declare const handleClick: (view: EditorView, event: Event) => boolean;
export declare const handleMouseOver: (view: EditorView, mouseEvent: Event) => boolean;
export declare const handleMouseUp: (view: EditorView, mouseEvent: Event) => boolean;
export declare const handleMouseDown: (_: EditorView, event: Event) => boolean;
export declare const handleMouseOut: (view: EditorView, mouseEvent: Event) => boolean;
export declare const handleMouseEnter: (view: EditorView, mouseEvent: Event) => boolean;
export declare const handleMouseLeave: (view: EditorView, event: Event) => boolean;
export declare const handleMouseMove: (nodeViewPortalProviderAPI: PortalProviderAPI) => (view: EditorView, event: Event) => boolean;
export declare function handleTripleClick(view: EditorView, pos: number): boolean;
export declare const handleCut: (oldTr: Transaction, oldState: EditorState, newState: EditorState, api: PluginInjectionAPI | undefined | null, editorAnalyticsAPI?: EditorAnalyticsAPI, editorView?: EditorView, isTableScalingEnabled?: boolean, isTableFixedColumnWidthsOptionEnabled?: boolean, shouldUseIncreasedScalingPercent?: boolean) => Transaction;
export declare const isTableInFocus: (view: EditorView) => boolean;
export declare const whenTableInFocus: (eventHandler: (view: EditorView, mouseEvent: Event) => boolean, pluginInjectionApi?: PluginInjectionAPI) => (view: EditorView, mouseEvent: Event) => boolean;
export declare const withCellTracking: (eventHandler: (view: EditorView, mouseEvent: Event) => boolean) => (view: EditorView, mouseEvent: Event) => boolean;
