import React from 'react';
import type { ExtractInjectionAPI } from '@atlaskit/editor-common/types';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { TablePlugin } from '../../../tablePluginType';
import type { CellHoverMeta } from '../../../types';
interface ColumnControlsProps {
    editorView: EditorView;
    tableActive?: boolean;
    isInDanger?: boolean;
    tableRef: HTMLTableElement;
    hoveredCell?: CellHoverMeta;
    stickyTop?: number;
    localId?: string;
    rowHeights?: number[];
    colWidths?: (number | undefined)[];
    hasHeaderColumn?: boolean;
    isTableHovered?: boolean;
    tableContainerWidth?: number;
    isNumberColumnEnabled?: boolean;
    isDragging?: boolean;
    getScrollOffset?: () => number;
}
export declare const ColumnControls: ({ editorView, tableActive, tableRef, hoveredCell, stickyTop, localId, isInDanger, rowHeights, colWidths, isTableHovered, tableContainerWidth, isNumberColumnEnabled, isDragging, getScrollOffset, api, }: ColumnControlsProps & {
    api?: import("@atlaskit/editor-common/types").EditorInjectionAPI<"table", {
        pluginConfiguration: import("../../../tablePluginType").TablePluginOptions | undefined;
        actions: import("../../../tablePluginType").TablePluginActions;
        sharedState?: import("../../../types").TableSharedState | undefined;
        commands: import("../../../tablePluginType").TablePluginCommands;
        dependencies: import("../../../tablePluginType").TablePluginDependencies;
    }> | undefined;
}) => React.JSX.Element;
export {};
