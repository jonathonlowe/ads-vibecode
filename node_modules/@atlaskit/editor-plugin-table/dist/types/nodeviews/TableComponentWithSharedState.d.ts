import React from 'react';
import type { DispatchAnalyticsEvent } from '@atlaskit/editor-common/analytics';
import type { EventDispatcher } from '@atlaskit/editor-common/event-dispatcher';
import type { GetEditorFeatureFlags, getPosHandlerNode } from '@atlaskit/editor-common/types';
import type { Node as PmNode } from '@atlaskit/editor-prosemirror/model';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { PluginInjectionAPI } from '../types';
import type { TableOptions } from './types';
type ForwardRef = (node: HTMLElement | null) => any;
type TableComponentWithSharedStateProps = {
    view: EditorView;
    options?: TableOptions;
    getNode: () => PmNode;
    dispatchAnalyticsEvent: DispatchAnalyticsEvent;
    getEditorFeatureFlags: GetEditorFeatureFlags;
    api?: PluginInjectionAPI;
    eventDispatcher: EventDispatcher;
    forwardRef: ForwardRef;
    getPos: getPosHandlerNode;
    allowColumnResizing?: boolean;
    allowControls?: boolean;
    allowTableAlignment?: boolean;
    allowTableResizing?: boolean;
};
/**
 * Use useSharedPluginState to control re-renders from plugin dependencies
 */
export declare const TableComponentWithSharedState: ({ view, options, getNode, dispatchAnalyticsEvent, api, getEditorFeatureFlags, eventDispatcher, allowColumnResizing, allowControls, getPos, forwardRef, allowTableAlignment, allowTableResizing, }: TableComponentWithSharedStateProps) => React.JSX.Element | null;
export {};
