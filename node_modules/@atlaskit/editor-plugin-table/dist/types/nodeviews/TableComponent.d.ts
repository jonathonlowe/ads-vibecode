import React from 'react';
import type { IntlShape } from 'react-intl-next';
import type { TableColumnOrdering } from '@atlaskit/custom-steps';
import type { DispatchAnalyticsEvent } from '@atlaskit/editor-common/analytics';
import type { EventDispatcher } from '@atlaskit/editor-common/event-dispatcher';
import type { EditorContainerWidth, GetEditorFeatureFlags } from '@atlaskit/editor-common/types';
import type { Node as PmNode } from '@atlaskit/editor-prosemirror/model';
import type { Selection } from '@atlaskit/editor-prosemirror/state';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { CellHoverMeta, PluginInjectionAPI } from '../types';
import type { TableOptions } from './types';
interface ComponentProps {
    view: EditorView;
    getNode: () => PmNode;
    allowColumnResizing?: boolean;
    eventDispatcher: EventDispatcher;
    getPos: () => number | undefined;
    options?: TableOptions;
    contentDOM: (node: HTMLElement | null) => void;
    containerWidth: EditorContainerWidth;
    allowControls?: boolean;
    allowTableResizing?: boolean;
    allowTableAlignment?: boolean;
    isHeaderRowEnabled: boolean;
    isHeaderColumnEnabled: boolean;
    isMediaFullscreen?: boolean;
    isDragAndDropEnabled?: boolean;
    isTableScalingEnabled?: boolean;
    tableActive: boolean;
    ordering?: TableColumnOrdering;
    isResizing?: boolean;
    getEditorFeatureFlags: GetEditorFeatureFlags;
    dispatchAnalyticsEvent: DispatchAnalyticsEvent;
    pluginInjectionApi?: PluginInjectionAPI;
    intl: IntlShape;
    isInDanger?: boolean;
    hoveredRows?: number[];
    hoveredCell?: CellHoverMeta;
    isTableHovered?: boolean;
    isWholeTableInDanger?: boolean;
    selection?: Selection;
}
declare const _default: React.FC<import("react-intl-next").WithIntlProps<ComponentProps>> & {
    WrappedComponent: React.ComponentType<ComponentProps>;
};
export default _default;
