import type { IntlShape } from 'react-intl-next/src/types';
import { type PortalProviderAPI } from '@atlaskit/editor-common/portal';
import type { Command, GetEditorContainerWidth } from '@atlaskit/editor-common/types';
import type { AriaLiveElementAttributes } from '@atlaskit/editor-plugin-accessibility-utils';
import type { Transaction } from '@atlaskit/editor-prosemirror/state';
import type { Direction } from '@atlaskit/editor-tables/types';
import type { PluginInjectionAPI } from '../../types';
export declare const initiateKeyboardColumnResizing: ({ ariaNotify, getIntl, nodeViewPortalProviderAPI, }: {
    ariaNotify?: ((message: string, ariaLiveElementAttributes?: AriaLiveElementAttributes) => void) | undefined;
    getIntl?: (() => IntlShape) | undefined;
    nodeViewPortalProviderAPI: PortalProviderAPI;
}) => Command;
export declare const activateNextResizeArea: ({ direction, ariaNotify, getIntl, nodeViewPortalProviderAPI, }: {
    direction: Direction;
    ariaNotify?: ((message: string, ariaLiveElementAttributes?: AriaLiveElementAttributes) => void) | undefined;
    getIntl?: (() => IntlShape) | undefined;
    nodeViewPortalProviderAPI: PortalProviderAPI;
}) => Command;
export declare const changeColumnWidthByStep: ({ stepSize, getEditorContainerWidth, isTableScalingEnabled, isTableFixedColumnWidthsOptionEnabled, isCommentEditor, ariaNotify, api, getIntl, }: {
    stepSize: number;
    getEditorContainerWidth: GetEditorContainerWidth;
    isTableScalingEnabled: boolean;
    isTableFixedColumnWidthsOptionEnabled: boolean;
    isCommentEditor: boolean;
    api: PluginInjectionAPI | undefined | null;
    ariaNotify?: ((message: string, ariaLiveElementAttributes?: AriaLiveElementAttributes) => void) | undefined;
    getIntl?: (() => IntlShape) | undefined;
    originalTr?: Transaction | undefined;
}) => Command;
export declare const stopKeyboardColumnResizing: ({ ariaNotify, getIntl, originalTr, }: {
    ariaNotify?: ((message: string, ariaLiveElementAttributes?: AriaLiveElementAttributes) => void) | undefined;
    getIntl?: (() => IntlShape) | undefined;
    originalTr?: Transaction | undefined;
}) => Command;
