import type { CellAttributes } from '@atlaskit/adf-schema';
import type { GetEditorContainerWidth } from '@atlaskit/editor-common/types';
import type { Node as PMNode, ResolvedPos } from '@atlaskit/editor-prosemirror/model';
import type { EditorState } from '@atlaskit/editor-prosemirror/state';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { TableOptions } from '../../../nodeviews/types';
export declare function getLayoutSize(tableLayout: 'default' | 'wide' | 'full-width', containerWidth: number | undefined, options: TableOptions): number;
export declare function pointsAtCell($pos: ResolvedPos): false | PMNode | null;
export declare function currentColWidth(view: EditorView, cellPos: number, { colspan, colwidth }: CellAttributes): number;
interface getTableMaxWidthProps {
    table: PMNode;
    tableStart: number;
    state: EditorState;
    layout: 'default' | 'wide' | 'full-width';
    getEditorContainerWidth: GetEditorContainerWidth;
}
export declare const getTableMaxWidth: ({ table, tableStart, state, layout, getEditorContainerWidth, }: getTableMaxWidthProps) => number;
/**
 *
 * @param table
 * @returns calculated width of <table /> element derived from sum of colwidths on tableCell or tableHeader nodes or falls back to container width
 */
export declare const getTableElementWidth: (table: PMNode) => number;
export declare const getTableContainerElementWidth: (table: PMNode) => number;
export declare const getTableScalingPercent: (table: PMNode, tableRef: HTMLElement | null, shouldUseIncreasedScalingPercent?: boolean) => number;
export declare const getScalingPercentForTableWithoutWidth: (table: PMNode, tableRef: HTMLElement | null) => number;
export declare const getStaticTableScalingPercent: (table: PMNode, tableRenderWidth: number, shouldUseIncreasedScalingPercent?: boolean) => number;
export {};
