import React from 'react';
import type { EditorAnalyticsAPI } from '@atlaskit/editor-common/analytics';
import type { Command, DropdownOptionT, GetEditorContainerWidth } from '@atlaskit/editor-common/types';
import type { AriaLiveElementAttributes } from '@atlaskit/editor-plugin-accessibility-utils';
import type { Selection } from '@atlaskit/editor-prosemirror/state';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { Rect, TableMap } from '@atlaskit/editor-tables/table-map';
import type { NewIconProps } from '@atlaskit/icon/types';
import type { DraggableData, DraggableType, PluginInjectionAPI, TableDirection } from '../../types';
export declare const getTargetIndex: (selectedIndexes: number[], direction: DraggableData['direction']) => number;
export declare const canMove: (sourceType: DraggableType, direction: DraggableData['direction'], totalItemsOfSourceTypeCount: number, selection: Selection, selectionRect?: Rect) => boolean;
export type DragMenuOptionIdType = 'add_row_above' | 'add_row_below' | 'add_column_left' | 'add_column_right' | 'distribute_columns' | 'clear_cells' | 'delete_row' | 'delete_column' | 'move_column_left' | 'move_column_right' | 'move_row_up' | 'move_row_down' | 'sort_column_asc' | 'sort_column_desc';
export interface DragMenuConfig extends Omit<DropdownOptionT<Command>, 'icon'> {
    id: DragMenuOptionIdType;
    icon?: React.ComponentType<React.PropsWithChildren<NewIconProps>>;
    iconFallback?: React.ComponentType<React.PropsWithChildren<NewIconProps>>;
    keymap?: string;
}
export declare const getDragMenuConfig: (direction: TableDirection, getEditorContainerWidth: GetEditorContainerWidth, hasMergedCellsInTable: boolean, editorView: EditorView, api: PluginInjectionAPI | undefined | null, tableMap?: TableMap, index?: number, targetCellPosition?: number, selectionRect?: Rect, editorAnalyticsAPI?: EditorAnalyticsAPI, isHeaderRowRequired?: boolean, isTableScalingEnabled?: boolean, isTableFixedColumnWidthsOptionEnabled?: boolean, shouldUseIncreasedScalingPercent?: boolean, ariaNotifyPlugin?: ((message: string, ariaLiveElementAttributes?: AriaLiveElementAttributes) => void) | undefined, isCommentEditor?: boolean) => DragMenuConfig[];
