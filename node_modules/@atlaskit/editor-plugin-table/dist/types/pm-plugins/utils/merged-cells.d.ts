import type { Selection } from '@atlaskit/editor-prosemirror/state';
import { TableMap } from '@atlaskit/editor-tables';
type MergeType = 'row' | 'column';
export declare const hasMergedCellsInBetween: (indexes: number[], type: MergeType) => (selection: Selection) => boolean;
export declare const hasMergedCellsWithColumnNextToColumnIndex: (colIndex: number, selection: Selection) => boolean;
export declare const hasMergedCellsWithRowNextToRowIndex: (rowIndex: number, selection: Selection) => boolean;
export declare const hasMergedCellsInSelection: (indexes: number[], type: MergeType) => (selection: Selection) => boolean;
/**
 * this check the selection has merged cells with previous/next col or row.
 *
 * @param indexes - this get the indexes of the selection,e.g. [0,1] for selecting first two rows or columns.
 * @param tableMap  - this return a TableMap object.
 * @param direction - check selection is selected by row or column
 * @returns boolean
 */
export declare const checkEdgeHasMergedCells: (indexes: number[], tableMap: TableMap, direction: 'row' | 'column') => boolean;
/**
 * this function will find the duplicate position in the array(table map position array).
 *
 * @param array this usually be the array including positions of the table map.
 * @returns []
 */
export declare const findDuplicatePosition: (array: number[]) => number[];
export {};
