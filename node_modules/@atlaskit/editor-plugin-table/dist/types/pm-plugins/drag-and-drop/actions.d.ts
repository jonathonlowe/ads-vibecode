import type { DecorationSet } from '@atlaskit/editor-prosemirror/view';
import type { TableDirection } from '../../types';
import type { DropTargetType } from './consts';
interface DragAndDropAction<T, D> {
    type: T;
    data: D;
}
export declare const DragAndDropActionType: {
    readonly SET_DROP_TARGET: "SET_DROP_TARGET";
    readonly CLEAR_DROP_TARGET: "CLEAR_DROP_TARGET";
    readonly TOGGLE_DRAG_MENU: "TOGGLE_DRAG_MENU";
};
type DragAndDropSetDropTargetAction = DragAndDropAction<typeof DragAndDropActionType.SET_DROP_TARGET, {
    type: DropTargetType;
    index: number;
    decorationSet: DecorationSet;
}>;
type DragAndDropClearDropTargetAction = DragAndDropAction<typeof DragAndDropActionType.CLEAR_DROP_TARGET, {
    decorationSet: DecorationSet;
}>;
type DragAndDropToggleDragMenuAction = DragAndDropAction<typeof DragAndDropActionType.TOGGLE_DRAG_MENU, {
    isDragMenuOpen: boolean;
    direction: TableDirection;
    index: number;
    isKeyboardModeActive: boolean;
}>;
export type DragAndDropPluginAction = DragAndDropSetDropTargetAction | DragAndDropClearDropTargetAction | DragAndDropToggleDragMenuAction;
export {};
