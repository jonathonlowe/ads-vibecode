import React from 'react';
import { useSharedPluginState } from '@atlaskit/editor-common/hooks';
import { findTable } from '@atlaskit/editor-tables';
import TableComponent from './TableComponent';

// Ignored via go/ees005
// eslint-disable-next-line @typescript-eslint/no-explicit-any

/**
 * Use useSharedPluginState to control re-renders from plugin dependencies
 */
export var TableComponentWithSharedState = function TableComponentWithSharedState(_ref) {
  var view = _ref.view,
    options = _ref.options,
    getNode = _ref.getNode,
    dispatchAnalyticsEvent = _ref.dispatchAnalyticsEvent,
    api = _ref.api,
    getEditorFeatureFlags = _ref.getEditorFeatureFlags,
    eventDispatcher = _ref.eventDispatcher,
    allowColumnResizing = _ref.allowColumnResizing,
    allowControls = _ref.allowControls,
    getPos = _ref.getPos,
    forwardRef = _ref.forwardRef,
    allowTableAlignment = _ref.allowTableAlignment,
    allowTableResizing = _ref.allowTableResizing;
  var _useSharedPluginState = useSharedPluginState(api, ['width', 'table', 'media', 'selection', 'editorViewMode']),
    widthState = _useSharedPluginState.widthState,
    tableState = _useSharedPluginState.tableState,
    mediaState = _useSharedPluginState.mediaState,
    selectionState = _useSharedPluginState.selectionState,
    editorViewModeState = _useSharedPluginState.editorViewModeState;
  var isLivePageViewMode = (editorViewModeState === null || editorViewModeState === void 0 ? void 0 : editorViewModeState.mode) === 'view';
  if (!tableState) {
    return null;
  }
  var _ref2 = tableState,
    isTableResizing = _ref2.isTableResizing,
    isHeaderColumnEnabled = _ref2.isHeaderColumnEnabled,
    isHeaderRowEnabled = _ref2.isHeaderRowEnabled,
    ordering = _ref2.ordering,
    isResizing = _ref2.isResizing,
    isInDanger = _ref2.isInDanger,
    hoveredCell = _ref2.hoveredCell,
    hoveredRows = _ref2.hoveredRows,
    isTableHovered = _ref2.isTableHovered,
    isWholeTableInDanger = _ref2.isWholeTableInDanger;

  /**
   *  ED-19810
   *  There is a getPos issue coming from this code. We need to apply this workaround for now and apply a patch
   *  directly to confluence since this bug is now in production.
   */
  var currentTablePos;
  try {
    currentTablePos = getPos ? getPos() : undefined;
  } catch (e) {
    currentTablePos = undefined;
  }
  var selectedTable = findTable(view.state.selection);
  var tablePos = selectedTable && selectedTable.start - 1;
  var tableActive = typeof currentTablePos === 'number' && typeof tablePos === 'number' && currentTablePos === tablePos && !isTableResizing;
  return /*#__PURE__*/React.createElement(TableComponent, {
    view: view,
    allowColumnResizing: allowColumnResizing,
    eventDispatcher: eventDispatcher,
    getPos: getPos,
    isMediaFullscreen: mediaState === null || mediaState === void 0 ? void 0 : mediaState.isFullscreen,
    options: options,
    allowControls: allowControls,
    isHeaderRowEnabled: isHeaderRowEnabled,
    isHeaderColumnEnabled: isHeaderColumnEnabled,
    isDragAndDropEnabled: (options === null || options === void 0 ? void 0 : options.isDragAndDropEnabled) && !isLivePageViewMode,
    isTableScalingEnabled: options === null || options === void 0 ? void 0 : options.isTableScalingEnabled,
    allowTableAlignment: allowTableAlignment,
    allowTableResizing: allowTableResizing,
    tableActive: tableActive && !isLivePageViewMode,
    ordering: ordering,
    isResizing: isResizing,
    getNode: getNode
    // Ignored via go/ees005
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    ,
    containerWidth: widthState,
    contentDOM: forwardRef,
    getEditorFeatureFlags: getEditorFeatureFlags,
    dispatchAnalyticsEvent: dispatchAnalyticsEvent,
    pluginInjectionApi: api,
    isInDanger: !!isInDanger,
    hoveredRows: hoveredRows,
    hoveredCell: hoveredCell,
    isTableHovered: isTableHovered,
    isWholeTableInDanger: isWholeTableInDanger,
    selection: selectionState === null || selectionState === void 0 ? void 0 : selectionState.selection
  });
};