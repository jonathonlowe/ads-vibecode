import React from 'react';
import { useSharedPluginState } from '@atlaskit/editor-common/hooks';
import { findTable } from '@atlaskit/editor-tables';
import TableComponent from './TableComponent';

// Ignored via go/ees005
// eslint-disable-next-line @typescript-eslint/no-explicit-any

/**
 * Use useSharedPluginState to control re-renders from plugin dependencies
 */
export const TableComponentWithSharedState = ({
  view,
  options,
  getNode,
  dispatchAnalyticsEvent,
  api,
  getEditorFeatureFlags,
  eventDispatcher,
  allowColumnResizing,
  allowControls,
  getPos,
  forwardRef,
  allowTableAlignment,
  allowTableResizing
}) => {
  const {
    widthState,
    tableState,
    mediaState,
    selectionState,
    editorViewModeState
  } = useSharedPluginState(api, ['width', 'table', 'media', 'selection', 'editorViewMode']);
  const isLivePageViewMode = (editorViewModeState === null || editorViewModeState === void 0 ? void 0 : editorViewModeState.mode) === 'view';
  if (!tableState) {
    return null;
  }
  const {
    isTableResizing,
    isHeaderColumnEnabled,
    isHeaderRowEnabled,
    ordering,
    isResizing,
    isInDanger,
    hoveredCell,
    hoveredRows,
    isTableHovered,
    isWholeTableInDanger
  } = tableState;

  /**
   *  ED-19810
   *  There is a getPos issue coming from this code. We need to apply this workaround for now and apply a patch
   *  directly to confluence since this bug is now in production.
   */
  let currentTablePos;
  try {
    currentTablePos = getPos ? getPos() : undefined;
  } catch (e) {
    currentTablePos = undefined;
  }
  const selectedTable = findTable(view.state.selection);
  const tablePos = selectedTable && selectedTable.start - 1;
  const tableActive = typeof currentTablePos === 'number' && typeof tablePos === 'number' && currentTablePos === tablePos && !isTableResizing;
  return /*#__PURE__*/React.createElement(TableComponent, {
    view: view,
    allowColumnResizing: allowColumnResizing,
    eventDispatcher: eventDispatcher,
    getPos: getPos,
    isMediaFullscreen: mediaState === null || mediaState === void 0 ? void 0 : mediaState.isFullscreen,
    options: options,
    allowControls: allowControls,
    isHeaderRowEnabled: isHeaderRowEnabled,
    isHeaderColumnEnabled: isHeaderColumnEnabled,
    isDragAndDropEnabled: (options === null || options === void 0 ? void 0 : options.isDragAndDropEnabled) && !isLivePageViewMode,
    isTableScalingEnabled: options === null || options === void 0 ? void 0 : options.isTableScalingEnabled,
    allowTableAlignment: allowTableAlignment,
    allowTableResizing: allowTableResizing,
    tableActive: tableActive && !isLivePageViewMode,
    ordering: ordering,
    isResizing: isResizing,
    getNode: getNode
    // Ignored via go/ees005
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    ,
    containerWidth: widthState,
    contentDOM: forwardRef,
    getEditorFeatureFlags: getEditorFeatureFlags,
    dispatchAnalyticsEvent: dispatchAnalyticsEvent,
    pluginInjectionApi: api,
    isInDanger: !!isInDanger,
    hoveredRows: hoveredRows,
    hoveredCell: hoveredCell,
    isTableHovered: isTableHovered,
    isWholeTableInDanger: isWholeTableInDanger,
    selection: selectionState === null || selectionState === void 0 ? void 0 : selectionState.selection
  });
};