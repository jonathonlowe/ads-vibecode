import React, { useMemo } from 'react';
import classnames from 'classnames';
import { injectIntl } from 'react-intl-next';
import { useSharedPluginState } from '@atlaskit/editor-common/hooks';
import { tableMessages as messages } from '@atlaskit/editor-common/messages';
import { findTable, isTableSelected, selectTable } from '@atlaskit/editor-tables/utils';
import { clearHoverSelection } from '../../../pm-plugins/commands';
import { TableCssClassName as ClassName } from '../../../types';
const DragCornerControlsComponent = ({
  editorView,
  isInDanger,
  isResizing,
  intl: {
    formatMessage
  }
}) => {
  const handleOnClick = () => {
    const {
      state,
      dispatch
    } = editorView;
    dispatch(selectTable(state.tr).setMeta('addToHistory', false));
  };
  const handleMouseOut = () => {
    const {
      state,
      dispatch
    } = editorView;
    clearHoverSelection()(state, dispatch);
  };
  const isActive = useMemo(() => {
    const {
      selection
    } = editorView.state;
    const table = findTable(selection);
    if (!table) {
      return false;
    }
    return isTableSelected(selection);
  }, [editorView.state]);
  if (isResizing) {
    return null;
  }
  return /*#__PURE__*/React.createElement("button", {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    className: classnames(ClassName.DRAG_CORNER_BUTTON, {
      active: isActive,
      danger: isActive && isInDanger
    }),
    "aria-label": formatMessage(messages.cornerControl),
    type: "button",
    onClick: handleOnClick
    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events
    ,
    onMouseOut: handleMouseOut,
    contentEditable: false
  }, /*#__PURE__*/React.createElement("div", {
    className: ClassName.DRAG_CORNER_BUTTON_INNER
  }));
};
const DragCornerControlsComponentWithSelection = ({
  editorView,
  isInDanger,
  isResizing,
  intl: {
    formatMessage
  },
  api
}) => {
  const {
    selectionState
  } = useSharedPluginState(api, ['selection']);
  const handleOnClick = () => {
    const {
      state,
      dispatch
    } = editorView;
    dispatch(selectTable(state.tr).setMeta('addToHistory', false));
  };
  const handleMouseOut = () => {
    const {
      state,
      dispatch
    } = editorView;
    clearHoverSelection()(state, dispatch);
  };
  const isActive = useMemo(() => {
    if (!(selectionState !== null && selectionState !== void 0 && selectionState.selection)) {
      return;
    }
    const table = findTable(selectionState.selection);
    if (!table) {
      return false;
    }
    return isTableSelected(selectionState.selection);
  }, [selectionState]);
  if (isResizing) {
    return null;
  }
  return /*#__PURE__*/React.createElement("button", {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    className: classnames(ClassName.DRAG_CORNER_BUTTON, {
      active: isActive,
      danger: isActive && isInDanger
    }),
    "aria-label": formatMessage(messages.cornerControl),
    type: "button",
    onClick: handleOnClick
    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events
    ,
    onMouseOut: handleMouseOut,
    contentEditable: false
  }, /*#__PURE__*/React.createElement("div", {
    className: ClassName.DRAG_CORNER_BUTTON_INNER
  }));
};
export const DragCornerControlsWithSelection = injectIntl(DragCornerControlsComponentWithSelection);
export const DragCornerControls = injectIntl(DragCornerControlsComponent);