import type { PropsWithChildren } from 'react';
import React from 'react';
import type { TableEventPayload } from '@atlaskit/editor-common/analytics';
import type { GuidelineConfig } from '@atlaskit/editor-common/guideline';
import type { Node as PMNode } from '@atlaskit/editor-prosemirror/model';
import type { Transaction } from '@atlaskit/editor-prosemirror/state';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { PluginInjectionAPI } from '../types';
interface TableResizerProps {
    width: number;
    maxWidth: number;
    containerWidth: number;
    lineLength: number;
    updateWidth: (width: number) => void;
    editorView: EditorView;
    getPos: () => number | undefined;
    node: PMNode;
    tableRef: HTMLTableElement;
    displayGuideline: (guideline: GuidelineConfig[]) => boolean;
    attachAnalyticsEvent: (payload: TableEventPayload) => ((tr: Transaction) => boolean) | undefined;
    displayGapCursor: (toggle: boolean) => boolean;
    pluginInjectionApi?: PluginInjectionAPI;
    isTableScalingEnabled?: boolean;
    isTableWithFixedColumnWidthsOptionEnabled?: boolean;
    isTableAlignmentEnabled?: boolean;
    isWholeTableInDanger?: boolean;
    isFullWidthModeEnabled?: boolean;
    shouldUseIncreasedScalingPercent?: boolean;
    isCommentEditor?: boolean;
    onResizeStop?: () => void;
    onResizeStart?: () => void;
    disabled?: boolean;
}
export declare const TableResizer: ({ children, width, maxWidth, containerWidth, lineLength, updateWidth, onResizeStop, onResizeStart, editorView, getPos, node, tableRef, displayGuideline, attachAnalyticsEvent, displayGapCursor, isTableScalingEnabled, isTableWithFixedColumnWidthsOptionEnabled, isTableAlignmentEnabled, isWholeTableInDanger, shouldUseIncreasedScalingPercent, pluginInjectionApi, isFullWidthModeEnabled, isCommentEditor, disabled, }: PropsWithChildren<TableResizerProps>) => React.JSX.Element;
export {};
