import type { DispatchAnalyticsEvent } from '@atlaskit/editor-common/analytics';
import type { EventDispatcher } from '@atlaskit/editor-common/event-dispatcher';
import type { PortalProviderAPI } from '@atlaskit/editor-common/portal';
import type { GetEditorContainerWidth, GetEditorFeatureFlags } from '@atlaskit/editor-common/types';
import type { Node as PMNode } from '@atlaskit/editor-prosemirror/model';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { PluginInjectionAPI } from '../types';
import TableCell from './TableCell';
import TableRow from './TableRow';
type TableViewOptions = {
    portalProviderAPI: PortalProviderAPI;
    eventDispatcher: EventDispatcher;
    getEditorContainerWidth: GetEditorContainerWidth;
    getEditorFeatureFlags: GetEditorFeatureFlags;
    dispatchAnalyticsEvent: DispatchAnalyticsEvent;
    pluginInjectionApi?: PluginInjectionAPI;
    isCommentEditor?: boolean;
    isChromelessEditor?: boolean;
};
export declare const lazyTableView: (options: TableViewOptions) => import("@atlaskit/editor-common/lazy-node-view").NodeViewConstructor;
type TableCellViewOptions = {
    eventDispatcher: EventDispatcher;
    pluginInjectionApi?: PluginInjectionAPI;
};
export declare const lazyTableCellView: (options: TableCellViewOptions) => import("@atlaskit/editor-common/lazy-node-view").NodeViewConstructor | ((node: PMNode, view: EditorView, getPos: () => number | undefined) => TableCell);
export declare const lazyTableHeaderView: (options: TableCellViewOptions) => import("@atlaskit/editor-common/lazy-node-view").NodeViewConstructor | ((node: PMNode, view: EditorView, getPos: () => number | undefined) => TableCell);
export declare const lazyTableRowView: (options: TableCellViewOptions) => import("@atlaskit/editor-common/lazy-node-view").NodeViewConstructor | ((node: PMNode, view: EditorView, getPos: () => number | undefined) => TableRow);
export {};
