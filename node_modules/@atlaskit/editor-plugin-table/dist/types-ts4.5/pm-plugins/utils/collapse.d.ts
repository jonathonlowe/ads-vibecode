import type { NodeType } from '@atlaskit/editor-prosemirror/model';
import { NodeRange } from '@atlaskit/editor-prosemirror/model';
import type { ReadonlyTransaction, Transaction } from '@atlaskit/editor-prosemirror/state';
interface IsTableCollapsibleResult {
    tableIsCollapsible: boolean;
    range?: NodeRange;
    findWrappingRes?: // Ignored via go/ees005
    Array<{
        type: NodeType;
        attrs?: {
            [key: string]: any;
        } | null;
    }> | null | undefined;
}
/**
 * Checks whether we can wrap the selected table into an expand via
 * prosemirror-transform's `findWrapping` helper
 */
export declare const isTableCollapsible: (tr: Transaction | ReadonlyTransaction) => IsTableCollapsibleResult;
/**
 * Collapses the selected table into an expand given a transaction via
 * `Transform.wrap`.
 *
 * Will return undefined if it cannot determine the relevant table from a
 * selection, or if the table itself isn't collapsible.
 *
 * @param tr
 * @returns Transaction | undefined
 */
export declare const collapseSelectedTable: (tr: Transaction) => Transaction | undefined;
export {};
