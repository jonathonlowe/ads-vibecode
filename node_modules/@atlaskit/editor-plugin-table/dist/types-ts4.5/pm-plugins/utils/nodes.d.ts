import type { Node as PmNode } from '@atlaskit/editor-prosemirror/model';
import type { EditorState, Selection } from '@atlaskit/editor-prosemirror/state';
export declare const isIsolating: (node: PmNode) => boolean;
export declare const containsHeaderColumn: (table: PmNode) => boolean;
export declare const containsHeaderRow: (table: PmNode) => boolean;
export declare const checkIfHeaderColumnEnabled: (selection: Selection) => boolean;
export declare const checkIfHeaderRowEnabled: (selection: Selection) => boolean;
export declare const checkIfNumberColumnEnabled: (selection: Selection) => boolean;
export declare const getTableWidth: (node: PmNode) => number;
export declare const tablesHaveDifferentColumnWidths: (currentTable: PmNode, previousTable: PmNode) => boolean;
export declare const tablesHaveDifferentNoOfColumns: (currentTable: PmNode, previousTable: PmNode) => boolean;
export declare const tablesHaveDifferentNoOfRows: (currentTable: PmNode, previousTable: PmNode) => boolean;
export declare const isTableNested: (state: EditorState, tablePos?: number) => boolean;
export declare const isTableNestedInMoreThanOneNode: (state: EditorState, tablePos?: number) => boolean;
/**
 * Check if a given node is a header row with this definition:
 *  - all children are tableHeader cells
 *  - no table cells have been have merged with other table row cells
 *
 * @param node ProseMirror node
 * @return boolean if it meets definition
 */
export declare const supportedHeaderRow: (node: PmNode) => boolean;
