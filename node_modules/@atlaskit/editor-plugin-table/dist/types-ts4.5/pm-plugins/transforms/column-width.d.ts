import type { Node as PMNode } from '@atlaskit/editor-prosemirror/model';
import type { Transaction } from '@atlaskit/editor-prosemirror/state';
import type { ContentNodeWithPos } from '@atlaskit/editor-prosemirror/utils';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { PluginInjectionAPI } from '../../types';
import type { ResizeState } from '../table-resizing/utils/types';
/**
 * Given a new ResizeState object, create a transaction that replaces and updates the table node based on new state.
 * @param resizeState
 * @param table
 * @param start
 * @returns
 */
export declare const updateColumnWidths: (resizeState: ResizeState, table: PMNode, start: number, api: PluginInjectionAPI | undefined | null) => (tr: Transaction) => Transaction;
/**
 * This function is called when user inserts/deletes a column in a table to;
 * - rescale all columns (if the table did not overflow before the insertion)
 * - and update column widths.
 *
 * This is done manually to avoid a multi-dispatch in TableComponent. See [ED-8288].
 * @param table
 * @param view
 * @returns Updated transaction with rescaled columns for a given table
 */
export declare const rescaleColumns: (isTableScalingEnabled: boolean | undefined, isTableFixedColumnWidthsOptionEnabled: boolean | undefined, shouldUseIncreasedScalingPercent: boolean | undefined, api: PluginInjectionAPI | undefined | null, isCommentEditor?: boolean) => (table: ContentNodeWithPos, view: EditorView | undefined) => (tr: Transaction) => Transaction;
