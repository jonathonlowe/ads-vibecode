import type { GetEditorContainerWidth } from '@atlaskit/editor-common/types';
import type { Node as PMNode } from '@atlaskit/editor-prosemirror/model';
import type { EditorState } from '@atlaskit/editor-prosemirror/state';
import type { Rect } from '@atlaskit/editor-tables/table-map';
import type { ResizeState, ResizeStateWithAnalytics } from './types';
export declare const getResizeState: ({ minWidth, maxSize, table, tableRef, start, domAtPos, isTableScalingEnabled, shouldUseIncreasedScalingPercent, isCommentEditor, }: {
    minWidth: number;
    maxSize: number;
    table: PMNode;
    tableRef: HTMLTableElement | null;
    start: number;
    domAtPos: (pos: number) => {
        node: Node;
        offset: number;
    };
    isTableScalingEnabled: boolean;
    shouldUseIncreasedScalingPercent: boolean;
    isCommentEditor: boolean;
}) => ResizeState;
export declare const updateColgroup: (state: ResizeState, tableRef: HTMLElement | null, tableNode?: PMNode, isTableScalingEnabled?: boolean, scalePercent?: number) => void;
export declare const getTotalWidth: ({ cols }: ResizeState) => number;
export declare const adjustColumnsWidths: (resizeState: ResizeState, maxSize: number) => ResizeState;
export declare const evenAllColumnsWidths: (resizeState: ResizeState) => ResizeState;
export declare const bulkColumnsResize: (resizeState: ResizeState, columnsIndexes: number[], sourceColumnIndex: number) => ResizeState;
export declare const getNewResizeStateFromSelectedColumns: (rect: Rect, state: EditorState, domAtPos: (pos: number) => {
    node: Node;
    offset: number;
}, getEditorContainerWidth: GetEditorContainerWidth, isTableScalingEnabled?: boolean, isTableFixedColumnWidthsOptionEnabled?: boolean, isCommentEditor?: boolean) => ResizeStateWithAnalytics | undefined;
