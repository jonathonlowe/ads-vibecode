"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ListButtonGroupWithHeading = exports.ListButtonGroup = void 0;
var _react = _interopRequireWildcard(require("react"));
var _heading = _interopRequireDefault(require("@atlaskit/heading"));
var _menu = require("@atlaskit/menu");
var _primitives = require("@atlaskit/primitives");
var _ListButtonItem = require("./ListButtonItem");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var headingContainerStyles = (0, _primitives.xcss)({
  paddingTop: 'space.075',
  paddingBottom: 'space.150',
  paddingLeft: 'space.300',
  paddingRight: 'space.300'
});
var itemsContainerStyles = (0, _primitives.xcss)({
  paddingTop: 'space.0',
  paddingBottom: 'space.0',
  paddingLeft: 'space.200',
  paddingRight: 'space.200'
});
var ListButtonGroupBase = /*#__PURE__*/(0, _react.memo)(function (_ref) {
  var id = _ref.id,
    label = _ref.label,
    items = _ref.items,
    hasSeparator = _ref.hasSeparator,
    _onItemSelected = _ref.onItemSelected,
    setSelectedItem = _ref.setSelectedItem,
    startingIndex = _ref.startingIndex;
  return /*#__PURE__*/_react.default.createElement(_menu.Section, {
    hasSeparator: hasSeparator
  }, label && /*#__PURE__*/_react.default.createElement(_primitives.Box, {
    xcss: [headingContainerStyles]
  }, /*#__PURE__*/_react.default.createElement(_heading.default, {
    size: 'xsmall',
    as: "span"
  }, label)), /*#__PURE__*/_react.default.createElement(_primitives.Box, {
    xcss: [itemsContainerStyles]
  }, items.map(function (item, index) {
    return /*#__PURE__*/_react.default.createElement(_ListButtonItem.ListButtonItem, {
      key: item.index,
      index: item.index,
      isSelected: startingIndex === undefined ? undefined : startingIndex + index === 0,
      title: item.title,
      description: item.description,
      showDescription: item.showDescription,
      attributes: item.attributes,
      keyshortcut: item.keyshortcut,
      renderIcon: item.renderIcon,
      onItemSelected: function onItemSelected(index) {
        return _onItemSelected === null || _onItemSelected === void 0 ? void 0 : _onItemSelected(index, id);
      },
      setSelectedItem: setSelectedItem
    });
  })));
});
var ListButtonGroupWithHeading = exports.ListButtonGroupWithHeading = /*#__PURE__*/(0, _react.memo)(function (_ref2) {
  var id = _ref2.id,
    label = _ref2.label,
    items = _ref2.items,
    hasSeparator = _ref2.hasSeparator,
    onItemSelected = _ref2.onItemSelected,
    setSelectedItem = _ref2.setSelectedItem,
    startingIndex = _ref2.startingIndex;
  return /*#__PURE__*/_react.default.createElement(ListButtonGroupBase, {
    id: id,
    label: label,
    items: items,
    hasSeparator: hasSeparator,
    onItemSelected: onItemSelected,
    setSelectedItem: setSelectedItem,
    startingIndex: startingIndex
  });
});
var ListButtonGroup = exports.ListButtonGroup = /*#__PURE__*/(0, _react.memo)(function (_ref3) {
  var id = _ref3.id,
    items = _ref3.items,
    hasSeparator = _ref3.hasSeparator,
    onItemSelected = _ref3.onItemSelected,
    setSelectedItem = _ref3.setSelectedItem,
    startingIndex = _ref3.startingIndex;
  return /*#__PURE__*/_react.default.createElement(ListButtonGroupBase, {
    id: id,
    items: items,
    hasSeparator: hasSeparator,
    onItemSelected: onItemSelected,
    setSelectedItem: setSelectedItem,
    startingIndex: startingIndex
  });
});