import React, { memo } from 'react';
import Heading from '@atlaskit/heading';
import { Section } from '@atlaskit/menu';
import { Box, xcss } from '@atlaskit/primitives';
import { ListButtonItem } from './ListButtonItem';
const headingContainerStyles = xcss({
  paddingTop: 'space.075',
  paddingBottom: 'space.150',
  paddingLeft: 'space.300',
  paddingRight: 'space.300'
});
const itemsContainerStyles = xcss({
  paddingTop: 'space.0',
  paddingBottom: 'space.0',
  paddingLeft: 'space.200',
  paddingRight: 'space.200'
});
const ListButtonGroupBase = /*#__PURE__*/memo(({
  id,
  label,
  items,
  hasSeparator,
  onItemSelected,
  setSelectedItem,
  startingIndex
}) => {
  return /*#__PURE__*/React.createElement(Section, {
    hasSeparator: hasSeparator
  }, label && /*#__PURE__*/React.createElement(Box, {
    xcss: [headingContainerStyles]
  }, /*#__PURE__*/React.createElement(Heading, {
    size: 'xsmall',
    as: "span"
  }, label)), /*#__PURE__*/React.createElement(Box, {
    xcss: [itemsContainerStyles]
  }, items.map((item, index) => {
    return /*#__PURE__*/React.createElement(ListButtonItem, {
      key: item.index,
      index: item.index,
      isSelected: startingIndex === undefined ? undefined : startingIndex + index === 0,
      title: item.title,
      description: item.description,
      showDescription: item.showDescription,
      attributes: item.attributes,
      keyshortcut: item.keyshortcut,
      renderIcon: item.renderIcon,
      onItemSelected: index => onItemSelected === null || onItemSelected === void 0 ? void 0 : onItemSelected(index, id),
      setSelectedItem: setSelectedItem
    });
  })));
});
export const ListButtonGroupWithHeading = /*#__PURE__*/memo(({
  id,
  label,
  items,
  hasSeparator,
  onItemSelected,
  setSelectedItem,
  startingIndex
}) => {
  return /*#__PURE__*/React.createElement(ListButtonGroupBase, {
    id: id,
    label: label,
    items: items,
    hasSeparator: hasSeparator,
    onItemSelected: onItemSelected,
    setSelectedItem: setSelectedItem,
    startingIndex: startingIndex
  });
});
export const ListButtonGroup = /*#__PURE__*/memo(({
  id,
  items,
  hasSeparator,
  onItemSelected,
  setSelectedItem,
  startingIndex
}) => {
  return /*#__PURE__*/React.createElement(ListButtonGroupBase, {
    id: id,
    items: items,
    hasSeparator: hasSeparator,
    onItemSelected: onItemSelected,
    setSelectedItem: setSelectedItem,
    startingIndex: startingIndex
  });
});