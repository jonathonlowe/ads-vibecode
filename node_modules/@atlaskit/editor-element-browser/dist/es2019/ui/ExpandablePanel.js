import React, { memo, useState } from 'react';
import { Section } from '@atlaskit/menu';
import { Box, Stack, xcss } from '@atlaskit/primitives';
import { ListButtonItem, ViewAllButtonItem } from './ListButtonItem';
import { ExpandableNavButton } from './NavigationButton';
const headingContainerStyles = xcss({
  paddingTop: 'space.100',
  paddingBottom: 'space.075',
  paddingLeft: 'space.300',
  paddingRight: 'space.300'
});
const itemsContainerStyles = xcss({
  paddingTop: 'space.0',
  paddingBottom: 'space.150',
  paddingLeft: 'space.200',
  paddingRight: 'space.200'
});
export const ExpandablePanel = /*#__PURE__*/memo(({
  id,
  label,
  items,
  hasSeparator,
  attributes,
  onItemSelected,
  onViewAllSelected
}) => {
  const [isExpanded, setIsExpanded] = useState(true);

  // Dirty fix for AI label
  const shortAIlabel = label === 'Atlassian Intelligence';
  return /*#__PURE__*/React.createElement(Section, {
    hasSeparator: hasSeparator
  }, label && /*#__PURE__*/React.createElement(Box, {
    xcss: [headingContainerStyles]
  }, /*#__PURE__*/React.createElement(ExpandableNavButton, {
    id: id,
    label: label,
    isExpanded: isExpanded,
    attributes: attributes,
    onClick: () => setIsExpanded(!isExpanded)
  })), isExpanded && /*#__PURE__*/React.createElement(Stack, {
    space: "space.025",
    xcss: [itemsContainerStyles]
  }, items.map(item => {
    return /*#__PURE__*/React.createElement(ListButtonItem, {
      key: item.index,
      index: item.index,
      title: item.title,
      description: item.description,
      showDescription: item.showDescription,
      attributes: item.attributes,
      keyshortcut: item.keyshortcut,
      renderIcon: item.renderIcon,
      onItemSelected: index => onItemSelected === null || onItemSelected === void 0 ? void 0 : onItemSelected(index, id)
    });
  }), /*#__PURE__*/React.createElement(ViewAllButtonItem, {
    label: `View all ${shortAIlabel ? 'AI' : label.toLocaleLowerCase()} options`,
    onClick: () => onViewAllSelected === null || onViewAllSelected === void 0 ? void 0 : onViewAllSelected(id)
  })));
});