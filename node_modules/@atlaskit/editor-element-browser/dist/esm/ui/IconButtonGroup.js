import React, { memo } from 'react';
import Heading from '@atlaskit/heading';
import { Section } from '@atlaskit/menu';
import { Box, Inline, xcss } from '@atlaskit/primitives';
import { IconButtonItem } from './IconButtonItem';
var headingContainerStyles = xcss({
  paddingTop: 'space.0',
  paddingBottom: 'space.075',
  paddingLeft: 'space.300',
  paddingRight: 'space.300'
});
var buttonsContainerStyles = xcss({
  paddingTop: 'space.150',
  paddingBottom: 'space.200',
  paddingLeft: 'space.300',
  paddingRight: 'space.300'
});
export var IconButtonGroup = /*#__PURE__*/memo(function (_ref) {
  var id = _ref.id,
    label = _ref.label,
    items = _ref.items,
    hasSeparator = _ref.hasSeparator,
    _onItemSelected = _ref.onItemSelected;
  return (
    /*#__PURE__*/
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage
    React.createElement(Section, {
      hasSeparator: hasSeparator
    }, label && /*#__PURE__*/React.createElement(Box, {
      xcss: [headingContainerStyles]
    }, /*#__PURE__*/React.createElement(Heading, {
      size: 'xsmall',
      as: "span"
    }, label)), /*#__PURE__*/React.createElement(Box, {
      xcss: [buttonsContainerStyles]
    }, /*#__PURE__*/React.createElement(Inline, {
      as: "span",
      spread: "space-between",
      alignBlock: "center",
      space: "space.050",
      rowSpace: "space.150",
      grow: "fill",
      shouldWrap: true
    }, items.map(function (item) {
      return /*#__PURE__*/React.createElement(IconButtonItem, {
        key: item.index,
        index: item.index,
        title: item.title,
        description: item.description,
        showDescription: item.showDescription,
        attributes: item.attributes,
        keyshortcut: item.keyshortcut,
        renderIcon: item.renderIcon,
        onItemSelected: function onItemSelected(index) {
          return _onItemSelected === null || _onItemSelected === void 0 ? void 0 : _onItemSelected(index, id);
        }
      });
    }))))
  );
});