import React from 'react';
import type { OnSelectItem } from '../types';
import type { GroupData } from './ItemType';
type Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;
interface ListButtonGroupProps extends Optional<GroupData, 'label'> {
    hasSeparator?: boolean;
    onItemSelected?: (index: number, categoryId: string) => void;
    setSelectedItem?: OnSelectItem;
    startingIndex?: number;
}
export declare const ListButtonGroupWithHeading: React.MemoExoticComponent<({ id, label, items, hasSeparator, onItemSelected, setSelectedItem, startingIndex, }: ListButtonGroupProps) => React.JSX.Element>;
export declare const ListButtonGroup: React.MemoExoticComponent<({ id, items, hasSeparator, onItemSelected, setSelectedItem, startingIndex, }: Omit<ListButtonGroupProps, 'label'>) => React.JSX.Element>;
export {};
