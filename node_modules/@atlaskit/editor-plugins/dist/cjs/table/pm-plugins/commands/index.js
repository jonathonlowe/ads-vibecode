"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "addBoldInEmptyHeaderCells", {
  enumerable: true,
  get: function get() {
    return _commands.addBoldInEmptyHeaderCells;
  }
});
Object.defineProperty(exports, "addResizeHandleDecorations", {
  enumerable: true,
  get: function get() {
    return _commands.addResizeHandleDecorations;
  }
});
Object.defineProperty(exports, "autoSizeTable", {
  enumerable: true,
  get: function get() {
    return _commands.autoSizeTable;
  }
});
Object.defineProperty(exports, "clearHoverSelection", {
  enumerable: true,
  get: function get() {
    return _commands.clearHoverSelection;
  }
});
Object.defineProperty(exports, "clearMultipleCells", {
  enumerable: true,
  get: function get() {
    return _commands.clearMultipleCells;
  }
});
Object.defineProperty(exports, "convertFirstRowToHeader", {
  enumerable: true,
  get: function get() {
    return _commands.convertFirstRowToHeader;
  }
});
Object.defineProperty(exports, "createTable", {
  enumerable: true,
  get: function get() {
    return _commands.createTable;
  }
});
Object.defineProperty(exports, "deleteTable", {
  enumerable: true,
  get: function get() {
    return _commands.deleteTable;
  }
});
Object.defineProperty(exports, "getNextLayout", {
  enumerable: true,
  get: function get() {
    return _commands.getNextLayout;
  }
});
Object.defineProperty(exports, "goToNextCell", {
  enumerable: true,
  get: function get() {
    return _commands.goToNextCell;
  }
});
Object.defineProperty(exports, "hideInsertColumnOrRowButton", {
  enumerable: true,
  get: function get() {
    return _commands.hideInsertColumnOrRowButton;
  }
});
Object.defineProperty(exports, "hideResizeHandleLine", {
  enumerable: true,
  get: function get() {
    return _commands.hideResizeHandleLine;
  }
});
Object.defineProperty(exports, "hoverCell", {
  enumerable: true,
  get: function get() {
    return _commands.hoverCell;
  }
});
Object.defineProperty(exports, "hoverColumns", {
  enumerable: true,
  get: function get() {
    return _commands.hoverColumns;
  }
});
Object.defineProperty(exports, "hoverMergedCells", {
  enumerable: true,
  get: function get() {
    return _commands.hoverMergedCells;
  }
});
Object.defineProperty(exports, "hoverRows", {
  enumerable: true,
  get: function get() {
    return _commands.hoverRows;
  }
});
Object.defineProperty(exports, "hoverTable", {
  enumerable: true,
  get: function get() {
    return _commands.hoverTable;
  }
});
Object.defineProperty(exports, "insertColumn", {
  enumerable: true,
  get: function get() {
    return _commands.insertColumn;
  }
});
Object.defineProperty(exports, "insertRow", {
  enumerable: true,
  get: function get() {
    return _commands.insertRow;
  }
});
Object.defineProperty(exports, "moveCursorBackward", {
  enumerable: true,
  get: function get() {
    return _commands.moveCursorBackward;
  }
});
Object.defineProperty(exports, "removeDescendantNodes", {
  enumerable: true,
  get: function get() {
    return _commands.removeDescendantNodes;
  }
});
Object.defineProperty(exports, "selectColumn", {
  enumerable: true,
  get: function get() {
    return _commands.selectColumn;
  }
});
Object.defineProperty(exports, "selectColumns", {
  enumerable: true,
  get: function get() {
    return _commands.selectColumns;
  }
});
Object.defineProperty(exports, "selectRow", {
  enumerable: true,
  get: function get() {
    return _commands.selectRow;
  }
});
Object.defineProperty(exports, "selectRows", {
  enumerable: true,
  get: function get() {
    return _commands.selectRows;
  }
});
Object.defineProperty(exports, "setCellAttr", {
  enumerable: true,
  get: function get() {
    return _commands.setCellAttr;
  }
});
Object.defineProperty(exports, "setEditorFocus", {
  enumerable: true,
  get: function get() {
    return _commands.setEditorFocus;
  }
});
Object.defineProperty(exports, "setFocusToCellMenu", {
  enumerable: true,
  get: function get() {
    return _commands.setFocusToCellMenu;
  }
});
Object.defineProperty(exports, "setMultipleCellAttrs", {
  enumerable: true,
  get: function get() {
    return _commands.setMultipleCellAttrs;
  }
});
Object.defineProperty(exports, "setTableDisplayMode", {
  enumerable: true,
  get: function get() {
    return _commands.setTableDisplayMode;
  }
});
Object.defineProperty(exports, "setTableHovered", {
  enumerable: true,
  get: function get() {
    return _commands.setTableHovered;
  }
});
Object.defineProperty(exports, "setTableRef", {
  enumerable: true,
  get: function get() {
    return _commands.setTableRef;
  }
});
Object.defineProperty(exports, "showInsertColumnButton", {
  enumerable: true,
  get: function get() {
    return _commands.showInsertColumnButton;
  }
});
Object.defineProperty(exports, "showInsertRowButton", {
  enumerable: true,
  get: function get() {
    return _commands.showInsertRowButton;
  }
});
Object.defineProperty(exports, "showResizeHandleLine", {
  enumerable: true,
  get: function get() {
    return _commands.showResizeHandleLine;
  }
});
Object.defineProperty(exports, "sortByColumn", {
  enumerable: true,
  get: function get() {
    return _commands.sortByColumn;
  }
});
Object.defineProperty(exports, "toggleContextualMenu", {
  enumerable: true,
  get: function get() {
    return _commands.toggleContextualMenu;
  }
});
Object.defineProperty(exports, "toggleHeaderColumn", {
  enumerable: true,
  get: function get() {
    return _commands.toggleHeaderColumn;
  }
});
Object.defineProperty(exports, "toggleHeaderRow", {
  enumerable: true,
  get: function get() {
    return _commands.toggleHeaderRow;
  }
});
Object.defineProperty(exports, "toggleNumberColumn", {
  enumerable: true,
  get: function get() {
    return _commands.toggleNumberColumn;
  }
});
Object.defineProperty(exports, "toggleTableLayout", {
  enumerable: true,
  get: function get() {
    return _commands.toggleTableLayout;
  }
});
Object.defineProperty(exports, "transformSliceToAddTableHeaders", {
  enumerable: true,
  get: function get() {
    return _commands.transformSliceToAddTableHeaders;
  }
});
Object.defineProperty(exports, "triggerUnlessTableHeader", {
  enumerable: true,
  get: function get() {
    return _commands.triggerUnlessTableHeader;
  }
});
Object.defineProperty(exports, "updateWidthToWidest", {
  enumerable: true,
  get: function get() {
    return _commands.updateWidthToWidest;
  }
});
var _commands = require("@atlaskit/editor-plugin-table/commands");