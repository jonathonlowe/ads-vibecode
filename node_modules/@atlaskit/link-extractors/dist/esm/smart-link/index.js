import { extractLink, extractProvider, extractTitle } from '../common';
import { extractPreview } from '../common/preview/extractPreview';
import { extractEntity, extractEntityEmbedUrl, extractEntityProvider, extractEntityTitle, instanceOfDesignEntity, isEntityPresent } from '../entity';
export var extractSmartLinkEmbed = function extractSmartLinkEmbed(response, iframeUrlType) {
  if (isEntityPresent(response)) {
    var embedUrl = extractEntityEmbedUrl(response);
    return embedUrl ? {
      src: embedUrl
    } : undefined;
  }
  return extractPreview(response === null || response === void 0 ? void 0 : response.data, 'web', iframeUrlType);
};
export var extractSmartLinkTitle = function extractSmartLinkTitle(response, removeTextHighlightingFromTitle) {
  if (isEntityPresent(response)) {
    return extractEntityTitle(response);
  }
  return extractTitle(response === null || response === void 0 ? void 0 : response.data, removeTextHighlightingFromTitle);
};
export var extractSmartLinkUrl = function extractSmartLinkUrl(response) {
  if (isEntityPresent(response)) {
    var _extractEntity;
    return (_extractEntity = extractEntity(response)) === null || _extractEntity === void 0 ? void 0 : _extractEntity.url;
  }
  return extractLink(response === null || response === void 0 ? void 0 : response.data);
};

/**
 * This funtions assumes that the response contains nounData.
 */
export var extractSmartLinkIcon = function extractSmartLinkIcon(response) {
  var entity = extractEntity(response);
  var url;
  if (instanceOfDesignEntity(entity)) {
    url = entity === null || entity === void 0 ? void 0 : entity['atlassian:design'].iconUrl;
  }
  var label = extractEntityTitle(response);
  return {
    url: url,
    label: label
  };
};
export var extractSmartLinkProvider = function extractSmartLinkProvider(response) {
  if (isEntityPresent(response)) {
    return extractEntityProvider(response);
  }
  return extractProvider(response === null || response === void 0 ? void 0 : response.data);
};