"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "extractAri", {
  enumerable: true,
  get: function get() {
    return _common.extractAri;
  }
});
Object.defineProperty(exports, "extractContext", {
  enumerable: true,
  get: function get() {
    return _common.extractContext;
  }
});
Object.defineProperty(exports, "extractDateCreated", {
  enumerable: true,
  get: function get() {
    return _common.extractDateCreated;
  }
});
Object.defineProperty(exports, "extractDateUpdated", {
  enumerable: true,
  get: function get() {
    return _common.extractDateUpdated;
  }
});
Object.defineProperty(exports, "extractDateViewed", {
  enumerable: true,
  get: function get() {
    return _common.extractDateViewed;
  }
});
Object.defineProperty(exports, "extractEntity", {
  enumerable: true,
  get: function get() {
    return _entity.extractEntity;
  }
});
Object.defineProperty(exports, "extractEntityProvider", {
  enumerable: true,
  get: function get() {
    return _entity.extractEntityProvider;
  }
});
Object.defineProperty(exports, "extractImage", {
  enumerable: true,
  get: function get() {
    return _common.extractImage;
  }
});
Object.defineProperty(exports, "extractLink", {
  enumerable: true,
  get: function get() {
    return _common.extractLink;
  }
});
Object.defineProperty(exports, "extractMembers", {
  enumerable: true,
  get: function get() {
    return _common.extractMembers;
  }
});
Object.defineProperty(exports, "extractPersonAssignedTo", {
  enumerable: true,
  get: function get() {
    return _common.extractPersonAssignedTo;
  }
});
Object.defineProperty(exports, "extractPersonCreatedBy", {
  enumerable: true,
  get: function get() {
    return _common.extractPersonCreatedBy;
  }
});
Object.defineProperty(exports, "extractPersonFromJsonLd", {
  enumerable: true,
  get: function get() {
    return _common.extractPersonFromJsonLd;
  }
});
Object.defineProperty(exports, "extractPersonOwnedBy", {
  enumerable: true,
  get: function get() {
    return _common.extractPersonOwnedBy;
  }
});
Object.defineProperty(exports, "extractPersonUpdatedBy", {
  enumerable: true,
  get: function get() {
    return _common.extractPersonUpdatedBy;
  }
});
Object.defineProperty(exports, "extractPlatformIsSupported", {
  enumerable: true,
  get: function get() {
    return _common.extractPlatformIsSupported;
  }
});
Object.defineProperty(exports, "extractPreview", {
  enumerable: true,
  get: function get() {
    return _common.extractPreview;
  }
});
Object.defineProperty(exports, "extractProvider", {
  enumerable: true,
  get: function get() {
    return _common.extractProvider;
  }
});
Object.defineProperty(exports, "extractProviderIcon", {
  enumerable: true,
  get: function get() {
    return _common.extractProviderIcon;
  }
});
Object.defineProperty(exports, "extractSmartLinkEmbed", {
  enumerable: true,
  get: function get() {
    return _smartLink.extractSmartLinkEmbed;
  }
});
Object.defineProperty(exports, "extractSmartLinkIcon", {
  enumerable: true,
  get: function get() {
    return _smartLink.extractSmartLinkIcon;
  }
});
Object.defineProperty(exports, "extractSmartLinkProvider", {
  enumerable: true,
  get: function get() {
    return _smartLink.extractSmartLinkProvider;
  }
});
Object.defineProperty(exports, "extractSmartLinkTitle", {
  enumerable: true,
  get: function get() {
    return _smartLink.extractSmartLinkTitle;
  }
});
Object.defineProperty(exports, "extractSmartLinkUrl", {
  enumerable: true,
  get: function get() {
    return _smartLink.extractSmartLinkUrl;
  }
});
Object.defineProperty(exports, "extractSummary", {
  enumerable: true,
  get: function get() {
    return _common.extractSummary;
  }
});
Object.defineProperty(exports, "extractTitle", {
  enumerable: true,
  get: function get() {
    return _common.extractTitle;
  }
});
Object.defineProperty(exports, "extractType", {
  enumerable: true,
  get: function get() {
    return _common.extractType;
  }
});
Object.defineProperty(exports, "extractUrlFromIconJsonLd", {
  enumerable: true,
  get: function get() {
    return _common.extractUrlFromIconJsonLd;
  }
});
Object.defineProperty(exports, "extractUrlFromLinkJsonLd", {
  enumerable: true,
  get: function get() {
    return _common.extractUrlFromLinkJsonLd;
  }
});
exports.genericExtractPropsFromJSONLD = genericExtractPropsFromJSONLD;
Object.defineProperty(exports, "isConfluenceGenerator", {
  enumerable: true,
  get: function get() {
    return _common.isConfluenceGenerator;
  }
});
Object.defineProperty(exports, "isEntityPresent", {
  enumerable: true,
  get: function get() {
    return _entity.isEntityPresent;
  }
});
var _common = require("./common");
var _entity = require("./entity");
var _smartLink = require("./smart-link");
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function genericExtractPropsFromJSONLD(options) {
  var defaultExtractorFunction = options.defaultExtractorFunction,
    extractorPrioritiesByType = options.extractorPrioritiesByType,
    extractorFunctionsByType = options.extractorFunctionsByType,
    json = options.json;
  if (json) {
    var type = json['@type'];
    if (type && Array.isArray(type)) {
      var highestPriority = 0;
      var highestPriorityExtractorFunction = defaultExtractorFunction;
      var _iterator = _createForOfIteratorHelper(type),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var t = _step.value;
          if (extractorPrioritiesByType[t] > highestPriority) {
            highestPriority = extractorPrioritiesByType[t];
            highestPriorityExtractorFunction = extractorFunctionsByType[t];
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return highestPriorityExtractorFunction(json);
    }
    if (type && extractorFunctionsByType[type]) {
      return extractorFunctionsByType[type](json);
    }
  }
  return defaultExtractorFunction(json);
}