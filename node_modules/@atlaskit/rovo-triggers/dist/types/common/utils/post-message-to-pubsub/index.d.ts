import { type Payload } from '../../../types';
export declare const ROVO_POST_MESSAGE_EVENT_TYPE = "rovo-post-message";
export declare const ROVO_POST_MESSAGE_ACK_EVENT_TYPE = "rovo-post-message-ack";
export declare const isAllowedOrigin: (origin: string | undefined) => boolean;
export declare const RovoPostMessagePubsubListener: () => null;
/**
 * Hook to send a publish event to parent iframe using postMessage
 * Only supports 1 pubsub event at a time and waits for acknowledgment or timed out
 */
export declare const useRovoPostMessageToPubsub: () => {
    publishWithPostMessage: ({ targetWindow, payload, onAcknowledgeTimeout, }: {
        targetWindow?: Window | undefined;
        payload: Payload;
        onAcknowledgeTimeout: (params: {
            payload: Payload;
        }) => void;
    }) => void;
    isWaitingForAck: boolean;
};
