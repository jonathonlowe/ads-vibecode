import type { Callback, Payload, Topic } from './types';
interface SubscribeOptions {
    topic: Topic;
    triggerLatest?: boolean;
}
export declare const useSubscribe: ({ topic, triggerLatest }: SubscribeOptions, callback: Callback) => void;
export declare const useSubscribeAll: (callback: Callback) => void;
export declare const usePublish: (topic: Topic) => (payload: Payload) => void;
export declare const Subscriber: ({ topic, triggerLatest, onEvent, flushQueueOnUnmount, }: {
    topic: Topic;
    triggerLatest?: boolean | undefined;
    onEvent: Callback;
    flushQueueOnUnmount?: boolean | undefined;
}) => null;
export {};
