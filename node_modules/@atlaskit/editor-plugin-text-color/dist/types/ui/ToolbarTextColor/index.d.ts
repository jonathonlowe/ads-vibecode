/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';
import { jsx } from '@emotion/react';
import type { WrappedComponentProps } from 'react-intl-next';
import type { DispatchAnalyticsEvent, EditorAnalyticsAPI } from '@atlaskit/editor-common/analytics';
import type { ExtractInjectionAPI } from '@atlaskit/editor-common/types';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { TextColorPluginState } from '../../pm-plugins/main';
import type { TextColorPlugin } from '../../textColorPluginType';
import { ToolbarType } from '../../types';
export interface State {
    isOpen: boolean;
    isOpenedByKeyboard: boolean;
}
export interface Props {
    pluginState: TextColorPluginState;
    editorView: EditorView;
    popupsMountPoint?: HTMLElement;
    popupsBoundariesElement?: HTMLElement;
    popupsScrollableElement?: HTMLElement;
    isReducedSpacing?: boolean;
    dispatchAnalyticsEvent?: DispatchAnalyticsEvent;
    disabled?: boolean;
    pluginInjectionApi: ExtractInjectionAPI<TextColorPlugin> | undefined;
    toolbarType: ToolbarType;
}
export declare class ToolbarTextColor extends React.Component<Props & WrappedComponentProps, State> {
    state: State;
    private toolbarItemRef;
    changeColor: (color: string, editorAnalyticsApi: EditorAnalyticsAPI | undefined) => boolean;
    render(): jsx.JSX.Element;
    private changeTextColor;
    private toggleOpen;
    private onKeyDown;
    private handleOpenChange;
    private hide;
    private hideonEsc;
    private getSelectedColor;
    private buildAnalyticsPalette;
    private dispatchAnalyticsEvent;
}
declare const _default: React.FC<import("react-intl-next").WithIntlProps<Props & WrappedComponentProps>> & {
    WrappedComponent: React.ComponentType<Props & WrappedComponentProps>;
};
export default _default;
