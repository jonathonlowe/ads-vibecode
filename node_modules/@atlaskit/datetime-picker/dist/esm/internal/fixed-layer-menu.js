/* fixed-layer-menu.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["className", "clearValue", "cx", "getStyles", "getValue", "hasValue", "innerProps", "innerRef", "isLoading", "isMulti", "isRtl", "maxMenuHeight", "menuPlacement", "menuPosition", "menuShouldScrollIntoView", "minMenuHeight", "options", "placement", "selectOption", "selectProps", "setValue", "children"];
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { components } from '@atlaskit/select';
import FixedLayer from '../internal/fixed-layer';

/**
 * This is the fixed layer menu used in the time picker.
 */
export var FixedLayerMenu = function FixedLayerMenu(_ref) {
  var className = _ref.className,
    clearValue = _ref.clearValue,
    cx = _ref.cx,
    getStyles = _ref.getStyles,
    getValue = _ref.getValue,
    hasValue = _ref.hasValue,
    innerProps = _ref.innerProps,
    innerRef = _ref.innerRef,
    isLoading = _ref.isLoading,
    isMulti = _ref.isMulti,
    isRtl = _ref.isRtl,
    maxMenuHeight = _ref.maxMenuHeight,
    menuPlacement = _ref.menuPlacement,
    menuPosition = _ref.menuPosition,
    menuShouldScrollIntoView = _ref.menuShouldScrollIntoView,
    minMenuHeight = _ref.minMenuHeight,
    options = _ref.options,
    placement = _ref.placement,
    selectOption = _ref.selectOption,
    selectProps = _ref.selectProps,
    setValue = _ref.setValue,
    children = _ref.children,
    rest = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement(FixedLayer, {
    inputValue: selectProps.inputValue
    //@ts-ignore react-select unsupported props
    ,
    containerRef: selectProps.fixedLayerRef,
    content: /*#__PURE__*/React.createElement(components.Menu, _extends({}, rest, {
      // eslint-disable-next-line @atlaskit/design-system/no-unsafe-style-overrides, @atlaskit/ui-styling-standard/no-classname-prop
      className: className,
      clearValue: clearValue,
      cx: cx,
      getStyles: getStyles,
      getValue: getValue,
      hasValue: hasValue,
      innerProps: innerProps,
      innerRef: innerRef,
      isLoading: isLoading,
      isMulti: isMulti,
      isRtl: isRtl,
      maxMenuHeight: maxMenuHeight,
      menuPlacement: menuPlacement,
      menuPosition: menuPosition,
      menuShouldScrollIntoView: false || menuShouldScrollIntoView,
      minMenuHeight: minMenuHeight,
      options: options,
      placement: placement,
      selectOption: selectOption,
      selectProps: selectProps,
      setValue: setValue
    }), children)
    //@ts-ignore react-select unsupported props
    ,
    testId: selectProps.testId
  });
};