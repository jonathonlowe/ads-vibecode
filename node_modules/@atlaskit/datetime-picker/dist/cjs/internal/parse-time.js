"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.convertTo24hrTime = convertTo24hrTime;
exports.default = parseTime;
exports.isValid = isValid;
exports.removeSpacer = removeSpacer;
var map24 = {
  '12': '12',
  '01': '13',
  '02': '14',
  '03': '15',
  '04': '16',
  '05': '17',
  '06': '18',
  '07': '19',
  '08': '20',
  '09': '21',
  '10': '22',
  '11': '23'
};
function isValid(timeString) {
  /**
   * Regex match for `12:34`, `12:34:56`, `1:23:56 p`, `1:23:56PM`, and a bit moreâ€¦
   */
  var time = timeString.trim().match(/([012]?[\d])(?::([0-5][\d]))?(?::([0-5][\d]))?\s*([ap]m?)?/i);

  /**
   * Regex match for `1234`, `12:34`, `12.34`, `123456`, `12:34:56`, `12.34.56`
   */
  var time24hr = timeString.trim().match(/([012][\d])[:.]?([0-5][\d])([:.]?([0-5][\d]))?/);

  /**
   * Convert `2:34:56 pm` down to `23456`
   */
  var num = timeString.replace(/[^0-9]/g, '');
  var includesSeconds = time && time[1] !== undefined && time[2] !== undefined && time[3] !== undefined || time24hr && time24hr[1] !== undefined && time24hr[2] !== undefined && time24hr[4] !== undefined;
  if (!time && !time24hr) {
    return false;
  }
  if (time && !time[1]) {
    return false;
  }
  if (num.length > 6) {
    return false;
  }
  if (num.length > 4 && !includesSeconds) {
    return false;
  }
  if (num.length === 2 && parseInt(num, 10) > 12) {
    return false;
  }
  return true;
}
function removeSpacer(time) {
  return time.replace(/[:.]/g, '');
}
function formatSemi24(time) {
  if (time.length === 1) {
    return "0".concat(time, "00");
  }
  if (time.length === 2) {
    return "".concat(time, "00");
  }
  if (time.length === 3 || time.length === 5) {
    return "0".concat(time);
  }
  return time;
}
function checkHour(hour, meridiem) {
  if (hour > '24') {
    return null;
  }
  if (hour === '12' && meridiem === 'a') {
    return '00';
  }
  if (hour < '12' && meridiem === 'p') {
    return map24[hour];
  }
  return hour;
}
function checkMinuteSecond(value) {
  if (value > '59') {
    return null;
  }
  return value;
}
function convertTo24hrTime(time) {
  var timeArray = time.toLowerCase().split(/(p|a)/i);
  var meridiem = timeArray[1];
  var semi24 = formatSemi24(timeArray[0].trim());
  var hour = checkHour(semi24.substring(0, 2), meridiem);
  var minute = checkMinuteSecond(semi24.substring(2, 4));
  var seconds = semi24.length === 6 && checkMinuteSecond(semi24.substring(4, 6));
  if (!hour || !minute) {
    return null;
  }
  return {
    hour: parseInt(hour, 10),
    minute: parseInt(minute, 10),
    seconds: parseInt(seconds || '0', 10) || 0
  };
}
function assignToDate(time) {
  var dateTime = new Date();
  dateTime.setHours(time.hour);
  dateTime.setMinutes(time.minute);
  // milliseconds is not supported
  dateTime.setSeconds(time.seconds || 0, 0);
  return dateTime;
}
function parseTime(time) {
  var trimmedTime = time.toString().trim();
  if (!isValid(trimmedTime)) {
    throw RangeError('invalid time format');
  }
  var time1 = removeSpacer(trimmedTime);
  var time2 = convertTo24hrTime(time1);
  if (!time2) {
    throw RangeError('invalid time format');
  }
  return assignToDate(time2);
}