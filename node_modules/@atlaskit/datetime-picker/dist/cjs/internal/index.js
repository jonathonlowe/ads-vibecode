"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultTimes = exports.defaultTimeFormat = exports.defaultDateFormat = exports.EmptyComponent = void 0;
exports.formatDateTimeZoneIntoIso = formatDateTimeZoneIntoIso;
exports.padToTwo = padToTwo;
exports.placeholderDatetime = void 0;
/**
 * This component is used to hide portions of Select component.
 */
var EmptyComponent = exports.EmptyComponent = function EmptyComponent() {
  return null;
};

// This date was chosen to clearly show date and time formats (day > 12)
// e.g. 18/02/1993 vs. 2/18/1993 and 1:00 PM vs 13:00
var placeholderDatetime = exports.placeholderDatetime = new Date(1993, 1, 18, 13);
var defaultTimes = exports.defaultTimes = ['09:00', '09:30', '10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '17:00', '17:30', '18:00'];
var defaultTimeFormat = exports.defaultTimeFormat = 'h:mma';
var defaultDateFormat = exports.defaultDateFormat = 'YYYY/MM/DD';
function padToTwo(number) {
  return number <= 99 ? "0".concat(number).slice(-2) : "".concat(number);
}
function formatDateTimeZoneIntoIso(date, time, zone) {
  // 12:00 => 12:00, 1:00 => 01:00
  var needsLeadingZero = /^\d:/;
  var sanitizedTime = needsLeadingZero.test(time) ? "0".concat(time) : time;
  return "".concat(date, "T").concat(sanitizedTime).concat(zone);
}