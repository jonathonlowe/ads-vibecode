"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _focusRing = _interopRequireDefault(require("@atlaskit/focus-ring"));
var _hooks = require("../hooks");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
// Note this is not being memoized as children is an unstable reference
/**
 * __TabPanel__
 *
 * A TabPanel houses the contents of a Tab.
 *
 * - [Examples](https://atlassian.design/components/tabs/examples)
 * - [Code](https://atlassian.design/components/tabs/code)
 * - [Usage](https://atlassian.design/components/tabs/usage)
 */
var TabPanel = function TabPanel(_ref) {
  var children = _ref.children,
    testId = _ref.testId;
  var _useTabPanel = (0, _hooks.useTabPanel)(),
    role = _useTabPanel.role,
    id = _useTabPanel.id,
    hidden = _useTabPanel.hidden,
    ariaLabelledBy = _useTabPanel['aria-labelledby'],
    tabIndex = _useTabPanel.tabIndex;
  return /*#__PURE__*/_react.default.createElement(_focusRing.default, {
    isInset: true
  }, /*#__PURE__*/_react.default.createElement("div", {
    "data-testid": testId,
    role: role,
    id: id,
    hidden: hidden,
    "aria-labelledby": ariaLabelledBy,
    tabIndex: tabIndex
  }, /*#__PURE__*/_react.default.createElement(_react.Fragment, null, children)));
};
var _default = exports.default = TabPanel;