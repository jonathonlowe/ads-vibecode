import React from 'react';
import { rule } from '@atlaskit/adf-schema';
import { ACTION, ACTION_SUBJECT, ACTION_SUBJECT_ID, EVENT_TYPE, INPUT_METHOD } from '@atlaskit/editor-common/analytics';
import { toolbarInsertBlockMessages as messages } from '@atlaskit/editor-common/messages';
import { IconDivider } from '@atlaskit/editor-common/quick-insert';
import { insertHorizontalRule } from './pm-plugins/commands';
// Ignored via go/ees005
// eslint-disable-next-line import/no-named-as-default
import inputRulePlugin from './pm-plugins/input-rule';
// Ignored via go/ees005
// eslint-disable-next-line import/no-named-as-default
import keymapPlugin from './pm-plugins/keymap';
export const rulePlugin = ({
  api
}) => {
  var _api$analytics;
  return {
    name: 'rule',
    nodes() {
      return [{
        name: 'rule',
        node: rule
      }];
    },
    actions: {
      insertHorizontalRule: insertHorizontalRule(api === null || api === void 0 ? void 0 : (_api$analytics = api.analytics) === null || _api$analytics === void 0 ? void 0 : _api$analytics.actions)
    },
    pmPlugins() {
      return [{
        name: 'ruleInputRule',
        plugin: ({
          schema
        }) => {
          var _api$analytics2;
          return inputRulePlugin(schema, api === null || api === void 0 ? void 0 : (_api$analytics2 = api.analytics) === null || _api$analytics2 === void 0 ? void 0 : _api$analytics2.actions);
        }
      }, {
        name: 'ruleKeymap',
        plugin: () => {
          var _api$analytics3;
          return keymapPlugin(api === null || api === void 0 ? void 0 : (_api$analytics3 = api.analytics) === null || _api$analytics3 === void 0 ? void 0 : _api$analytics3.actions);
        }
      }];
    },
    pluginsOptions: {
      quickInsert: ({
        formatMessage
      }) => [{
        id: 'rule',
        title: formatMessage(messages.horizontalRule),
        description: formatMessage(messages.horizontalRuleDescription),
        keywords: ['horizontal', 'rule', 'line', 'hr'],
        priority: 1200,
        keyshortcut: '---',
        icon: () => /*#__PURE__*/React.createElement(IconDivider, null),
        action(insert, state) {
          var _api$analytics4;
          const tr = insert(state.schema.nodes.rule.createChecked());
          api === null || api === void 0 ? void 0 : (_api$analytics4 = api.analytics) === null || _api$analytics4 === void 0 ? void 0 : _api$analytics4.actions.attachAnalyticsEvent({
            action: ACTION.INSERTED,
            actionSubject: ACTION_SUBJECT.DOCUMENT,
            actionSubjectId: ACTION_SUBJECT_ID.DIVIDER,
            attributes: {
              inputMethod: INPUT_METHOD.QUICK_INSERT
            },
            eventType: EVENT_TYPE.TRACK
          })(tr);
          return tr;
        }
      }]
    }
  };
};