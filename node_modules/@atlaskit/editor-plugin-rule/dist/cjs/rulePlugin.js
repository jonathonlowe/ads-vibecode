"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rulePlugin = void 0;
var _react = _interopRequireDefault(require("react"));
var _adfSchema = require("@atlaskit/adf-schema");
var _analytics = require("@atlaskit/editor-common/analytics");
var _messages = require("@atlaskit/editor-common/messages");
var _quickInsert = require("@atlaskit/editor-common/quick-insert");
var _commands = require("./pm-plugins/commands");
var _inputRule = _interopRequireDefault(require("./pm-plugins/input-rule"));
var _keymap = _interopRequireDefault(require("./pm-plugins/keymap"));
// Ignored via go/ees005
// eslint-disable-next-line import/no-named-as-default

// Ignored via go/ees005
// eslint-disable-next-line import/no-named-as-default

var rulePlugin = exports.rulePlugin = function rulePlugin(_ref) {
  var _api$analytics;
  var api = _ref.api;
  return {
    name: 'rule',
    nodes: function nodes() {
      return [{
        name: 'rule',
        node: _adfSchema.rule
      }];
    },
    actions: {
      insertHorizontalRule: (0, _commands.insertHorizontalRule)(api === null || api === void 0 || (_api$analytics = api.analytics) === null || _api$analytics === void 0 ? void 0 : _api$analytics.actions)
    },
    pmPlugins: function pmPlugins() {
      return [{
        name: 'ruleInputRule',
        plugin: function plugin(_ref2) {
          var _api$analytics2;
          var schema = _ref2.schema;
          return (0, _inputRule.default)(schema, api === null || api === void 0 || (_api$analytics2 = api.analytics) === null || _api$analytics2 === void 0 ? void 0 : _api$analytics2.actions);
        }
      }, {
        name: 'ruleKeymap',
        plugin: function plugin() {
          var _api$analytics3;
          return (0, _keymap.default)(api === null || api === void 0 || (_api$analytics3 = api.analytics) === null || _api$analytics3 === void 0 ? void 0 : _api$analytics3.actions);
        }
      }];
    },
    pluginsOptions: {
      quickInsert: function quickInsert(_ref3) {
        var formatMessage = _ref3.formatMessage;
        return [{
          id: 'rule',
          title: formatMessage(_messages.toolbarInsertBlockMessages.horizontalRule),
          description: formatMessage(_messages.toolbarInsertBlockMessages.horizontalRuleDescription),
          keywords: ['horizontal', 'rule', 'line', 'hr'],
          priority: 1200,
          keyshortcut: '---',
          icon: function icon() {
            return /*#__PURE__*/_react.default.createElement(_quickInsert.IconDivider, null);
          },
          action: function action(insert, state) {
            var _api$analytics4;
            var tr = insert(state.schema.nodes.rule.createChecked());
            api === null || api === void 0 || (_api$analytics4 = api.analytics) === null || _api$analytics4 === void 0 || _api$analytics4.actions.attachAnalyticsEvent({
              action: _analytics.ACTION.INSERTED,
              actionSubject: _analytics.ACTION_SUBJECT.DOCUMENT,
              actionSubjectId: _analytics.ACTION_SUBJECT_ID.DIVIDER,
              attributes: {
                inputMethod: _analytics.INPUT_METHOD.QUICK_INSERT
              },
              eventType: _analytics.EVENT_TYPE.TRACK
            })(tr);
            return tr;
          }
        }];
      }
    }
  };
};