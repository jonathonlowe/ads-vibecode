"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.placeholderCSS = exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _placeholder = _interopRequireWildcard(require("../compiled/components/placeholder"));
var _placeholder2 = _interopRequireWildcard(require("../emotion/components/placeholder"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/* eslint-disable @repo/internal/react/no-unsafe-spread-props */

var placeholderCSS = exports.placeholderCSS = function placeholderCSS(props) {
  return (0, _platformFeatureFlags.fg)('compiled-react-select') ? (0, _placeholder.placeholderCSS)() : (0, _placeholder2.placeholderCSS)(props);
};
var Placeholder = function Placeholder(props) {
  return (0, _platformFeatureFlags.fg)('compiled-react-select') ? /*#__PURE__*/_react.default.createElement(_placeholder.default, props) : /*#__PURE__*/_react.default.createElement(_placeholder2.default, props);
};

// eslint-disable-next-line @repo/internal/react/require-jsdoc
var _default = exports.default = Placeholder;