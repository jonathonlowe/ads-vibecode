/* multi-value.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MultiValueLabel = exports.MultiValueContainer = void 0;
exports.MultiValueRemove = MultiValueRemove;
exports.multiValueRemoveCSS = exports.multiValueLabelCSS = exports.multiValueCSS = exports.default = void 0;
require("./multi-value.compiled.css");
var React = _interopRequireWildcard(require("react"));
var _runtime = require("@compiled/react/runtime");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react2 = require("@compiled/react");
var _selectClear = _interopRequireDefault(require("@atlaskit/icon/glyph/select-clear"));
var _cross = _interopRequireDefault(require("@atlaskit/icon/utility/cross"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _compiled = require("@atlaskit/primitives/compiled");
var _utils = require("../../utils");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var multiValueStyles = {
  root: "_2rkogqwt _1e0c1txw _1ul9ze3t _19pkv77o _2hwxv77o _otyrv77o _18u0v77o _bfhkm7j4 _p12f1osq _syazjpor _3yq3glyw",
  disabled: "_syaz1lh4 _bfhkm7j4",
  focused: "_syaz1wum _bfhkfg4m _16qs7ex6 _1aewe4h9 _6up51j28 _1xdnnqa1",
  refresh: "_2rkoiti9 _1h6d14je _1dqonqa1 _189ee4h9 _bfhk1j9a"
};
var multiValueCSS = exports.multiValueCSS = function multiValueCSS() {
  return {};
};
var multiValueLabelCSS = exports.multiValueLabelCSS = function multiValueLabelCSS() {
  return {};
};
var multiValueLabelStyles = {
  root: "_1reo15vq _18m915vq _2rkogqwt _11c8dcr7 _o5721q9c _ca0qv77o _u5f3v77o _n3tdv77o _19bv12x7 _syaz1kw7",
  disabled: "_syaz1lh4",
  ellipsis: "_1bto1l2s",
  refresh: "_11c82smr _ca0qidpf _n3tdidpf _19bv1b66"
};
var multiValueRemoveCSS = exports.multiValueRemoveCSS = function multiValueRemoveCSS() {
  return {};
};
var multiValueRemoveStyles = {
  focused: "_bfhkb1q9 _lswu1rrc",
  root: "_2rkovtp2 _4cvr1h6o _1e0c1txw _lswu1dx5 _19bvv77o _u5f3v77o _irr31yvi _13br1jjn _1di61io2 _i5f81jjn",
  refresh: "_19itglyw _2rkoglpi _bfhksm61 _4cvr1h6o _1bah1h6o _1wpz1h6o _r06hglyw _syaz1fxt _ca0qv77o _u5f3v77o _n3tdv77o _19bvv77o _2hwxv77o _1ah312gs _irr3166n _1di61dty"
};
// eslint-disable-next-line @repo/internal/react/require-jsdoc
var MultiValueContainer = exports.MultiValueContainer = function MultiValueContainer(_ref) {
  var children = _ref.children,
    innerProps = _ref.innerProps,
    isFocused = _ref.isFocused,
    isDisabled = _ref.isDisabled,
    className = _ref.className,
    xcss = _ref.xcss;
  return /*#__PURE__*/React.createElement("div", (0, _extends2.default)({}, innerProps, {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop, @atlaskit/ui-styling-standard/local-cx-xcss, @compiled/local-cx-xcss
    className: (0, _runtime.ax)([multiValueStyles.root, isDisabled && multiValueStyles.disabled, isFocused && multiValueStyles.focused, (0, _platformFeatureFlags.fg)('platform-component-visual-refresh') && multiValueStyles.refresh, (0, _react2.cx)(className, xcss)])
  }), children);
};

// eslint-disable-next-line @repo/internal/react/require-jsdoc
var MultiValueLabel = exports.MultiValueLabel = function MultiValueLabel(_ref2) {
  var children = _ref2.children,
    innerProps = _ref2.innerProps,
    isDisabled = _ref2.isDisabled,
    hasEllipsis = _ref2.hasEllipsis,
    className = _ref2.className,
    xcss = _ref2.xcss;
  return /*#__PURE__*/React.createElement("div", (0, _extends2.default)({}, innerProps, {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop, @atlaskit/ui-styling-standard/local-cx-xcss, @compiled/local-cx-xcss
    className: (0, _runtime.ax)([multiValueLabelStyles.root, isDisabled && multiValueLabelStyles.disabled, hasEllipsis && multiValueLabelStyles.ellipsis, (0, _platformFeatureFlags.fg)('platform-component-visual-refresh') && multiValueLabelStyles.refresh, (0, _react2.cx)(className, xcss)])
  }), children);
};
var disabledStyles = null;
var enabledStyles = null;
var iconWrapperStyles = {
  root: "_ca0qv77o _u5f3v77o _n3tdv77o _19bvv77o"
};
var renderIcon = function renderIcon() {
  // eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-prefix
  if ((0, _platformFeatureFlags.fg)('platform-component-visual-refresh')) {
    return /*#__PURE__*/React.createElement(_cross.default, {
      label: "",
      color: "currentColor"
    });
  }

  // eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-prefix
  if ((0, _platformFeatureFlags.fg)('platform-visual-refresh-icons-legacy-facade')) {
    return /*#__PURE__*/React.createElement(_compiled.Inline, {
      xcss: iconWrapperStyles.root
    }, /*#__PURE__*/React.createElement(_cross.default, {
      label: "",
      color: "currentColor"
    }));
  }
  return /*#__PURE__*/React.createElement(_selectClear.default, {
    label: "",
    primaryColor: "transparent",
    size: "small",
    secondaryColor: "inherit"
  });
};
function MultiValueRemove(_ref3) {
  var isDisabled = _ref3.isDisabled,
    isFocused = _ref3.isFocused,
    innerProps = _ref3.innerProps,
    className = _ref3.className,
    xcss = _ref3.xcss;
  return /*#__PURE__*/React.createElement("div", (0, _extends2.default)({}, innerProps, {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop, @atlaskit/ui-styling-standard/local-cx-xcss, @compiled/local-cx-xcss
    className: (0, _runtime.ax)([multiValueRemoveStyles.root, isFocused && multiValueRemoveStyles.focused, (0, _platformFeatureFlags.fg)('platform-component-visual-refresh') && multiValueRemoveStyles.refresh, (0, _react2.cx)(className, xcss)])
  }), /*#__PURE__*/React.createElement("div", {
    "data-testid": isDisabled ? 'hide-clear-icon' : 'show-clear-icon',
    className: (0, _runtime.ax)([isDisabled && "_1e0cglyw", !isDisabled && "_1e0c1kw7"])
  }, renderIcon()));
}
var MultiValue = function MultiValue(props) {
  var children = props.children,
    components = props.components,
    data = props.data,
    innerProps = props.innerProps,
    isDisabled = props.isDisabled,
    isFocused = props.isFocused,
    removeProps = props.removeProps,
    selectProps = props.selectProps,
    cropWithEllipsis = props.cropWithEllipsis;
  var Container = components.Container,
    Label = components.Label,
    Remove = components.Remove;
  var ariaLabel = typeof children === 'string' ? children : data.label;
  var _getStyleProps = (0, _utils.getStyleProps)(props, 'multiValue', {
      'multi-value': true,
      'multi-value--is-disabled': isDisabled
    }),
    containerCss = _getStyleProps.css,
    containerClassName = _getStyleProps.className;
  var _getStyleProps2 = (0, _utils.getStyleProps)(props, 'multiValueLabel', {
      'multi-value__label': true
    }),
    labelCss = _getStyleProps2.css,
    labelClassName = _getStyleProps2.className;
  var _getStyleProps3 = (0, _utils.getStyleProps)(props, 'multiValueRemove', {
      'multi-value__remove': true
    }),
    removeCss = _getStyleProps3.css,
    removeClassName = _getStyleProps3.className;
  return /*#__PURE__*/React.createElement(Container, {
    data: data,
    innerProps: _objectSpread({
      style: containerCss,
      className: containerClassName
    }, innerProps)
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop
    ,
    className: containerClassName,
    isFocused: isFocused,
    isDisabled: isDisabled,
    selectProps: selectProps
  }, /*#__PURE__*/React.createElement(Label, {
    data: data,
    innerProps: {
      style: labelCss,
      className: labelClassName
    }
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop
    ,
    className: labelClassName,
    hasEllipsis: cropWithEllipsis || cropWithEllipsis === undefined,
    selectProps: selectProps
  }, children), /*#__PURE__*/React.createElement(Remove, {
    data: data,
    innerProps: _objectSpread({
      style: removeCss,
      className: removeClassName,
      role: 'button',
      tabIndex: -1,
      'aria-label': "".concat(ariaLabel || 'option', ", remove")
    }, removeProps)
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop
    ,
    className: removeClassName,
    isDisabled: isDisabled,
    selectProps: selectProps
  }));
};

// eslint-disable-next-line @repo/internal/react/require-jsdoc
var _default = exports.default = MultiValue;