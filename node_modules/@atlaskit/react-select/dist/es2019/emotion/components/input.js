import _extends from "@babel/runtime/helpers/extends";
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled
import { jsx } from '@emotion/react';
import { cleanCommonProps, getStyleProps } from '../../utils';
export const inputCSS = ({
  isDisabled,
  value
}) => ({
  visibility: isDisabled ? 'hidden' : 'visible',
  // force css to recompute when value change due to @emotion bug.
  // We can remove it whenever the bug is fixed.
  transform: value ? 'translateZ(0)' : '',
  ...containerStyle,
  margin: "var(--ds-space-025, 2px)",
  paddingBottom: "var(--ds-space-025, 2px)",
  paddingTop: "var(--ds-space-025, 2px)",
  color: "var(--ds-text, #172B4D)"
});
const spacingStyle = {
  gridArea: '1 / 2',
  font: 'inherit',
  minWidth: '2px',
  border: 0,
  margin: 0,
  outline: 0,
  padding: 0
};
const containerStyle = {
  flex: '1 1 auto',
  display: 'inline-grid',
  gridArea: '1 / 1 / 2 / 3',
  gridTemplateColumns: '0 min-content',
  '&:after': {
    content: 'attr(data-value) " "',
    visibility: 'hidden',
    whiteSpace: 'pre',
    ...spacingStyle
  }
};
const inputStyle = isHidden => ({
  label: 'input',
  color: 'inherit',
  background: 0,
  opacity: isHidden ? 0 : 1,
  width: '100%',
  ...spacingStyle
});
const Input = props => {
  const {
    cx,
    value
  } = props;
  const {
    innerRef,
    isDisabled,
    isHidden,
    inputClassName,
    testId,
    ...innerProps
  } = cleanCommonProps(props);
  const dataId = testId ? `${testId}-select--input` : null;
  return jsx("div", _extends({}, getStyleProps(props, 'input', {
    'input-container': true
  }), {
    "data-value": value || '',
    "data-testid": dataId && `${dataId}-container`
  }), jsx("input", _extends({
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop
    className: cx({
      input: true
    }, inputClassName),
    ref: innerRef
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop
    ,
    style: inputStyle(isHidden),
    disabled: isDisabled,
    "data-testid": dataId
  }, innerProps)));
};

// eslint-disable-next-line @repo/internal/react/require-jsdoc
export default Input;