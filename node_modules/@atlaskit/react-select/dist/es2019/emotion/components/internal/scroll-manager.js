/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { Fragment } from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled
import { css, jsx } from '@emotion/react';
import useScrollCapture from './use-scroll-capture';
import useScrollLock from './use-scroll-lock';
const styles = css({
  position: 'fixed',
  insetBlockEnd: 0,
  insetBlockStart: 0,
  insetInlineEnd: 0,
  insetInlineStart: 0
});
const blurSelectInput = event => {
  const element = event.target;
  return element.ownerDocument.activeElement && element.ownerDocument.activeElement.blur();
};
export default function ScrollManager({
  children,
  lockEnabled,
  captureEnabled = true,
  onBottomArrive,
  onBottomLeave,
  onTopArrive,
  onTopLeave
}) {
  const setScrollCaptureTarget = useScrollCapture({
    isEnabled: captureEnabled,
    onBottomArrive,
    onBottomLeave,
    onTopArrive,
    onTopLeave
  });
  const setScrollLockTarget = useScrollLock({
    isEnabled: lockEnabled
  });
  const targetRef = element => {
    setScrollCaptureTarget(element);
    setScrollLockTarget(element);
  };
  return jsx(Fragment, null, lockEnabled &&
  // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions
  jsx("div", {
    onClick: blurSelectInput,
    css: styles
  }), children(targetRef));
}