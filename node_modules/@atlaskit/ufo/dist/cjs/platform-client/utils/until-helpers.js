"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.untilAll = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _logger = require("../../logger");
var _core = require("../core");
var isUntilExperience = function isUntilExperience(until) {
  return until.experience !== undefined;
};
var isUntilCategory = function isUntilCategory(until) {
  return until.category !== undefined;
};
var untilAll = exports.untilAll = function untilAll(deps) {
  return function () {
    var notMet = (0, _toConsumableArray2.default)(deps);
    return function (data) {
      if (notMet.length > 0) {
        var doneIndexes = notMet.reduce(function (acc, dep, i) {
          // validation logic
          if (isUntilExperience(dep) && dep.experience.uuid === data.uuid) {
            acc.push(i);
          } else if (isUntilCategory(dep) && dep.category === data.category) {
            acc.push(i);
          }
          return acc;
        }, []);
        var priorityStateFound = data.state === _core.UFOExperienceState.ABORTED || data.state === _core.UFOExperienceState.FAILED;
        if (priorityStateFound) {
          notMet.length = 0;
          return {
            done: true,
            state: data.state
          };
        }
        doneIndexes.reverse().forEach(function (i) {
          notMet.splice(i, 1);
        });
        (0, _logger.ufolog)('untilAll deps left:', notMet.length, notMet);
        if (notMet.length === 0) {
          return {
            done: true,
            state: _core.UFOExperienceState.SUCCEEDED
          };
        }
      }
      return {
        done: false
      };
    };
  };
};