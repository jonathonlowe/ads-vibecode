import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import { ufolog } from '../../../logger';
import { UFOExperience } from './experience';
export var ConcurrentExperience = /*#__PURE__*/function () {
  function ConcurrentExperience(experienceId, config) {
    _classCallCheck(this, ConcurrentExperience);
    _defineProperty(this, "instances", {});
    this.experienceId = experienceId;
    this.config = config;
  }
  return _createClass(ConcurrentExperience, [{
    key: "getInstance",
    value: function getInstance(instanceId) {
      if (!this.instances[instanceId]) {
        this.instances[instanceId] = new UFOExperience(this.experienceId, this.config, instanceId);
      }
      return this.instances[instanceId];
    }
  }, {
    key: "release",
    value: function release(instanceId) {
      ufolog('instanceId', instanceId);
      if (this.instances[instanceId]) {
        this.instances[instanceId].abort();
      }
      delete this.instances[instanceId];
    }
  }]);
}();