import _createClass from "@babel/runtime/helpers/createClass";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
import { UFOAbstractExperience } from './abstract-experience';
export var UFOExperience = /*#__PURE__*/function (_UFOAbstractExperienc) {
  function UFOExperience() {
    _classCallCheck(this, UFOExperience);
    return _callSuper(this, UFOExperience, arguments);
  }
  _inherits(UFOExperience, _UFOAbstractExperienc);
  return _createClass(UFOExperience);
}(UFOAbstractExperience);