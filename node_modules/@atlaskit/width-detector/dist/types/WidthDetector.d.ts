import React from 'react';
type WidthDetectorProps = {
    children: (width?: number) => React.ReactNode;
    onResize?: (width: number) => void;
    /**
     * Optional styles to be applied to the containing element
     */
    containerStyle?: React.CSSProperties;
};
type State = {
    width?: number;
};
type ResizeObject = HTMLObjectElement & {
    data: String;
    contentDocument: HTMLDocument;
};
/**
 * @deprecated use WidthObserver instead
 *
 * This component uses iframes for rendering and is currently
 * not performant. It will be DEPRECATED in the future.
 * It is recommended that you instead use WidthObserver from @atlaskit/width-detector
 */
export default class WidthDetector extends React.Component<WidthDetectorProps, State> {
    state: State;
    container?: HTMLDivElement;
    resizeObjectDocument?: Window;
    resizeObject?: ResizeObject;
    constructor(props: WidthDetectorProps);
    static defaultProps: {
        containerStyle: {};
    };
    handleResize: (() => void) & {
        cancel(): void;
    };
    componentDidMount(): void;
    componentWillUnmount(): void;
    handleContainerRef: (ref: HTMLDivElement) => void;
    handleObjectRef: (ref: ResizeObject) => void;
    handleObjectLoad: () => void;
    render(): React.JSX.Element;
}
export {};
