"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _reactIntlNext = require("react-intl-next");
var _messages = require("@atlaskit/editor-common/messages");
var _ui = require("@atlaskit/editor-common/ui");
var _FloatingToolbar = _interopRequireDefault(require("../FloatingToolbar"));
var _utils = require("../FloatingToolbar/utils");
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
// eslint-disable-next-line @repo/internal/react/no-class-components
var PlaceholderFloatingToolbar = /*#__PURE__*/function (_React$Component) {
  function PlaceholderFloatingToolbar() {
    var _this;
    (0, _classCallCheck2.default)(this, PlaceholderFloatingToolbar);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, PlaceholderFloatingToolbar, [].concat(args));
    (0, _defineProperty2.default)(_this, "handleSubmit", function (value) {
      if (value) {
        _this.props.insertPlaceholder(value);
        _this.props.setFocusInEditor();
      } else {
        _this.props.hidePlaceholderFloatingToolbar();
      }
    });
    (0, _defineProperty2.default)(_this, "handleBlur", function () {
      _this.props.hidePlaceholderFloatingToolbar();
    });
    return _this;
  }
  (0, _inherits2.default)(PlaceholderFloatingToolbar, _React$Component);
  return (0, _createClass2.default)(PlaceholderFloatingToolbar, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        getNodeFromPos = _this$props.getNodeFromPos,
        showInsertPanelAt = _this$props.showInsertPanelAt,
        editorViewDOM = _this$props.editorViewDOM,
        popupsMountPoint = _this$props.popupsMountPoint,
        getFixedCoordinatesFromPos = _this$props.getFixedCoordinatesFromPos,
        popupsBoundariesElement = _this$props.popupsBoundariesElement,
        formatMessage = _this$props.intl.formatMessage;
      var target = getNodeFromPos(showInsertPanelAt);
      var offsetParent = (0, _utils.getOffsetParent)(editorViewDOM, popupsMountPoint);
      var getFixedCoordinates = function getFixedCoordinates() {
        return getFixedCoordinatesFromPos(showInsertPanelAt);
      };
      var handlePositionCalculated = (0, _utils.handlePositionCalculatedWith)(offsetParent, target, getFixedCoordinates);
      return /*#__PURE__*/_react.default.createElement(_FloatingToolbar.default
      // Ignored via go/ees005
      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
      , {
        target: (0, _utils.getNearestNonTextNode)(target),
        onPositionCalculated: handlePositionCalculated,
        popupsMountPoint: popupsMountPoint,
        popupsBoundariesElement: popupsBoundariesElement,
        fitHeight: 32,
        offset: [0, 12]
      }, /*#__PURE__*/_react.default.createElement(_ui.PanelTextInput, {
        placeholder: formatMessage(_messages.placeholderTextMessages.placeholderTextPlaceholder),
        onSubmit: this.handleSubmit,
        onBlur: this.handleBlur,
        autoFocus: true,
        width: 300
      }));
    }
  }]);
}(_react.default.Component);
var _default = exports.default = (0, _reactIntlNext.injectIntl)(PlaceholderFloatingToolbar);