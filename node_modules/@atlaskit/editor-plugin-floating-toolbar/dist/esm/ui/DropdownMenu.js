/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { memo } from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css, jsx } from '@emotion/react';
// eslint-disable-next-line @atlaskit/design-system/no-deprecated-imports

import { injectIntl } from 'react-intl-next';
import { DropdownMenuItem } from '@atlaskit/editor-common/floating-toolbar';
import { HeadingItem } from '@atlaskit/menu';
// eslint-disable-next-line @atlaskit/design-system/no-deprecated-imports
import { gridSize } from '@atlaskit/theme/constants';
import { editorExperiment } from '@atlaskit/tmp-editor-statsig/experiments';
export var menuItemDimensions = {
  width: 175,
  height: 32
};
var separatorStyles = css({
  background: "var(--ds-border, #091E4224)",
  height: "var(--ds-space-025, 1px)"
});
var headingStyles = css({
  padding: "var(--ds-space-200, 16px)".concat(" 0 ", "var(--ds-space-100, 8px)")
});

// eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage/preview
var menuContainerStyles = css({
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  minWidth: "".concat(menuItemDimensions.width, "px"),
  // temporary solution to retain spacing defined by @atlaskit/Item
  // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  '& button': {
    minHeight: "var(--ds-space-400, 32px)",
    padding: "var(--ds-space-100, 8px)".concat(" ", "var(--ds-space-100, 8px)", " 7px"),
    // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
    '& > [data-item-elem-before]': {
      marginRight: "var(--ds-space-050, 4px)"
    }
  }
});

// TODO: ED-26959 - Migrate away from gridSize
// Recommendation: Replace with 4 as itemSpacing is used in calculations expecting a number
export var itemSpacing = gridSize() / 2;

// Extend the ButtonItem component type to allow mouse events to be accepted from the Typescript check

var Dropdown = /*#__PURE__*/memo(function (props) {
  var hide = props.hide,
    dispatchCommand = props.dispatchCommand,
    items = props.items,
    intl = props.intl,
    editorView = props.editorView,
    _props$showSelected = props.showSelected,
    showSelected = _props$showSelected === void 0 ? true : _props$showSelected;
  if (editorExperiment('platform_editor_controls', 'variant1')) {
    return jsx("div", {
      css: menuContainerStyles,
      role: "menu"
    }, items.filter(function (item) {
      return !('hidden' in item) || !item.hidden;
    }).map(function (item, idx) {
      if (!('type' in item)) {
        return jsx(DropdownMenuItem
        // Ignored via go/ees005
        // eslint-disable-next-line react/no-array-index-key
        , {
          key: idx,
          item: item,
          hide: hide,
          dispatchCommand: dispatchCommand,
          editorView: editorView,
          showSelected: showSelected,
          intl: intl
        });
      }
      if (item.type === 'separator') {
        // eslint-disable-next-line react/no-array-index-key
        return jsx("div", {
          key: idx,
          css: separatorStyles
        });
      }
      if (item.type === 'overflow-dropdown-heading') {
        return jsx("div", {
          key: item.title,
          css: headingStyles
        }, jsx(HeadingItem, null, item.title));
      }
      if (item.type === 'custom') {
        var dropdownMenuOptions = {
          hide: hide,
          dispatchCommand: dispatchCommand,
          editorView: editorView,
          showSelected: showSelected,
          intl: intl
        };
        return item.render(editorView, dropdownMenuOptions);
      }
    }));
  }
  return jsx("div", {
    css: menuContainerStyles,
    role: "menu"
  }, items.filter(function (item) {
    return !item.hidden;
  }).map(function (item, idx) {
    return jsx(DropdownMenuItem
    // Ignored via go/ees005
    // eslint-disable-next-line react/no-array-index-key
    , {
      key: idx,
      item: item,
      hide: hide,
      dispatchCommand: dispatchCommand,
      editorView: editorView,
      showSelected: showSelected,
      intl: intl
    });
  }));
});
export default injectIntl(Dropdown);