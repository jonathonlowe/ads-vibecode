"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.menuItemDimensions = exports.itemSpacing = exports.default = void 0;
var _react = require("react");
var _react2 = require("@emotion/react");
var _reactIntlNext = require("react-intl-next");
var _floatingToolbar = require("@atlaskit/editor-common/floating-toolbar");
var _menu = require("@atlaskit/menu");
var _constants = require("@atlaskit/theme/constants");
var _experiments = require("@atlaskit/tmp-editor-statsig/experiments");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

// eslint-disable-next-line @atlaskit/design-system/no-deprecated-imports

// eslint-disable-next-line @atlaskit/design-system/no-deprecated-imports

var menuItemDimensions = exports.menuItemDimensions = {
  width: 175,
  height: 32
};
var separatorStyles = (0, _react2.css)({
  background: "var(--ds-border, #091E4224)",
  height: "var(--ds-space-025, 1px)"
});
var headingStyles = (0, _react2.css)({
  padding: "var(--ds-space-200, 16px)".concat(" 0 ", "var(--ds-space-100, 8px)")
});

// eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage/preview
var menuContainerStyles = (0, _react2.css)({
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  minWidth: "".concat(menuItemDimensions.width, "px"),
  // temporary solution to retain spacing defined by @atlaskit/Item
  // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  '& button': {
    minHeight: "var(--ds-space-400, 32px)",
    padding: "var(--ds-space-100, 8px)".concat(" ", "var(--ds-space-100, 8px)", " 7px"),
    // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
    '& > [data-item-elem-before]': {
      marginRight: "var(--ds-space-050, 4px)"
    }
  }
});

// TODO: ED-26959 - Migrate away from gridSize
// Recommendation: Replace with 4 as itemSpacing is used in calculations expecting a number
var itemSpacing = exports.itemSpacing = (0, _constants.gridSize)() / 2;

// Extend the ButtonItem component type to allow mouse events to be accepted from the Typescript check

var Dropdown = /*#__PURE__*/(0, _react.memo)(function (props) {
  var hide = props.hide,
    dispatchCommand = props.dispatchCommand,
    items = props.items,
    intl = props.intl,
    editorView = props.editorView,
    _props$showSelected = props.showSelected,
    showSelected = _props$showSelected === void 0 ? true : _props$showSelected;
  if ((0, _experiments.editorExperiment)('platform_editor_controls', 'variant1')) {
    return (0, _react2.jsx)("div", {
      css: menuContainerStyles,
      role: "menu"
    }, items.filter(function (item) {
      return !('hidden' in item) || !item.hidden;
    }).map(function (item, idx) {
      if (!('type' in item)) {
        return (0, _react2.jsx)(_floatingToolbar.DropdownMenuItem
        // Ignored via go/ees005
        // eslint-disable-next-line react/no-array-index-key
        , {
          key: idx,
          item: item,
          hide: hide,
          dispatchCommand: dispatchCommand,
          editorView: editorView,
          showSelected: showSelected,
          intl: intl
        });
      }
      if (item.type === 'separator') {
        // eslint-disable-next-line react/no-array-index-key
        return (0, _react2.jsx)("div", {
          key: idx,
          css: separatorStyles
        });
      }
      if (item.type === 'overflow-dropdown-heading') {
        return (0, _react2.jsx)("div", {
          key: item.title,
          css: headingStyles
        }, (0, _react2.jsx)(_menu.HeadingItem, null, item.title));
      }
      if (item.type === 'custom') {
        var dropdownMenuOptions = {
          hide: hide,
          dispatchCommand: dispatchCommand,
          editorView: editorView,
          showSelected: showSelected,
          intl: intl
        };
        return item.render(editorView, dropdownMenuOptions);
      }
    }));
  }
  return (0, _react2.jsx)("div", {
    css: menuContainerStyles,
    role: "menu"
  }, items.filter(function (item) {
    return !item.hidden;
  }).map(function (item, idx) {
    return (0, _react2.jsx)(_floatingToolbar.DropdownMenuItem
    // Ignored via go/ees005
    // eslint-disable-next-line react/no-array-index-key
    , {
      key: idx,
      item: item,
      hide: hide,
      dispatchCommand: dispatchCommand,
      editorView: editorView,
      showSelected: showSelected,
      intl: intl
    });
  }));
});
var _default = exports.default = (0, _reactIntlNext.injectIntl)(Dropdown);