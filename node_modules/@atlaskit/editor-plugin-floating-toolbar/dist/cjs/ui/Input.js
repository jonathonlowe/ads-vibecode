"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Input = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _react2 = require("@emotion/react");
var _ui = require("@atlaskit/editor-common/ui");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var Input = exports.Input = function Input(props) {
  var defaultValue = props.defaultValue,
    onBlur = props.onBlur,
    onSubmit = props.onSubmit,
    placeholder = props.placeholder;
  var _useState = (0, _react.useState)(defaultValue || ''),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    text = _useState2[0],
    setText = _useState2[1];
  var handleChange = function handleChange(e) {
    setText(e.target.value);
  };
  var handleSubmit = function handleSubmit(e) {
    e.preventDefault();
    onSubmit && onSubmit(text);
  };
  var handleBlur = function handleBlur(e) {
    e.preventDefault();
    onBlur && onBlur(text);
  };
  return (0, _react2.jsx)("form", {
    onSubmit: handleSubmit
  }, (0, _react2.jsx)("input", {
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    css: _ui.panelTextInput,
    value: text,
    onChange: handleChange,
    placeholder: placeholder,
    onBlur: handleBlur
  }));
};