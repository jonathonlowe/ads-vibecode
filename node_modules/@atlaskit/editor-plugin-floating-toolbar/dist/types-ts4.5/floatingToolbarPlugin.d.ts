import React from 'react';
import type { IntlShape } from 'react-intl-next';
import type { ProviderFactory } from '@atlaskit/editor-common/provider-factory';
import { SafePlugin } from '@atlaskit/editor-common/safe-plugin';
import type { ExtractInjectionAPI, FloatingToolbarConfig, FloatingToolbarHandler, UiComponentFactoryParams } from '@atlaskit/editor-common/types';
import type { Selection } from '@atlaskit/editor-prosemirror/state';
import { PluginKey } from '@atlaskit/editor-prosemirror/state';
import type { ConfigWithNodeInfo, FloatingToolbarPlugin, FloatingToolbarPluginState } from './floatingToolbarPluginType';
export declare const getRelevantConfig: (selection: Selection, configs: Array<FloatingToolbarConfig>) => ConfigWithNodeInfo | undefined;
export declare const floatingToolbarPlugin: FloatingToolbarPlugin;
export declare function ContentComponent({ pluginInjectionApi, editorView, popupsMountPoint, popupsBoundariesElement, popupsScrollableElement, providerFactory, dispatchAnalyticsEvent, }: Pick<UiComponentFactoryParams, 'editorView' | 'popupsMountPoint' | 'popupsBoundariesElement' | 'providerFactory' | 'dispatchAnalyticsEvent' | 'popupsScrollableElement'> & {
    pluginInjectionApi: ExtractInjectionAPI<FloatingToolbarPlugin> | undefined;
}): React.JSX.Element | null;
/**
 *
 * ProseMirror Plugin
 *
 */
export declare const pluginKey: PluginKey<FloatingToolbarPluginState>;
export declare function floatingToolbarPluginFactory(options: {
    floatingToolbarHandlers: Array<FloatingToolbarHandler>;
    getIntl: () => IntlShape;
    providerFactory: ProviderFactory;
}): SafePlugin<FloatingToolbarPluginState>;
