import _defineProperty from "@babel/runtime/helpers/defineProperty";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
import { PastePluginActionTypes as ActionTypes } from '../editor-actions/actions';
export var reducer = function reducer(state, action) {
  switch (action.type) {
    case ActionTypes.SHOW_PASTE_OPTIONS:
      {
        return _objectSpread(_objectSpread({}, state), {}, {
          showToolbar: true,
          highlightContent: false,
          isPlainText: action.data.isPlainText,
          plaintext: action.data.plaintext,
          selectedOption: action.data.selectedOption,
          richTextSlice: action.data.richTextSlice,
          pasteStartPos: action.data.pasteStartPos,
          pasteEndPos: action.data.pasteEndPos
        });
      }
    case ActionTypes.HIDE_PASTE_OPTIONS:
      {
        return _objectSpread(_objectSpread({}, state), {}, {
          highlightContent: false,
          showToolbar: false
        });
      }
    case ActionTypes.HIGHLIGHT_CONTENT:
      {
        return _objectSpread(_objectSpread({}, state), {}, {
          highlightContent: true
        });
      }
    case ActionTypes.CHANGE_FORMAT:
      {
        return _objectSpread(_objectSpread({}, state), {}, {
          highlightContent: true,
          selectedOption: action.data.selectedOption
        });
      }
    default:
      return state;
  }
};