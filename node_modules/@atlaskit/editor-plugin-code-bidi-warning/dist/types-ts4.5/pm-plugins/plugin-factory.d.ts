import { type PortalProviderAPI } from '@atlaskit/editor-common/portal';
import type { Node as PmNode } from '@atlaskit/editor-prosemirror/model';
import { DecorationSet } from '@atlaskit/editor-prosemirror/view';
export declare const pluginFactoryCreator: (nodeViewPortalProviderAPI: PortalProviderAPI) => {
    createPluginState: (dispatch: import("@atlaskit/editor-common/event-dispatcher").Dispatch, initialState: import("./types").CodeBidiWarningPluginState | ((state: import("prosemirror-state").EditorState) => import("./types").CodeBidiWarningPluginState)) => import("prosemirror-state").SafeStateField<import("./types").CodeBidiWarningPluginState>;
    createCommand: <A = unknown>(action: A | ((state: Readonly<import("prosemirror-state").EditorState>) => false | A), transform?: ((tr: import("prosemirror-state").Transaction, state: import("prosemirror-state").EditorState) => import("prosemirror-state").Transaction) | undefined) => import("@atlaskit/editor-common/types").Command;
    getPluginState: (state: import("prosemirror-state").EditorState) => import("./types").CodeBidiWarningPluginState;
};
export declare function createBidiWarningsDecorationSetFromDoc({ doc, codeBidiWarningLabel, tooltipEnabled, nodeViewPortalProviderAPI, }: {
    doc: PmNode;
    codeBidiWarningLabel: string;
    tooltipEnabled: boolean;
    nodeViewPortalProviderAPI: PortalProviderAPI;
}): DecorationSet;
