/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import "./index.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
import React, { useCallback, useEffect } from 'react';
import { FormattedMessage, injectIntl } from 'react-intl-next';
import { mentionMessages as messages } from '@atlaskit/editor-common/messages';
import AddIcon from '@atlaskit/icon/core/migration/add';
import { N30, N300 } from '@atlaskit/theme/colors';
const mentionItemStyle = null;
const mentionItemSelectedStyle = null;
const rowStyle = null;
const avatarStyle = null;
const nameSectionStyle = null;
const capitalizedStyle = null;
export const INVITE_ITEM_DESCRIPTION = {
  id: 'invite-teammate'
};

// Ignored via go/ees005
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const leftClick = event => {
  return event.button === 0 && !event.altKey && !event.ctrlKey && !event.metaKey && !event.shiftKey;
};
const InviteItem = ({
  productName,
  onMount,
  onMouseEnter,
  onSelection,
  selected,
  userRole,
  intl
}) => {
  const onSelected = useCallback(
  // Ignored via go/ees005
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  event => {
    if (leftClick(event) && onSelection) {
      event.preventDefault();
      onSelection(INVITE_ITEM_DESCRIPTION, event);
    }
  }, [onSelection]);
  const onItemMouseEnter = useCallback(
  // Ignored via go/ees005
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  event => {
    if (onMouseEnter) {
      onMouseEnter(INVITE_ITEM_DESCRIPTION, event);
    }
  }, [onMouseEnter]);
  useEffect(() => {
    if (onMount) {
      onMount();
    }
  }, [onMount]);
  return /*#__PURE__*/React.createElement("div", {
    onMouseDown: onSelected,
    onMouseEnter: onItemMouseEnter,
    "data-id": INVITE_ITEM_DESCRIPTION.id,
    className: ax(["_1reo15vq _18m915vq _bfhk1j28 _1e0c1ule _2mzuglyw _80omtlke", selected && "_bfhk14ae"])
  }, /*#__PURE__*/React.createElement("div", {
    className: ax(["_1reo15vq _18m915vq _4cvr1h6o _1e0c1txw _2lx2vrvc _1n261g80 _ca0q12x7 _n3td12x7 _19bvdlk8 _u5f3dlk8 _1bto1l2s _s7n4nkob"])
  }, /*#__PURE__*/React.createElement("span", {
    className: ax(["_16jlidpf _1o9zkb7n _i0dl1wug _1e0c1txw _4cvr1h6o _1bah1h6o _kqswh2mm _1bsb14no _4t3i14no"])
  }, /*#__PURE__*/React.createElement(AddIcon, {
    label: intl.formatMessage(messages.mentionsAddLabel),
    color: `var(--ds-icon-subtle, ${N300})`
  })), /*#__PURE__*/React.createElement("div", {
    "data-testid": "name-section",
    className: ax(["_16jlkb7n _1o9zkb7n _i0dlf1ug _1ul9idpf _18u0dlk8 _syaz1n3s"])
  }, /*#__PURE__*/React.createElement(FormattedMessage
  // Ignored via go/ees005
  // eslint-disable-next-line react/jsx-props-no-spreading
  , _extends({}, messages.inviteItemTitle, {
    values: {
      userRole: userRole || 'basic',
      productName: /*#__PURE__*/React.createElement("span", {
        "data-testid": "capitalized-message",
        className: ax(["_1p1d1dk0"])
      }, productName)
    }
  })))));
};
export default injectIntl(InviteItem);