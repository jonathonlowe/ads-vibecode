import React, { type PropsWithChildren } from 'react';
import { type PopperChildrenProps } from '@atlaskit/popper';
interface Props {
    /**
     * Replacement reference element to position popper relative to.
     */
    referenceElement: HTMLElement;
    /**
     * Returns the element to be positioned.
     */
    children: React.ReactNode;
}
export declare const RepositionOnUpdate: ({ children, update, }: React.PropsWithChildren<{
    update: PopperChildrenProps['update'];
}>) => React.ReactNode;
/**
 * A popup wrapper to match the behaviour of `@atlaskit/popup`
 *
 * Why not `@atlaskit/popup` directly? It requires a trigger element.
 * We can use this when we have a direct reference to the element
 * and it is more convenient to work directly with the lower level API.
 *
 * @param referenceElement HTMLElement - Replacement reference element to position popper relative to.
 * @param children React.ReactNode - Returns the element to be positioned.
 * @returns React popper component
 */
export declare function Popup({ referenceElement, children }: Props): React.JSX.Element;
export {};
