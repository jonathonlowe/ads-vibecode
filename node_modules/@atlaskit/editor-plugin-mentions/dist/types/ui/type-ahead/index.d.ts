import React from 'react';
import type { ExtractInjectionAPI, TypeAheadHandler, TypeAheadItem } from '@atlaskit/editor-common/types';
import type { MentionDescription } from '@atlaskit/mention/resource';
import type { MentionsPlugin } from '../../mentionsPluginType';
import type { FireElementsChannelEvent } from '../../types';
export declare const mentionToTypeaheadItem: (mention: MentionDescription) => TypeAheadItem;
export declare function memoize<ResultFn extends (mention: MentionDescription) => TypeAheadItem>(fn: ResultFn): {
    call: ResultFn;
    clear(): void;
};
type Props = {
    sanitizePrivateContent?: boolean;
    mentionInsertDisplayName?: boolean;
    HighlightComponent?: React.ComponentType<React.PropsWithChildren<unknown>>;
    fireEvent: FireElementsChannelEvent;
    api: ExtractInjectionAPI<MentionsPlugin> | undefined;
    handleMentionsChanged?: (mentionChanges: {
        type: 'added' | 'deleted';
        localId: string;
        id: string;
        taskLocalId?: string;
    }[]) => void;
};
export declare const createTypeAheadConfig: ({ sanitizePrivateContent, mentionInsertDisplayName, fireEvent, HighlightComponent, api, handleMentionsChanged, }: Props) => TypeAheadHandler;
export {};
