"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MentionNodeView = void 0;
var _react = _interopRequireDefault(require("react"));
var _hooks = require("@atlaskit/editor-common/hooks");
var _providerFactory = require("@atlaskit/editor-common/provider-factory");
var _Mention = require("../ui/Mention");
var MentionNodeView = exports.MentionNodeView = function MentionNodeView(props) {
  var providerFactory = props.providerFactory,
    pluginInjectionApi = props.pluginInjectionApi;
  var _props$node$attrs = props.node.attrs,
    id = _props$node$attrs.id,
    text = _props$node$attrs.text,
    accessLevel = _props$node$attrs.accessLevel,
    localId = _props$node$attrs.localId;
  var _useSharedPluginState = (0, _hooks.useSharedPluginState)(pluginInjectionApi, ['mention']),
    mentionState = _useSharedPluginState.mentionState;
  var mentionProvider = mentionState === null || mentionState === void 0 ? void 0 : mentionState.mentionProvider;
  var renderAssistiveTextWithProviders = function renderAssistiveTextWithProviders(providers) {
    var _props$options;
    var mentionProviderPromise = mentionProvider ? Promise.resolve(mentionProvider) : providers.mentionProvider;
    var profilecardProvider = (_props$options = props.options) === null || _props$options === void 0 ? void 0 : _props$options.profilecardProvider;
    return /*#__PURE__*/_react.default.createElement(_Mention.Mention, {
      id: id,
      text: text,
      accessLevel: accessLevel,
      mentionProvider: mentionProviderPromise,
      profilecardProvider: profilecardProvider,
      localId: localId
    });
  };
  return /*#__PURE__*/_react.default.createElement(_providerFactory.WithProviders, {
    providers: ['mentionProvider', 'profilecardProvider'],
    providerFactory: providerFactory,
    renderNode: renderAssistiveTextWithProviders
  });
};