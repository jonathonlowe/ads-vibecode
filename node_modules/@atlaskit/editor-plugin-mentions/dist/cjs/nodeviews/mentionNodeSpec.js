"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mentionNodeSpec = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _adfSchema = require("@atlaskit/adf-schema");
var _lazyNodeView = require("@atlaskit/editor-common/lazy-node-view");
var _colors = require("@atlaskit/theme/colors");
var _experiments = require("@atlaskit/tmp-editor-statsig/experiments");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var isSSR = Boolean(process.env.REACT_SSR);

/**
 * Wrapper for ADF mention node spec to augment toDOM implementation
 * with fallback UI for lazy node view rendering / window virtualization
 * @nodeSpecException:toDOM patch
 * @returns
 */
var mentionNodeSpec = exports.mentionNodeSpec = function mentionNodeSpec() {
  if (isSSR || (0, _experiments.editorExperiment)('platform_editor_inline_node_virtualization', 'off')) {
    return _adfSchema.mention;
  }
  return _objectSpread(_objectSpread({}, _adfSchema.mention), {}, {
    toDOM: function toDOM(node) {
      // packages/elements/mention/src/components/Mention/index.tsx
      var mentionAttrs = {
        'aria-busy': 'true',
        contenteditable: 'false',
        'data-access-level': '',
        'data-mention-id': node.attrs.id,
        'data-prosemirror-content-type': 'node',
        'data-prosemirror-node-inline': 'true',
        'data-prosemirror-node-name': 'mention',
        style: (0, _lazyNodeView.convertToInlineCss)({
          display: 'inline',
          border: "1px solid transparent",
          background: "var(--ds-background-neutral, ".concat(_colors.N30A, ")"),
          color: "var(--ds-text-subtle, #44546F)",
          borderRadius: '20px',
          cursor: 'pointer',
          padding: '0 0.3em 2px 0.23em',
          wordBreak: 'break-word'
        })
      };
      return ['span', mentionAttrs, node.attrs.text];
    }
  });
};