import React, { useMemo } from 'react';
import { MediaClient } from '@atlaskit/media-client';
export const MediaClientContext = /*#__PURE__*/React.createContext(undefined);
export const mediaClientsMap = new Map();
export const getMediaClient = mediaClientConfig => {
  // The Provider defines mediaClientConfig as required,
  // but integrators may skip it when using Media Card to display external images
  // i.e. a Media Client is not needed.
  // An empty mediaClientConfig object `{}` won't fall into this case,
  // but that case is handled internally by Media Client.
  if (!mediaClientConfig) {
    return new MediaClient({
      authProvider: () => Promise.resolve({
        clientId: '',
        token: '',
        baseUrl: ''
      })
    });
  }
  let mediaClient = mediaClientsMap.get(mediaClientConfig);
  if (!mediaClient) {
    mediaClient = new MediaClient(mediaClientConfig);
    mediaClientsMap.set(mediaClientConfig, mediaClient);
  }
  return mediaClient;
};
export const MediaClientProvider = ({
  children,
  clientConfig
}) => {
  const mediaClient = useMemo(() => getMediaClient(clientConfig), [clientConfig]);
  return /*#__PURE__*/React.createElement(MediaClientContext.Provider, {
    value: mediaClient
  }, children);
};
export const useMediaClient = () => {
  const mediaClient = React.useContext(MediaClientContext);
  if (!mediaClient) {
    throw new Error('No MediaClient set, use MediaClientProvider to set one');
  }
  return mediaClient;
};