import React, { useMemo } from 'react';
import { MediaClient } from '@atlaskit/media-client';
import { createMediaStore } from '@atlaskit/media-state';
import { MediaClientContext } from '../MediaClientProvider';
export const mockedMediaClientConfig = {
  authProvider: async () => {
    return {
      clientId: 'MockedMediaClientProvider-client-id',
      token: 'MockedMediaClientProvider-token',
      baseUrl: 'MockedMediaClientProvider-service-host'
    };
  }
};
export const MockedMediaClientProvider = ({
  children,
  mediaStore,
  mockedMediaApi,
  mediaClientConfig
}) => {
  // WARNING: when mediaStore is updated externally, it gets out of sync with FileStreamCache. This resutls in unexpected behaviour.
  const currentStore = useMemo(() => mediaStore || createMediaStore(), [mediaStore]);
  const resolvedMediaClientConfig = useMemo(() => ({
    ...mockedMediaClientConfig,
    ...mediaClientConfig
  }), [mediaClientConfig]);
  const mediaClient = useMemo(() => new MediaClient(resolvedMediaClientConfig, currentStore, mockedMediaApi), [mockedMediaApi, currentStore, resolvedMediaClientConfig]);
  return /*#__PURE__*/React.createElement(MediaClientContext.Provider, {
    value: mediaClient
  }, children);
};