import React, { useMemo } from 'react';
import { MediaClient } from '@atlaskit/media-client';
export var MediaClientContext = /*#__PURE__*/React.createContext(undefined);
export var mediaClientsMap = new Map();
export var getMediaClient = function getMediaClient(mediaClientConfig) {
  // The Provider defines mediaClientConfig as required,
  // but integrators may skip it when using Media Card to display external images
  // i.e. a Media Client is not needed.
  // An empty mediaClientConfig object `{}` won't fall into this case,
  // but that case is handled internally by Media Client.
  if (!mediaClientConfig) {
    return new MediaClient({
      authProvider: function authProvider() {
        return Promise.resolve({
          clientId: '',
          token: '',
          baseUrl: ''
        });
      }
    });
  }
  var mediaClient = mediaClientsMap.get(mediaClientConfig);
  if (!mediaClient) {
    mediaClient = new MediaClient(mediaClientConfig);
    mediaClientsMap.set(mediaClientConfig, mediaClient);
  }
  return mediaClient;
};
export var MediaClientProvider = function MediaClientProvider(_ref) {
  var children = _ref.children,
    clientConfig = _ref.clientConfig;
  var mediaClient = useMemo(function () {
    return getMediaClient(clientConfig);
  }, [clientConfig]);
  return /*#__PURE__*/React.createElement(MediaClientContext.Provider, {
    value: mediaClient
  }, children);
};
export var useMediaClient = function useMediaClient() {
  var mediaClient = React.useContext(MediaClientContext);
  if (!mediaClient) {
    throw new Error('No MediaClient set, use MediaClientProvider to set one');
  }
  return mediaClient;
};