"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactIntlNext = require("react-intl-next");
var _messages = require("@atlaskit/editor-common/messages");
var _uiMenu = require("@atlaskit/editor-common/ui-menu");
var _decisionEditorDecision = _interopRequireDefault(require("@atlaskit/icon/core/migration/decision--editor-decision"));
var _insertCommands = require("../../pm-plugins/insert-commands");
var ToolbarDecision = function ToolbarDecision(_ref) {
  var isDisabled = _ref.isDisabled,
    isReducedSpacing = _ref.isReducedSpacing,
    formatMessage = _ref.intl.formatMessage,
    editorView = _ref.editorView,
    editorAPI = _ref.editorAPI;
  var label = formatMessage(_messages.toolbarInsertBlockMessages.decision);
  var handleInsertDecision = function handleInsertDecision() {
    var _editorAPI$analytics;
    if (!editorView) {
      return false;
    }
    var getContextIdentifier = function getContextIdentifier() {
      var _editorAPI$contextIde;
      return editorAPI === null || editorAPI === void 0 || (_editorAPI$contextIde = editorAPI.contextIdentifier) === null || _editorAPI$contextIde === void 0 || (_editorAPI$contextIde = _editorAPI$contextIde.sharedState.currentState()) === null || _editorAPI$contextIde === void 0 ? void 0 : _editorAPI$contextIde.contextIdentifierProvider;
    };
    (0, _insertCommands.insertTaskDecisionCommand)(editorAPI === null || editorAPI === void 0 || (_editorAPI$analytics = editorAPI.analytics) === null || _editorAPI$analytics === void 0 ? void 0 : _editorAPI$analytics.actions, getContextIdentifier)('decisionList')(editorView.state, editorView.dispatch);
    return true;
  };
  return /*#__PURE__*/_react.default.createElement(_uiMenu.ToolbarButton, {
    buttonId: _uiMenu.TOOLBAR_BUTTON.DECISION_LIST,
    onClick: handleInsertDecision,
    disabled: isDisabled,
    spacing: isReducedSpacing ? 'none' : 'default',
    title: "".concat(label, " <>"),
    "aria-keyshortcuts": "Shift+, Shift+. space",
    iconBefore: /*#__PURE__*/_react.default.createElement(_decisionEditorDecision.default, {
      label: label
    })
  });
};
var _default = exports.default = (0, _reactIntlNext.injectIntl)(ToolbarDecision);