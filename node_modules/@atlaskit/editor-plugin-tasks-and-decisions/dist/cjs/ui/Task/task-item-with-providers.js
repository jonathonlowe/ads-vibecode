"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _analyticsNamespacedContext = require("@atlaskit/analytics-namespaced-context");
var _taskDecision = require("@atlaskit/task-decision");
var _excluded = ["contextIdentifierProvider"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
// eslint-disable-next-line @repo/internal/react/no-class-components
var TaskItemWithProviders = exports.default = /*#__PURE__*/function (_Component) {
  function TaskItemWithProviders() {
    var _this;
    (0, _classCallCheck2.default)(this, TaskItemWithProviders);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, TaskItemWithProviders, [].concat(args));
    (0, _defineProperty2.default)(_this, "state", {
      resolvedContextProvider: undefined
    });
    // Storing the mounted state is an anti-pattern, however the asynchronous state
    // updates via `updateContextIdentifierProvider` means we may be dismounted before
    // it receives a response.
    // Since we can't cancel the Promise we store the mounted state to avoid state
    // updates when no longer suitable.
    (0, _defineProperty2.default)(_this, "mounted", false);
    return _this;
  }
  (0, _inherits2.default)(TaskItemWithProviders, _Component);
  return (0, _createClass2.default)(TaskItemWithProviders, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.mounted = true;
      this.updateContextIdentifierProvider(this.props);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (this.props.contextIdentifierProvider !== prevProps.contextIdentifierProvider) {
        this.updateContextIdentifierProvider(this.props);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.mounted = false;
    }
  }, {
    key: "updateContextIdentifierProvider",
    value: function () {
      var _updateContextIdentifierProvider = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(props) {
        var resolvedContextProvider;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              if (!props.contextIdentifierProvider) {
                _context.next = 13;
                break;
              }
              _context.prev = 1;
              _context.next = 4;
              return props.contextIdentifierProvider;
            case 4:
              resolvedContextProvider = _context.sent;
              if (this.mounted) {
                this.setState({
                  resolvedContextProvider: resolvedContextProvider
                });
              }
              _context.next = 11;
              break;
            case 8:
              _context.prev = 8;
              _context.t0 = _context["catch"](1);
              if (this.mounted) {
                this.setState({
                  resolvedContextProvider: undefined
                });
              }
            case 11:
              _context.next = 14;
              break;
            case 13:
              this.setState({
                resolvedContextProvider: undefined
              });
            case 14:
            case "end":
              return _context.stop();
          }
        }, _callee, this, [[1, 8]]);
      }));
      function updateContextIdentifierProvider(_x) {
        return _updateContextIdentifierProvider.apply(this, arguments);
      }
      return updateContextIdentifierProvider;
    }()
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
        contextIdentifierProvider = _this$props.contextIdentifierProvider,
        otherProps = (0, _objectWithoutProperties2.default)(_this$props, _excluded);
      var _ref = this.state.resolvedContextProvider || {},
        objectId = _ref.objectId;
      var userContext = objectId ? 'edit' : 'new';
      return /*#__PURE__*/_react.default.createElement(_analyticsNamespacedContext.FabricElementsAnalyticsContext, {
        data: {
          userContext: userContext
        }
      }, /*#__PURE__*/_react.default.createElement(_taskDecision.ResourcedTaskItem
      // Ignored via go/ees005
      // eslint-disable-next-line react/jsx-props-no-spreading
      , (0, _extends2.default)({}, otherProps, {
        objectAri: objectId
      })));
    }
  }]);
}(_react.Component);
(0, _defineProperty2.default)(TaskItemWithProviders, "displayName", 'TaskItemWithProviders');