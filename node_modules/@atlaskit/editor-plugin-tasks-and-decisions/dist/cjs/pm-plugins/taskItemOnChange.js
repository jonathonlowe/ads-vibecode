"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.taskItemOnChange = taskItemOnChange;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function taskItemOnChange(view, event) {
  var _parentNode$type;
  var target = event.target;
  if (!target || !(target instanceof HTMLInputElement) || target.type !== 'checkbox' || target.getAttribute('data-input-type') !== 'lazy-task-item') {
    return;
  }
  var pos = view.posAtDOM(target, 0);
  // Resolve the position in the current document
  var resolvedPos = view.state.doc.resolve(pos);
  // Access the parent node
  var parentNode = resolvedPos === null || resolvedPos === void 0 ? void 0 : resolvedPos.parent;
  if ((parentNode === null || parentNode === void 0 || (_parentNode$type = parentNode.type) === null || _parentNode$type === void 0 ? void 0 : _parentNode$type.name) !== 'taskItem') {
    return;
  }
  var parentPos = resolvedPos.before(resolvedPos.depth);
  var tr = view.state.tr.setNodeMarkup(parentPos, null, _objectSpread(_objectSpread({}, parentNode.attrs), {}, {
    state: target.checked ? 'DONE' : 'TODO'
  }));
  view.dispatch(tr);
}