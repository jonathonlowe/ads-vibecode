"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.normalizeTaskItemsSelection = void 0;
var _state = require("@atlaskit/editor-prosemirror/state");
function isTaskListNode(node) {
  return Boolean(node && node.type && 'taskList' === node.type.name);
}
var resolvePositionToStartOfTaskItem = function resolvePositionToStartOfTaskItem($pos) {
  var fromRange = $pos.blockRange($pos, isTaskListNode);
  var fromPosition = fromRange && $pos.textOffset === 0 && fromRange.end - 1 === $pos.pos ? _state.Selection.near($pos.doc.resolve(fromRange.end + 1), 1).$from : $pos;
  return fromPosition;
};
var resolvePositionToEndOfTaskItem = function resolvePositionToEndOfTaskItem($pos) {
  var toRange = $pos.blockRange($pos, isTaskListNode);
  var toPosition = toRange && $pos.textOffset === 0 && toRange.start + 1 === $pos.pos ? _state.Selection.near($pos.doc.resolve(toRange.start - 1), -1).$to : $pos;
  return toPosition;
};
var normalizeTaskItemsSelection = exports.normalizeTaskItemsSelection = function normalizeTaskItemsSelection(selection) {
  if (selection.empty) {
    return selection;
  }
  var $from = selection.$from,
    $to = selection.$to;
  if (selection instanceof _state.NodeSelection) {
    var _head = resolvePositionToStartOfTaskItem($from);
    return new _state.TextSelection(_head, _head);
  }
  var head = resolvePositionToStartOfTaskItem($from);
  var anchor = resolvePositionToEndOfTaskItem($to);
  return new _state.TextSelection(anchor, head);
};