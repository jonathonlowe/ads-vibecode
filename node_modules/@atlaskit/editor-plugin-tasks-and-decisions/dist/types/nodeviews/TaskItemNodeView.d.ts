import { IntlShape } from 'react-intl-next';
import type { ExtractInjectionAPI, getPosHandlerNode } from '@atlaskit/editor-common/types';
import type { Node as PMNode } from '@atlaskit/editor-prosemirror/model';
import { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { NodeView } from '@atlaskit/editor-prosemirror/view';
import { TasksAndDecisionsPlugin } from '../tasksAndDecisionsPluginType';
interface TaskItemNodeViewOptions {
    api: ExtractInjectionAPI<TasksAndDecisionsPlugin> | undefined;
    placeholder?: string;
    intl: IntlShape;
}
export declare class TaskItemNodeView implements NodeView {
    dom: HTMLElement;
    contentDOM: HTMLElement | undefined;
    private node;
    private view;
    private getPos;
    private api;
    private readonly intl;
    private objectId?;
    private unbindInputDom;
    private emptyContent;
    private input?;
    private static logError;
    constructor(node: PMNode, view: EditorView, getPos: getPosHandlerNode, { api, placeholder, intl }: TaskItemNodeViewOptions);
    private getContextIdentifierProvider;
    private getObjectAri;
    private handleOnClick;
    private handleOnChange;
    private isContentEmpty;
    private renderFallback;
    private updatePlaceholder;
    update(node: PMNode): boolean;
    ignoreMutation(mutation: MutationRecord | {
        type: 'selection';
        target: Node;
    }): boolean;
    destroy(): void;
}
export {};
