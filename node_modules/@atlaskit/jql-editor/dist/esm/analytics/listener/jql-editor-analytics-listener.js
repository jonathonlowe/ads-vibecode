import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
/**
 * Adapted from https://bitbucket.org/atlassian/atlassian-frontend/src/master/packages/analytics/analytics-listeners/src/fabric/FabricEditorListener.tsx
 * In future if this package is migrated into the Atlassian Frontend repo, then this code and related logic should be
 * moved into @atlaskit/analytics-listeners.
 */

import React from 'react';
import { AnalyticsListener } from '@atlaskit/analytics-next';
import { ANALYTICS_CHANNEL } from '@atlaskit/jql-editor-common';
import { handleEvent } from './handle-event';
import Logger from './helpers/logger';
// eslint-disable-next-line @repo/internal/react/no-class-components
var JQLEditorAnalyticsListener = /*#__PURE__*/function (_React$Component) {
  function JQLEditorAnalyticsListener(props) {
    var _this;
    _classCallCheck(this, JQLEditorAnalyticsListener);
    _this = _callSuper(this, JQLEditorAnalyticsListener, [props]);
    _defineProperty(_this, "handleEventWrapper", function (event) {
      handleEvent(event, _this.logger, _this.props.client);
    });
    _this.logger = new Logger({
      logLevel: props.logLevel
    });
    return _this;
  }
  _inherits(JQLEditorAnalyticsListener, _React$Component);
  return _createClass(JQLEditorAnalyticsListener, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/React.createElement(AnalyticsListener, {
        onEvent: this.handleEventWrapper,
        channel: ANALYTICS_CHANNEL
      }, this.props.children);
    }
  }]);
}(React.Component);
export { JQLEditorAnalyticsListener as default };