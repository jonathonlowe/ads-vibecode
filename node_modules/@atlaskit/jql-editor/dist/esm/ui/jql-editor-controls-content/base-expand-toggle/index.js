import React from 'react';
import Button from '@atlaskit/button';
import { IconButton } from '@atlaskit/button/new';
import GrowDiagonalIcon from '@atlaskit/icon/core/grow-diagonal';
import ShrinkDiagonalIcon from '@atlaskit/icon/core/shrink-diagonal';
import LegacyMediaServicesActualSizeIcon from '@atlaskit/icon/glyph/media-services/actual-size';
import LegacyMediaServicesFitToPageIcon from '@atlaskit/icon/glyph/media-services/fit-to-page';
import { fg } from '@atlaskit/platform-feature-flags';
import { N50, N500 } from '@atlaskit/theme/colors';
import { ExpandToggleContainer } from './styled';

// Atlaskit doesn't provide a circle variation of the expand/collapse icons so we have to implement our own
var ExpandCircleIcon = function ExpandCircleIcon(_ref) {
  var isDisabled = _ref.isDisabled;
  return /*#__PURE__*/React.createElement(GrowDiagonalIcon, {
    label: '',
    LEGACY_size: 'small',
    color: isDisabled ? "var(--ds-icon-disabled, ".concat(N50, ")") : "var(--ds-icon, ".concat(N500, ")"),
    LEGACY_fallbackIcon: LegacyMediaServicesActualSizeIcon
  });
};
var CollapseCircleIcon = function CollapseCircleIcon(_ref2) {
  var isDisabled = _ref2.isDisabled;
  return /*#__PURE__*/React.createElement(ShrinkDiagonalIcon, {
    label: '',
    LEGACY_size: 'small',
    color: isDisabled ? "var(--ds-icon-disabled, ".concat(N50, ")") : "var(--ds-icon, ".concat(N500, ")"),
    LEGACY_fallbackIcon: LegacyMediaServicesFitToPageIcon
  });
};
export var BaseExpandToggle = function BaseExpandToggle(_ref3) {
  var expanded = _ref3.expanded,
    editorId = _ref3.editorId,
    isDisabled = _ref3.isDisabled,
    label = _ref3.label,
    onClick = _ref3.onClick;
  var Icon;
  if (expanded) {
    Icon = CollapseCircleIcon;
  } else {
    Icon = ExpandCircleIcon;
  }
  return fg('platform-component-visual-refresh') ? /*#__PURE__*/React.createElement(IconButton, {
    appearance: 'subtle',
    spacing: "compact",
    "aria-expanded": expanded,
    "aria-controls": editorId,
    label: label,
    isDisabled: isDisabled,
    onClick: onClick,
    icon: expanded ? ShrinkDiagonalIcon : GrowDiagonalIcon
  }) : /*#__PURE__*/React.createElement(ExpandToggleContainer, null, /*#__PURE__*/React.createElement(Button, {
    appearance: 'subtle',
    "aria-expanded": expanded,
    "aria-controls": editorId,
    "aria-label": label,
    isDisabled: isDisabled,
    spacing: 'none',
    onClick: onClick,
    iconBefore: /*#__PURE__*/React.createElement(Icon, {
      isDisabled: isDisabled
    })
  }));
};