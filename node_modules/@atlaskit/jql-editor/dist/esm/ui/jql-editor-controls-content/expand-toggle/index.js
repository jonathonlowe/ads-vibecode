import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import React, { useCallback } from 'react';
import Tooltip from '@atlaskit/tooltip';
import { Action, ActionSubject, ActionSubjectId, EventType } from '../../../analytics';
import { JQL_EDITOR_INPUT_ID } from '../../../common/constants';
import { TooltipContent } from '../../../common/styled';
import { useEditorThemeContext } from '../../../hooks/use-editor-theme';
import { useIntl, useScopedId, useStoreActions } from '../../../state';
// eslint-disable-next-line @atlassian/tangerine/import/no-parent-imports
import { TooltipTag } from '../../tooltip-tag';
// eslint-disable-next-line @atlassian/tangerine/import/no-parent-imports
import { BaseExpandToggle } from '../base-expand-toggle';
import { messages } from './messages';
export var ExpandToggle = function ExpandToggle() {
  var _useEditorThemeContex = useEditorThemeContext(),
    expanded = _useEditorThemeContex.expanded,
    toggleExpanded = _useEditorThemeContex.toggleExpanded;
  var _useStoreActions = useStoreActions(),
    _useStoreActions2 = _slicedToArray(_useStoreActions, 2),
    createAndFireAnalyticsEvent = _useStoreActions2[1].createAndFireAnalyticsEvent;
  var _useScopedId = useScopedId(JQL_EDITOR_INPUT_ID),
    _useScopedId2 = _slicedToArray(_useScopedId, 1),
    editorId = _useScopedId2[0];
  var _useIntl = useIntl(),
    _useIntl2 = _slicedToArray(_useIntl, 1),
    intl = _useIntl2[0];
  var message;
  if (expanded) {
    message = intl.formatMessage(messages.collapseTooltip);
  } else {
    message = intl.formatMessage(messages.expandTooltip);
  }
  var onClick = useCallback(function () {
    createAndFireAnalyticsEvent({
      action: Action.CLICKED,
      actionSubject: ActionSubject.BUTTON,
      actionSubjectId: ActionSubjectId.EDITOR_EXPAND,
      eventType: EventType.UI,
      attributes: {
        expanded: !expanded
      }
    });
    toggleExpanded();
  }, [expanded, createAndFireAnalyticsEvent, toggleExpanded]);
  return /*#__PURE__*/React.createElement(Tooltip, {
    position: 'bottom',
    content: /*#__PURE__*/React.createElement(TooltipContent, null, message)
    // @ts-ignore: [PIT-1685] Fails in post-office due to backwards incompatibility issue with React 18
    ,
    tag: TooltipTag
  }, /*#__PURE__*/React.createElement(BaseExpandToggle, {
    expanded: expanded,
    editorId: editorId,
    label: intl.formatMessage(messages.buttonLabel),
    onClick: onClick
  }));
};