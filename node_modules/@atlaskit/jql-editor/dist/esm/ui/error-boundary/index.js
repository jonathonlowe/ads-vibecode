import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
import React, { Component } from 'react';

// eslint-disable-next-line @atlassian/tangerine/import/no-parent-imports
import { JQLEditorReadOnly } from '../jql-editor-layout';
// eslint-disable-next-line @atlassian/tangerine/import/no-parent-imports
// eslint-disable-next-line @repo/internal/react/no-class-components
var ErrorBoundary = /*#__PURE__*/function (_Component) {
  function ErrorBoundary() {
    var _this;
    _classCallCheck(this, ErrorBoundary);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, ErrorBoundary, [].concat(args));
    _defineProperty(_this, "state", {
      error: null
    });
    return _this;
  }
  _inherits(ErrorBoundary, _Component);
  return _createClass(ErrorBoundary, [{
    key: "componentDidCatch",
    value: function componentDidCatch(error) {
      this.setState({
        error: error
      });
      this.props.onError && this.props.onError(error);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
        children = _this$props.children,
        renderFallback = _this$props.render;
      var error = this.state.error;
      if (error === null) {
        return children;
      }
      return renderFallback({
        error: error
      });
    }
  }]);
}(Component);
export var withErrorBoundary = function withErrorBoundary(WrappedComponent) {
  return function (props) {
    var query = props.query,
      onRenderError = props.onRenderError,
      onSearch = props.onSearch,
      isCompact = props.isCompact;
    return /*#__PURE__*/React.createElement(ErrorBoundary, {
      onError: onRenderError,
      render: function render() {
        return /*#__PURE__*/React.createElement(JQLEditorReadOnly, {
          query: query,
          isSearch: !!onSearch,
          isCompact: isCompact
        });
      }
    }, /*#__PURE__*/React.createElement(WrappedComponent, props));
  };
};