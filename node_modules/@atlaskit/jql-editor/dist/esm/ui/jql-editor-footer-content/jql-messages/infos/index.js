import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import React from 'react';
import { di } from 'react-magnetic-di';
import { HelperMessage } from '@atlaskit/form';
import LegacyInfoIcon from '@atlaskit/icon/glyph/info';
import InfoIcon from '@atlaskit/icon/utility/information';
import { Box } from '@atlaskit/primitives/compiled';
import * as colors from '@atlaskit/theme/colors';
import { useEditorViewHasInfos } from '../../../../hooks/use-editor-view-has-infos';
import { useExternalMessages } from '../../../../state';
import { FormatMessages, MessageContainer } from '../format';
export var useFormattedInfoMessage = function useFormattedInfoMessage() {
  var _useExternalMessages = useExternalMessages(),
    _useExternalMessages2 = _slicedToArray(_useExternalMessages, 1),
    externalInfos = _useExternalMessages2[0].infos;
  var hasInfos = useEditorViewHasInfos();
  if (!hasInfos) {
    return null;
  }
  return /*#__PURE__*/React.createElement(FormatMessages, {
    messages: externalInfos
  });
};
export var InfoMessages = function InfoMessages() {
  var infoMessage = useFormattedInfoMessage();
  return infoMessage != null ? /*#__PURE__*/React.createElement(MessageContainer, null, /*#__PURE__*/React.createElement(HelperMessage, {
    testId: "jql-editor-info-message"
  }, /*#__PURE__*/React.createElement(Box, {
    as: "span",
    paddingInlineEnd: "space.050"
  }, /*#__PURE__*/React.createElement(InfoIcon, {
    label: "",
    color: "var(--ds-icon-information, ".concat(colors.B500, ")"),
    LEGACY_size: "small",
    LEGACY_fallbackIcon: LegacyInfoIcon,
    LEGACY_margin: "0 -4px 0 0"
  })), infoMessage)) : null;
};