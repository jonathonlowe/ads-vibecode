import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import React, { useCallback } from 'react';
import { di } from 'react-magnetic-di';
import { HelperMessage } from '@atlaskit/form';
import LegacyWarningIcon from '@atlaskit/icon/glyph/warning';
import WarningIcon from '@atlaskit/icon/utility/warning';
import { Box } from '@atlaskit/primitives/compiled';
import * as colors from '@atlaskit/theme/colors';
import { useEditorViewHasWarnings } from '../../../../hooks/use-editor-view-has-warnings';
import { useExternalMessages, useHydratedDeprecations, useIntl } from '../../../../state';
import { FormatMessages, MessageContainer } from '../format';
import { messages } from './messages';
var softDeprecateEpicParentDocsLink = 'https://support.atlassian.com/jira-software-cloud/docs/upcoming-changes-epic-link-replaced-with-parent/';
var getEpicLinkDeprecationTerm = function getEpicLinkDeprecationTerm(hydratedDeprecations) {
  var epicLinkWarning = hydratedDeprecations.filter(function (warning) {
    return warning.deprecatedSearcherKey === 'com.pyxis.greenhopper.jira:gh-epic-link-searcher';
  });
  return epicLinkWarning.length > 0 ? epicLinkWarning[0].id : null;
};
var getParentLinkDeprecationTerm = function getParentLinkDeprecationTerm(hydratedDeprecations) {
  var parentLinkWarning = hydratedDeprecations.filter(function (warning) {
    return warning.deprecatedSearcherKey === 'com.atlassian.jpo:jpo-custom-field-parent-searcher';
  });
  return parentLinkWarning.length > 0 ? parentLinkWarning[0].id : null;
};
export var useFormattedWarningMessage = function useFormattedWarningMessage() {
  var _useHydratedDeprecati = useHydratedDeprecations(),
    _useHydratedDeprecati2 = _slicedToArray(_useHydratedDeprecati, 1),
    hydratedDeprecations = _useHydratedDeprecati2[0];
  var _useExternalMessages = useExternalMessages(),
    _useExternalMessages2 = _slicedToArray(_useExternalMessages, 1),
    externalWarnings = _useExternalMessages2[0].warnings;
  var hasWarnings = useEditorViewHasWarnings();
  var _useIntl = useIntl(),
    _useIntl2 = _slicedToArray(_useIntl, 1),
    formatMessage = _useIntl2[0].formatMessage;
  var epicLinkDeprecationTerm = getEpicLinkDeprecationTerm(hydratedDeprecations);
  var parentLinkDeprecationTerm = getParentLinkDeprecationTerm(hydratedDeprecations);
  var formatWarnings = useCallback(function (message) {
    var combinedMessages = [{
      type: 'warning',
      message: message
    }].concat(_toConsumableArray(externalWarnings));
    return /*#__PURE__*/React.createElement(FormatMessages, {
      messages: combinedMessages
    });
  }, [externalWarnings]);
  if (!hasWarnings) {
    return null;
  } else if (!hydratedDeprecations.length && externalWarnings.length) {
    return /*#__PURE__*/React.createElement(FormatMessages, {
      messages: externalWarnings
    });
  } else if (epicLinkDeprecationTerm == null && parentLinkDeprecationTerm == null) {
    var _hydratedDeprecations;
    return formatWarnings(formatMessage(messages.defaultWarning, {
      deprecatedField: (_hydratedDeprecations = hydratedDeprecations[0]) === null || _hydratedDeprecations === void 0 ? void 0 : _hydratedDeprecations.id
    }));
  } else if (epicLinkDeprecationTerm && parentLinkDeprecationTerm) {
    return formatWarnings(formatMessage(messages.deprecatedBothParentReplacementMessage, {
      link: function link(chunks) {
        return /*#__PURE__*/React.createElement("a", {
          href: softDeprecateEpicParentDocsLink,
          target: "_blank",
          rel: "noopener noreferrer",
          onClick: function onClick(e) {
            return e.stopPropagation();
          }
        }, chunks);
      },
      receivedFirst: epicLinkDeprecationTerm,
      receivedSecond: parentLinkDeprecationTerm,
      parentReplacement: 'Parent'
    }));
  } else if (epicLinkDeprecationTerm || parentLinkDeprecationTerm) {
    return formatWarnings(formatMessage(messages.deprecatedParentReplacementMessage, {
      link: function link(chunks) {
        return /*#__PURE__*/React.createElement("a", {
          href: softDeprecateEpicParentDocsLink,
          target: "_blank",
          rel: "noopener noreferrer",
          onClick: function onClick(e) {
            return e.stopPropagation();
          }
        }, chunks);
      },
      deprecatedField: epicLinkDeprecationTerm ? epicLinkDeprecationTerm : parentLinkDeprecationTerm,
      parentReplacement: 'Parent'
    }));
  }
};
export var WarningMessages = function WarningMessages() {
  var warningMessage = useFormattedWarningMessage();
  return warningMessage != null ? /*#__PURE__*/React.createElement(MessageContainer, null, /*#__PURE__*/React.createElement(HelperMessage, {
    testId: "jql-editor-warning-message"
  }, /*#__PURE__*/React.createElement(Box, {
    as: "span",
    paddingInlineEnd: "space.050"
  }, /*#__PURE__*/React.createElement(WarningIcon, {
    label: "",
    color: "var(--ds-icon-warning, ".concat(colors.Y400, ")"),
    LEGACY_size: "small",
    LEGACY_fallbackIcon: LegacyWarningIcon,
    LEGACY_margin: "0 -4px 0 0"
  })), warningMessage)) : null;
};