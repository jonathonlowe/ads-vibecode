import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import React from 'react';
import { HelperMessage } from '@atlaskit/form';
import { Text } from '@atlaskit/primitives/compiled';
import { JQL_EDITOR_HELP_CONTENT_ID } from '../../../common/constants';
import { useEditorThemeContext } from '../../../hooks/use-editor-theme';
import { useEditorViewHasFocus, useIntl, useScopedId } from '../../../state';
import { messages } from './messages';
import { HelpContainer } from './styled';
export var JQLEditorHelp = function JQLEditorHelp() {
  var _useIntl = useIntl(),
    _useIntl2 = _slicedToArray(_useIntl, 1),
    formatMessage = _useIntl2[0].formatMessage;
  var _useEditorViewHasFocu = useEditorViewHasFocus(),
    _useEditorViewHasFocu2 = _slicedToArray(_useEditorViewHasFocu, 1),
    editorViewHasFocus = _useEditorViewHasFocu2[0];
  var _useEditorThemeContex = useEditorThemeContext(),
    isSearch = _useEditorThemeContex.isSearch;
  var _useScopedId = useScopedId(JQL_EDITOR_HELP_CONTENT_ID),
    _useScopedId2 = _slicedToArray(_useScopedId, 1),
    helpContentId = _useScopedId2[0];
  var SearchMessage = /*#__PURE__*/React.createElement(Text, {
    size: "UNSAFE_small",
    color: "inherit"
  }, formatMessage(messages.searchCommand, {
    b: function b(text) {
      return /*#__PURE__*/React.createElement("b", null, text);
    }
  }));
  var NewLineMessage = /*#__PURE__*/React.createElement(Text, {
    size: "UNSAFE_small",
    color: "inherit"
  }, formatMessage(isSearch ? messages.newLineCommand : messages.fieldNewLineCommand, {
    b: function b(text) {
      return /*#__PURE__*/React.createElement("b", null, text);
    }
  }));
  return /*#__PURE__*/React.createElement(HelpContainer, {
    id: helpContentId,
    isVisible: editorViewHasFocus
  }, isSearch && /*#__PURE__*/React.createElement(HelperMessage, null, SearchMessage), /*#__PURE__*/React.createElement(HelperMessage, null, NewLineMessage));
};