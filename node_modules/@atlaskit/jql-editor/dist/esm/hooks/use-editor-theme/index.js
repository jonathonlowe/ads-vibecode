import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import { createContext, useCallback, useContext, useMemo, useState } from 'react';
import noop from 'lodash/noop';
var defaultMaxRows = 3;
var expandedRows = 15;
var defaultEditorTheme = {
  defaultMaxRows: defaultMaxRows,
  expanded: false,
  expandedRows: expandedRows,
  toggleExpanded: noop,
  isSearch: false,
  isCompact: false
};
export var EditorThemeContext = /*#__PURE__*/createContext(defaultEditorTheme);

/**
 * Hook to manage the theming state of the editor.
 */
export var useEditorTheme = function useEditorTheme(_ref) {
  var _ref$isSearch = _ref.isSearch,
    isSearch = _ref$isSearch === void 0 ? false : _ref$isSearch,
    _ref$isCompact = _ref.isCompact,
    isCompact = _ref$isCompact === void 0 ? false : _ref$isCompact;
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    expanded = _useState2[0],
    setExpanded = _useState2[1];
  var toggleExpanded = useCallback(function () {
    return setExpanded(function (prevState) {
      return !prevState;
    });
  }, []);
  return useMemo(function () {
    return {
      defaultMaxRows: defaultMaxRows,
      expanded: expanded,
      expandedRows: expandedRows,
      toggleExpanded: toggleExpanded,
      isSearch: isSearch,
      isCompact: isCompact
    };
  }, [expanded, toggleExpanded, isSearch, isCompact]);
};
export var useEditorThemeContext = function useEditorThemeContext() {
  return useContext(EditorThemeContext);
};