import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
import React, { useCallback } from 'react';
import { EventType } from '@atlaskit/jql-editor-common';
import { Action, ActionSubject } from '../../../../analytics';
import { useAutocompleteLoading, useAutocompleteOptions, useStoreActions } from '../../../../state';
import AutocompleteDropdown from '../autocomplete-dropdown';
var Autocomplete = function Autocomplete(_ref) {
  var keymap = _ref.keymap,
    onClick = _ref.onClick;
  var _useAutocompleteOptio = useAutocompleteOptions(),
    _useAutocompleteOptio2 = _slicedToArray(_useAutocompleteOptio, 1),
    options = _useAutocompleteOptio2[0];
  var _useAutocompleteLoadi = useAutocompleteLoading(),
    _useAutocompleteLoadi2 = _slicedToArray(_useAutocompleteLoadi, 1),
    loading = _useAutocompleteLoadi2[0];
  var _useStoreActions = useStoreActions(),
    _useStoreActions2 = _slicedToArray(_useStoreActions, 2),
    createAndFireAnalyticsEvent = _useStoreActions2[1].createAndFireAnalyticsEvent;
  var handleClick = useCallback(function (option, analyticsAttributes) {
    onClick(option);
    createAndFireAnalyticsEvent({
      action: Action.SELECTED,
      actionSubject: ActionSubject.AUTOCOMPLETE_OPTION,
      eventType: EventType.TRACK,
      attributes: _objectSpread({}, analyticsAttributes)
    });
  }, [createAndFireAnalyticsEvent, onClick]);
  return /*#__PURE__*/React.createElement(AutocompleteDropdown, {
    options: options,
    loading: loading,
    keymap: keymap,
    onClick: handleClick
  });
};
export default Autocomplete;