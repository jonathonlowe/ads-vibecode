import { type FunctionComponent } from 'react';
import { type Node } from '@atlaskit/editor-prosemirror/model';
import { type Decoration, type NodeView } from '@atlaskit/editor-prosemirror/view';
import { type PortalActions } from '../../../ui/jql-editor-portal-provider/types';
export type NodeViewProps<Props> = Props & {
    selected: boolean;
    error: boolean;
};
export declare class ReactNodeView<Props> implements NodeView {
    private readonly component;
    private readonly componentSubject;
    private readonly node;
    private readonly portalActions;
    private readonly portalKey;
    readonly dom: HTMLSpanElement;
    constructor(component: FunctionComponent<NodeViewProps<Props>>, portalActions: PortalActions, node: Node);
    static for<Props>(component: FunctionComponent<NodeViewProps<Props>>, portalActions: PortalActions, node: Node, decorations: readonly Decoration[]): ReactNodeView<Props>;
    init: (decorations: readonly Decoration[]) => this;
    destroy: () => void;
    update: (node: Node, decorations: readonly Decoration[]) => boolean;
    getProps: (node: Node) => Props;
    private isSelected;
    private hasError;
}
