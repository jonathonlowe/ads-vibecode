import { type FunctionComponent } from 'react';
import { Slice } from '@atlaskit/editor-prosemirror/model';
import { type EditorState } from '@atlaskit/editor-prosemirror/state';
import { type EditorView } from '@atlaskit/editor-prosemirror/view';
import { type PortalActions } from '../../ui/jql-editor-portal-provider/types';
import { type PluginKeymap } from '../common/plugin-keymap';
import ReactPluginView from '../common/react-plugin-view';
import { type AutocompleteProps, type SelectableAutocompleteOption } from './components/types';
export default class AutocompletePluginView extends ReactPluginView<AutocompleteProps> {
    private readonly view;
    private readonly keymap;
    private readonly enableRichInlineNodes;
    constructor(view: EditorView, keymap: PluginKeymap, portalActions: PortalActions, enableRichInlineNodes: boolean);
    getComponent: () => FunctionComponent<AutocompleteProps>;
    getInitialComponentProps: () => AutocompleteProps;
    isSameState(state: EditorState, prevState: EditorState): boolean;
    onReplaceSuggestion: (option: SelectableAutocompleteOption) => void;
    getSliceForSuggestion: (option: SelectableAutocompleteOption) => Slice;
}
