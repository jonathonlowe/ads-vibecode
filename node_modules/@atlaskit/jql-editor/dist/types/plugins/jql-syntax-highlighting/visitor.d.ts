import { type EditorState } from '@atlaskit/editor-prosemirror/state';
import { AbstractJastVisitor, type AstNode, type CompoundOperator, type Field, type NotClauseOperator, type Operator, type OrderByDirection, type OrderByOperator, type PredicateOperator } from '@atlaskit/jql-ast';
import { type Highlight } from './types';
export declare class SyntaxHighlightingVisitor extends AbstractJastVisitor<Highlight[]> {
    state: EditorState;
    constructor(state: EditorState);
    visitCompoundOperator: (compoundOperator: CompoundOperator) => Highlight[];
    visitNotClauseOperator: (notClauseOperator: NotClauseOperator) => Highlight[];
    visitOrderByOperator: (orderByOperator: OrderByOperator) => Highlight[];
    visitOrderByDirection: (orderByDirection: OrderByDirection) => Highlight[];
    visitField: (field: Field) => Highlight[];
    visitOperator: (operator: Operator) => Highlight[];
    visitPredicateOperator: (predicateOperator: PredicateOperator) => Highlight[];
    protected shouldVisitNextChild(node: AstNode): boolean;
    protected aggregateResult(aggregate: Highlight[], nextResult: Highlight[]): Highlight[];
    protected defaultResult(): never[];
    private getHighlightsIfPosition;
    private createHighlight;
}
