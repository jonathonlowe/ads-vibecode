"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ReadOnlyEditorViewContainer = exports.ReadOnlyEditorView = exports.LineNumberToolbar = exports.EditorViewContainer = exports.EditorView = exports.EditorMain = exports.EditorFooter = exports.EditorControls = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = require("@emotion/react");
var _styled = _interopRequireDefault(require("@emotion/styled"));
var _colors = require("@atlaskit/theme/colors");
var _constants = require("@atlaskit/theme/constants");
var _constants2 = require("../../plugins/validation-tooltip/constants");
var _templateObject, _templateObject2, _templateObject3, _templateObject4; // eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var fadeIn = (0, _react.keyframes)({
  from: {
    opacity: 0
  },
  to: {
    opacity: 1
  }
});
var fadeOut = (0, _react.keyframes)({
  from: {
    visibility: 'visible',
    opacity: 1
  },
  to: {
    opacity: 0
  }
});

// eslint-disable-next-line @atlaskit/design-system/no-styled-tagged-template-expression, @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var EditorMain = exports.EditorMain = _styled.default.div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2.default)(["\n\t/* CSS reset */\n\tfont-family: ", ";\n\tfont-size: 14px;\n\tflex-grow: 1;\n\n\t/* These styles and animations are derived from @atlaskit/tooltip */\n\n\t.", " {\n\t\tbackground-color: ", ";\n\t\tcolor: ", ";\n\t\tborder-radius: ", ";\n\t\tbox-sizing: border-box;\n\t\tfont: ", ";\n\t\tline-height: 1.3;\n\t\tmax-width: 240px;\n\t\tpadding: ", " ", ";\n\t\tword-wrap: break-word;\n\t\toverflow-wrap: break-word;\n\t\tz-index: ", ";\n\t\tpointer-events: none;\n\t\tposition: absolute;\n\t\tvisibility: hidden;\n\n\t\t/* Horizontally center and vertically position above the target element */\n\t\ttransform: translate(-50%, calc(-100% - ", "));\n\n\t\t&.", " {\n\t\t\tanimation: ", " 350ms cubic-bezier(0.15, 1, 0.3, 1);\n\t\t\tvisibility: visible;\n\t\t}\n\n\t\t&.", " {\n\t\t\tanimation: ", " 350ms cubic-bezier(0.15, 1, 0.3, 1);\n\t\t}\n\t}\n"])), "var(--ds-font-family-body, ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)", _constants2.TOOLTIP_CLASSNAME, "var(--ds-background-neutral-bold, ".concat(_colors.N800, ")"), "var(--ds-text-inverse, ".concat(_colors.N0, ")"), "var(--ds-border-radius-100, 3px)", "var(--ds-font-body-UNSAFE_small, normal 400 12px/16px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)", "var(--ds-space-025, 2px)", "var(--ds-space-075, 6px)", _constants.layers.tooltip(), "var(--ds-space-200, 16px)", _constants2.TOOLTIP_ENTER_CLASSNAME, fadeIn, _constants2.TOOLTIP_EXIT_CLASSNAME, fadeOut);

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var EditorFooter = exports.EditorFooter = _styled.default.div({
  display: 'flex',
  justifyContent: 'space-between',
  minHeight: '20px'
});

// Height (in px) for a single row in the editor
var rowHeight = 8 * 2.75;
// Vertical padding for the editor input
var getEditorInputVerticalPadding = function getEditorInputVerticalPadding(isCompact) {
  return isCompact ? 3 : 7;
};
var editorInputHorizontalPadding = 6;
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var EditorViewContainer = exports.EditorViewContainer = _styled.default.div({
  backgroundColor: "var(--ds-background-input, ".concat(_colors.N10, ")"),
  borderStyle: 'solid',
  borderWidth: "var(--ds-border-width, 1px)",
  borderColor: "var(--ds-border-input, ".concat(_colors.N100, ")"),
  borderRadius: "var(--ds-border-radius-100, 3px)",
  padding: "var(--ds-border-width, 1px)",
  boxSizing: 'border-box',
  color: "var(--ds-text, ".concat(_colors.N900, ")"),
  display: 'flex',
  overflow: 'auto',
  transition: 'background-color 0.2s ease-in-out, border-color 0.2s ease-in-out'
},
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-dynamic-styles -- Ignored via go/DSP-18766
function (props) {
  return props.editorViewIsInvalid &&
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
  (0, _react.css)({
    borderColor: "var(--ds-border-danger, ".concat(_colors.R400, ")"),
    boxShadow: "inset 0 0 0 ".concat("var(--ds-border-width, 1px)", " ", "var(--ds-border-danger, ".concat(_colors.R400, ")"))
  });
},
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-dynamic-styles -- Ignored via go/DSP-18766
function (props) {
  return props.editorViewHasFocus ?
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
  (0, _react.css)({
    backgroundColor: "var(--ds-surface, ".concat(_colors.N0, ")"),
    borderColor: "var(--ds-border-focused, ".concat(_colors.B200, ")"),
    boxShadow: "inset 0 0 0 ".concat("var(--ds-border-width, 1px)", " ", "var(--ds-border-focused, ".concat(_colors.B200, ")"))
  }) :
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
  (0, _react.css)({
    '&:hover': {
      backgroundColor: "var(--ds-background-input-hovered, ".concat(_colors.N30, ")")
    }
  });
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var ReadOnlyEditorViewContainer = exports.ReadOnlyEditorViewContainer = (0, _styled.default)(EditorViewContainer)({
  backgroundColor: "var(--ds-background-disabled, ".concat(_colors.N30, ")"),
  color: "var(--ds-text-disabled, ".concat(_colors.N100, ")"),
  pointerEvents: 'none'
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var LineNumberToolbar = exports.LineNumberToolbar = _styled.default.div({
  backgroundColor: "var(--ds-background-neutral, ".concat(_colors.N30, ")"),
  flexShrink: 0,
  width: '30px',
  position: 'sticky',
  top: 0
},
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-dynamic-styles -- Ignored via go/DSP-18766
function (props) {
  return !props.lineNumbersVisible &&
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
  (0, _react.css)({
    display: 'none'
  });
});

/**
 * The main div which the Prosemirror editor will be rendered into.
 */
// eslint-disable-next-line @atlaskit/design-system/no-styled-tagged-template-expression, @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var EditorView = exports.EditorView = _styled.default.div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2.default)(["\n\tcounter-reset: lineNumber;\n\tflex-grow: 1;\n\n\ttransition:\n\t\theight 250ms cubic-bezier(0.15, 1, 0.3, 1),\n\t\tmax-height 250ms cubic-bezier(0.15, 1, 0.3, 1);\n\tmax-height: ", "px;\n\n\tline-height: ", ";\n\tfont-family: ", ";\n\tword-break: break-word;\n\toverflow-wrap: anywhere;\n\twhite-space: pre-wrap;\n\n\t&[data-expanded] {\n\t\theight: ", "px;\n\t\tmax-height: ", "px;\n\t}\n\n\t.ProseMirror {\n\t\tcolor: ", ";\n\t\tpadding: ", "px\n\t\t\t", "px;\n\n\t\t&:focus {\n\t\t\toutline: none;\n\t\t}\n\n\t\t.mark-token-keyword {\n\t\t\tcolor: ", ";\n\t\t}\n\n\t\t.mark-token-field {\n\t\t\tcolor: ", ";\n\t\t}\n\n\t\t.mark-token-operator {\n\t\t\tcolor: ", ";\n\t\t}\n\n\t\t.mark-token-error {\n\t\t\tcolor: ", ";\n\t\t\ttext-decoration: wavy underline;\n\t\t\ttext-decoration-thickness: 1px;\n\t\t\ttext-decoration-skip-ink: none;\n\t\t}\n\t}\n\n\tp {\n\t\tmargin: 0;\n\t\tcounter-increment: lineNumber;\n\t\tposition: relative;\n\n\t\t/* Show the current line number before each paragraph block. */\n\n\t\t&::before {\n\t\t\tcontent: counter(lineNumber);\n\t\t\tcolor: ", ";\n\t\t\tfont-size: 10px;\n\t\t\tline-height: ", ";\n\t\t\tpadding: 0 ", " 0 ", ";\n\t\t\tposition: absolute;\n\t\t\tbox-sizing: border-box;\n\t\t\t/* Shift the line number tag 100% (plus 8px padding) to the left to position it inside the LineNumberToolbar */\n\t\t\ttransform: translateX(calc(-100% - ", "));\n\n\t\t\t/* We can fit 3 digits before ellipses. This is not very responsive but saves us having to add expensive width\n        recalculation logic to the LineNumberToolbar for a scenario that *should* never happen. */\n\t\t\tmax-width: 30px;\n\t\t\ttext-overflow: ellipsis;\n\t\t\toverflow: hidden;\n\t\t\twhite-space: nowrap;\n\n\t\t\t", "\n\t\t}\n\t}\n"])), function (props) {
  return rowHeight * props.defaultMaxRows + getEditorInputVerticalPadding(props.isCompact) * 2;
}, rowHeight / 14, "var(--ds-font-family-code, ui-monospace, Menlo, \"Segoe UI Mono\", \"Ubuntu Mono\", monospace)", function (props) {
  return rowHeight * props.expandedRows + getEditorInputVerticalPadding(props.isCompact) * 2;
}, function (props) {
  return rowHeight * props.expandedRows + getEditorInputVerticalPadding(props.isCompact) * 2;
}, "var(--ds-text, ".concat(_colors.N700, ")"), function (props) {
  return getEditorInputVerticalPadding(props.isCompact);
}, editorInputHorizontalPadding, "var(--ds-text-accent-purple, ".concat(_colors.P400, ")"), "var(--ds-text-accent-blue, ".concat(_colors.B300, ")"), "var(--ds-text-accent-green, ".concat(_colors.G500, ")"), "var(--ds-text-danger, ".concat(_colors.R400, ")"), "var(--ds-text-subtlest, ".concat(_colors.N100, ")"), rowHeight / 10, "var(--ds-space-100, 8px)", "var(--ds-space-025, 2px)", "var(--ds-space-100, 8px)", function (props) {
  return !props.lineNumbersVisible && // eslint-disable-next-line @atlaskit/design-system/no-css-tagged-template-expression
  (0, _react.css)(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2.default)(["\n\t\t\t\t\tdisplay: none;\n\t\t\t\t"])));
});

// FIXME: convert-props-syntax rule doesn't catch this
// eslint-disable-next-line @atlaskit/design-system/no-styled-tagged-template-expression, @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var ReadOnlyEditorView = exports.ReadOnlyEditorView = (0, _styled.default)(EditorView)(_templateObject4 || (_templateObject4 = (0, _taggedTemplateLiteral2.default)(["\n\t/* We need to replicate padding from the inner prosemirror element in our read only state. That means we also need\n  recompute max height excluding the child padding. */\n\tpadding: ", "px\n\t\t", "px;\n\tmax-height: ", "px;\n\n\t> p {\n\t\t/* Prevent collapsing empty paragraphs */\n\t\tmin-height: ", "px;\n\t}\n"])), function (props) {
  return getEditorInputVerticalPadding(props.isCompact);
}, editorInputHorizontalPadding, function (props) {
  return rowHeight * props.defaultMaxRows;
}, rowHeight);

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var EditorControls = exports.EditorControls = _styled.default.div(function (props) {
  return {
    alignItems: 'center',
    display: 'flex',
    flexShrink: 0,
    marginLeft: 'auto',
    marginRight: "".concat(
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    props.isSearch ? getEditorInputVerticalPadding(props.isCompact) - 1 // the search button needs the same vertical & horizontal spacing
    : editorInputHorizontalPadding - 3, "px"),
    // eslint-disable-next-line @atlaskit/design-system/use-tokens-typography
    lineHeight: 'normal',
    position: 'sticky',
    top: 0,
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    height: "".concat(rowHeight + 2 * getEditorInputVerticalPadding(props.isCompact), "px"),
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    gap: props.isVisualRefresh ? "var(--ds-space-025, 2px)" : 'unset'
  };
});