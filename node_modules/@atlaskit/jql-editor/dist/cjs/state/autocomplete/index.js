"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sortOperators = exports.ORDERED_OPERATORS = void 0;
var _map = require("rxjs/operators/map");
var _jqlAst = require("@atlaskit/jql-ast");
// Opinionated order in which we want to render operators
var ORDERED_OPERATORS = exports.ORDERED_OPERATORS = [_jqlAst.OPERATOR_EQUALS, _jqlAst.OPERATOR_NOT_EQUALS, _jqlAst.OPERATOR_LIKE, _jqlAst.OPERATOR_NOT_LIKE, _jqlAst.OPERATOR_LT_EQUALS, _jqlAst.OPERATOR_GT_EQUALS, _jqlAst.OPERATOR_GT, _jqlAst.OPERATOR_LT, _jqlAst.OPERATOR_IS, _jqlAst.OPERATOR_IS_NOT, _jqlAst.OPERATOR_IN, _jqlAst.OPERATOR_NOT_IN, _jqlAst.OPERATOR_WAS, _jqlAst.OPERATOR_WAS_NOT, _jqlAst.OPERATOR_WAS_IN, _jqlAst.OPERATOR_WAS_NOT_IN, _jqlAst.OPERATOR_CHANGED];
var sortOperators = exports.sortOperators = function sortOperators(operators$) {
  return operators$.pipe((0, _map.map)(function (options) {
    return ORDERED_OPERATORS.reduce(function (result, orderedOperator) {
      var matchingOption = options.find(function (option) {
        return orderedOperator.toLowerCase() === option.value.toLowerCase();
      });
      if (matchingOption !== undefined) {
        result.push(matchingOption);
      }
      return result;
    }, []);
  }));
};