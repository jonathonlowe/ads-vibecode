"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _state = require("@atlaskit/editor-prosemirror/state");
var _constants = require("./constants");
var _view = require("./view");
var validationTooltipPlugin = function validationTooltipPlugin(mainId) {
  var plugin = new _state.Plugin({
    key: _constants.JQLValidationTooltipPluginKey,
    view: function view() {
      return new _view.ValidationTooltipPluginView(mainId);
    },
    state: {
      init: function init() {
        return false;
      },
      // @ts-ignore
      apply: function apply(tr, value) {
        if (tr.getMeta(plugin) !== undefined) {
          return tr.getMeta(plugin);
        } else {
          return value;
        }
      }
    },
    props: {
      handleDOMEvents: {
        mouseover: function mouseover(_ref, event) {
          var state = _ref.state,
            dispatch = _ref.dispatch;
          var isHovered = plugin.getState(state);
          if (event.target instanceof Element && event.target.closest('[data-token-type="error"]')) {
            if (!isHovered) {
              dispatch(state.tr.setMeta(plugin, true));
            }
          } else if (isHovered) {
            dispatch(state.tr.setMeta(plugin, false));
          }
          return false;
        },
        mouseleave: function mouseleave(_ref2) {
          var state = _ref2.state,
            dispatch = _ref2.dispatch;
          var isHovered = plugin.getState(state);
          if (isHovered) {
            dispatch(state.tr.setMeta(plugin, false));
          }
          return false;
        }
      }
    }
  });
  return plugin;
};
var _default = exports.default = validationTooltipPlugin;