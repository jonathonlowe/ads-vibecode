import mapKeys from 'lodash/mapKeys';
import mapValues from 'lodash/mapValues';
import { RICH_INLINE_NODE } from '../constants';
export const createNodeSpec = (name, attrs) => {
  return {
    group: RICH_INLINE_NODE,
    content: 'text*',
    inline: true,
    atom: true,
    // treat node as a leaf
    attrs,
    toDOM: node => {
      const domAttrs = mapKeys(node.attrs, (_, attr) => `data-${attr}`);
      return [name, domAttrs, 0];
    },
    parseDOM: [{
      tag: name,
      getAttrs: node => {
        if (node instanceof Element) {
          return mapValues(attrs, (_, attr) => node.getAttribute(`data-${attr}`));
        }
        return null; // should neverâ„¢ happen
      }
    }]
  };
};