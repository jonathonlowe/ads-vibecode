import React from 'react';
import { lazyForPaint, LazySuspense } from 'react-loosely-lazy';
import { withErrorBoundary } from './ui/error-boundary';
import { withIntlProvider } from './ui/intl-provider';
import { JQLEditorReadOnly } from './ui/jql-editor-layout';
const JQLEditor = lazyForPaint(() => import( /* webpackChunkName: "async-jql-editor" */'./ui/jql-editor').then(({
  default: JQLEditorUI
}) => JQLEditorUI), {
  ssr: false
});
export const preloadJQLEditor = () => JQLEditor.preload();
export const JQLEditorAsync = withIntlProvider(withErrorBoundary(props => {
  return /*#__PURE__*/React.createElement(LazySuspense, {
    fallback: /*#__PURE__*/React.createElement(JQLEditorReadOnly, {
      query: props.query,
      isSearch: !!props.onSearch,
      isCompact: props.isCompact
    })
  }, /*#__PURE__*/React.createElement(JQLEditor, props));
}));