import React from 'react';
import { HelperMessage } from '@atlaskit/form';
import { Text } from '@atlaskit/primitives/compiled';
import { JQL_EDITOR_HELP_CONTENT_ID } from '../../../common/constants';
import { useEditorThemeContext } from '../../../hooks/use-editor-theme';
import { useEditorViewHasFocus, useIntl, useScopedId } from '../../../state';
import { messages } from './messages';
import { HelpContainer } from './styled';
export const JQLEditorHelp = () => {
  const [{
    formatMessage
  }] = useIntl();
  const [editorViewHasFocus] = useEditorViewHasFocus();
  const {
    isSearch
  } = useEditorThemeContext();
  const [helpContentId] = useScopedId(JQL_EDITOR_HELP_CONTENT_ID);
  const SearchMessage = /*#__PURE__*/React.createElement(Text, {
    size: "UNSAFE_small",
    color: "inherit"
  }, formatMessage(messages.searchCommand, {
    b: text => /*#__PURE__*/React.createElement("b", null, text)
  }));
  const NewLineMessage = /*#__PURE__*/React.createElement(Text, {
    size: "UNSAFE_small",
    color: "inherit"
  }, formatMessage(isSearch ? messages.newLineCommand : messages.fieldNewLineCommand, {
    b: text => /*#__PURE__*/React.createElement("b", null, text)
  }));
  return /*#__PURE__*/React.createElement(HelpContainer, {
    id: helpContentId,
    isVisible: editorViewHasFocus
  }, isSearch && /*#__PURE__*/React.createElement(HelperMessage, null, SearchMessage), /*#__PURE__*/React.createElement(HelperMessage, null, NewLineMessage));
};