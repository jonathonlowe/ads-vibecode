import React from 'react';
import { useEditorThemeContext } from '../../../../hooks/use-editor-theme';
import { MessageContainer as MessageContainerStyled, MessageList } from './styled';

// Max number messages we want to show
const MAX_MESSAGES = 10;
export const MessageContainer = ({
  children
}) => {
  const {
    isSearch
  } = useEditorThemeContext();
  return /*#__PURE__*/React.createElement(MessageContainerStyled, {
    isSearch: isSearch
  }, children);
};
export const FormatMessages = ({
  messages
}) => {
  const messageNodes = extractMessageNodes(messages);
  if (messageNodes.length === 0) {
    return null;
  }
  if (messageNodes.length === 1) {
    return /*#__PURE__*/React.createElement("span", null, messageNodes[0]);
  }
  return /*#__PURE__*/React.createElement(MessageList, null, messageNodes.map((m, i) => /*#__PURE__*/React.createElement("li", {
    key: i
  }, m)));
};

/**
 * This function was extracted from FormatMessages, so that the rendering is decoupled from the logic
 * This is so that the extractMessageNodes can used elsewhere where rendering is delegated to a different renderer
 *
 * Simply put, this function only handles getting m.message, and limiting to MAX_MESSAGES
 */
export const extractMessageNodes = messages => {
  return messages.slice(0, MAX_MESSAGES).map(m => /*#__PURE__*/React.createElement(React.Fragment, null, m.message));
};