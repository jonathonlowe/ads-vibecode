import _defineProperty from "@babel/runtime/helpers/defineProperty";
/**
 * Copied from https://bitbucket.org/atlassian/atlassian-frontend/src/master/packages/analytics/analytics-listeners/src/helpers/logger.ts
 * In future if this package is migrated into the Atlassian Frontend repo, then this code and related logic should be
 * moved into @atlaskit/analytics-listeners.
 */

export const LOG_LEVEL = {
  DEBUG: 0,
  INFO: 1,
  WARN: 2,
  ERROR: 3,
  OFF: 4
};
export default class Logger {
  constructor({
    logLevel
  } = {}) {
    _defineProperty(this, "logLevel", LOG_LEVEL.OFF);
    if (typeof logLevel === 'number') {
      this.setLogLevel(logLevel);
    }
  }
  setLogLevel(logLevel) {
    if (logLevel >= LOG_LEVEL.DEBUG && logLevel <= LOG_LEVEL.OFF) {
      this.logLevel = +logLevel;
    } else {
      this.logLevel = LOG_LEVEL.OFF;
    }
  }
  logMessage(level, type, ...args) {
    if (level >= this.logLevel) {
      // eslint-disable-next-line no-console
      console[type](...args);
    }
  }
  debug(...args) {
    this.logMessage(LOG_LEVEL.DEBUG, 'log', ...args);
  }
  info(...args) {
    this.logMessage(LOG_LEVEL.INFO, 'info', ...args);
  }
  warn(...args) {
    this.logMessage(LOG_LEVEL.WARN, 'warn', ...args);
  }
  error(...args) {
    this.logMessage(LOG_LEVEL.ERROR, 'error', ...args);
  }
}