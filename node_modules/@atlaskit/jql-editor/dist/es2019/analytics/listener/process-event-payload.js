/**
 * Adapted from https://bitbucket.org/atlassian/atlassian-frontend/src/master/packages/analytics/analytics-listeners/src/fabric/process-event-payload.tsx
 * In future if this package is migrated into the Atlassian Frontend repo, then this code and related logic should be
 * moved into @atlaskit/analytics-listeners.
 */

import merge from 'lodash/merge';
import { DEFAULT_SOURCE } from '@atlaskit/analytics-gas-types';
const extractFieldsFromContext = fieldsToPick => contexts => contexts.map(ctx => fieldsToPick.reduce((result, key) => ctx[key] ? merge(result, {
  [key]: ctx[key]
}) : result, {})).reduce((result, item) => merge(result, item), {});
const fieldExtractor = () => extractFieldsFromContext(['source', 'objectType', 'objectId', 'containerType', 'containerId']);
const updatePayloadWithContext = event => {
  if (event.context.length === 0) {
    return {
      source: DEFAULT_SOURCE,
      ...event.payload
    };
  }
  const fields = fieldExtractor()(event.context);
  return {
    source: DEFAULT_SOURCE,
    ...fields,
    ...event.payload
  };
};
export const processEventPayload = event => {
  return updatePayloadWithContext(event);
};