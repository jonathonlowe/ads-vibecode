import { createContext, useCallback, useContext, useMemo, useState } from 'react';
import noop from 'lodash/noop';
const defaultMaxRows = 3;
const expandedRows = 15;
const defaultEditorTheme = {
  defaultMaxRows,
  expanded: false,
  expandedRows,
  toggleExpanded: noop,
  isSearch: false,
  isCompact: false
};
export const EditorThemeContext = /*#__PURE__*/createContext(defaultEditorTheme);

/**
 * Hook to manage the theming state of the editor.
 */
export const useEditorTheme = ({
  isSearch = false,
  isCompact = false
}) => {
  const [expanded, setExpanded] = useState(false);
  const toggleExpanded = useCallback(() => setExpanded(prevState => !prevState), []);
  return useMemo(() => ({
    defaultMaxRows,
    expanded,
    expandedRows,
    toggleExpanded,
    isSearch,
    isCompact
  }), [expanded, toggleExpanded, isSearch, isCompact]);
};
export const useEditorThemeContext = () => useContext(EditorThemeContext);