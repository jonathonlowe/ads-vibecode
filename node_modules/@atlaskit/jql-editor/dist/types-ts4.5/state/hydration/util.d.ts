import { AbstractJastVisitor, type CompoundClause, type ListOperand, type NotClause, type Query, type TerminalClause, type ValueOperand } from '@atlaskit/jql-ast';
/**
 * Given an AST with parse errors, this visitor returns a valid query that is equivalent for hydration purposes
 * (i.e. just fields, operators and values). Resulting query is generated on a best-effort basis and depends on
 * a successful parser error recovery.
 *
 * Example 1:
 * - Original query: "assignee in (abc-123-def"
 * - Equivalent query: "assignee in (abc-123-def)"
 *
 * Example 2:
 * - Original query: "project = EM and status in (Done, currentUser(), EMPTY) and reporter in"
 * - Equivalent query: "project = EM and status in (Done)"
 */
export declare class ValidQueryVisitor extends AbstractJastVisitor<string> {
    visitQuery: (query: Query) => string;
    visitCompoundClause: (compoundClause: CompoundClause) => string;
    visitTerminalClause: (terminalClause: TerminalClause) => string;
    visitNotClause: (notClause: NotClause) => string;
    visitValueOperand: (valueOperand: ValueOperand) => string;
    visitListOperand: (listOperand: ListOperand) => string;
    protected defaultResult(): string;
}
