import { type MutableRefObject } from 'react';
import { DefaultErrorStrategy, type FailedPredicateException, type InputMismatchException, type Parser } from 'antlr4ts';
import { type NoViableAltException } from 'antlr4ts/NoViableAltException';
import { type IntlShape } from 'react-intl-next';
import { JQLParser } from '@atlaskit/jql-parser';
export declare const getPrintableChar: (char: string) => string;
export declare const getJavaCodeFromChar: (char: string) => string;
export default class JQLEditorErrorStrategy extends DefaultErrorStrategy {
    intlRef: MutableRefObject<IntlShape>;
    constructor(intlRef: MutableRefObject<IntlShape>);
    protected reportInputMismatch(recognizer: JQLParser, exception: InputMismatchException): void;
    protected reportUnwantedToken(recognizer: JQLParser): void;
    protected reportMissingToken(recognizer: JQLParser): void;
    protected reportNoViableAlternative(recognizer: JQLParser, exception: NoViableAltException): void;
    protected reportFailedPredicate(recognizer: Parser, e: FailedPredicateException): void;
    private handleSyntaxError;
}
