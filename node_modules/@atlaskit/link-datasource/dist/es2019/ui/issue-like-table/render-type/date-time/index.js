import React from 'react';
import { useIntl } from 'react-intl-next';
import { Text } from '@atlaskit/primitives/compiled';
export const DATETIME_TYPE_TEST_ID = 'link-datasource-render-type--datetime';
const dateOptions = {
  month: 'short',
  day: 'numeric',
  year: 'numeric'
};
const timeOptions = {
  hour12: false,
  hour: '2-digit',
  minute: '2-digit'
};
export function getFormattedDate(value, display = 'datetime', formatDate) {
  /* In some cases we get a value of `2023-12-20` which when parsed by JS assumes meantime timezone, causing the date
     to be one day off in some timezones. We want it to display the date without converting timezones and a solution
    is to replace the hyphens with slashes. So it should be 20th Dec regardless of the timezone in this case.
     See https://stackoverflow.com/a/31732581
    */
  const dateValue = /^\d{4}-\d{2}-\d{2}$/.exec(value) ? value.replace(/-/g, '/') : value;
  const date = new Date(dateValue);
  if (!value || isNaN(date.getTime())) {
    return '';
  }
  const options = {
    date: dateOptions,
    time: timeOptions,
    datetime: {
      ...dateOptions,
      ...timeOptions
    }
  };
  return formatDate(date, options[display] || options['date']);
}
const DateTimeRenderType = ({
  value,
  testId = DATETIME_TYPE_TEST_ID,
  display = 'datetime'
}) => {
  const intl = useIntl();
  const formattedString = getFormattedDate(value, display, intl.formatDate);
  if (formattedString === '') {
    return /*#__PURE__*/React.createElement(React.Fragment, null);
  }
  return /*#__PURE__*/React.createElement(Text, {
    testId: testId
  }, formattedString);
};
export default DateTimeRenderType;