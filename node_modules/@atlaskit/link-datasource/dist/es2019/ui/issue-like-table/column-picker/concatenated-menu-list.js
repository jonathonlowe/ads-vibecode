/* concatenated-menu-list.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import "./concatenated-menu-list.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { FormattedMessage } from 'react-intl-next';
import { CheckboxOption, components } from '@atlaskit/select';
import { fontFallback } from '@atlaskit/theme/typography';
import { columnPickerMessages } from './messages';
export const SELECT_ITEMS_MAXIMUM_THRESHOLD = 200;
const messageStyles = null;
const listItemStylesSelected = null;
const listItemStyles = null;
export const ConcatenatedMenuList = ({
  children,
  ...props
}) => {
  const shouldUseDefaultMenuList = !children || !Array.isArray(children) || children.length <= SELECT_ITEMS_MAXIMUM_THRESHOLD;
  if (shouldUseDefaultMenuList) {
    return /*#__PURE__*/React.createElement(components.MenuList, props, children);
  }
  const optionStyle = {
    padding: `${"var(--ds-space-050, 4px)"} ${"var(--ds-space-200, 16px)"}`,
    height: 'auto'
  };
  const maximumLimitReachedMessage = /*#__PURE__*/React.createElement("div", {
    style: optionStyle,
    className: ax(["_11c81o8v _syaz1gjq _k48pi7a9"])
  }, /*#__PURE__*/React.createElement(FormattedMessage, _extends({
    tagName: 'div'
  }, columnPickerMessages.maximumItemsShownLine1)), /*#__PURE__*/React.createElement(FormattedMessage, _extends({
    tagName: 'div'
  }, columnPickerMessages.maximumItemsShownLine2)));
  return /*#__PURE__*/React.createElement(components.MenuList, props, children.slice(0, SELECT_ITEMS_MAXIMUM_THRESHOLD), maximumLimitReachedMessage);
};
export const MenuItem = ({
  children,
  ...props
}) => {
  return /*#__PURE__*/React.createElement(CheckboxOption, _extends({}, props, {
    className: ax([props.isSelected ? "_bfhkfg4m _16qsglyw _irr3i1yw _1di619ru" : "_16qsglyw _irr315ej _1di6ip91"])
  }), children);
};