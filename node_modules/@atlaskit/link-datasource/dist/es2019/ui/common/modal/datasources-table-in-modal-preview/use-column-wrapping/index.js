import { useCallback, useState } from 'react';
export const useColumnWrapping = (initialWrappedColumnKeys = []) => {
  const [wrappedColumnKeys, setWrappedColumnKeys] = useState(initialWrappedColumnKeys);
  const onWrappedColumnChange = useCallback((key, isWrapped) => {
    const set = new Set(wrappedColumnKeys);
    if (isWrapped) {
      set.add(key);
    } else {
      set.delete(key);
    }
    setWrappedColumnKeys(Array.from(set));
  }, [wrappedColumnKeys]);
  return {
    wrappedColumnKeys,
    onWrappedColumnChange
  };
};