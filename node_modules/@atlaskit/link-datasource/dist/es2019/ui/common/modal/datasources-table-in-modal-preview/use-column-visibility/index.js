import { useCallback, useEffect, useRef } from 'react';
import { useUserInteractions } from '../../../../../contexts/user-interactions';
import { getColumnAction } from '../../../../issue-like-table/utils';
export const useColumnVisibility = ({
  visibleColumnKeys,
  setVisibleColumnKeys,
  defaultVisibleColumnKeys,
  initialVisibleColumnKeys
}) => {
  const userInteractions = useUserInteractions();
  const visibleColumnCount = useRef((visibleColumnKeys === null || visibleColumnKeys === void 0 ? void 0 : visibleColumnKeys.length) || 0);
  useEffect(() => {
    const newVisibleColumnKeys = !initialVisibleColumnKeys || (initialVisibleColumnKeys || []).length === 0 ? defaultVisibleColumnKeys : initialVisibleColumnKeys;
    visibleColumnCount.current = newVisibleColumnKeys.length;
    setVisibleColumnKeys(newVisibleColumnKeys);
  }, [initialVisibleColumnKeys, setVisibleColumnKeys, defaultVisibleColumnKeys]);
  const onVisibleColumnKeysChange = useCallback((newVisibleColumnKeys = []) => {
    const columnAction = getColumnAction(visibleColumnKeys || [], newVisibleColumnKeys);
    userInteractions.add(columnAction);
    visibleColumnCount.current = newVisibleColumnKeys.length;
    setVisibleColumnKeys(newVisibleColumnKeys);
  }, [visibleColumnKeys, setVisibleColumnKeys, userInteractions]);
  return {
    onVisibleColumnKeysChange,
    visibleColumnCount
  };
};