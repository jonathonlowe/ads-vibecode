import React, { createContext, useContext, useMemo, useState } from 'react';
const ViewModeContext = /*#__PURE__*/createContext(null);
export const DatasourceViewModeProvider = ({
  viewMode: initialViewMode,
  disableDisplayDropdown,
  children
}) => {
  const [currentViewMode, setCurrentViewMode] = useState(initialViewMode);
  const value = useMemo(() => ({
    currentViewMode,
    setCurrentViewMode,
    disableDisplayDropdown
  }), [currentViewMode, setCurrentViewMode, disableDisplayDropdown]);
  return /*#__PURE__*/React.createElement(ViewModeContext.Provider, {
    value: value
  }, children);
};
export const useViewModeContext = () => {
  const value = useContext(ViewModeContext);
  if (!value) {
    throw new Error('useViewModeContext must be called within DatasourceViewModeProvider');
  }
  return value;
};