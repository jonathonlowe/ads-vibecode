/* selectMessage.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./selectMessage.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
import React from 'react';
import { FormattedMessage } from 'react-intl-next';
import Heading from '@atlaskit/heading';
import { fg } from '@atlaskit/platform-feature-flags';
import { Flex, Stack, Text } from '@atlaskit/primitives/compiled';
const styles = {
  boxStylesOld: "_4t3ivbgk _otyrpxbi",
  boxStyles: "_4t3i16xz",
  stackStylesOld: "_ca0qu2gc _n3tdu2gc _19bvutpp _u5f3utpp",
  stackStyles: "_zulppxbi _ca0q1jfw _n3td1jfw _19bvoahv _u5f3oahv _y3gn1h6o"
};
const CustomSelectMessage = ({
  icon,
  message,
  description,
  testId
}) => {
  if (fg('platform-linking-visual-refresh-sllv')) {
    return /*#__PURE__*/React.createElement(Stack, {
      xcss: styles.stackStyles,
      testId: testId,
      alignInline: "center"
    }, /*#__PURE__*/React.createElement(Flex, {
      xcss: styles.boxStyles,
      alignItems: "center",
      justifyContent: "center"
    }, icon), /*#__PURE__*/React.createElement(Heading, {
      size: "small"
    }, /*#__PURE__*/React.createElement(FormattedMessage, message)), description && /*#__PURE__*/React.createElement(Text, {
      size: "medium"
    }, /*#__PURE__*/React.createElement(FormattedMessage, description)));
  }
  return /*#__PURE__*/React.createElement(Stack, {
    xcss: styles.stackStylesOld,
    testId: testId,
    alignInline: "center"
  }, /*#__PURE__*/React.createElement(Flex, {
    xcss: styles.boxStylesOld,
    alignItems: "center",
    justifyContent: "center"
  }, icon), /*#__PURE__*/React.createElement(Heading, {
    size: "xsmall"
  }, /*#__PURE__*/React.createElement(FormattedMessage, message)));
};
export default CustomSelectMessage;