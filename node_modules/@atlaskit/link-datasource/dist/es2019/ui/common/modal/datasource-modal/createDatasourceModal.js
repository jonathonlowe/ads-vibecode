import React from 'react';
import { AnalyticsContext } from '@atlaskit/analytics-next';
import { DatasourceExperienceIdProvider } from '../../../../contexts/datasource-experience-id';
import { UserInteractionsProvider } from '../../../../contexts/user-interactions';
import { DatasourceContextProvider } from '../datasource-context';
import { DatasourceViewModeProvider } from '../mode-switcher/useViewModeContext';
const DEFAULT_VIEW_MODE = 'table';
export const createDatasourceModal = ({
  isValidParameters,
  dataProvider,
  component: ModalContent
}) => {
  return props => {
    const {
      datasourceId,
      visibleColumnKeys,
      columnCustomSizes,
      wrappedColumnKeys,
      parameters,
      onInsert,
      viewMode,
      disableDisplayDropdown
    } = props;
    return /*#__PURE__*/React.createElement(AnalyticsContext, {
      data: {
        source: 'datasourceConfigModal',
        component: 'datasourceConfigModal',
        attributes: {
          dataProvider
        }
      }
    }, /*#__PURE__*/React.createElement(DatasourceExperienceIdProvider, null, /*#__PURE__*/React.createElement(UserInteractionsProvider, null, /*#__PURE__*/React.createElement(DatasourceContextProvider, {
      datasourceId: datasourceId,
      initialVisibleColumnKeys: visibleColumnKeys,
      initialColumnCustomSizes: columnCustomSizes,
      initialWrappedColumnKeys: wrappedColumnKeys,
      initialParameters: parameters,
      isValidParameters: isValidParameters,
      onInsert: onInsert
    }, /*#__PURE__*/React.createElement(DatasourceViewModeProvider, {
      viewMode: viewMode !== null && viewMode !== void 0 ? viewMode : DEFAULT_VIEW_MODE,
      disableDisplayDropdown: disableDisplayDropdown || false
    }, /*#__PURE__*/React.createElement(ModalContent, props))))));
  };
};