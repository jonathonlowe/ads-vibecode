/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./index.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
import React from 'react';
import { cx } from '@compiled/react';
import { fg } from '@atlaskit/platform-feature-flags';
import { Box, Flex } from '@atlaskit/primitives/compiled';
import { components } from '@atlaskit/select';
import Spinner from '@atlaskit/spinner';
import CustomErrorMessage from './errorMessage';
import CustomDropdownLoadingMessage from './loadingMessage';
import CustomNoOptionsMessage from './noOptionsMessage';
import ShowMoreButton from './showMoreButton';
const styles = {
  inlineSpinnerStyles: "_ca0q12x7",
  showMoreButtonBoxStylesOld: "_19bv12x7 _ca0qu2gc",
  showMoreButtonBoxStyles: "_ca0qu2gc _u5f3u2gc _n3tdu2gc _19bvpxbi"
};
const CustomMenuList = ({
  children,
  ...props
}) => {
  const {
    filterName,
    isLoading,
    isLoadingMore,
    isError,
    isEmpty,
    errors,
    showMore,
    handleShowMore
  } =
  // @ts-ignore - https://product-fabric.atlassian.net/browse/DSP-21000
  props.selectProps.menuListProps;
  const shouldDisplayShowMore = showMore && !isLoadingMore;
  const isLoadingMoreData = !shouldDisplayShowMore && isLoadingMore;
  const InlineSpinner = () => /*#__PURE__*/React.createElement(Flex, {
    justifyContent: "center",
    xcss: styles.inlineSpinnerStyles
  }, /*#__PURE__*/React.createElement(Spinner, {
    size: "medium"
  }));
  const renderChildren = () => {
    if (isLoading) {
      return /*#__PURE__*/React.createElement(CustomDropdownLoadingMessage, {
        filterName: filterName
      });
    }
    if (isError) {
      return /*#__PURE__*/React.createElement(CustomErrorMessage, {
        filterName: filterName,
        errors: errors
      });
    }
    if (isEmpty) {
      return /*#__PURE__*/React.createElement(CustomNoOptionsMessage, {
        filterName: filterName
      });
    }
    return /*#__PURE__*/React.createElement(React.Fragment, null, children, shouldDisplayShowMore && handleShowMore && /*#__PURE__*/React.createElement(Box, {
      xcss: cx(fg('platform-linking-visual-refresh-sllv') ? styles.showMoreButtonBoxStyles : styles.showMoreButtonBoxStylesOld)
    }, /*#__PURE__*/React.createElement(ShowMoreButton, {
      onShowMore: handleShowMore,
      filterName: filterName
    })), isLoadingMoreData && /*#__PURE__*/React.createElement(InlineSpinner, null));
  };
  return /*#__PURE__*/React.createElement(components.MenuList, props, renderChildren());
};
export default CustomMenuList;