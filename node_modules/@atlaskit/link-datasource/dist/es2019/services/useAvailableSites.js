import { useEffect, useMemo, useState } from 'react';
import { getAvailableSites } from './getAvailableSites';
export const useAvailableSites = (product, cloudId) => {
  const [availableSites, setAvailableSites] = useState(undefined);
  useEffect(() => {
    const fetchSiteDisplayNames = async () => {
      const sites = await getAvailableSites(product);
      const sortedAvailableSites = [...sites].sort((a, b) => a.displayName.localeCompare(b.displayName));
      setAvailableSites(sortedAvailableSites);
    };
    void fetchSiteDisplayNames();
  }, [product]);
  const selectedSite = useMemo(() => {
    if (cloudId) {
      return availableSites === null || availableSites === void 0 ? void 0 : availableSites.find(site => site.cloudId === cloudId);
    }
    let currentlyLoggedInSiteUrl;
    if (typeof window.location !== 'undefined') {
      currentlyLoggedInSiteUrl = window.location.origin;
    }
    return (availableSites === null || availableSites === void 0 ? void 0 : availableSites.find(site => site.url === currentlyLoggedInSiteUrl)) || (availableSites === null || availableSites === void 0 ? void 0 : availableSites[0]);
  }, [availableSites, cloudId]);
  return {
    availableSites,
    selectedSite
  };
};