import { ConcurrentExperience, ExperiencePerformanceTypes, ExperienceTypes } from '@atlaskit/ufo';
const datasourcePageSegmentLoadExperienceConfig = {
  platform: {
    component: 'datasource'
  },
  type: ExperienceTypes.Load,
  performanceType: ExperiencePerformanceTypes.PageSegmentLoad
};
const columnPickerCustomExperienceConfig = {
  platform: {
    component: 'datasource'
  },
  type: ExperienceTypes.Operation,
  performanceType: ExperiencePerformanceTypes.Custom
};
const inlineEditCustomExperienceConfig = {
  platform: {
    component: 'datasource'
  },
  type: ExperienceTypes.Load,
  performanceType: ExperiencePerformanceTypes.InlineResult
};
const ufoExperiences = {
  'datasource-rendered': new ConcurrentExperience('datasource-rendered', datasourcePageSegmentLoadExperienceConfig),
  'column-picker-rendered': new ConcurrentExperience('column-picker-rendered', columnPickerCustomExperienceConfig),
  'inline-edit-rendered': new ConcurrentExperience('inline-edit-rendered', inlineEditCustomExperienceConfig)
};
export const startUfoExperience = ({
  name,
  metadata
}, id) => {
  const experienceInstance = ufoExperiences[name].getInstance(id);
  experienceInstance.start();
  if (metadata) {
    experienceInstance.addMetadata(metadata);
  }
};
export const succeedUfoExperience = ({
  name,
  metadata
}, id) => {
  const experienceInstance = ufoExperiences[name].getInstance(id);
  experienceInstance.success({
    metadata
  });
};
export const failUfoExperience = ({
  name,
  metadata
}, id) => {
  const experienceInstance = ufoExperiences[name].getInstance(id);
  experienceInstance.failure({
    metadata
  });
};
export const addMetadataToExperience = ({
  name,
  metadata
}, id) => {
  ufoExperiences[name].getInstance(id).addMetadata(metadata);
};