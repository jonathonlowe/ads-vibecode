import React, { useContext, useMemo } from 'react';
import { v4 as uuidv4 } from 'uuid';
const DatasourceExperienceIdContext = /*#__PURE__*/React.createContext(undefined);
const DatasourceExperienceIdProvider = ({
  children
}) => {
  const value = useMemo(() => uuidv4(), []);
  return /*#__PURE__*/React.createElement(DatasourceExperienceIdContext.Provider, {
    value: value
  }, children);
};
const useDatasourceExperienceId = () => {
  const context = useContext(DatasourceExperienceIdContext);
  if (!context) {
    throw Error('useDatasourceExperienceId() must be wrapped in <DatasourceExperienceIdProvider>');
  }
  return context;
};
export { DatasourceExperienceIdProvider, useDatasourceExperienceId };