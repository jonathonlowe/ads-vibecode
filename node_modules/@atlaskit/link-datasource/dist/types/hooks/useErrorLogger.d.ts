import { type DatasourceOperationFailedAttributesType } from '../analytics/generated/analytics.types';
/**
 * This function is just a wrapper around captureException that checks if the enable-sentry-client FF is enabled
 * and error is instanceof Error. We have to override the type of error from captureException to unknown so we use
 * a helper Tail type which removes the first element of the tuple
 */
export declare const logToSentry: (error: unknown, packageName: string, tags?: {
    [key: string]: string | number | bigint | boolean | symbol | null | undefined;
} | undefined) => void;
interface UseErrorLoggerPropsDatasource {
    datasourceId: string;
}
interface UseErrorLoggerPropsActions {
    integrationKey: string;
}
export type UseErrorLoggerProps = UseErrorLoggerPropsDatasource | UseErrorLoggerPropsActions;
declare const useErrorLogger: (loggerProps: UseErrorLoggerProps) => {
    captureError: (errorLocation: DatasourceOperationFailedAttributesType['errorLocation'], error: unknown) => void;
};
export default useErrorLogger;
