type IdleResult = {
    type: 'idle';
};
type LoadingResult = {
    type: 'loading';
};
export type ValidResult = {
    type: 'valid';
    validatedAql: string;
};
export type InvalidResult = {
    type: 'invalid';
    error: string;
};
export type AqlValidationResult = IdleResult | LoadingResult | ValidResult | InvalidResult;
export type AqlValidationResponse = {
    isValid: boolean;
    message: string | null;
};
export type UseValidateAqlTextState = {
    debouncedValidation: (value: string | undefined) => Promise<string | undefined>;
    validateAqlText: (aql: string) => Promise<'error' | undefined>;
    lastValidationResult: AqlValidationResult;
};
export declare const SEARCH_DEBOUNCE = 350;
export declare const useValidateAqlText: (workspaceId: string, initialValue: string) => UseValidateAqlTextState;
export {};
