import { type UserHydrationAGGResponse, type UserInfoAGGResponse } from '../ui/confluence-search-modal/basic-filters/types';
import { type BasicFilterFieldType, type FieldValuesResponse, type HydrateResponse } from '../ui/jira-issues-modal/basic-filters/types';
interface GetFieldValuesProps {
    cloudId: string;
    jql: string;
    jqlTerm: BasicFilterFieldType;
    searchString: string;
    pageCursor?: string;
}
export declare const useBasicFilterAGG: () => {
    getHydratedJQL: (cloudId: string, jql: string) => Promise<HydrateResponse>;
    getFieldValues: ({ cloudId, jql, jqlTerm, searchString, pageCursor }: GetFieldValuesProps) => Promise<FieldValuesResponse>;
    getCurrentUserInfo: () => Promise<UserInfoAGGResponse>;
    getUsersFromAccountIDs: (accountIds: string[]) => Promise<UserHydrationAGGResponse>;
};
export {};
