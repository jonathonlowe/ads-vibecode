import { type EventKey } from '../analytics/generated/analytics.types';
import type createEventPayload from '../analytics/generated/create-event-payload';
import { type AqlValidateResponse, type FetchObjectSchemasResponse } from '../types/assets/types';
type AnalyticsFireEvent = <K extends EventKey>(...params: Parameters<typeof createEventPayload<K>>) => void;
export declare const getWorkspaceId: (fireEvent?: AnalyticsFireEvent) => Promise<string>;
export declare const validateAql: (workspaceId: string, data: {
    qlQuery: string;
}, fireEvent?: AnalyticsFireEvent) => Promise<AqlValidateResponse>;
export declare const fetchObjectSchema: (workspaceId: string, schemaId: string, fireEvent?: AnalyticsFireEvent) => Promise<import("../types/assets/types").ObjectSchema>;
export declare const fetchObjectSchemas: (workspaceId: string, query?: string, fireEvent?: AnalyticsFireEvent) => Promise<FetchObjectSchemasResponse>;
export {};
