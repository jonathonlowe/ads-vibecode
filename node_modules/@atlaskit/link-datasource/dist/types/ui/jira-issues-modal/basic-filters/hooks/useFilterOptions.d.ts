import { type IntlShape } from 'react-intl-next';
import type { Site } from '../../../../common/types';
import { type AvatarLabelOption, type SelectOption } from '../../../common/modal/popup-select/types';
import { type BasicFilterFieldType } from '../types';
interface FilterOptionsProps {
    filterType: BasicFilterFieldType;
    site?: Site;
}
export interface FetchFilterOptionsProps {
    pageCursor?: string;
    searchString?: string;
}
export interface FilterOptionsState {
    filterOptions: SelectOption[];
    fetchFilterOptions: (prop?: FetchFilterOptionsProps) => Promise<void>;
    reset: () => void;
    totalCount: number;
    pageCursor?: string;
    status: 'empty' | 'loading' | 'resolved' | 'rejected' | 'loadingMore';
    errors: unknown[];
}
export declare const getAssigneeUnassignedFilterOption: (formatMessage: IntlShape['formatMessage']) => AvatarLabelOption;
export declare const useFilterOptions: ({ filterType, site }: FilterOptionsProps) => FilterOptionsState;
export {};
