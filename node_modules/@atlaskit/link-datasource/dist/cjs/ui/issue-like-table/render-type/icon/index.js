/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ICON_TYPE_TEXT_TEST_ID = exports.ICON_TYPE_TEST_ID = void 0;
require("./index.compiled.css");
var _react = _interopRequireWildcard(require("react"));
var _runtime = require("@compiled/react/runtime");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _compiled = require("@atlaskit/primitives/compiled");
var _text = _interopRequireDefault(require("../text"));
var _excluded = ["as", "style"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled -- To migrate as part of go/ui-styling-standard
var IconWrapper = (0, _react.forwardRef)(function (_ref, __cmplr) {
  var _ref$as = _ref.as,
    C = _ref$as === void 0 ? "div" : _ref$as,
    __cmpls = _ref.style,
    __cmplp = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return /*#__PURE__*/_react.default.createElement(C, (0, _extends2.default)({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: (0, _runtime.ax)(["_1e0c1txw _4cvr1h6o _1bah1e5h", __cmplp.className])
  }));
});
if (process.env.NODE_ENV !== 'production') {
  IconWrapper.displayName = 'IconWrapper';
}
var styles = {
  textWrapperStyles: "_1reo15vq _18m915vq _18u0u2gc _1bto1l2s _o5721q9c"
};
var ICON_TYPE_TEST_ID = exports.ICON_TYPE_TEST_ID = 'link-datasource-render-type--icon';
var ICON_TYPE_TEXT_TEST_ID = exports.ICON_TYPE_TEXT_TEST_ID = "".concat(ICON_TYPE_TEST_ID, "-text");

/**
 * @deprecated: To be cleaned up and replaced with new-icon after
 * `platform-datasources-enable-two-way-sync-priority` rollout.
 */
var IconRenderType = function IconRenderType(_ref2) {
  var _ref2$label = _ref2.label,
    label = _ref2$label === void 0 ? '' : _ref2$label,
    text = _ref2.text,
    source = _ref2.source,
    _ref2$testId = _ref2.testId,
    testId = _ref2$testId === void 0 ? ICON_TYPE_TEST_ID : _ref2$testId;
  return /*#__PURE__*/_react.default.createElement(IconWrapper, null, /*#__PURE__*/_react.default.createElement("img", {
    src: source,
    alt: label,
    "data-testid": testId
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    ,
    style: {
      minWidth: '20px',
      maxWidth: '20px'
    } // having just width: '20px' shrinks it when table width is reduced
  }), text && /*#__PURE__*/_react.default.createElement(_compiled.Box, {
    xcss: styles.textWrapperStyles
  }, /*#__PURE__*/_react.default.createElement(_text.default, {
    testId: ICON_TYPE_TEXT_TEST_ID,
    text: text
  })));
};
var _default = exports.default = IconRenderType;