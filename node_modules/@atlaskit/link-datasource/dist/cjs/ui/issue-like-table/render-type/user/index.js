/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.USER_TYPE_TEST_ID = void 0;
require("./index.compiled.css");
var _react = _interopRequireWildcard(require("react"));
var _runtime = require("@compiled/react/runtime");
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _reactIntlNext = require("react-intl-next");
var _avatar = _interopRequireDefault(require("@atlaskit/avatar"));
var _avatarGroup = _interopRequireDefault(require("@atlaskit/avatar-group"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _compiled = require("@atlaskit/primitives/compiled");
var _widthDetector = require("@atlaskit/width-detector");
var _messages = require("./messages");
var _excluded = ["as", "style"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var styles = {
  userWrapperStyles: "_11c82smr _1e0c1txw _4cvr1h6o",
  avatarWrapperStyles: "_2hwxu2gc",
  widthObserverWrapperStyles: "_kqswh2mm"
};
var labelWrapperStyles = null;

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled -- To migrate as part of go/ui-styling-standard
var AvatarGroupWrapperStyles = (0, _react.forwardRef)(function (_ref, __cmplr) {
  var _ref$as = _ref.as,
    C = _ref$as === void 0 ? "div" : _ref$as,
    __cmpls = _ref.style,
    __cmplp = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return /*#__PURE__*/_react.default.createElement(C, (0, _extends2.default)({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: (0, _runtime.ax)(["_k7zygrf3", __cmplp.className])
  }));
});
if (process.env.NODE_ENV !== 'production') {
  AvatarGroupWrapperStyles.displayName = 'AvatarGroupWrapperStyles';
}
var getMaxUserCount = function getMaxUserCount(userCount, availableWidth) {
  if (availableWidth <= 28) {
    // If width is less than or equal to 28px, we should only display the user count
    return 1;
  }
  var defaultMaxCount = 5;
  var usersNumFitToAvailableWidth = Math.ceil((availableWidth - 28) / 20);
  return usersNumFitToAvailableWidth > defaultMaxCount ? defaultMaxCount : usersNumFitToAvailableWidth;
};
var USER_TYPE_TEST_ID = exports.USER_TYPE_TEST_ID = 'link-datasource-render-type--user';
var UserType = function UserType(_ref2) {
  var users = _ref2.users;
  var _useState = (0, _react.useState)(null),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    width = _useState2[0],
    setWidth = _useState2[1];
  var multipleUsers = false;
  if ((0, _platformFeatureFlags.fg)('platform-datasources-enable-two-way-sync-assignee')) {
    multipleUsers = users.length === 1;
  } else {
    multipleUsers = users.length <= 1;
  }
  if (multipleUsers) {
    var _ref3 = users[0] || {},
      avatarSource = _ref3.avatarSource,
      _ref3$avatarSize = _ref3.avatarSize,
      avatarSize = _ref3$avatarSize === void 0 ? 'small' : _ref3$avatarSize,
      displayName = _ref3.displayName,
      _ref3$testId = _ref3.testId,
      testId = _ref3$testId === void 0 ? USER_TYPE_TEST_ID : _ref3$testId,
      children = _ref3.children;
    return /*#__PURE__*/_react.default.createElement(_compiled.Box, {
      xcss: styles.userWrapperStyles,
      testId: testId
    }, /*#__PURE__*/_react.default.createElement(_compiled.Box, {
      xcss: styles.avatarWrapperStyles
    }, /*#__PURE__*/_react.default.createElement(_avatar.default, {
      appearance: "circle",
      size: avatarSize || 'small',
      src: avatarSource,
      testId: "".concat(testId, "--avatar")
    })), /*#__PURE__*/_react.default.createElement("span", {
      className: (0, _runtime.ax)(["_1reo15vq _18m915vq _1bto1l2s _o5721q9c"])
    }, children || displayName || /*#__PURE__*/_react.default.createElement(_reactIntlNext.FormattedMessage, _messages.userTypeMessages.userDefaultdisplayNameValue)));
  } else {
    var maxCount = width !== null ? getMaxUserCount(users.length, width) : 5;
    var data = users.filter(function (user) {
      return !!user.displayName;
    }).map(function (_ref4) {
      var atlassianUserId = _ref4.atlassianUserId,
        displayName = _ref4.displayName,
        avatarSource = _ref4.avatarSource,
        testId = _ref4.testId;
      return {
        key: atlassianUserId,
        name: displayName,
        src: avatarSource,
        testId: "".concat(testId, "--avatar")
      };
    });
    return /*#__PURE__*/_react.default.createElement(AvatarGroupWrapperStyles, null, /*#__PURE__*/_react.default.createElement(_compiled.Box, {
      xcss: styles.widthObserverWrapperStyles
    }, /*#__PURE__*/_react.default.createElement(_widthDetector.WidthObserver, {
      setWidth: setWidth
    })), /*#__PURE__*/_react.default.createElement(_avatarGroup.default, {
      data: data,
      maxCount: maxCount,
      size: "small",
      isTooltipDisabled: true,
      testId: USER_TYPE_TEST_ID
    }));
  }
};
var _default = exports.default = UserType;