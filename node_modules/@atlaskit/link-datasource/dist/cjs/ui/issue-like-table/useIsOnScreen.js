"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useIsOnScreen = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
// Hook which tracks if a ref is visible or not. Taken from: https://stackoverflow.com/a/65008608
var useIsOnScreen = exports.useIsOnScreen = function useIsOnScreen(el) {
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    isIntersecting = _useState2[0],
    setIntersecting = _useState2[1];
  var observer = (0, _react.useMemo)(function () {
    return new IntersectionObserver(function (_ref) {
      var _ref2 = (0, _slicedToArray2.default)(_ref, 1),
        entry = _ref2[0];
      return setIntersecting(entry.isIntersecting);
    });
  }, []);
  (0, _react.useEffect)(function () {
    el && observer.observe(el);
    return function () {
      setIntersecting(false);
      return observer.disconnect();
    };
  }, [observer, el]);
  return isIntersecting;
};