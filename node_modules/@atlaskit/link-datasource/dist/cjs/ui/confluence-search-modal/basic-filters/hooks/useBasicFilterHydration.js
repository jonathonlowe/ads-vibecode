"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useBasicFilterHydration = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _useBasicFilterAGG2 = require("../../../../services/useBasicFilterAGG");
var useBasicFilterHydration = exports.useBasicFilterHydration = function useBasicFilterHydration() {
  var _useState = (0, _react.useState)('empty'),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    status = _useState2[0],
    setStatus = _useState2[1];
  var _useBasicFilterAGG = (0, _useBasicFilterAGG2.useBasicFilterAGG)(),
    getUsersFromAccountIDs = _useBasicFilterAGG.getUsersFromAccountIDs;
  var _useState3 = (0, _react.useState)([]),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    users = _useState4[0],
    setUsers = _useState4[1];
  var convertUserHydrationResponseToFilterOptions = function convertUserHydrationResponseToFilterOptions(response) {
    var _response$data, _response$data2;
    if (!((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.users)) {
      return [];
    }
    return (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.users.map(function (item) {
      return {
        optionType: 'avatarLabel',
        label: item.name,
        value: item.accountId,
        avatar: item.picture
      };
    });
  };
  var hydrateUsersFromAccountIds = (0, _react.useCallback)( /*#__PURE__*/function () {
    var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(accountIds) {
      var response;
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            setStatus('loading');
            _context.next = 4;
            return getUsersFromAccountIDs(accountIds);
          case 4:
            response = _context.sent;
            if (!(response.errors && response.errors.length > 0)) {
              _context.next = 7;
              break;
            }
            throw new Error(JSON.stringify(response.errors));
          case 7:
            setUsers(convertUserHydrationResponseToFilterOptions(response));
            setStatus('resolved');
            _context.next = 14;
            break;
          case 11:
            _context.prev = 11;
            _context.t0 = _context["catch"](0);
            setStatus('rejected');
          case 14:
          case "end":
            return _context.stop();
        }
      }, _callee, null, [[0, 11]]);
    }));
    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }(), [getUsersFromAccountIDs]);
  var reset = (0, _react.useCallback)(function () {
    setStatus('empty');
    setUsers([]);
  }, []);
  return {
    hydrateUsersFromAccountIds: hydrateUsersFromAccountIds,
    status: status,
    users: users,
    reset: reset
  };
};