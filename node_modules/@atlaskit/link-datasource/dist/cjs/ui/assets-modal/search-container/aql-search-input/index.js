/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AqlSearchInput = void 0;
require("./index.compiled.css");
var _react = _interopRequireWildcard(require("react"));
var React = _react;
var _runtime = require("@compiled/react/runtime");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _reactIntlNext = require("react-intl-next");
var _button = require("@atlaskit/button");
var _form = require("@atlaskit/form");
var _crossCircle = _interopRequireDefault(require("@atlaskit/icon/core/migration/cross-circle"));
var _questionCircle = _interopRequireDefault(require("@atlaskit/icon/core/migration/question-circle"));
var _searchEditorSearch = _interopRequireDefault(require("@atlaskit/icon/core/migration/search--editor-search"));
var _successCheckCircle = _interopRequireDefault(require("@atlaskit/icon/core/migration/success--check-circle"));
var _spinner = _interopRequireDefault(require("@atlaskit/spinner"));
var _textfield = _interopRequireDefault(require("@atlaskit/textfield"));
var _colors = require("@atlaskit/theme/colors");
var _tooltip = _interopRequireDefault(require("@atlaskit/tooltip"));
var _useValidateAqlText2 = require("../../../../hooks/useValidateAqlText");
var _types = require("../../../../types/assets/types");
var _messages = require("./messages");
var _excluded = ["as", "style"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled
var FieldContainer = (0, _react.forwardRef)(function (_ref, __cmplr) {
  var _ref$as = _ref.as,
    C = _ref$as === void 0 ? "div" : _ref$as,
    __cmpls = _ref.style,
    __cmplp = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return /*#__PURE__*/React.createElement(C, (0, _extends2.default)({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: (0, _runtime.ax)(["_16jlkb7n _1o9zkb7n _i0dlf1ug _19pkx0bf", __cmplp.className])
  }));
});
if (process.env.NODE_ENV !== 'production') {
  FieldContainer.displayName = 'FieldContainer';
}
var buttonBaseStyles = null;
var AQLSupportDocumentLink = 'https://support.atlassian.com/jira-service-management-cloud/docs/use-assets-query-language-aql/';
var searchButtonStyles = null;
var renderValidatorIcon = function renderValidatorIcon(lastValidationResult) {
  if (lastValidationResult.type === 'loading') {
    return /*#__PURE__*/React.createElement(_spinner.default, {
      size: "medium",
      testId: "assets-datasource-modal--aql-validating"
    });
  }
  if (lastValidationResult.type === 'invalid') {
    return /*#__PURE__*/React.createElement(_crossCircle.default, {
      label: "label",
      color: "var(--ds-icon-danger, ".concat(_colors.R400, ")"),
      LEGACY_size: "medium",
      testId: "assets-datasource-modal--aql-invalid",
      spacing: "spacious"
    });
  }
  if (lastValidationResult.type === 'valid') {
    return /*#__PURE__*/React.createElement(_successCheckCircle.default, {
      label: "label",
      color: "var(--ds-icon-success, ".concat(_colors.G300, ")"),
      LEGACY_size: "medium",
      testId: "assets-datasource-modal--aql-valid",
      spacing: "spacious"
    });
  }
  return /*#__PURE__*/React.createElement(_searchEditorSearch.default, {
    label: "label",
    LEGACY_size: "medium",
    testId: "assets-datasource-modal--aql-idle",
    color: "currentColor",
    spacing: "spacious"
  });
};
var AqlSearchInput = exports.AqlSearchInput = function AqlSearchInput(_ref2) {
  var value = _ref2.value,
    workspaceId = _ref2.workspaceId,
    _ref2$testId = _ref2.testId,
    testId = _ref2$testId === void 0 ? 'assets-datasource-modal--aql-search-input' : _ref2$testId,
    isSearching = _ref2.isSearching;
  var _useIntl = (0, _reactIntlNext.useIntl)(),
    formatMessage = _useIntl.formatMessage;
  var _useValidateAqlText = (0, _useValidateAqlText2.useValidateAqlText)(workspaceId, value),
    debouncedValidation = _useValidateAqlText.debouncedValidation,
    lastValidationResult = _useValidateAqlText.lastValidationResult;
  return /*#__PURE__*/React.createElement(FieldContainer, null, /*#__PURE__*/React.createElement(_form.Field, {
    name: _types.aqlKey,
    defaultValue: value,
    validate: debouncedValidation
  }, function (_ref3) {
    var fieldProps = _ref3.fieldProps;
    return /*#__PURE__*/React.createElement(_react.Fragment, null, /*#__PURE__*/React.createElement(_textfield.default, (0, _extends2.default)({}, fieldProps, {
      elemBeforeInput: /*#__PURE__*/React.createElement("span", {
        // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
        style: {
          paddingLeft: "var(--ds-space-075, 6px)",
          width: 24,
          display: 'flex'
        }
      }, renderValidatorIcon(lastValidationResult)),
      elemAfterInput: /*#__PURE__*/React.createElement(_react.Fragment, null, /*#__PURE__*/React.createElement(_tooltip.default, {
        content: formatMessage(_messages.searchInputMessages.helpTooltipText),
        position: "bottom"
      }, /*#__PURE__*/React.createElement("a", {
        href: AQLSupportDocumentLink,
        target: "_blank",
        className: (0, _runtime.ax)(["_1e0c1txw _4t3i1osq _kqswh2mm _4cvr1h6o _1bah1h6o _2lx21bp4 _2hwx1f3t"])
      }, /*#__PURE__*/React.createElement(_questionCircle.default, {
        label: "label",
        color: "var(--ds-icon, ".concat(_colors.N500, ")"),
        LEGACY_size: "medium",
        testId: "assets-datasource-modal-help",
        spacing: "spacious"
      }))), /*#__PURE__*/React.createElement(_button.LoadingButton, {
        appearance: "primary",
        iconBefore: /*#__PURE__*/React.createElement(_searchEditorSearch.default, {
          label: formatMessage(_messages.searchInputMessages.placeholder),
          LEGACY_size: "medium",
          color: "currentColor",
          spacing: "spacious"
        }),
        isLoading: isSearching,
        spacing: "none",
        testId: "assets-datasource-modal--aql-search-button",
        type: "submit",
        isDisabled: lastValidationResult.type !== 'valid',
        className: (0, _runtime.ax)(["_2hwx12x7"])
      })),
      placeholder: formatMessage(_messages.searchInputMessages.placeholder),
      testId: testId
    })), lastValidationResult.type === 'invalid' && lastValidationResult.error && /*#__PURE__*/React.createElement(_form.ErrorMessage, null, lastValidationResult.error));
  }));
};