/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.selectInAModalStyleFixProps = exports.SEARCH_DEBOUNCE_MS = exports.AssetsObjectSchemaSelect = void 0;
require("./index.compiled.css");
var _react = _interopRequireWildcard(require("react"));
var React = _react;
var _runtime = require("@compiled/react/runtime");
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _debouncePromise = _interopRequireDefault(require("debounce-promise"));
var _reactIntlNext = require("react-intl-next");
var _new = _interopRequireDefault(require("@atlaskit/button/new"));
var _form = require("@atlaskit/form");
var _chevronDown = _interopRequireDefault(require("@atlaskit/icon/utility/chevron-down"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _select = require("@atlaskit/select");
var _constants = require("@atlaskit/theme/constants");
var _useObjectSchemas2 = require("../../../../hooks/useObjectSchemas");
var _types = require("../../../../types/assets/types");
var _messages = require("./messages");
var _utils = require("./utils");
var _excluded = ["as", "style"],
  _excluded2 = ["onChange", "onFocus"],
  _excluded3 = ["isOpen"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled
var FieldContainer = (0, _react.forwardRef)(function (_ref, __cmplr) {
  var _ref$as = _ref.as,
    C = _ref$as === void 0 ? "div" : _ref$as,
    __cmpls = _ref.style,
    __cmplp = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return /*#__PURE__*/React.createElement(C, (0, _extends2.default)({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: (0, _runtime.ax)(["_16jlkb7n _1o9zkb7n _i0dlf1ug _19pkx0bf", __cmplp.className])
  }));
});
if (process.env.NODE_ENV !== 'production') {
  FieldContainer.displayName = 'FieldContainer';
}
var SEARCH_DEBOUNCE_MS = exports.SEARCH_DEBOUNCE_MS = 350;
var mapObjectSchemasToOptions = function mapObjectSchemasToOptions(objectSchemas) {
  return objectSchemas ? objectSchemas.map(function (objectSchema) {
    return (0, _utils.objectSchemaToSelectOption)(objectSchema);
  }) : [];
};

/**
 * Rendering a `<Select>` in a `<Modal>` results in the select options getting cut off by the bottom of the modal and
 * scrolling. This is a work-around for that, see https://atlassian.slack.com/archives/CFJ9DU39U/p1623179496484100
 */
var selectInAModalStyleFixProps = exports.selectInAModalStyleFixProps = {
  styles: {
    menuPortal: function menuPortal(base) {
      return _objectSpread(_objectSpread({}, base), {}, {
        zIndex: _constants.layers.modal()
      });
    }
  },
  menuPortalTarget: document.body
};
var AssetsObjectSchemaSelect = exports.AssetsObjectSchemaSelect = function AssetsObjectSchemaSelect(_ref2) {
  var value = _ref2.value,
    workspaceId = _ref2.workspaceId,
    initialObjectSchemas = _ref2.initialObjectSchemas,
    _ref2$classNamePrefix = _ref2.classNamePrefix,
    classNamePrefix = _ref2$classNamePrefix === void 0 ? 'assets-datasource-modal--object-schema-select' : _ref2$classNamePrefix;
  var _useIntl = (0, _reactIntlNext.useIntl)(),
    formatMessage = _useIntl.formatMessage;
  var _useObjectSchemas = (0, _useObjectSchemas2.useObjectSchemas)(workspaceId),
    fetchObjectSchemas = _useObjectSchemas.fetchObjectSchemas,
    objectSchemasLoading = _useObjectSchemas.objectSchemasLoading;
  var selectedObjectSchema = value ? (0, _utils.objectSchemaToSelectOption)(value) : undefined;
  var loadOptions = /*#__PURE__*/function () {
    var _ref3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(inputValue) {
      var _yield$fetchObjectSch, objectSchemas;
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return fetchObjectSchemas(inputValue);
          case 2:
            _yield$fetchObjectSch = _context.sent;
            objectSchemas = _yield$fetchObjectSch.objectSchemas;
            return _context.abrupt("return", mapObjectSchemasToOptions(objectSchemas));
          case 5:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function loadOptions(_x) {
      return _ref3.apply(this, arguments);
    };
  }();
  var debouncedLoadOptions = (0, _debouncePromise.default)(loadOptions, SEARCH_DEBOUNCE_MS);
  var validateSchema = function validateSchema(value) {
    if (!value || !value.value) {
      return formatMessage(_messages.objectSchemaSelectMessages.schemaRequired);
    }
    return undefined;
  };
  return /*#__PURE__*/React.createElement(FieldContainer, null, /*#__PURE__*/React.createElement(_form.Field, {
    name: _types.objectSchemaKey,
    defaultValue: selectedObjectSchema,
    validate: function validate(value) {
      return validateSchema(value);
    }
  }, function (_ref4) {
    var _ref4$fieldProps = _ref4.fieldProps,
      _onChange = _ref4$fieldProps.onChange,
      onFocus = _ref4$fieldProps.onFocus,
      restFieldProps = (0, _objectWithoutProperties2.default)(_ref4$fieldProps, _excluded2);
    return (0, _platformFeatureFlags.fg)('platform-linking-visual-refresh-sllv') ? /*#__PURE__*/React.createElement(_select.PopupSelect, (0, _extends2.default)({
      autoFocus: true,
      maxMenuWidth: 300,
      minMenuWidth: 300,
      isLoading: objectSchemasLoading,
      options: mapObjectSchemasToOptions(initialObjectSchemas),
      placeholder: formatMessage(_messages.objectSchemaSelectMessages.placeholder),
      onChange: function onChange(newOption) {
        return newOption && _onChange(newOption);
      }
    }, restFieldProps, {
      label: formatMessage(_messages.objectSchemaSelectMessages.placeholder),
      target: function target(_ref5) {
        var _restFieldProps$value;
        var isOpen = _ref5.isOpen,
          triggerProps = (0, _objectWithoutProperties2.default)(_ref5, _excluded3);
        return /*#__PURE__*/React.createElement(_new.default, (0, _extends2.default)({}, triggerProps, {
          isSelected: isOpen,
          iconAfter: function iconAfter() {
            return /*#__PURE__*/React.createElement(_chevronDown.default, {
              label: "",
              color: "currentColor"
            });
          }
        }), ((_restFieldProps$value = restFieldProps.value) === null || _restFieldProps$value === void 0 ? void 0 : _restFieldProps$value.label) || formatMessage(_messages.objectSchemaSelectMessages.placeholder));
      }
    })) : /*#__PURE__*/React.createElement(_select.AsyncSelect, (0, _extends2.default)({
      autoFocus: true,
      classNamePrefix: classNamePrefix,
      isLoading: objectSchemasLoading,
      defaultOptions: mapObjectSchemasToOptions(initialObjectSchemas),
      isSearchable: true,
      loadOptions: debouncedLoadOptions,
      placeholder: formatMessage(_messages.objectSchemaSelectMessages.placeholder),
      onChange: function onChange(newOption) {
        return newOption && _onChange(newOption);
      }
    }, selectInAModalStyleFixProps, restFieldProps, {
      label: formatMessage(_messages.objectSchemaSelectMessages.placeholder)
    }));
  }));
};