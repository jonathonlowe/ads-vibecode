/* no-instances.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NoInstancesView = void 0;
require("./no-instances.compiled.css");
var React = _interopRequireWildcard(require("react"));
var _runtime = require("@compiled/react/runtime");
var _reactIntlNext = require("react-intl-next");
var _compiled = require("@atlaskit/primitives/compiled");
var _noInstancesSvg = require("./no-instances-svg");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var styles = {
  titleStyles: "_11c8nbxd _19pkpxbi",
  descriptionStyles: "_19pku2gc",
  containerStyles: "_19pkxncg"
};
var NoInstancesView = exports.NoInstancesView = function NoInstancesView(_ref) {
  var title = _ref.title,
    description = _ref.description,
    testId = _ref.testId;
  var _useIntl = (0, _reactIntlNext.useIntl)(),
    formatMessage = _useIntl.formatMessage;
  return /*#__PURE__*/React.createElement(_compiled.Flex, {
    testId: testId,
    direction: "column",
    alignItems: "center",
    xcss: styles.containerStyles
  }, /*#__PURE__*/React.createElement(_noInstancesSvg.NoInstancesSvg, null), /*#__PURE__*/React.createElement(_compiled.Inline, {
    as: "span",
    xcss: styles.titleStyles
  }, formatMessage(title)), /*#__PURE__*/React.createElement(_compiled.Inline, {
    as: "span",
    xcss: styles.descriptionStyles
  }, formatMessage(description)));
};