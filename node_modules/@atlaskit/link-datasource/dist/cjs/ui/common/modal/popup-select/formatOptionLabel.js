/* formatOptionLabel.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
require("./formatOptionLabel.compiled.css");
var _runtime = require("@compiled/react/runtime");
var _react = _interopRequireDefault(require("react"));
var _avatar = _interopRequireDefault(require("@atlaskit/avatar"));
var _css = require("@atlaskit/css");
var _peopleGroup = _interopRequireDefault(require("@atlaskit/icon/core/migration/people-group"));
var _lozenge = _interopRequireDefault(require("@atlaskit/lozenge"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _compiled = require("@atlaskit/primitives/compiled");
var styles = {
  commonLabelStyles: "_1reo15vq _18m915vq _1bto1l2s",
  avatarOptionLabelStyles: "_18u01b66",
  groupWrapperStyles: "_1bsbgktf _1ul9gktf _4t3igktf"
};
var IconOptionLabel = function IconOptionLabel(_ref) {
  var data = _ref.data;
  var label = data.label,
    avatar = data.icon,
    value = data.value;
  var avatarOptionLabelData = {
    label: label,
    avatar: avatar,
    value: value,
    optionType: 'avatarLabel',
    isSquare: true
  };
  return /*#__PURE__*/_react.default.createElement(AvatarOptionLabel, {
    data: avatarOptionLabelData,
    testId: "basic-filter-popup-select-option--icon-label"
  });
};
var LozengeOptionLabel = function LozengeOptionLabel(_ref2) {
  var data = _ref2.data;
  return /*#__PURE__*/_react.default.createElement(_lozenge.default, {
    appearance: data.appearance,
    isBold: (0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? true : false,
    testId: "basic-filter-popup-select-option--lozenge"
  }, /*#__PURE__*/_react.default.createElement(_compiled.Box, {
    xcss: styles.commonLabelStyles
  }, data.label));
};
var AvatarOptionLabel = function AvatarOptionLabel(_ref3) {
  var data = _ref3.data,
    testId = _ref3.testId;
  return /*#__PURE__*/_react.default.createElement(_compiled.Flex, {
    alignItems: "center",
    testId: testId || 'basic-filter-popup-select-option--avatar'
  }, data.isGroup ? /*#__PURE__*/_react.default.createElement(_compiled.Flex, {
    alignItems: "center",
    justifyContent: "center",
    xcss: styles.groupWrapperStyles
  }, /*#__PURE__*/_react.default.createElement(_peopleGroup.default, {
    color: "currentColor",
    LEGACY_size: "small",
    label: ""
  })) : /*#__PURE__*/_react.default.createElement(_avatar.default, {
    appearance: data.isSquare ? 'square' : 'circle',
    src: data.avatar,
    size: "xsmall"
  }), /*#__PURE__*/_react.default.createElement(_compiled.Box, {
    xcss: (0, _css.cx)(styles.commonLabelStyles, styles.avatarOptionLabelStyles)
  }, data.label));
};
var formatOptionLabel = function formatOptionLabel(data) {
  if (data.optionType === 'lozengeLabel') {
    return /*#__PURE__*/_react.default.createElement(LozengeOptionLabel, {
      data: data
    });
  }
  if (data.optionType === 'avatarLabel') {
    return /*#__PURE__*/_react.default.createElement(AvatarOptionLabel, {
      data: data
    });
  }
  if (data.optionType === 'iconLabel') {
    return /*#__PURE__*/_react.default.createElement(IconOptionLabel, {
      data: data
    });
  }
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null);
};
var _default = exports.default = formatOptionLabel;