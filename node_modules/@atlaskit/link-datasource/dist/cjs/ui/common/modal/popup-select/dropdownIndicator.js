/* dropdownIndicator.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
require("./dropdownIndicator.compiled.css");
var _runtime = require("@compiled/react/runtime");
var _react = _interopRequireDefault(require("react"));
var _crossCircle = _interopRequireDefault(require("@atlaskit/icon/core/cross-circle"));
var _crossCircle2 = _interopRequireDefault(require("@atlaskit/icon/core/migration/cross-circle"));
var _search = _interopRequireDefault(require("@atlaskit/icon/core/migration/search"));
var _search2 = _interopRequireDefault(require("@atlaskit/icon/core/search"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _compiled = require("@atlaskit/primitives/compiled");
var _select = require("@atlaskit/select");
var styles = {
  customDropdownIndicatorStyles: "_1e0c1txw _80omtlke _1bah1h6o _1bsbzwfg"
};
var CustomDropdownIndicator = function CustomDropdownIndicator(props) {
  var selectProps = props.selectProps;
  var closeIcon = (0, _platformFeatureFlags.fg)('platform-linking-visual-refresh-sllv') ? /*#__PURE__*/_react.default.createElement(_crossCircle.default, {
    label: ""
  }) : /*#__PURE__*/_react.default.createElement(_crossCircle2.default, {
    LEGACY_size: "small",
    label: "",
    color: "currentColor"
  });
  var searchIcon = (0, _platformFeatureFlags.fg)('platform-linking-visual-refresh-sllv') ? /*#__PURE__*/_react.default.createElement(_search2.default, {
    label: ""
  }) : /*#__PURE__*/_react.default.createElement(_search.default, {
    LEGACY_size: "small",
    label: "",
    color: "currentColor"
  });
  return /*#__PURE__*/_react.default.createElement(_select.components.DropdownIndicator, props, /*#__PURE__*/_react.default.createElement(_compiled.Box, {
    xcss: styles.customDropdownIndicatorStyles,
    onClick: function onClick() {
      if (selectProps.inputValue) {
        selectProps.onInputChange && selectProps.onInputChange('', {
          action: 'input-change',
          prevInputValue: selectProps.inputValue
        });
      }
    }
  }, selectProps.inputValue ? closeIcon : searchIcon));
};
var _default = exports.default = CustomDropdownIndicator;