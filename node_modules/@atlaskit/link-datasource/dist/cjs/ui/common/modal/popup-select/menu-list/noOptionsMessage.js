"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactIntlNext = require("react-intl-next");
var _useDebounce = require("use-debounce");
var _questionCircle = _interopRequireDefault(require("@atlaskit/icon/glyph/question-circle"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _colors = require("@atlaskit/theme/colors");
var _analytics = require("../../../../../analytics");
var _searchNoResult = require("../../../../../common/ui/spot/error-state/search-no-result");
var _constants = require("../constants");
var _messages = require("./messages");
var _selectMessage = _interopRequireDefault(require("./selectMessage"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var noop = function noop() {
  return '';
};
var CustomNoOptionsMessage = function CustomNoOptionsMessage(_ref) {
  var filterName = _ref.filterName;
  var _useDatasourceAnalyti = (0, _analytics.useDatasourceAnalyticsEvents)(),
    fireEvent = _useDatasourceAnalyti.fireEvent;

  /**
   * Debounce is required because our search is debounced
   * When we type in the input box, it does not trigger a request right away. This means, if you currently having an empty result set, and you do a search,
   * there might be some react render cycles becuause of setting search input value where you could seen an empty UI condition triggered.
   * To fix this, we need to wait till the search debounce period to see if the new results are emtpy or not.
   */
  var _useDebouncedCallback = (0, _useDebounce.useDebouncedCallback)(function () {
      fireEvent('ui.emptyResult.shown.basicSearchDropdown', {
        filterName: filterName
      });
    }, _constants.SEARCH_DEBOUNCE_MS),
    _useDebouncedCallback2 = (0, _slicedToArray2.default)(_useDebouncedCallback, 1),
    debouncedAnalyticsCallback = _useDebouncedCallback2[0];
  (0, _react.useEffect)(debouncedAnalyticsCallback, [debouncedAnalyticsCallback]);
  var _ref2 = (0, _platformFeatureFlags.fg)('bandicoots-update-sllv-icons') ?
    // eslint-disable-next-line react-hooks/rules-of-hooks
    (0, _reactIntlNext.useIntl)() : {
      formatMessage: noop
    },
    formatMessage = _ref2.formatMessage;
  return /*#__PURE__*/_react.default.createElement(_selectMessage.default, {
    icon: (0, _platformFeatureFlags.fg)('bandicoots-update-sllv-icons') ? /*#__PURE__*/_react.default.createElement(_searchNoResult.SpotSearchNoResult, {
      size: (0, _platformFeatureFlags.fg)('platform-linking-visual-refresh-sllv') ? 'large' : 'medium',
      alt: formatMessage((0, _platformFeatureFlags.fg)('platform-linking-visual-refresh-sllv') ? _messages.asyncPopupSelectMessages.noOptionsMessage : _messages.asyncPopupSelectMessages.noOptionsMessageOld)
    }) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_questionCircle.default, {
      primaryColor: "var(--ds-icon, ".concat(_colors.N500, ")"),
      size: "xlarge",
      label: ""
    })),
    message: (0, _platformFeatureFlags.fg)('platform-linking-visual-refresh-sllv') ? _messages.asyncPopupSelectMessages.noOptionsMessage : _messages.asyncPopupSelectMessages.noOptionsMessageOld,
    description: (0, _platformFeatureFlags.fg)('platform-linking-visual-refresh-sllv') ? _messages.asyncPopupSelectMessages.noOptionsDescription : undefined,
    testId: "".concat(filterName, "--no-options-message")
  });
};
var _default = exports.default = CustomNoOptionsMessage;