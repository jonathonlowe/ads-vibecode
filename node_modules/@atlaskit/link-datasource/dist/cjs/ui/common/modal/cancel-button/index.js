"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CancelButton = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactIntlNext = require("react-intl-next");
var _standardButton = _interopRequireDefault(require("@atlaskit/button/standard-button"));
var _analytics = require("../../../../analytics");
var _messages = require("./messages");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var CancelButton = exports.CancelButton = function CancelButton(_ref) {
  var getAnalyticsPayload = _ref.getAnalyticsPayload,
    onCancel = _ref.onCancel,
    testId = _ref.testId;
  var _useDatasourceAnalyti = (0, _analytics.useDatasourceAnalyticsEvents)(),
    fireEvent = _useDatasourceAnalyti.fireEvent;
  var onCancelClick = (0, _react.useCallback)(function () {
    fireEvent('ui.button.clicked.cancel', getAnalyticsPayload());
    onCancel();
  }, [getAnalyticsPayload, fireEvent, onCancel]);
  return /*#__PURE__*/_react.default.createElement(_standardButton.default, {
    appearance: "default",
    onClick: onCancelClick,
    testId: testId
  }, /*#__PURE__*/_react.default.createElement(_reactIntlNext.FormattedMessage, _messages.cancelButtonMessages.cancelButtonText));
};