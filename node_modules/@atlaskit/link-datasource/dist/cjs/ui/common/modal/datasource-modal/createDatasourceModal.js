"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createDatasourceModal = void 0;
var _react = _interopRequireDefault(require("react"));
var _analyticsNext = require("@atlaskit/analytics-next");
var _datasourceExperienceId = require("../../../../contexts/datasource-experience-id");
var _userInteractions = require("../../../../contexts/user-interactions");
var _datasourceContext = require("../datasource-context");
var _useViewModeContext = require("../mode-switcher/useViewModeContext");
var DEFAULT_VIEW_MODE = 'table';
var createDatasourceModal = exports.createDatasourceModal = function createDatasourceModal(_ref) {
  var isValidParameters = _ref.isValidParameters,
    dataProvider = _ref.dataProvider,
    ModalContent = _ref.component;
  return function (props) {
    var datasourceId = props.datasourceId,
      visibleColumnKeys = props.visibleColumnKeys,
      columnCustomSizes = props.columnCustomSizes,
      wrappedColumnKeys = props.wrappedColumnKeys,
      parameters = props.parameters,
      onInsert = props.onInsert,
      viewMode = props.viewMode,
      disableDisplayDropdown = props.disableDisplayDropdown;
    return /*#__PURE__*/_react.default.createElement(_analyticsNext.AnalyticsContext, {
      data: {
        source: 'datasourceConfigModal',
        component: 'datasourceConfigModal',
        attributes: {
          dataProvider: dataProvider
        }
      }
    }, /*#__PURE__*/_react.default.createElement(_datasourceExperienceId.DatasourceExperienceIdProvider, null, /*#__PURE__*/_react.default.createElement(_userInteractions.UserInteractionsProvider, null, /*#__PURE__*/_react.default.createElement(_datasourceContext.DatasourceContextProvider, {
      datasourceId: datasourceId,
      initialVisibleColumnKeys: visibleColumnKeys,
      initialColumnCustomSizes: columnCustomSizes,
      initialWrappedColumnKeys: wrappedColumnKeys,
      initialParameters: parameters,
      isValidParameters: isValidParameters,
      onInsert: onInsert
    }, /*#__PURE__*/_react.default.createElement(_useViewModeContext.DatasourceViewModeProvider, {
      viewMode: viewMode !== null && viewMode !== void 0 ? viewMode : DEFAULT_VIEW_MODE,
      disableDisplayDropdown: disableDisplayDropdown || false
    }, /*#__PURE__*/_react.default.createElement(ModalContent, props))))));
  };
};