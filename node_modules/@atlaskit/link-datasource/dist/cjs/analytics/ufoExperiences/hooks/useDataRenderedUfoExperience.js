"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useDataRenderedUfoExperience = void 0;
var _react = require("react");
var _index = require("../index");
/**
 * Hook to mark DataRendered UFO experience as either Success or Failure
 * 1. Success when
 *    * its rendered as a link
 *    * it returns empty results
 *    * the request is unauthorized
 * 2. Fail when
 *    * request is rejected
 *
 * Note:
 *    * When the request is resolved as a datasource table, it will be marked success in the table component, every other success case is marked by this hook
 */
var useDataRenderedUfoExperience = exports.useDataRenderedUfoExperience = function useDataRenderedUfoExperience(_ref) {
  var status = _ref.status,
    experienceId = _ref.experienceId,
    itemCount = _ref.itemCount,
    canBeLink = _ref.canBeLink,
    extensionKey = _ref.extensionKey;
  (0, _react.useEffect)(function () {
    var isEmptyResult = status === 'resolved' && itemCount === 0;
    var isLink = status === 'resolved' && (itemCount === 1 || canBeLink); // this will take care of count-mode/single-item smart-link rendering
    var isUnauthorized = status === 'unauthorized';
    var shouldSucceedUfoExperience = isEmptyResult || isLink || isUnauthorized;
    var shouldFailUfoExperience = status === 'rejected';
    if (extensionKey) {
      (0, _index.addMetadataToExperience)({
        name: 'datasource-rendered',
        metadata: {
          extensionKey: extensionKey
        }
      }, experienceId);
    }
    if (shouldFailUfoExperience) {
      (0, _index.failUfoExperience)({
        name: 'datasource-rendered'
      }, experienceId);
    } else if (shouldSucceedUfoExperience) {
      (0, _index.succeedUfoExperience)({
        name: 'datasource-rendered'
      }, experienceId);
    }
  }, [canBeLink, experienceId, extensionKey, itemCount, status]);
};