import { ConcurrentExperience, ExperiencePerformanceTypes, ExperienceTypes } from '@atlaskit/ufo';
var datasourcePageSegmentLoadExperienceConfig = {
  platform: {
    component: 'datasource'
  },
  type: ExperienceTypes.Load,
  performanceType: ExperiencePerformanceTypes.PageSegmentLoad
};
var columnPickerCustomExperienceConfig = {
  platform: {
    component: 'datasource'
  },
  type: ExperienceTypes.Operation,
  performanceType: ExperiencePerformanceTypes.Custom
};
var inlineEditCustomExperienceConfig = {
  platform: {
    component: 'datasource'
  },
  type: ExperienceTypes.Load,
  performanceType: ExperiencePerformanceTypes.InlineResult
};
var ufoExperiences = {
  'datasource-rendered': new ConcurrentExperience('datasource-rendered', datasourcePageSegmentLoadExperienceConfig),
  'column-picker-rendered': new ConcurrentExperience('column-picker-rendered', columnPickerCustomExperienceConfig),
  'inline-edit-rendered': new ConcurrentExperience('inline-edit-rendered', inlineEditCustomExperienceConfig)
};
export var startUfoExperience = function startUfoExperience(_ref, id) {
  var name = _ref.name,
    metadata = _ref.metadata;
  var experienceInstance = ufoExperiences[name].getInstance(id);
  experienceInstance.start();
  if (metadata) {
    experienceInstance.addMetadata(metadata);
  }
};
export var succeedUfoExperience = function succeedUfoExperience(_ref2, id) {
  var name = _ref2.name,
    metadata = _ref2.metadata;
  var experienceInstance = ufoExperiences[name].getInstance(id);
  experienceInstance.success({
    metadata: metadata
  });
};
export var failUfoExperience = function failUfoExperience(_ref3, id) {
  var name = _ref3.name,
    metadata = _ref3.metadata;
  var experienceInstance = ufoExperiences[name].getInstance(id);
  experienceInstance.failure({
    metadata: metadata
  });
};
export var addMetadataToExperience = function addMetadataToExperience(_ref4, id) {
  var name = _ref4.name,
    metadata = _ref4.metadata;
  ufoExperiences[name].getInstance(id).addMetadata(metadata);
};