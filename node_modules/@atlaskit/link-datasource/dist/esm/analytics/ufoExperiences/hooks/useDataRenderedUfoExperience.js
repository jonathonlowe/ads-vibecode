import { useEffect } from 'react';
import { addMetadataToExperience, failUfoExperience, succeedUfoExperience } from '../index';
/**
 * Hook to mark DataRendered UFO experience as either Success or Failure
 * 1. Success when
 *    * its rendered as a link
 *    * it returns empty results
 *    * the request is unauthorized
 * 2. Fail when
 *    * request is rejected
 *
 * Note:
 *    * When the request is resolved as a datasource table, it will be marked success in the table component, every other success case is marked by this hook
 */
export var useDataRenderedUfoExperience = function useDataRenderedUfoExperience(_ref) {
  var status = _ref.status,
    experienceId = _ref.experienceId,
    itemCount = _ref.itemCount,
    canBeLink = _ref.canBeLink,
    extensionKey = _ref.extensionKey;
  useEffect(function () {
    var isEmptyResult = status === 'resolved' && itemCount === 0;
    var isLink = status === 'resolved' && (itemCount === 1 || canBeLink); // this will take care of count-mode/single-item smart-link rendering
    var isUnauthorized = status === 'unauthorized';
    var shouldSucceedUfoExperience = isEmptyResult || isLink || isUnauthorized;
    var shouldFailUfoExperience = status === 'rejected';
    if (extensionKey) {
      addMetadataToExperience({
        name: 'datasource-rendered',
        metadata: {
          extensionKey: extensionKey
        }
      }, experienceId);
    }
    if (shouldFailUfoExperience) {
      failUfoExperience({
        name: 'datasource-rendered'
      }, experienceId);
    } else if (shouldSucceedUfoExperience) {
      succeedUfoExperience({
        name: 'datasource-rendered'
      }, experienceId);
    }
  }, [canBeLink, experienceId, extensionKey, itemCount, status]);
};