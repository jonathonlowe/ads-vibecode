/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["as", "style"],
  _excluded2 = ["as", "style"],
  _excluded3 = ["as", "style"],
  _excluded4 = ["as", "style"];
import "./index.compiled.css";
import { forwardRef } from 'react';
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { Fragment, useEffect, useState } from 'react';
import { FormattedMessage, useIntl } from 'react-intl-next';
import Button from '@atlaskit/button';
import { IconButton } from '@atlaskit/button/new';
import RefreshIcon from '@atlaskit/icon/core/migration/refresh';
import { fg } from '@atlaskit/platform-feature-flags';
import { Box, Flex, Inline } from '@atlaskit/primitives/compiled';
import { N0, N40 } from '@atlaskit/theme/colors';
import { ASSETS_LIST_OF_LINKS_DATASOURCE_ID } from '../assets-modal';
import TableSearchCount, { AssetsItemCount } from '../common/modal/search-count';
import { footerMessages } from './messages';
import { PoweredByJSMAssets } from './powered-by-jsm-assets';
import { ProviderLink } from './provider-link';
import { SyncInfo } from './sync-info';
var styles = {
  footer: "_11c81o8v _2rko1kw7 _x3dozgxb _syaz131l _ca0q1ejb _u5f3pxbi _n3td1ejb _19bvpxbi _vchhusvi _13liidpf _qrwqidpf _bfhkhp5a",
  separator: "_syazmuej"
};

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled -- To migrate as part of go/ui-styling-standard
var FooterWrapper = forwardRef(function (_ref, __cmplr) {
  var _ref$as = _ref.as,
    C = _ref$as === void 0 ? "div" : _ref$as,
    __cmpls = _ref.style,
    __cmplp = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement(C, _extends({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: ax(["_2rko1kw7 _x3do17u4 _ca0qze3t _u5f3pxbi _n3tdze3t _19bvpxbi _vchhusvi _13liidpf _qrwqidpf _bfhk1j9a", __cmplp.className])
  }));
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled -- To migrate as part of go/ui-styling-standard
if (process.env.NODE_ENV !== 'production') {
  FooterWrapper.displayName = 'FooterWrapper';
}
var TopBorderWrapper = forwardRef(function (_ref2, __cmplr) {
  var _ref2$as = _ref2.as,
    C = _ref2$as === void 0 ? "div" : _ref2$as,
    __cmpls = _ref2.style,
    __cmplp = _objectWithoutProperties(_ref2, _excluded2);
  return /*#__PURE__*/React.createElement(C, _extends({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: ax(["_1e0c1txw _vchhusvi _1bah1yb4 _ca0qv47k _u5f3ze3t _n3tdv47k _19bvze3t", __cmplp.className])
  }));
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled -- To migrate as part of go/ui-styling-standard
if (process.env.NODE_ENV !== 'production') {
  TopBorderWrapper.displayName = 'TopBorderWrapper';
}
var SyncWrapper = forwardRef(function (_ref3, __cmplr) {
  var _ref3$as = _ref3.as,
    C = _ref3$as === void 0 ? "div" : _ref3$as,
    __cmpls = _ref3.style,
    __cmplp = _objectWithoutProperties(_ref3, _excluded3);
  return /*#__PURE__*/React.createElement(C, _extends({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: ax(["_1e0c1txw _4cvr1h6o _syaz1dyx", __cmplp.className])
  }));
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled -- To migrate as part of go/ui-styling-standard
if (process.env.NODE_ENV !== 'production') {
  SyncWrapper.displayName = 'SyncWrapper';
}
var SyncTextWrapper = forwardRef(function (_ref4, __cmplr) {
  var _ref4$as = _ref4.as,
    C = _ref4$as === void 0 ? "div" : _ref4$as,
    __cmpls = _ref4.style,
    __cmplp = _objectWithoutProperties(_ref4, _excluded4);
  return /*#__PURE__*/React.createElement(C, _extends({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: ax(["_11c8dcr7 _2hwx12x7", __cmplp.className])
  }));
});
if (process.env.NODE_ENV !== 'production') {
  SyncTextWrapper.displayName = 'SyncTextWrapper';
}
export var TableFooter = function TableFooter(_ref5) {
  var datasourceId = _ref5.datasourceId,
    itemCount = _ref5.itemCount,
    onRefresh = _ref5.onRefresh,
    isLoading = _ref5.isLoading,
    url = _ref5.url;
  var intl = useIntl();
  var _useState = useState(new Date()),
    _useState2 = _slicedToArray(_useState, 2),
    lastSyncTime = _useState2[0],
    setLastSyncTime = _useState2[1];
  var showItemCount = itemCount && itemCount > 0 ? true : itemCount === 0 ? !isLoading : false;
  useEffect(function () {
    if (isLoading) {
      setLastSyncTime(new Date());
    }
  }, [isLoading]);
  if (fg('platform-linking-visual-refresh-sllv')) {
    return onRefresh || showItemCount ? /*#__PURE__*/React.createElement("div", {
      "data-testid": "table-footer",
      className: ax([styles.footer])
    }, /*#__PURE__*/React.createElement(Inline, {
      alignBlock: "center",
      alignInline: "end",
      grow: "hug",
      spread: "space-between"
    }, /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(ProviderLink, {
      datasourceId: datasourceId
    })), /*#__PURE__*/React.createElement(Inline, {
      alignBlock: "center",
      space: "space.100",
      separator: /*#__PURE__*/React.createElement("div", {
        className: ax([styles.separator])
      }, "\u2022")
    }, onRefresh && /*#__PURE__*/React.createElement(Inline, {
      alignBlock: "center",
      space: "space.050"
    }, /*#__PURE__*/React.createElement(IconButton, {
      appearance: "subtle",
      icon: function icon(iconProps) {
        return /*#__PURE__*/React.createElement(RefreshIcon, _extends({}, iconProps, {
          color: "var(--ds-text-subtlest, #626F86)"
        }));
      },
      isDisabled: isLoading,
      label: intl.formatMessage(footerMessages.refreshLabel),
      onClick: onRefresh,
      spacing: "compact",
      testId: "refresh-button"
    }), /*#__PURE__*/React.createElement(Box, {
      testId: "sync-text"
    }, isLoading ? /*#__PURE__*/React.createElement(FormattedMessage, footerMessages.loadingText) : /*#__PURE__*/React.createElement(SyncInfo, {
      lastSyncTime: lastSyncTime
    }))), showItemCount && /*#__PURE__*/React.createElement(Flex, null, datasourceId === ASSETS_LIST_OF_LINKS_DATASOURCE_ID ? /*#__PURE__*/React.createElement(AssetsItemCount, {
      searchCount: itemCount,
      url: url,
      testId: "item-count"
    }) : /*#__PURE__*/React.createElement(TableSearchCount, {
      searchCount: itemCount,
      url: url,
      prefixTextType: "item",
      testId: "item-count"
    }))))) : null;
  }

  // If only one of the two is passed in, still show the other one (Note: We keep the div encapsulating the one not shown to
  // ensure correct positioning since 'justify-content: space-between' is used).
  return onRefresh || showItemCount ? /*#__PURE__*/React.createElement(FooterWrapper, {
    "data-testid": "table-footer"
  }, /*#__PURE__*/React.createElement(TopBorderWrapper, null, showItemCount && /*#__PURE__*/React.createElement(Flex, null, datasourceId === ASSETS_LIST_OF_LINKS_DATASOURCE_ID ? /*#__PURE__*/React.createElement(AssetsItemCount, {
    searchCount: itemCount,
    url: url,
    testId: "item-count"
  }) : /*#__PURE__*/React.createElement(TableSearchCount, {
    searchCount: itemCount,
    url: url,
    prefixTextType: "item",
    testId: "item-count"
  })), datasourceId === ASSETS_LIST_OF_LINKS_DATASOURCE_ID ? /*#__PURE__*/React.createElement(PoweredByJSMAssets, {
    text: intl.formatMessage(fg('assets_as_an_app_v2') ? footerMessages.poweredByAssets : footerMessages.powerByJSM)
  }) : null, /*#__PURE__*/React.createElement(SyncWrapper, null, onRefresh && /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(SyncTextWrapper, {
    "data-testid": "sync-text"
  }, isLoading ? /*#__PURE__*/React.createElement(FormattedMessage, footerMessages.loadingText) : /*#__PURE__*/React.createElement(SyncInfo, {
    lastSyncTime: lastSyncTime
  })), /*#__PURE__*/React.createElement(Button, {
    onClick: onRefresh,
    appearance: "subtle",
    iconBefore: /*#__PURE__*/React.createElement(RefreshIcon, {
      label: intl.formatMessage(footerMessages.refreshLabel),
      color: "currentColor",
      spacing: "spacious"
    }),
    isDisabled: isLoading,
    testId: "refresh-button"
  }))))) : null;
};