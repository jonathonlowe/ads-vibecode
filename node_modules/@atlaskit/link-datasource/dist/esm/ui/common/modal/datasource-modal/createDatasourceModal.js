import React from 'react';
import { AnalyticsContext } from '@atlaskit/analytics-next';
import { DatasourceExperienceIdProvider } from '../../../../contexts/datasource-experience-id';
import { UserInteractionsProvider } from '../../../../contexts/user-interactions';
import { DatasourceContextProvider } from '../datasource-context';
import { DatasourceViewModeProvider } from '../mode-switcher/useViewModeContext';
var DEFAULT_VIEW_MODE = 'table';
export var createDatasourceModal = function createDatasourceModal(_ref) {
  var isValidParameters = _ref.isValidParameters,
    dataProvider = _ref.dataProvider,
    ModalContent = _ref.component;
  return function (props) {
    var datasourceId = props.datasourceId,
      visibleColumnKeys = props.visibleColumnKeys,
      columnCustomSizes = props.columnCustomSizes,
      wrappedColumnKeys = props.wrappedColumnKeys,
      parameters = props.parameters,
      onInsert = props.onInsert,
      viewMode = props.viewMode,
      disableDisplayDropdown = props.disableDisplayDropdown;
    return /*#__PURE__*/React.createElement(AnalyticsContext, {
      data: {
        source: 'datasourceConfigModal',
        component: 'datasourceConfigModal',
        attributes: {
          dataProvider: dataProvider
        }
      }
    }, /*#__PURE__*/React.createElement(DatasourceExperienceIdProvider, null, /*#__PURE__*/React.createElement(UserInteractionsProvider, null, /*#__PURE__*/React.createElement(DatasourceContextProvider, {
      datasourceId: datasourceId,
      initialVisibleColumnKeys: visibleColumnKeys,
      initialColumnCustomSizes: columnCustomSizes,
      initialWrappedColumnKeys: wrappedColumnKeys,
      initialParameters: parameters,
      isValidParameters: isValidParameters,
      onInsert: onInsert
    }, /*#__PURE__*/React.createElement(DatasourceViewModeProvider, {
      viewMode: viewMode !== null && viewMode !== void 0 ? viewMode : DEFAULT_VIEW_MODE,
      disableDisplayDropdown: disableDisplayDropdown || false
    }, /*#__PURE__*/React.createElement(ModalContent, props))))));
  };
};