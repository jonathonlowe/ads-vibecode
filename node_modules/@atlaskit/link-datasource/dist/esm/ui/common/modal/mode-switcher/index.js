/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import "./index.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
import React from 'react';
import { fg } from '@atlaskit/platform-feature-flags';
import { N0, N20, N30A, N60, N700 } from '@atlaskit/theme/colors';
import Tooltip from '@atlaskit/tooltip';
import { DatasourceAction } from '../../../../analytics/types';
import { useUserInteractions } from '../../../../contexts/user-interactions';
import { DisplayViewDropDown } from '../display-view-dropdown/display-view-drop-down';
import { useViewModeContext } from './useViewModeContext';
var modeSwitcherStylesOld = null;
var modeSwitcherStyles = null;
var compactModeSwitcherStyles = null;
var modeInputStyles = null;
var modeSwitcherLabelStylesOld = null;
var modeSwitcherLabelStyles = null;
var modeSwitcherLabelSelectedStylesOld = null;
var modeSwitcherLabelSelectedStyles = null;
var modeSwitcherLabelDisabledStyles = null;
var modeSwitcherDisabledStyles = null;
var compactModeSwitcherLabelStyles = null;
export var ModeSwitcher = function ModeSwitcher(props) {
  var _options$;
  var isCompact = props.isCompact,
    isDisabled = props.isDisabled,
    onOptionValueChange = props.onOptionValueChange,
    options = props.options,
    _props$selectedOption = props.selectedOptionValue,
    selectedOptionValue = _props$selectedOption === void 0 ? (_options$ = options[0]) === null || _options$ === void 0 ? void 0 : _options$.value : _props$selectedOption;
  var handleModeChange = function handleModeChange(event) {
    onOptionValueChange(event.currentTarget.value);
  };
  return options.length > 0 ? /*#__PURE__*/React.createElement("fieldset", {
    "data-testid": "mode-toggle-container",
    disabled: isDisabled,
    className: ax([fg('platform-linking-visual-refresh-sllv') ? "_2rko1b66 _1h6dmuej _189ee4h9 _1dqonqa1 _4cvr1h6o _vchhusvi _1e0c116y _u5f31b66 _19bv1b66 _18u0v47k _4t3izwfg _1j55105o" : "_2rko1b66 _zulp1b66 _4cvr1h6o _bfhklslw _vchhusvi _1e0c116y _ca0q1b66 _u5f31b66 _n3td1b66 _19bv1b66 _18u0v47k _1j55105o", isCompact && "_zulpv77o _ca0q1b66 _u5f31b66 _n3td1b66 _19bv1b66"]),
    style: {
      "--_1jkcdu5": ix("var(--ds-background-neutral, ".concat(N20, ")"))
    }
  }, options.map(function (_ref) {
    var value = _ref.value,
      label = _ref.label,
      isOptionDisabled = _ref.disabled,
      tooltipText = _ref.tooltipText;
    var isSelected = value === selectedOptionValue;
    return /*#__PURE__*/React.createElement(Tooltip, {
      key: value,
      content: tooltipText
    }, function (tooltipProps) {
      return fg('platform-linking-visual-refresh-sllv') ? /*#__PURE__*/React.createElement("label", _extends({}, tooltipProps, {
        key: value,
        "data-testid": "mode-toggle-".concat(value),
        className: ax(["_11c82smr _2rko1b66 _1h6d1j28 _189ee4h9 _1dqonqa1 _syaziwyp _vchhusvi _k48p1wq8 _u5f3utpp _19bvutpp _1tke1tcg _1e0c1txw _4cvr1h6o _1bah1h6o _d0altlke _irr3u7au", isCompact && "_ca0qv77o _u5f31b66 _n3tdv77o _19bv1b66", isSelected && "_2rko1b66 _1h6d1yqz _bfhkfg4m _syazaqb7 _d0altlke _irr3fg4m", isDisabled && "_irr31j28 _d0al13gf", isOptionDisabled && "_syaz111d", isOptionDisabled && "_irr31j28 _d0al13gf"]),
        style: {
          "--_k4gmmg": ix("var(--ds-text-subtlest, ".concat(N700, ")")),
          "--_15egq0b": ix("var(--ds-background-neutral-subtle-hovered, ".concat(N30A, ")")),
          "--_uz32ib": ix("var(--ds-text-disabled, ".concat(N60, ")"))
        }
      }), label, /*#__PURE__*/React.createElement("input", {
        "aria-checked": isSelected,
        "aria-disabled": isOptionDisabled,
        checked: isSelected,
        disabled: isOptionDisabled,
        onChange: handleModeChange,
        type: "radio",
        value: value,
        className: ax(["_1e0cglyw"])
      })) : /*#__PURE__*/React.createElement("label", _extends({}, tooltipProps, {
        key: value,
        "data-testid": "mode-toggle-".concat(value),
        className: ax(["_11c8dcr7 _2rko1b66 _syaziwyp _k48p1pd9 _1p1dangw _ca0q1b66 _u5f31b66 _n3td1b66 _19bv1b66 _d0altlke _irr3u7au", isCompact && "_ca0qv77o _u5f31b66 _n3tdv77o _19bv1b66", isSelected && "_2rko1b66 _bfhkkwt5 _16qs1jze _d0altlke _irr3kwt5", isDisabled && "_irr31j28 _d0al13gf", isOptionDisabled && "_syaz111d", isOptionDisabled && "_irr31j28 _d0al13gf"]),
        style: {
          "--_k4gmmg": ix("var(--ds-text-subtlest, ".concat(N700, ")")),
          "--_15egq0b": ix("var(--ds-background-neutral-subtle-hovered, ".concat(N30A, ")")),
          "--_t0vtv2": ix("var(--ds-background-input-pressed, ".concat(N0, ")")),
          "--_uz32ib": ix("var(--ds-text-disabled, ".concat(N60, ")"))
        }
      }), label, /*#__PURE__*/React.createElement("input", {
        "aria-checked": isSelected,
        "aria-disabled": isOptionDisabled,
        checked: isSelected,
        disabled: isOptionDisabled,
        onChange: handleModeChange,
        type: "radio",
        value: value,
        className: ax(["_1e0cglyw"])
      }));
    });
  })) : null;
};
export var DatasourceViewModeDropDown = function DatasourceViewModeDropDown() {
  var userInteractions = useUserInteractions();
  var _useViewModeContext = useViewModeContext(),
    currentViewMode = _useViewModeContext.currentViewMode,
    setCurrentViewMode = _useViewModeContext.setCurrentViewMode,
    disableDisplayDropdown = _useViewModeContext.disableDisplayDropdown;
  if (disableDisplayDropdown) {
    return null;
  }
  var handleViewModeChange = function handleViewModeChange(selectedMode) {
    userInteractions.add(DatasourceAction.DISPLAY_VIEW_CHANGED);
    setCurrentViewMode(selectedMode);
  };
  return /*#__PURE__*/React.createElement(DisplayViewDropDown, {
    onViewModeChange: handleViewModeChange,
    viewMode: currentViewMode
  });
};