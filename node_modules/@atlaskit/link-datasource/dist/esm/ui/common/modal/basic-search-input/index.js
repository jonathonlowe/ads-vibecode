/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./index.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { useIntl } from 'react-intl-next';
import { LoadingButton } from '@atlaskit/button';
import SearchIcon from '@atlaskit/icon/core/migration/search--editor-search';
import { fg } from '@atlaskit/platform-feature-flags';
import Textfield from '@atlaskit/textfield';
import { useDatasourceAnalyticsEvents } from '../../../../analytics';
import { basicSearchInputMessages } from './messages';
var searchButtonStyles = null;
var formStyles = null;
var formWithMaxWidthStylesOld = null;
var formWithMaxWidthStyles = null;
export var BasicSearchInput = function BasicSearchInput(_ref) {
  var isDisabled = _ref.isDisabled,
    isSearching = _ref.isSearching,
    onChange = _ref.onChange,
    onSearch = _ref.onSearch,
    searchTerm = _ref.searchTerm,
    fullWidth = _ref.fullWidth,
    testId = _ref.testId,
    placeholder = _ref.placeholder,
    ariaLabel = _ref.ariaLabel;
  var _useIntl = useIntl(),
    formatMessage = _useIntl.formatMessage;
  var _useDatasourceAnalyti = useDatasourceAnalyticsEvents(),
    fireEvent = _useDatasourceAnalyti.fireEvent;
  var handleSearchWithAnalytics = function handleSearchWithAnalytics() {
    fireEvent('ui.form.submitted.basicSearch', {});
    onSearch(searchTerm);
  };
  var handleFormSubmit = function handleFormSubmit(e) {
    e.preventDefault();
    handleSearchWithAnalytics();
  };
  return /*#__PURE__*/React.createElement("form", {
    onSubmit: handleFormSubmit,
    className: ax([fullWidth ? "_16jlkb7n _1o9zkb7n _i0dlf1ug" : fg('platform-linking-visual-refresh-sllv') ? "_16jlkb7n _1o9zkb7n _i0dlf1ug _p12f1mjv" : "_16jlkb7n _1o9zkb7n _i0dlf1ug _p12fr0r7"])
  }, /*#__PURE__*/React.createElement(Textfield, {
    elemAfterInput: /*#__PURE__*/React.createElement(LoadingButton, {
      appearance: "primary",
      iconBefore: /*#__PURE__*/React.createElement(SearchIcon, {
        label: formatMessage(fg('confluence-issue-terminology-refresh') ? basicSearchInputMessages.basicTextSearchLabelIssueTermRefresh : basicSearchInputMessages.basicTextSearchLabel),
        LEGACY_size: "medium",
        color: "currentColor",
        spacing: "spacious"
      }),
      isDisabled: isDisabled,
      isLoading: isSearching,
      onClick: handleSearchWithAnalytics,
      spacing: "none",
      testId: "".concat(testId, "--basic-search-button"),
      className: ax(["_2hwx12x7"])
    }),
    autoFocus: true,
    onChange: onChange,
    placeholder: fg('platform-linking-visual-refresh-sllv') ? undefined : formatMessage(placeholder),
    testId: "".concat(testId, "--basic-search-input"),
    value: searchTerm,
    "aria-label": formatMessage(fg('platform-linking-visual-refresh-sllv') ? ariaLabel : placeholder)
  }));
};