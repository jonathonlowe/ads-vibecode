import { useCallback, useEffect, useRef } from 'react';
import { useUserInteractions } from '../../../../../contexts/user-interactions';
import { getColumnAction } from '../../../../issue-like-table/utils';
export var useColumnVisibility = function useColumnVisibility(_ref) {
  var visibleColumnKeys = _ref.visibleColumnKeys,
    setVisibleColumnKeys = _ref.setVisibleColumnKeys,
    defaultVisibleColumnKeys = _ref.defaultVisibleColumnKeys,
    initialVisibleColumnKeys = _ref.initialVisibleColumnKeys;
  var userInteractions = useUserInteractions();
  var visibleColumnCount = useRef((visibleColumnKeys === null || visibleColumnKeys === void 0 ? void 0 : visibleColumnKeys.length) || 0);
  useEffect(function () {
    var newVisibleColumnKeys = !initialVisibleColumnKeys || (initialVisibleColumnKeys || []).length === 0 ? defaultVisibleColumnKeys : initialVisibleColumnKeys;
    visibleColumnCount.current = newVisibleColumnKeys.length;
    setVisibleColumnKeys(newVisibleColumnKeys);
  }, [initialVisibleColumnKeys, setVisibleColumnKeys, defaultVisibleColumnKeys]);
  var onVisibleColumnKeysChange = useCallback(function () {
    var newVisibleColumnKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var columnAction = getColumnAction(visibleColumnKeys || [], newVisibleColumnKeys);
    userInteractions.add(columnAction);
    visibleColumnCount.current = newVisibleColumnKeys.length;
    setVisibleColumnKeys(newVisibleColumnKeys);
  }, [visibleColumnKeys, setVisibleColumnKeys, userInteractions]);
  return {
    onVisibleColumnKeysChange: onVisibleColumnKeysChange,
    visibleColumnCount: visibleColumnCount
  };
};