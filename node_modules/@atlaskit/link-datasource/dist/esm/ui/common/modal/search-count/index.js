/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import "./index.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
import React from 'react';
import { FormattedMessage, FormattedNumber } from 'react-intl-next';
import Heading from '@atlaskit/heading';
import { fg } from '@atlaskit/platform-feature-flags';
import { Flex } from '@atlaskit/primitives/compiled';
import LinkUrl from '@atlaskit/smart-card/link-url';
import { N800 } from '@atlaskit/theme/colors';
import { footerMessages } from '../../../table-footer/messages';
import { searchCountMessages } from './messages';
var styles = {
  searchCountStyles: "_16jlkb7n _1o9zkb7n _i0dlf1ug"
};
var ItemCountWrapper = function ItemCountWrapper(_ref) {
  var url = _ref.url,
    children = _ref.children,
    testId = _ref.testId;
  return /*#__PURE__*/React.createElement(Flex, {
    testId: testId,
    xcss: styles.searchCountStyles,
    alignItems: "center"
  }, /*#__PURE__*/React.createElement(LinkUrl, {
    href: url,
    target: "_blank",
    testId: "item-count-url"
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    ,
    style: {
      color: fg('platform-linking-visual-refresh-sllv') ? "var(--ds-text-subtlest, #626F86)" : "var(--ds-text-accent-gray, ".concat(N800, ")"),
      textDecoration: !url ? 'none' : ''
    }
  }, fg('platform-linking-visual-refresh-sllv') ? children : /*#__PURE__*/React.createElement(Heading, {
    size: "xxsmall"
  }, children)));
};
export var AssetsItemCount = function AssetsItemCount(_ref2) {
  var searchCount = _ref2.searchCount,
    url = _ref2.url,
    testId = _ref2.testId;
  var capCount = searchCount >= 1000;
  var displayCount = capCount ? 1000 : searchCount;
  var countModifier = capCount ? '+' : '';
  return /*#__PURE__*/React.createElement(ItemCountWrapper, {
    testId: testId,
    url: url
  }, /*#__PURE__*/React.createElement(FormattedNumber, {
    value: displayCount
  }), countModifier, ' ', /*#__PURE__*/React.createElement(FormattedMessage, _extends({}, footerMessages.itemText, {
    values: {
      itemCount: searchCount
    }
  })));
};
var TableSearchCount = function TableSearchCount(_ref3) {
  var url = _ref3.url,
    searchCount = _ref3.searchCount,
    _ref3$testId = _ref3.testId,
    testId = _ref3$testId === void 0 ? 'datasource-table-total-results-count' : _ref3$testId,
    _ref3$prefixTextType = _ref3.prefixTextType,
    prefixTextType = _ref3$prefixTextType === void 0 ? 'issue' : _ref3$prefixTextType;
  var isIssue = prefixTextType === 'issue';
  var messageKey = isIssue && fg('confluence-issue-terminology-refresh') ? 'issueCountTextIssueTermRefresh' : "".concat(prefixTextType, "CountText");
  return /*#__PURE__*/React.createElement(ItemCountWrapper, {
    testId: testId,
    url: url
  }, /*#__PURE__*/React.createElement(FormattedMessage, _extends({}, searchCountMessages[messageKey], {
    values: {
      searchCount: searchCount
    }
  })));
};
export default TableSearchCount;