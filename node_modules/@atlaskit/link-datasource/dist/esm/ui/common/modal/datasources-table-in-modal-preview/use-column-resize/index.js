import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
import { useCallback, useState } from 'react';
export var useColumnResize = function useColumnResize(initialColumnCustomSizes) {
  var _useState = useState(initialColumnCustomSizes),
    _useState2 = _slicedToArray(_useState, 2),
    columnCustomSizes = _useState2[0],
    setColumnCustomSizes = _useState2[1];
  var onColumnResize = useCallback(function (key, width) {
    setColumnCustomSizes(_objectSpread(_objectSpread({}, columnCustomSizes), {}, _defineProperty({}, key, width)));
  }, [columnCustomSizes]);
  return {
    columnCustomSizes: columnCustomSizes,
    onColumnResize: onColumnResize
  };
};