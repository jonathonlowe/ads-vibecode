import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import { useEffect, useMemo, useState } from 'react';

// Hook which tracks if a ref is visible or not. Taken from: https://stackoverflow.com/a/65008608
export var useIsOnScreen = function useIsOnScreen(el) {
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    isIntersecting = _useState2[0],
    setIntersecting = _useState2[1];
  var observer = useMemo(function () {
    return new IntersectionObserver(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        entry = _ref2[0];
      return setIntersecting(entry.isIntersecting);
    });
  }, []);
  useEffect(function () {
    el && observer.observe(el);
    return function () {
      setIntersecting(false);
      return observer.disconnect();
    };
  }, [observer, el]);
  return isIntersecting;
};