import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _regeneratorRuntime from "@babel/runtime/regenerator";
import { useCallback, useEffect, useState } from 'react';
import { useBasicFilterAGG } from '../../../../services/useBasicFilterAGG';
export var useCurrentUserInfo = function useCurrentUserInfo() {
  var _useState = useState(),
    _useState2 = _slicedToArray(_useState, 2),
    user = _useState2[0],
    setUser = _useState2[1];
  var _useBasicFilterAGG = useBasicFilterAGG(),
    getCurrentUserInfoFromAGG = _useBasicFilterAGG.getCurrentUserInfo;
  var getCurrentUserInfo = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
    var _user$data;
    var user;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return getCurrentUserInfoFromAGG();
        case 2:
          user = _context.sent;
          setUser((_user$data = user.data) === null || _user$data === void 0 || (_user$data = _user$data.me) === null || _user$data === void 0 ? void 0 : _user$data.user);
        case 4:
        case "end":
          return _context.stop();
      }
    }, _callee);
  })), [getCurrentUserInfoFromAGG]);
  useEffect(function () {
    getCurrentUserInfo();
  }, [getCurrentUserInfo]);
  return {
    user: user,
    getCurrentUserInfo: getCurrentUserInfo
  };
};