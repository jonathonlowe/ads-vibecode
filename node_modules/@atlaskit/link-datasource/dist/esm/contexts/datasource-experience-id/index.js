import React, { useContext, useMemo } from 'react';
import { v4 as uuidv4 } from 'uuid';
var DatasourceExperienceIdContext = /*#__PURE__*/React.createContext(undefined);
var DatasourceExperienceIdProvider = function DatasourceExperienceIdProvider(_ref) {
  var children = _ref.children;
  var value = useMemo(function () {
    return uuidv4();
  }, []);
  return /*#__PURE__*/React.createElement(DatasourceExperienceIdContext.Provider, {
    value: value
  }, children);
};
var useDatasourceExperienceId = function useDatasourceExperienceId() {
  var context = useContext(DatasourceExperienceIdContext);
  if (!context) {
    throw Error('useDatasourceExperienceId() must be wrapped in <DatasourceExperienceIdProvider>');
  }
  return context;
};
export { DatasourceExperienceIdProvider, useDatasourceExperienceId };