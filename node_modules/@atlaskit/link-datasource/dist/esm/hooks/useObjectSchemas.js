import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _regeneratorRuntime from "@babel/runtime/regenerator";
import { useCallback, useState } from 'react';
import { fetchObjectSchemas } from '../services/cmdbService';
export var useObjectSchemas = function useObjectSchemas(workspaceId) {
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    loading = _useState2[0],
    setLoading = _useState2[1];
  var _useState3 = useState(),
    _useState4 = _slicedToArray(_useState3, 2),
    objectSchemas = _useState4[0],
    setObjectSchemas = _useState4[1];
  var _useState5 = useState(),
    _useState6 = _slicedToArray(_useState5, 2),
    totalObjectSchemas = _useState6[0],
    setTotalObjectSchemas = _useState6[1];
  var _useState7 = useState(),
    _useState8 = _slicedToArray(_useState7, 2),
    error = _useState8[0],
    setError = _useState8[1];
  var request = useCallback( /*#__PURE__*/function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(query) {
      var fetchedObjectSchemas, fetchTotalObjectSchemas, fetchedObjectSchemasResponse;
      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            setLoading(true);
            setError(undefined);
            _context.prev = 2;
            _context.next = 5;
            return fetchObjectSchemas(workspaceId, query);
          case 5:
            fetchedObjectSchemasResponse = _context.sent;
            setObjectSchemas(fetchedObjectSchemasResponse.values);
            setTotalObjectSchemas(fetchedObjectSchemasResponse.total);
            fetchedObjectSchemas = fetchedObjectSchemasResponse.values;
            fetchTotalObjectSchemas = fetchedObjectSchemasResponse.total;
            _context.next = 15;
            break;
          case 12:
            _context.prev = 12;
            _context.t0 = _context["catch"](2);
            if (_context.t0 instanceof Error) {
              setError(_context.t0);
            } else {
              setError(new Error('Unexpected error occured'));
            }
          case 15:
            _context.prev = 15;
            setLoading(false);
            return _context.finish(15);
          case 18:
            return _context.abrupt("return", {
              objectSchemas: fetchedObjectSchemas,
              totalObjectSchemas: fetchTotalObjectSchemas
            });
          case 19:
          case "end":
            return _context.stop();
        }
      }, _callee, null, [[2, 12, 15, 18]]);
    }));
    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }(), [workspaceId]);
  return {
    objectSchemasLoading: loading,
    objectSchemasError: error,
    objectSchemas: objectSchemas,
    totalObjectSchemas: totalObjectSchemas,
    fetchObjectSchemas: request
  };
};