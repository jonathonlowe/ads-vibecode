import _defineProperty from "@babel/runtime/helpers/defineProperty";
import React from 'react';
import { Wrapper } from './styled';
export class Frame extends React.Component {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "handleClick", event => {
      const {
        onClick
      } = this.props;
      if (onClick) {
        event.preventDefault();
        event.stopPropagation();
        onClick(event);
      }
    });
    _defineProperty(this, "handleKeyPress", event => {
      if (event.key !== ' ' && event.key !== 'Enter') {
        return;
      }
      const {
        onClick
      } = this.props;
      if (onClick) {
        event.preventDefault();
        event.stopPropagation();
        onClick(event);
      }
    });
  }
  render() {
    const {
      isSelected,
      children,
      onClick,
      innerRef,
      testId
    } = this.props;
    const isInteractive = Boolean(onClick);
    return /*#__PURE__*/React.createElement(Wrapper, {
      ref: innerRef,
      isSelected: isSelected,
      tabIndex: isInteractive ? 0 : undefined,
      role: isInteractive ? 'button' : undefined,
      onClick: this.handleClick,
      onKeyPress: this.handleKeyPress,
      "data-testid": testId
    }, children);
  }
}