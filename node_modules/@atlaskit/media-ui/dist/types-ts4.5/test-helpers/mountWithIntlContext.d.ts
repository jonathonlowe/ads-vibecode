import React from 'react';
import { type WrappedComponentProps } from 'react-intl-next';
import { type ReactWrapper, type ShallowWrapper } from 'enzyme';
import { type ReactElement } from 'react';
export declare const mountWithIntlContext: <P, S, C extends React.Component<P, S, any> = React.Component<P, S, any>>(node: ReactElement<P & WrappedComponentProps>, { context, childContextTypes, ...additionalOptions }?: {
    context?: {} | undefined;
    childContextTypes?: {} | undefined;
}) => ReactWrapper<P & WrappedComponentProps, S, C>;
export declare const shallowWithIntlContext: <P, S, C extends React.Component<P, S, any> = React.Component<P, S, any>>(node: ReactElement<P & WrappedComponentProps>, { context, ...additionalOptions }?: {
    context?: {} | undefined;
}) => ShallowWrapper<P & WrappedComponentProps, S, C>;
export declare const mountWithIntlWrapper: (node: React.ReactElement) => ReactWrapper;
