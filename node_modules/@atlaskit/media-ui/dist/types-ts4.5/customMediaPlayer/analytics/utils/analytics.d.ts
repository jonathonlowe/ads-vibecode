import { type CreateUIAnalyticsEvent } from '@atlaskit/analytics-next';
import { type UIAttributes, type UIEventPayload } from '@atlaskit/media-common';
import { type CustomMediaPlayerScreenEventPayload } from '../events/screen/customMediaPlayer';
import { type MediaButtonClickEventPayload } from '../events/ui/mediaButtonClicked';
import { type PlaybackSpeedChangeEventPayload } from '../events/ui/playbackSpeedChanged';
import { type PlayPauseBlanketClickEventPayload } from '../events/ui/playPauseBlanketClicked';
import { type ShortcutPressEventPayload } from '../events/ui/shortcutPressed';
import { type TimeRangeNavigateEventPayload } from '../events/ui/timeRangeNavigated';
import { type FirstPlayedTrackEventPayload } from '../events/track/playCount';
import { type PlayedTrackEventPayload } from '../events/track/played';
import { type CustomMediaPlayerType } from '../../types';
export type CustomMediaPlayerUIEventPayload = UIEventPayload<UIAttributes & {
    type: CustomMediaPlayerType;
}, 'default', 'customMediaPlayer'>;
export type CustomMediaPlayerUIEvent = 'mediaButtonClick' | 'shortcutPress' | 'playPauseBlanketClick' | 'timeRangeNavigate' | 'volumeRangeNavigate' | 'playbackSpeedChange';
export type CustomMediaPlayerAnalyticsEventPayload = CustomMediaPlayerScreenEventPayload | MediaButtonClickEventPayload | PlaybackSpeedChangeEventPayload | PlayPauseBlanketClickEventPayload | ShortcutPressEventPayload | TimeRangeNavigateEventPayload | CustomMediaPlayerUIEventPayload | FirstPlayedTrackEventPayload | PlayedTrackEventPayload;
export declare function fireAnalyticsEvent(payload: CustomMediaPlayerAnalyticsEventPayload, createAnalyticsEvent?: CreateUIAnalyticsEvent): void;
export declare const createAndFireMediaCustomMediaPlayerEvent: (payload: CustomMediaPlayerAnalyticsEventPayload) => (createAnalyticsEvent: CreateUIAnalyticsEvent) => import("@atlaskit/analytics-next").UIAnalyticsEvent;
