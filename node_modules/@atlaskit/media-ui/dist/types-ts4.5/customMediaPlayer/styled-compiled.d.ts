/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';
export interface MutedIndicatorProps {
    isMuted: boolean;
}
export type VolumeWrapperProps = {
    showSlider: boolean;
};
export declare const VolumeWrapper: ({ showSlider, children, ...props }: VolumeWrapperProps & React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>) => JSX.Element;
export declare const CurrentTime: ({ children, ...props }: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>) => JSX.Element;
export declare const TimeLine: React.ForwardRefExoticComponent<Omit<React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement>, "ref"> & React.RefAttributes<unknown>>;
export declare const CurrentTimeLine: ({ children, ...props }: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>) => JSX.Element;
export declare const Thumb: ({ children, ...props }: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>) => JSX.Element;
export declare const CurrentTimeLineThumb: React.ForwardRefExoticComponent<Omit<React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement>, "ref"> & React.RefAttributes<unknown>>;
export declare const BufferedTime: ({ children, ...props }: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>) => JSX.Element;
export declare const LeftControls: ({ children, ...props }: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>) => JSX.Element;
export declare const RightControls: ({ children, ...props }: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>) => JSX.Element;
type ControlsWrapperProps = {
    controlsHidden: boolean;
};
export declare const ControlsWrapper: React.ForwardRefExoticComponent<Omit<ControlsWrapperProps & React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement>, "ref"> & React.RefAttributes<unknown>>;
export declare const VolumeToggleWrapper: ({ isMuted, children, ...props }: MutedIndicatorProps & React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>) => JSX.Element;
export declare const VolumeTimeRangeWrapper: ({ children, ...props }: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>) => JSX.Element;
export declare const MutedIndicator: ({ isMuted, children, ...props }: MutedIndicatorProps & React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>) => JSX.Element;
interface CurrentTimeTooltipProps {
    isDragging: boolean;
    timeLineThumbIsHover: boolean;
    timeLineThumbIsFocus: boolean;
}
export declare const CurrentTimeTooltip: ({ isDragging, timeLineThumbIsHover, timeLineThumbIsFocus, children, ...props }: CurrentTimeTooltipProps & React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>) => JSX.Element;
export declare const TimeRangeWrapper: React.ForwardRefExoticComponent<Omit<React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement>, "ref"> & React.RefAttributes<unknown>>;
export {};
