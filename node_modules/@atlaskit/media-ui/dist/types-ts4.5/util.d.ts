import { type FileInfo } from './imageMetaData/types';
import SourceCodeIcon from '@atlaskit/icon-file-type/glyph/source-code/24';
export declare function dataURItoFile(dataURI: string, filename?: string): File;
export declare function fileToDataURI(blob: Blob): Promise<string>;
export declare function getFileInfo(file: File, src?: string): Promise<FileInfo>;
export declare function getFileInfoFromSrc(src: string, file?: File): Promise<FileInfo>;
export declare function fileToArrayBuffer(file: File): Promise<Uint8Array>;
export declare function loadImage(src: string): Promise<HTMLImageElement>;
export declare function readImageNaturalOrientationFromDOM(img: HTMLImageElement): {
    width: number;
    height: number;
};
export declare const findParentByClassname: (element: HTMLElement, className: string, maxParentElement?: HTMLElement) => HTMLElement | undefined;
interface MimeTypesRepresentation {
    label: string;
    mimeTypes: string[];
    icon: any;
}
export declare function getMimeIcon(mimeType: string, fileName: string): MimeTypesRepresentation | {
    label: string;
    icon: typeof SourceCodeIcon;
} | undefined;
export {};
