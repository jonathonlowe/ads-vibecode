"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TimeSaver = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var getDefaultTimeLocalStorageKey = function getDefaultTimeLocalStorageKey(id) {
  return "time-saver-default-time-".concat(id);
};

/**
 * Modules that stores watch time (a number) in local storage by unique identifier.
 * Used in Custom Media Player to enable the feature where a user would resume watching
 * from where they left off.
 */
var TimeSaver = exports.TimeSaver = /*#__PURE__*/function () {
  function TimeSaver(config) {
    (0, _classCallCheck2.default)(this, TimeSaver);
    this.config = config;
  }
  return (0, _createClass2.default)(TimeSaver, [{
    key: "defaultTime",
    get: function get() {
      if (this.config && localStorage) {
        try {
          var fileDefaultTime = localStorage.getItem(getDefaultTimeLocalStorageKey(this.config.contentId));
          if (fileDefaultTime) {
            return JSON.parse(fileDefaultTime);
          }
        } catch (e) {
          // Nothing to do, falling back to 0
        }
      }
      return 0;
    },
    set: function set(time) {
      if (this.config && localStorage) {
        try {
          localStorage.setItem(getDefaultTimeLocalStorageKey(this.config.contentId), JSON.stringify(time));
        } catch (e) {
          // Nothing to do, storing hasn't happened.
        }
      }
    }
  }]);
}();