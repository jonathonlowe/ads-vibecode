"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.SpinnerWrapper = exports.Blanket = void 0;
var _react = _interopRequireDefault(require("react"));
var _constants = require("@atlaskit/theme/constants");
var _spinner = _interopRequireDefault(require("@atlaskit/spinner"));
var _styled = _interopRequireDefault(require("@emotion/styled"));
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var overlayZindex = _constants.layers.modal() + 10;

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var Blanket = exports.Blanket = _styled.default.div({
  position: 'fixed',
  top: 0,
  left: 0,
  bottom: 0,
  right: 0,
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  zIndex: overlayZindex
});
Blanket.displayName = 'Blanket';

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var SpinnerWrapper = exports.SpinnerWrapper = _styled.default.div({
  position: 'absolute',
  top: '50%',
  left: '50%',
  transform: 'translate(-50%, -50%)'
});
SpinnerWrapper.displayName = 'SpinnerWrapper';
var defaultProps = {
  blankedColor: 'none',
  invertSpinnerColor: false
};
var _default = exports.default = function _default(_ref) {
  var blankedColor = _ref.blankedColor,
    invertSpinnerColor = _ref.invertSpinnerColor;
  return /*#__PURE__*/_react.default.createElement(Blanket, {
    style: {
      backgroundColor: blankedColor || defaultProps.blankedColor
    },
    "data-testid": 'media-modal-spinner-blanket'
  }, /*#__PURE__*/_react.default.createElement(SpinnerWrapper, null, /*#__PURE__*/_react.default.createElement(_spinner.default, {
    size: "large",
    appearance: invertSpinnerColor || defaultProps.invertSpinnerColor ? 'invert' : 'inherit',
    testId: 'media-modal-spinner'
  })));
};