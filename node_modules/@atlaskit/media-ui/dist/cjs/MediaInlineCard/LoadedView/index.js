"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MediaInlineCardLoadedView = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _react = _interopRequireDefault(require("react"));
var _Frame = require("../Frame");
var _IconAndTitleLayout = require("../IconAndTitleLayout");
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var MediaInlineCardLoadedView = exports.MediaInlineCardLoadedView = /*#__PURE__*/function (_React$Component) {
  function MediaInlineCardLoadedView() {
    (0, _classCallCheck2.default)(this, MediaInlineCardLoadedView);
    return _callSuper(this, MediaInlineCardLoadedView, arguments);
  }
  (0, _inherits2.default)(MediaInlineCardLoadedView, _React$Component);
  return (0, _createClass2.default)(MediaInlineCardLoadedView, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        _this$props$title = _this$props.title,
        title = _this$props$title === void 0 ? '' : _this$props$title,
        isSelected = _this$props.isSelected,
        onClick = _this$props.onClick,
        icon = _this$props.icon,
        _this$props$testId = _this$props.testId,
        testId = _this$props$testId === void 0 ? 'media-inline-card-loaded-view' : _this$props$testId,
        titlePrefix = _this$props.titlePrefix,
        innerRef = _this$props.innerRef;
      return /*#__PURE__*/_react.default.createElement(_Frame.Frame, {
        innerRef: innerRef,
        testId: testId,
        isSelected: isSelected,
        onClick: onClick
      }, /*#__PURE__*/_react.default.createElement(_IconAndTitleLayout.IconAndTitleLayout, {
        emoji: titlePrefix,
        icon: icon,
        title: title
      }));
    }
  }]);
}(_react.default.Component);