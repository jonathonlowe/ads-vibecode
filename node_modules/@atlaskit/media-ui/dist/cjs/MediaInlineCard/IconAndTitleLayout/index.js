"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IconAndTitleLayout = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _react = _interopRequireDefault(require("react"));
var _reactRenderImage = _interopRequireDefault(require("react-render-image"));
var _Icon = require("../Icon");
var _styled = require("./styled");
var _link = _interopRequireDefault(require("@atlaskit/icon/core/migration/link"));
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var IconAndTitleLayout = exports.IconAndTitleLayout = /*#__PURE__*/function (_React$Component) {
  function IconAndTitleLayout() {
    (0, _classCallCheck2.default)(this, IconAndTitleLayout);
    return _callSuper(this, IconAndTitleLayout, arguments);
  }
  (0, _inherits2.default)(IconAndTitleLayout, _React$Component);
  return (0, _createClass2.default)(IconAndTitleLayout, [{
    key: "renderAtlaskitIcon",
    value: function renderAtlaskitIcon() {
      var _this$props = this.props,
        icon = _this$props.icon,
        emoji = _this$props.emoji;
      if (emoji) {
        return /*#__PURE__*/_react.default.createElement(_styled.EmojiWrapper, null, emoji);
      }
      if (!icon || typeof icon === 'string') {
        return null;
      }
      return /*#__PURE__*/_react.default.createElement(_styled.IconWrapper, null, icon);
    }
  }, {
    key: "renderImageIcon",
    value: function renderImageIcon(errored, testId) {
      var url = this.props.icon;
      if (!url || typeof url !== 'string') {
        return null;
      }
      return /*#__PURE__*/_react.default.createElement(_reactRenderImage.default, {
        src: url,
        loaded: /*#__PURE__*/_react.default.createElement(_Icon.Icon
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
        , {
          className: "smart-link-icon",
          src: url,
          "data-testid": "".concat(testId, "-image")
        }),
        errored: errored
      });
    }
  }, {
    key: "renderIconPlaceholder",
    value: function renderIconPlaceholder(testId) {
      var defaultIcon = this.props.defaultIcon;
      if (defaultIcon) {
        return /*#__PURE__*/_react.default.createElement(_styled.IconWrapper, null, defaultIcon);
      }
      return /*#__PURE__*/_react.default.createElement(_styled.IconWrapper, null, /*#__PURE__*/_react.default.createElement(_link.default, {
        color: "currentColor",
        label: "link",
        LEGACY_size: "small",
        testId: "".concat(testId, "-default")
      }));
    }
  }, {
    key: "renderIcon",
    value: function renderIcon(testId) {
      // We render two kinds of icons here:
      // - Image: acquired from either DAC or Teamwork Platform Apps;
      // - Atlaskit Icon: an Atlaskit SVG;
      // Each of these are scaled down to 12x12.
      var icon = this.renderAtlaskitIcon();
      if (icon) {
        return icon;
      }
      var placeholder = this.renderIconPlaceholder(testId);
      var image = this.renderImageIcon(placeholder, testId);
      return image || placeholder;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
        children = _this$props2.children,
        title = _this$props2.title,
        titleColor = _this$props2.titleColor,
        _this$props2$testId = _this$props2.testId,
        testId = _this$props2$testId === void 0 ? 'media-inline-card-icon-and-title' : _this$props2$testId;
      return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_styled.IconTitleWrapper
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      , {
        style: titleColor ? {
          color: titleColor
        } : undefined
      }, /*#__PURE__*/_react.default.createElement(_styled.IconPositionWrapper, null, children || /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_styled.IconEmptyWrapper, null), this.renderIcon(testId))), /*#__PURE__*/_react.default.createElement("span", {
        "data-test-id": "title"
      }, title)));
    }
  }]);
}(_react.default.Component);