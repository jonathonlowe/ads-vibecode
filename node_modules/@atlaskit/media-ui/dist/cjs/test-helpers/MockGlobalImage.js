"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.disableMockGlobalImage = disableMockGlobalImage;
exports.enableMockGlobalImage = enableMockGlobalImage;
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var globalImage = global.Image;
var isErrorInsteadOfLoad;
var MockImage = /*#__PURE__*/function (_global$Image) {
  function MockImage() {
    var _this;
    (0, _classCallCheck2.default)(this, MockImage);
    _this = _callSuper(this, MockImage);
    window.setTimeout(function () {
      return _this[isErrorInsteadOfLoad ? 'onerror' : 'onload']();
    });
    return _this;
  }
  (0, _inherits2.default)(MockImage, _global$Image);
  return (0, _createClass2.default)(MockImage);
}(global.Image);
function enableMockGlobalImage() {
  var isError = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  global.Image = MockImage;
  isErrorInsteadOfLoad = isError;
}
function disableMockGlobalImage() {
  global.Image = globalImage;
}