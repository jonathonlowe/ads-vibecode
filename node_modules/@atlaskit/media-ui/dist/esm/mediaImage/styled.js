import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["style", "imageRef"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
/* eslint-disable @atlaskit/design-system/ensure-design-token-usage/preview */
import React from 'react';

/*
  TODO: https://product-fabric.atlassian.net/browse/CXP-3132

  We need to revisit omitting percentage values for Design Token since the parent applies transform(-50%, -50%) on it (packages/media/media-ui/src/mediaImage/index.tsx). This styling is complex and may potentially cause a bug if not treaded carefully.
*/

var imgStyle = {
  position: 'absolute',
  left: '50%',
  top: '50%',
  objectFit: 'contain',
  imageOrientation: 'none'
};
export var ImageComponent = function ImageComponent(props) {
  var style = props.style,
    imageRef = props.imageRef,
    otherProps = _objectWithoutProperties(props, _excluded);
  return (
    /*#__PURE__*/
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop, jsx-a11y/alt-text -- Ignored via go/DSP-18766
    React.createElement("img", _extends({}, otherProps, {
      ref: imageRef,
      style: _objectSpread(_objectSpread({}, imgStyle), style)
    }))
  );
};