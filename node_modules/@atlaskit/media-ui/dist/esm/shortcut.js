import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
import { Component } from 'react';
export var keyCodes = {
  space: 'Space',
  m: 'KeyM',
  rightArrow: 'ArrowRight',
  leftArrow: 'ArrowLeft'
};
export var Shortcut = /*#__PURE__*/function (_Component) {
  function Shortcut() {
    var _this;
    _classCallCheck(this, Shortcut);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, Shortcut, [].concat(args));
    _defineProperty(_this, "eventType", 'keydown');
    _defineProperty(_this, "keyHandler", function (e) {
      var _this$props = _this.props,
        handler = _this$props.handler,
        code = _this$props.code;
      if (code !== undefined && e.code === code) {
        handler();
      }
    });
    _defineProperty(_this, "init", function () {
      var _this$props$eventType = _this.props.eventType,
        eventType = _this$props$eventType === void 0 ? 'keydown' : _this$props$eventType;
      _this.eventType = eventType;
      document.addEventListener(_this.eventType, _this.keyHandler);
    });
    _defineProperty(_this, "release", function () {
      document.removeEventListener(_this.eventType, _this.keyHandler);
    });
    return _this;
  }
  _inherits(Shortcut, _Component);
  return _createClass(Shortcut, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.init();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.release();
    }
  }, {
    key: "render",
    value: function render() {
      return null;
    }
  }]);
}(Component);