import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
import React from 'react';
import { MediaTypeIcon as EmotionMediaTypeIcon } from './media-type-icon-emotion';
import { MediaTypeIcon as CompiledMediaTypeIcon } from './media-type-icon-compiled';
import { fg } from '@atlaskit/platform-feature-flags';
export { IconWrapper } from './media-type-icon-emotion';
export var MediaTypeIcon = /*#__PURE__*/function (_React$Component) {
  function MediaTypeIcon() {
    _classCallCheck(this, MediaTypeIcon);
    return _callSuper(this, MediaTypeIcon, arguments);
  }
  _inherits(MediaTypeIcon, _React$Component);
  return _createClass(MediaTypeIcon, [{
    key: "render",
    value: function render() {
      return fg('platform_media_compiled') ? /*#__PURE__*/React.createElement(CompiledMediaTypeIcon, this.props) : /*#__PURE__*/React.createElement(EmotionMediaTypeIcon, this.props);
    }
  }]);
}(React.Component);