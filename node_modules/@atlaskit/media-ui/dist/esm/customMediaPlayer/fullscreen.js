var capitalize = function capitalize(text) {
  return text.charAt(0).toUpperCase() + text.slice(1);
};
var browserPrefixes = ['', 'moz', 'webkit', 'ms'];
export var findVendorSpecificProp = function findVendorSpecificProp(object, propNames) {
  if (!Array.isArray(propNames)) {
    propNames = [propNames];
  }
  for (var i = 0; i < propNames.length; i++) {
    for (var j = 0; j < browserPrefixes.length; j++) {
      var propName = browserPrefixes[j] + propNames[i];
      if (object[propName]) {
        return propName;
      }
      var capPropName = browserPrefixes[j] + capitalize(propNames[i]);
      if (object[capPropName]) {
        return capPropName;
      }
    }
  }
};
export var requestFullscreen = function requestFullscreen(element) {
  var requestFullscreenProp = findVendorSpecificProp(element, [
  // The order here is important! Other way will make webkitRequestFullScreen to be picked up in chrome for example.
  'requestFullscreen', 'requestFullScreen']);
  if (element[requestFullscreenProp]) {
    element[requestFullscreenProp]();
  }
};
export var exitFullscreen = function exitFullscreen() {
  var exitFullScreenProp = findVendorSpecificProp(document, [
  // The order here is important! Other way will make webkitExitFullScreen to be picked up in chrome for example.
  'exitFullscreen', 'exitFullScreen']);
  if (document[exitFullScreenProp]) {
    document[exitFullScreenProp]();
  }
};
export var getFullscreenElement = function getFullscreenElement() {
  return findVendorSpecificProp(document, ['fullScreenElement', 'fullscreenElement']);
};
export var toggleFullscreen = function toggleFullscreen(element) {
  if (getFullscreenElement()) {
    exitFullscreen();
  } else if (element) {
    requestFullscreen(element);
  }
};