import { type CompoundClause, type Field, type FunctionOperand, type KeywordOperand, type ListOperand, type NotClause, type OrderBy, type Predicate, type Query, type TerminalClause } from '../types';
import { AbstractJastVisitor } from './abstract-jast-visitor';
export declare class JqlAnonymizerVisitor extends AbstractJastVisitor<string> {
    visitQuery: (query: Query) => string;
    visitField: (field: Field) => string;
    visitTerminalClause: (terminalClause: TerminalClause) => string;
    visitCompoundClause: (compoundClause: CompoundClause) => string;
    visitNotClause: (notClause: NotClause) => string;
    visitValueOperand: () => string;
    visitListOperand: (listOperand: ListOperand) => string;
    visitFunctionOperand: (functionOperand: FunctionOperand) => string;
    visitKeywordOperand: (keywordOperand: KeywordOperand) => string;
    visitPredicate: (predicate: Predicate) => string;
    visitOrderBy: (orderBy: OrderBy) => string;
    protected defaultResult(): string;
}
