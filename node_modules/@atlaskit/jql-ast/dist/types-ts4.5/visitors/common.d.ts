import { type CommonTokenStream, type ParserRuleContext, type Token } from 'antlr4ts';
import { type ErrorNode, type ParseTree, type RuleNode, type TerminalNode } from 'antlr4ts/tree';
import { type JQLParserVisitor } from '@atlaskit/jql-parser';
import { type Position } from '../types';
export declare abstract class JastBuildingVisitor<Result> implements JQLParserVisitor<Result> {
    tokens: CommonTokenStream;
    constructor(tokens: CommonTokenStream);
    visit(tree: ParseTree): Result;
    visitChildren(node: RuleNode): Result;
    visitErrorNode(node: ErrorNode): Result;
    visitTerminal(node: TerminalNode): Result;
}
export declare const getPositionFromToken: (startToken: Token, stopToken?: Token) => Position;
export declare const getPositionFromContext: (ctx: ParserRuleContext) => Position;
export declare const getPositionsFromTerminalNodes: (terminalNodes: TerminalNode[]) => Position[];
export declare const normalizeText: (text: string) => string;
