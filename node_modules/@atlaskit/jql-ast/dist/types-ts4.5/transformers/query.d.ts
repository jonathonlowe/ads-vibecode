import { type Clause, type CompoundOperatorValue, type OrderBy, type OrderByDirection, type OrderByField, type Query } from '../types';
/**
 * Append the provided clause to the query. If there is no previous `where` clause then it will be set to the provided
 * value, otherwise a compound clause will be formed using the provided compound operator.
 *
 * @param clause Clause to append
 * @param compoundOperatorValue Operator to use when appending to a compound clause
 */
export declare function appendClause(this: Query, clause: Clause, compoundOperatorValue: CompoundOperatorValue): void;
/**
 * Prepend the provided order by field to the list of fields in the order by node. If `orderBy` is undefined then a
 * new order by node is set with the provided field.
 *
 * @param orderField Field to add to the beginning of the order by field list
 */
export declare function prependOrderField(this: Query, orderField: OrderByField): void;
/**
 * Set the direction of the primary order by field to the provided value. If there is no primary order by field then
 * this function is a noop.
 *
 * @param orderDirection Direction to set for the order by clause
 */
export declare function setOrderDirection(this: Query, orderDirection: OrderByDirection): void;
export declare function removeClause(this: Query, clause: Clause): void;
/**
 * Replace orderBy with the provided orderBy node. If the orderBy node does not contain any fields, then the orderBy node
 * is removed from the query.
 *
 * @param orderBy orderBy to set for the new orderBy node
 */
export declare function replaceOrderBy(this: Query, orderBy: OrderBy): void;
/**
 * Replace the matching child clause with the provided `nextClause` node. If the clause to replace is not found as a
 * child of the current node then no changes will be made.
 *
 * @param clause Clause to be replaced
 * @param nextClause Clause to set as the new value
 */
export declare function replaceClause(this: Query, clause: Clause, nextClause: Clause): void;
/**
 * Remove the orderBy from the node.
 */
export declare function removeOrderBy(this: Query): void;
