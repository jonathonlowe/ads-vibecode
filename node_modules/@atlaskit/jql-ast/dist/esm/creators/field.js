import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import { sanitiseJqlString } from '../utils/sanitise-jql-string';
import { assignParent } from './common';
function acceptField(visitor) {
  return visitor.visitField ? visitor.visitField(this) : visitor.visitChildren(this);
}
function enterNode(listener) {
  listener.enterField && listener.enterField(this);
}
function exitNode(listener) {
  listener.exitField && listener.exitField(this);
}
function getChildren() {
  return this.properties ? _toConsumableArray(this.properties) : [];
}
export var field = function field(value, properties) {
  return fieldInternal(value, sanitiseJqlString(value), properties);
};
export var fieldInternal = function fieldInternal(value, text, properties) {
  var position = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  var node = {
    text: text,
    value: value,
    properties: properties,
    position: position,
    accept: acceptField,
    enterNode: enterNode,
    exitNode: exitNode,
    getChildren: getChildren,
    parent: null
  };
  assignParent(node);
  return node;
};