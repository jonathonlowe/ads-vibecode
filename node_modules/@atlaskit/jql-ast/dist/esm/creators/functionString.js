import { sanitiseJqlString } from '../utils/sanitise-jql-string';
import { noChildren } from './common';
function acceptFunctionString(visitor) {
  return visitor.visitFunction ? visitor.visitFunction(this) : visitor.visitChildren(this);
}
function enterNode(listener) {
  listener.enterFunction && listener.enterFunction(this);
}
function exitNode(listener) {
  listener.exitFunction && listener.exitFunction(this);
}
export var functionString = function functionString(value) {
  return functionStringInternal(value, sanitiseJqlString(value));
};
export var functionStringInternal = function functionStringInternal(value, text) {
  var position = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  return {
    text: text,
    value: value,
    position: position,
    accept: acceptFunctionString,
    enterNode: enterNode,
    exitNode: exitNode,
    getChildren: noChildren,
    parent: null
  };
};