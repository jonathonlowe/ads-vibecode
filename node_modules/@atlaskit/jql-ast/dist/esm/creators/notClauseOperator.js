import { CLAUSE_OPERATOR_NOT } from '../constants';
import { noChildren } from './common';
function acceptNotClauseOperator(visitor) {
  return visitor.visitNotClauseOperator ? visitor.visitNotClauseOperator(this) : visitor.visitChildren(this);
}
function enterNode(listener) {
  listener.enterNotClauseOperator && listener.enterNotClauseOperator(this);
}
function exitNode(listener) {
  listener.exitNotClauseOperator && listener.exitNotClauseOperator(this);
}
export var notClauseOperator = function notClauseOperator() {
  return notClauseOperatorInternal();
};
export var notClauseOperatorInternal = function notClauseOperatorInternal() {
  var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
  return {
    value: CLAUSE_OPERATOR_NOT,
    position: position,
    accept: acceptNotClauseOperator,
    enterNode: enterNode,
    exitNode: exitNode,
    getChildren: noChildren,
    parent: null
  };
};