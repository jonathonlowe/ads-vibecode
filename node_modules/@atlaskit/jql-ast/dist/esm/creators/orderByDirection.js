import { noChildren } from './common';
function acceptOrderByDirection(visitor) {
  return visitor.visitOrderByDirection ? visitor.visitOrderByDirection(this) : visitor.visitChildren(this);
}
function enterNode(listener) {
  listener.enterOrderByDirection && listener.enterOrderByDirection(this);
}
function exitNode(listener) {
  listener.exitOrderByDirection && listener.exitOrderByDirection(this);
}
export var orderByDirection = function orderByDirection(value) {
  return orderByDirectionInternal(value);
};
export var orderByDirectionInternal = function orderByDirectionInternal(value) {
  var position = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  return {
    value: value,
    position: position,
    accept: acceptOrderByDirection,
    enterNode: enterNode,
    exitNode: exitNode,
    getChildren: noChildren,
    parent: null
  };
};