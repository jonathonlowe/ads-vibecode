import { NODE_TYPE_OPERAND, OPERAND_EMPTY, OPERAND_TYPE_KEYWORD } from '../constants';
import { noChildren } from './common';
function acceptKeywordOperand(visitor) {
  return visitor.visitKeywordOperand ? visitor.visitKeywordOperand(this) : visitor.visitChildren(this);
}
function enterNode(listener) {
  listener.enterKeywordOperand && listener.enterKeywordOperand(this);
}
function exitNode(listener) {
  listener.exitKeywordOperand && listener.exitKeywordOperand(this);
}
export var keywordOperand = function keywordOperand() {
  return keywordOperandInternal(OPERAND_EMPTY);
};
export var keywordOperandInternal = function keywordOperandInternal(value) {
  var position = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  return {
    type: NODE_TYPE_OPERAND,
    operandType: OPERAND_TYPE_KEYWORD,
    value: value,
    position: position,
    accept: acceptKeywordOperand,
    enterNode: enterNode,
    exitNode: exitNode,
    getChildren: noChildren,
    parent: null
  };
};