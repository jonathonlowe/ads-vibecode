import { NODE_TYPE_OPERAND, OPERAND_TYPE_LIST } from '../constants';
import { appendOperand } from '../transformers/listOperand';
import { assignParent } from './common';
function acceptListOperand(visitor) {
  return visitor.visitListOperand ? visitor.visitListOperand(this) : visitor.visitChildren(this);
}
function enterNode(listener) {
  listener.enterListOperand && listener.enterListOperand(this);
}
function exitNode(listener) {
  listener.exitListOperand && listener.exitListOperand(this);
}
function getChildren() {
  return [...this.values];
}
export const listOperand = values => listOperandInternal(values);
export const listOperandInternal = (values, position = null) => {
  const node = {
    type: NODE_TYPE_OPERAND,
    operandType: OPERAND_TYPE_LIST,
    values,
    position,
    accept: acceptListOperand,
    enterNode,
    exitNode,
    getChildren,
    parent: null,
    appendOperand
  };
  assignParent(node);
  return node;
};