import { NODE_TYPE_OPERAND, OPERAND_EMPTY, OPERAND_TYPE_KEYWORD } from '../constants';
import { noChildren } from './common';
function acceptKeywordOperand(visitor) {
  return visitor.visitKeywordOperand ? visitor.visitKeywordOperand(this) : visitor.visitChildren(this);
}
function enterNode(listener) {
  listener.enterKeywordOperand && listener.enterKeywordOperand(this);
}
function exitNode(listener) {
  listener.exitKeywordOperand && listener.exitKeywordOperand(this);
}
export const keywordOperand = () => keywordOperandInternal(OPERAND_EMPTY);
export const keywordOperandInternal = (value, position = null) => ({
  type: NODE_TYPE_OPERAND,
  operandType: OPERAND_TYPE_KEYWORD,
  value,
  position,
  accept: acceptKeywordOperand,
  enterNode,
  exitNode,
  getChildren: noChildren,
  parent: null
});