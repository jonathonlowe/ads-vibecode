import { sanitiseJqlString } from '../utils/sanitise-jql-string';
import { assignParent } from './common';
function acceptField(visitor) {
  return visitor.visitField ? visitor.visitField(this) : visitor.visitChildren(this);
}
function enterNode(listener) {
  listener.enterField && listener.enterField(this);
}
function exitNode(listener) {
  listener.exitField && listener.exitField(this);
}
function getChildren() {
  return this.properties ? [...this.properties] : [];
}
export const field = (value, properties) => {
  return fieldInternal(value, sanitiseJqlString(value), properties);
};
export const fieldInternal = (value, text, properties, position = null) => {
  const node = {
    text,
    value,
    properties,
    position,
    accept: acceptField,
    enterNode,
    exitNode,
    getChildren,
    parent: null
  };
  assignParent(node);
  return node;
};