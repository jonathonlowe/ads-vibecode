import { noChildren } from './common';
function acceptCompoundOperator(visitor) {
  return visitor.visitCompoundOperator ? visitor.visitCompoundOperator(this) : visitor.visitChildren(this);
}
function enterNode(listener) {
  listener.enterCompoundOperator && listener.enterCompoundOperator(this);
}
function exitNode(listener) {
  listener.exitCompoundOperator && listener.exitCompoundOperator(this);
}
export const compoundOperator = value => compoundOperatorInternal(value, []);
export const compoundOperatorInternal = (value, operatorPositions) => ({
  value,
  positions: operatorPositions,
  position: null,
  accept: acceptCompoundOperator,
  enterNode,
  exitNode,
  getChildren: noChildren,
  parent: null
});