import { noChildren } from './common';
function acceptPredicateOperator(visitor) {
  return visitor.visitPredicateOperator ? visitor.visitPredicateOperator(this) : visitor.visitChildren(this);
}
function enterNode(listener) {
  listener.enterPredicateOperator && listener.enterPredicateOperator(this);
}
function exitNode(listener) {
  listener.exitPredicateOperator && listener.exitPredicateOperator(this);
}
export const predicateOperator = value => predicateOperatorInternal(value, value);
export const predicateOperatorInternal = (value, text, position = null) => ({
  text,
  value,
  position,
  accept: acceptPredicateOperator,
  enterNode,
  exitNode,
  getChildren: noChildren,
  parent: null
});