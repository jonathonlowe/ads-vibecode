import { type JqlArgumentListContext, type JqlEmptyContext, type JqlFunctionContext, type JqlFunctionNameContext, type JqlListContext, type JqlOperandContext, type JqlValueContext } from '@atlaskit/jql-parser';
import { type Argument, type FunctionOperand, type FunctionString, type KeywordOperand, type ListOperand, type Operand, type ValueOperand } from '../types';
import { ArgumentVisitor } from './argument';
import { JastBuildingVisitor } from './common';
import { NumberVisitor } from './number';
import { StringVisitor } from './string';
export declare class OperandVisitor extends JastBuildingVisitor<Operand | void> {
    stringVisitor: StringVisitor;
    numberVisitor: NumberVisitor;
    functionNameVisitor: FunctionNameVisitor;
    argumentListVisitor: ArgumentListVisitor;
    visitJqlOperand: (ctx: JqlOperandContext) => Operand | void;
    visitJqlEmpty: (ctx: JqlEmptyContext) => KeywordOperand | void;
    visitJqlValue: (ctx: JqlValueContext) => ValueOperand | void;
    visitJqlList: (ctx: JqlListContext) => ListOperand;
    visitJqlFunction: (ctx: JqlFunctionContext) => FunctionOperand;
}
declare class FunctionNameVisitor extends JastBuildingVisitor<FunctionString> {
    stringVisitor: StringVisitor;
    visitJqlFunctionName: (ctx: JqlFunctionNameContext) => FunctionString;
}
declare class ArgumentListVisitor extends JastBuildingVisitor<Argument[]> {
    argumentVisitor: ArgumentVisitor;
    visitJqlArgumentList: (ctx: JqlArgumentListContext) => Argument[];
}
export {};
