"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.remove = remove;
exports.removeClause = removeClause;
exports.replace = replace;
exports.replaceClause = replaceClause;
var _common = require("../creators/common");
/**
 * Remove the current node from its parent. The parent node is responsible for implementing the logic to remove any
 * references to the child node.
 */
function remove() {
  if (this.parent) {
    this.parent.removeClause(this);
  }
}

/**
 * If the clause to remove is not found as a child of the current node then no changes will be made. Otherwise, this
 * node will be removed entirely.
 *
 * @param clause Clause to remove
 */
function removeClause(clause) {
  if (this.clause === clause) {
    this.remove();
  }
}

/**
 * Replace the current node from its parent with the provided node. The parent node is responsible for implementing
 * the logic to replace any references to the child node.
 */
function replace(nextClause) {
  if (this.parent) {
    this.parent.replaceClause(this, nextClause);
  }
}

/**
 * Replace the matching child clause with the provided `nextClause` node. If the clause to replace is not found as a
 * child of the current node then no changes will be made.
 *
 * @param clause Clause to be replaced
 * @param nextClause Clause to set as the new value
 */
function replaceClause(clause, nextClause) {
  if (this.clause === clause) {
    this.clause = nextClause;
    (0, _common.assignParent)(this);
  }
}