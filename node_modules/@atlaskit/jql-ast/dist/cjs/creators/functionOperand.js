"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.functionOperandInternal = exports.functionOperand = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _constants = require("../constants");
var _common = require("./common");
function acceptFunctionOperand(visitor) {
  return visitor.visitFunctionOperand ? visitor.visitFunctionOperand(this) : visitor.visitChildren(this);
}
function enterNode(listener) {
  listener.enterFunctionOperand && listener.enterFunctionOperand(this);
}
function exitNode(listener) {
  listener.exitFunctionOperand && listener.exitFunctionOperand(this);
}
function getChildren() {
  return [this.function].concat((0, _toConsumableArray2.default)(this.arguments));
}
var functionOperand = exports.functionOperand = function functionOperand(functionString) {
  var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  return functionOperandInternal(functionString, args);
};
var functionOperandInternal = exports.functionOperandInternal = function functionOperandInternal(functionString, args) {
  var position = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  var node = {
    type: _constants.NODE_TYPE_OPERAND,
    operandType: _constants.OPERAND_TYPE_FUNCTION,
    function: functionString,
    arguments: args,
    position: position,
    accept: acceptFunctionOperand,
    enterNode: enterNode,
    exitNode: exitNode,
    getChildren: getChildren,
    parent: null
  };
  (0, _common.assignParent)(node);
  return node;
};