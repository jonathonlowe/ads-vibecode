"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.notClauseInternal = exports.notClause = void 0;
var _constants = require("../constants");
var _notClause = require("../transformers/notClause");
var _common = require("./common");
var _notClauseOperator = require("./notClauseOperator");
function acceptNotClause(visitor) {
  return visitor.visitNotClause ? visitor.visitNotClause(this) : visitor.visitChildren(this);
}
function enterNode(listener) {
  listener.enterNotClause && listener.enterNotClause(this);
}
function exitNode(listener) {
  listener.exitNotClause && listener.exitNotClause(this);
}
function getChildren() {
  return [this.operator, this.clause];
}
var notClause = exports.notClause = function notClause(clause) {
  return notClauseInternal(clause, (0, _notClauseOperator.notClauseOperator)());
};
var notClauseInternal = exports.notClauseInternal = function notClauseInternal(clause, operator) {
  var position = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  var node = {
    type: _constants.NODE_TYPE_CLAUSE,
    clauseType: _constants.CLAUSE_TYPE_NOT,
    clause: clause,
    operator: operator,
    position: position,
    accept: acceptNotClause,
    enterNode: enterNode,
    exitNode: exitNode,
    getChildren: getChildren,
    parent: null,
    remove: _notClause.remove,
    removeClause: _notClause.removeClause,
    replace: _notClause.replace,
    replaceClause: _notClause.replaceClause
  };
  (0, _common.assignParent)(node);
  return node;
};