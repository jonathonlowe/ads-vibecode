"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mentionRenderedUfoExperience = exports.UfoErrorBoundary = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _react = _interopRequireDefault(require("react"));
var _ufo = require("@atlaskit/ufo");
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var mentionRenderedUfoExperience = exports.mentionRenderedUfoExperience = new _ufo.ConcurrentExperience('mention-rendered', {
  platform: {
    component: 'mention'
  },
  type: _ufo.ExperienceTypes.Load,
  performanceType: _ufo.ExperiencePerformanceTypes.PageSegmentLoad
});
var UfoErrorBoundary = exports.UfoErrorBoundary = /*#__PURE__*/function (_React$Component) {
  function UfoErrorBoundary() {
    (0, _classCallCheck2.default)(this, UfoErrorBoundary);
    return _callSuper(this, UfoErrorBoundary, arguments);
  }
  (0, _inherits2.default)(UfoErrorBoundary, _React$Component);
  return (0, _createClass2.default)(UfoErrorBoundary, [{
    key: "componentDidCatch",
    value: function componentDidCatch() {
      mentionRenderedUfoExperience.getInstance(this.props.id).failure();
    }
  }, {
    key: "render",
    value: function render() {
      return this.props.children;
    }
  }]);
}(_react.default.Component);