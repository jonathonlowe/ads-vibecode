"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _react = _interopRequireDefault(require("react"));
var _MentionHighlightHelpers = require("../MentionItem/MentionHighlightHelpers");
var _styles = require("./styles");
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var UserMentionDescriptionByline = exports.default = /*#__PURE__*/function (_React$PureComponent) {
  function UserMentionDescriptionByline() {
    (0, _classCallCheck2.default)(this, UserMentionDescriptionByline);
    return _callSuper(this, UserMentionDescriptionByline, arguments);
  }
  (0, _inherits2.default)(UserMentionDescriptionByline, _React$PureComponent);
  return (0, _createClass2.default)(UserMentionDescriptionByline, [{
    key: "render",
    value: function render() {
      var _this$props$mention = this.props.mention,
        highlight = _this$props$mention.highlight,
        name = _this$props$mention.name,
        nickname = _this$props$mention.nickname;
      var nicknameHighlights = highlight && highlight.nickname;
      if (name === nickname) {
        return null;
      }
      return (0, _MentionHighlightHelpers.renderHighlight)(_styles.DescriptionBylineStyle, nickname, nicknameHighlights, '@');
    }
  }]);
}(_react.default.PureComponent);