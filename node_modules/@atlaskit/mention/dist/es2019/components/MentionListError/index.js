import React from 'react';
import Heading from '@atlaskit/heading';
import { Stack, Text, xcss } from '@atlaskit/primitives';
import { DefaultAdvisedAction, DefaultHeadline, DifferentText, LoginAgain } from '../../util/i18n';
import { GenericErrorIllustration } from './GenericErrorIllustration';
const advisedActionMessages = {
  '401': LoginAgain,
  '403': DifferentText,
  default: DefaultAdvisedAction
};
export default class MentionListError extends React.PureComponent {
  /**
   * Translate the supplied Error into a message suitable for display in the MentionList.
   *
   * @param error the error to be displayed
   */
  static getAdvisedActionMessage(error) {
    if (error && error.hasOwnProperty('statusCode')) {
      const httpError = error;
      return advisedActionMessages[httpError.statusCode.toString()] || advisedActionMessages.default;
    }
    return advisedActionMessages.default;
  }
  render() {
    const {
      error
    } = this.props;
    const ErrorMessage = MentionListError.getAdvisedActionMessage(error);
    return /*#__PURE__*/React.createElement(Stack, {
      space: "space.400",
      alignBlock: "center",
      alignInline: "center",
      xcss: mentionListErrorStyles
    }, /*#__PURE__*/React.createElement(GenericErrorIllustration, null), /*#__PURE__*/React.createElement(Stack, {
      space: "space.100"
    }, /*#__PURE__*/React.createElement(Heading, {
      size: "xsmall",
      as: "div"
    }, /*#__PURE__*/React.createElement(DefaultHeadline, null)), /*#__PURE__*/React.createElement(Text, {
      as: "p",
      color: "color.text.subtle"
    }, /*#__PURE__*/React.createElement(ErrorMessage, null))));
  }
}
const mentionListErrorStyles = xcss({
  paddingBlock: 'space.500',
  textAlign: 'center'
});