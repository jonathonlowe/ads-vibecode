import { type UIAnalyticsEvent, type WithAnalyticsEventsProps, type CreateUIAnalyticsEvent } from '@atlaskit/analytics-next';
import { type GasPayload } from '@atlaskit/analytics-gas-types';
export declare const SLI_EVENT_TYPE = "sli";
export declare const SMART_EVENT_TYPE = "smart";
export declare const fireAnalyticsMentionTypeaheadEvent: (props: WithAnalyticsEventsProps) => (action: string, duration: number, userIds?: string[], query?: string) => void;
export declare const fireAnalyticsMentionEvent: (createEvent: CreateUIAnalyticsEvent) => (actionSubject: string, action: string, text: string, id: string, accessLevel?: string) => UIAnalyticsEvent;
export declare const fireSliAnalyticsEvent: (props: WithAnalyticsEventsProps) => (actionSubject: string, action: string) => void;
export declare const buildSliPayload: (actionSubject: string, action: string, attributes?: {
    [key: string]: any;
} | undefined) => GasPayload;
export declare const fireAnalyticsMentionHydrationEvent: (props: WithAnalyticsEventsProps) => (action: string, userId: string, fromCache: boolean, duration: number) => void;
export declare const fireAnalytics: (firePrivateAnalyticsEvent?: Function) => (eventName: string, text: string, accessLevel?: string) => void;
