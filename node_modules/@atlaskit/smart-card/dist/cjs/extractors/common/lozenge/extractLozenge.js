"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extractLozenge = void 0;
var _linkExtractors = require("@atlaskit/link-extractors");
var _extractState = require("./extractState");
var _extractTag = require("./extractTag");
var _extractTaskStatus = require("./extractTaskStatus");
var _extractTaskType = require("./extractTaskType");
var extractLozenge = exports.extractLozenge = function extractLozenge(jsonLd) {
  var type = (0, _linkExtractors.extractType)(jsonLd);
  if (type) {
    if (type.includes('atlassian:Task')) {
      var jsonLdTask = jsonLd;
      var lozengeFromTag = (0, _extractTag.extractTag)(jsonLdTask);
      var lozengeFromStatus = (0, _extractTaskStatus.extractTaskStatus)(jsonLdTask);
      var lozengeFromTaskType = extractLozengeFromTaskType(jsonLdTask);
      return lozengeFromTag || lozengeFromStatus || lozengeFromTaskType;
    }
    if (type.includes('atlassian:UndefinedLink')) {
      return {
        text: 'UNDEFINED',
        appearance: 'inprogress'
      };
    }

    // casting it because `extractState` can safely handle missing properties
    return (0, _extractState.extractState)(jsonLd);
  }
};
var extractLozengeFromTaskType = function extractLozengeFromTaskType(jsonLdTask) {
  var taskType = (0, _extractTaskType.extractTaskType)(jsonLdTask);
  if (taskType && taskType.name) {
    return {
      text: taskType.name,
      appearance: 'success'
    };
  }
};