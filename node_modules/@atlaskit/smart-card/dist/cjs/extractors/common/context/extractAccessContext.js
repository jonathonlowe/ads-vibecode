"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extractRequestAccessContextImproved = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _messages = require("../../../messages");
var _analytics = require("../../../utils/analytics");
var _ForbiddenAction = require("../../../view/common/access/ForbiddenAction");
var _extractHostname = _interopRequireDefault(require("../hostname/extractHostname"));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var extractRequestAccessContextImproved = exports.extractRequestAccessContextImproved = function extractRequestAccessContextImproved(_ref) {
  var _jsonLd$requestAccess;
  var jsonLd = _ref.jsonLd,
    url = _ref.url,
    product = _ref.product,
    createAnalyticsEvent = _ref.createAnalyticsEvent;
  var requestAccess = jsonLd !== null && jsonLd !== void 0 && jsonLd.requestAccess ? _objectSpread(_objectSpread({}, jsonLd === null || jsonLd === void 0 ? void 0 : jsonLd.requestAccess), {}, {
    hostname: (0, _extractHostname.default)(url)
  }) : undefined;
  switch (jsonLd === null || jsonLd === void 0 || (_jsonLd$requestAccess = jsonLd.requestAccess) === null || _jsonLd$requestAccess === void 0 ? void 0 : _jsonLd$requestAccess.accessType) {
    case 'DIRECT_ACCESS':
      return _objectSpread(_objectSpread({}, requestAccess), {}, {
        titleMessageKey: 'direct_access_title',
        descriptiveMessageKey: 'direct_access_description',
        callToActionMessageKey: 'direct_access',
        action: (0, _ForbiddenAction.ForbiddenAction)(function () {
          if (createAnalyticsEvent !== undefined) {
            createAnalyticsEvent({
              action: 'clicked',
              actionSubject: 'button',
              actionSubjectId: 'crossJoin',
              eventType: 'ui'
            }).fire(_analytics.ANALYTICS_CHANNEL);
          }
          window.open(url);
        }, 'direct_access', _messages.messages.direct_access, {
          product: product
        })
      });
    case 'REQUEST_ACCESS':
      return _objectSpread(_objectSpread({}, requestAccess), {}, {
        titleMessageKey: 'default_no_access_title',
        descriptiveMessageKey: 'request_access_description',
        callToActionMessageKey: 'request_access',
        action: (0, _ForbiddenAction.ForbiddenAction)(function () {
          if (createAnalyticsEvent !== undefined) {
            createAnalyticsEvent({
              action: 'clicked',
              actionSubject: 'button',
              actionSubjectId: 'requestAccess',
              eventType: 'ui'
            }).fire(_analytics.ANALYTICS_CHANNEL);
          }
          window.open(url);
        }, 'request_access', _messages.messages.request_access)
      });
    case 'PENDING_REQUEST_EXISTS':
      return _objectSpread(_objectSpread({}, requestAccess), {}, {
        titleMessageKey: 'request_access_pending_title',
        descriptiveMessageKey: 'request_access_pending_description',
        callToActionMessageKey: 'request_access_pending',
        action: (0, _ForbiddenAction.ForbiddenAction)(function () {
          return window.open(url);
        }, 'request_access_pending', _messages.messages.request_access_pending),
        buttonDisabled: true
      });
    case 'DENIED_REQUEST_EXISTS':
      return _objectSpread(_objectSpread({}, requestAccess), {}, {
        titleMessageKey: 'forbidden_title',
        descriptiveMessageKey: 'request_denied_description'
      });
    case 'ACCESS_EXISTS':
      if ((jsonLd === null || jsonLd === void 0 ? void 0 : jsonLd.visibility) === 'not_found') {
        return _objectSpread(_objectSpread({}, requestAccess), {}, {
          titleMessageKey: 'not_found_title',
          descriptiveMessageKey: 'not_found_description'
        });
      }
      return _objectSpread(_objectSpread({}, requestAccess), {}, {
        titleMessageKey: 'forbidden_title',
        descriptiveMessageKey: 'access_exists_description',
        callToActionMessageKey: 'request_access',
        action: (0, _ForbiddenAction.ForbiddenAction)(function () {
          if (createAnalyticsEvent !== undefined) {
            createAnalyticsEvent({
              action: 'clicked',
              actionSubject: 'button',
              actionSubjectId: 'requestAccess',
              eventType: 'ui'
            }).fire(_analytics.ANALYTICS_CHANNEL);
          }
          window.open(url);
        }, 'access_exists', _messages.messages.request_access)
      });
    case 'FORBIDDEN':
      return _objectSpread(_objectSpread({}, requestAccess), {}, {
        titleMessageKey: 'forbidden_title',
        descriptiveMessageKey: 'forbidden_description'
      });
    default:
      return requestAccess;
  }
};