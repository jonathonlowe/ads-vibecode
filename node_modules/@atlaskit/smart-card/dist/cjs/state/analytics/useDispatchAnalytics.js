"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useDispatchAnalytics = void 0;
var _react = require("react");
var _analyticsNext = require("@atlaskit/analytics-next");
var _analytics = require("../../utils/analytics");
/**
 * Hook designed to use a handler if provided (ideally not)
 * Use this for the short-term to support deprecating `analyticsHandler`s that are being provided externally,
 * but fallback to the dispatch provided by `useAnalyticsEvents`
 *
 * In future, potentially use this hook to feature flag the channel we are dispatching to
 */
var useDispatchAnalytics = exports.useDispatchAnalytics = function useDispatchAnalytics(handler) {
  var _useAnalyticsEvents = (0, _analyticsNext.useAnalyticsEvents)(),
    createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;
  return {
    dispatchAnalytics: (0, _react.useMemo)(function () {
      if (handler) {
        return handler;
      }
      return function (payload) {
        createAnalyticsEvent(payload).fire(_analytics.ANALYTICS_CHANNEL);
      };
    }, [handler, createAnalyticsEvent])
  };
};