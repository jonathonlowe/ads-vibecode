"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mark = exports.getMeasureName = exports.getMeasure = exports.getMarkName = exports.create = exports.clearMeasures = exports.clearMarks = void 0;
var isPerformanceAPIAvailable = function isPerformanceAPIAvailable() {
  return typeof window !== 'undefined' && 'performance' in window && ['measure', 'clearMeasures', 'clearMarks', 'getEntriesByName', 'getEntriesByType'].every(function (api) {
    return !!performance[api];
  });
};
var hasPerformanceAPIAvailable = isPerformanceAPIAvailable();
var getMarkName = exports.getMarkName = function getMarkName(id, status) {
  return "".concat(status, ":").concat(id);
};
var getMeasureName = exports.getMeasureName = function getMeasureName(id, status) {
  return "time-to-".concat(status, ":").concat(id);
};
var clearMarks = exports.clearMarks = function clearMarks(id) {
  if (hasPerformanceAPIAvailable) {
    var marks = performance.getEntriesByType('mark').filter(function (mark) {
      return mark.name.includes(id);
    });
    marks.forEach(function (mark) {
      return performance.clearMarks(mark.name);
    });
  }
};
var clearMeasures = exports.clearMeasures = function clearMeasures(id) {
  if (hasPerformanceAPIAvailable) {
    var measures = performance.getEntriesByType('measure').filter(function (measure) {
      return measure.name.includes(id);
    });
    measures.forEach(function (measure) {
      return performance.clearMeasures(measure.name);
    });
  }
};
var getMark = function getMark(id, status) {
  if (hasPerformanceAPIAvailable) {
    var name = getMarkName(id, status);
    var marks = performance.getEntriesByName(name);
    if (marks.length > 0) {
      return marks[0];
    }
    return undefined;
  }
};
var getMeasure = exports.getMeasure = function getMeasure(id, status) {
  if (hasPerformanceAPIAvailable) {
    var name = getMeasureName(id, status);
    var measures = performance.getEntriesByName(name);
    if (measures.length > 0) {
      return measures[0];
    }
    return undefined;
  }
};
var mark = exports.mark = function mark(id, status) {
  if (hasPerformanceAPIAvailable) {
    var name = getMarkName(id, status);
    performance.mark(name);
  }
};
var create = exports.create = function create(id, status) {
  if (hasPerformanceAPIAvailable) {
    var name = getMeasureName(id, status);
    var measure = getMeasure(id, status);
    if (!measure) {
      var startMark = getMark(id, 'pending');
      var endMark = getMark(id, status);
      if (startMark && endMark) {
        performance.measure(name, startMark.name, endMark.name);
      }
    }
  }
};