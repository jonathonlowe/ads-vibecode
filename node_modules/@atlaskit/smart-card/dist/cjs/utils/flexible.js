"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isStyleCacheProvider = exports.isFlexibleUiTitleBlock = exports.isFlexibleUiPreviewBlock = exports.isFlexibleUiFooterBlock = exports.isFlexibleUiElement = exports.isFlexibleUiCard = exports.isFlexibleUiBlock = void 0;
var _react = _interopRequireDefault(require("react"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _blocks = _interopRequireWildcard(require("../view/FlexibleCard/components/blocks"));
var Blocks = _blocks;
var Elements = _interopRequireWildcard(require("../view/FlexibleCard/components/elements"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var isFlexibleUiCard = exports.isFlexibleUiCard = function isFlexibleUiCard(children, ui) {
  if ((0, _platformFeatureFlags.fg)('platform-linking-flexible-card-openness')) {
    if (ui !== null && ui !== void 0 && ui.removeBlockRestriction) {
      var _React$Children$toArr;
      return children && ((_React$Children$toArr = _react.default.Children.toArray(children)) === null || _React$Children$toArr === void 0 ? void 0 : _React$Children$toArr.length) > 0 ? true : false;
    }
  }
  if (children && _react.default.Children.toArray(children).some(function (child) {
    return _isFlexibleUiTitleBlock(child);
  })) {
    return true;
  }
  return false;
};
var isStyleCacheProvider = exports.isStyleCacheProvider = function isStyleCacheProvider(node) {
  var _node$type, _node$type2;
  if (typeof node.type !== 'string' && ((_node$type = node.type) === null || _node$type === void 0 ? void 0 : _node$type.name) === 'StyleCacheProvider' && node.props.children) {
    return true;
  } else if (typeof node.type !== 'string' && ((_node$type2 = node.type) === null || _node$type2 === void 0 ? void 0 : _node$type2.name) === 'CC' && node.props.children) {
    return true;
  }
  return false;
};
var _isFlexibleUiBlock = exports.isFlexibleUiBlock = function isFlexibleUiBlock(node) {
  if (! /*#__PURE__*/_react.default.isValidElement(node)) {
    return false;
  }
  if (isStyleCacheProvider(node)) {
    // Component wrapped with compiled at runtime, check for children
    var isChildrenValid = true;
    _react.default.Children.map(node.props.children, function (child) {
      var _child$type;
      if (! /*#__PURE__*/_react.default.isValidElement(child)) {
        isChildrenValid = false;
        return;
      }
      if (typeof child.type !== 'string' && ((_child$type = child.type) === null || _child$type === void 0 ? void 0 : _child$type.name) !== 'Style') {
        isChildrenValid = _isFlexibleUiBlock(child);
      }
    });
    return isChildrenValid;
  }
  if (Object.values(Blocks).some(function (type) {
    return type === node.type;
  })) {
    return true;
  }
  return false;
};
var _isFlexibleUiElement = exports.isFlexibleUiElement = function isFlexibleUiElement(node) {
  if (! /*#__PURE__*/_react.default.isValidElement(node)) {
    return false;
  }
  if (Object.values(Elements).some(function (type) {
    return type === node.type;
  })) {
    return true;
  }
  if (isStyleCacheProvider(node)) {
    // Component wrapped with compiled at runtime, check for children
    var isChildrenValid = true;
    _react.default.Children.map(node.props.children, function (child) {
      var _child$type2;
      if (! /*#__PURE__*/_react.default.isValidElement(child)) {
        isChildrenValid = false;
        return;
      }
      if (typeof child.type !== 'string' && ((_child$type2 = child.type) === null || _child$type2 === void 0 ? void 0 : _child$type2.name) !== 'Style') {
        isChildrenValid = _isFlexibleUiElement(child);
      }
    });
    return isChildrenValid;
  }
  return false;
};
var _isFlexibleUiTitleBlock = exports.isFlexibleUiTitleBlock = function isFlexibleUiTitleBlock(node) {
  if (! /*#__PURE__*/_react.default.isValidElement(node)) {
    return false;
  }
  if (node.type === _blocks.TitleBlock) {
    return true;
  }
  if (isStyleCacheProvider(node)) {
    // Component wrapped with compiled at runtime, check for children
    var isChildrenValid = true;
    _react.default.Children.map(node.props.children, function (child) {
      var _child$type3;
      if (! /*#__PURE__*/_react.default.isValidElement(child)) {
        isChildrenValid = false;
        return;
      }
      if (typeof child.type !== 'string' && ((_child$type3 = child.type) === null || _child$type3 === void 0 ? void 0 : _child$type3.name) !== 'Style') {
        isChildrenValid = _isFlexibleUiTitleBlock(child);
      }
    });
    return isChildrenValid;
  }
  return false;
};
var _isFlexibleUiPreviewBlock = exports.isFlexibleUiPreviewBlock = function isFlexibleUiPreviewBlock(node) {
  if (! /*#__PURE__*/_react.default.isValidElement(node)) {
    return false;
  }
  if (node.type === _blocks.PreviewBlock) {
    return true;
  }
  if (isStyleCacheProvider(node)) {
    // Component wrapped with compiled at runtime, check for children
    var isChildrenValid = true;
    _react.default.Children.map(node.props.children, function (child) {
      var _child$type4;
      if (! /*#__PURE__*/_react.default.isValidElement(child)) {
        isChildrenValid = false;
        return;
      }
      if (typeof child.type !== 'string' && ((_child$type4 = child.type) === null || _child$type4 === void 0 ? void 0 : _child$type4.name) !== 'Style') {
        isChildrenValid = _isFlexibleUiPreviewBlock(child);
      }
    });
    return isChildrenValid;
  }
  return false;
};
var isFlexibleUiFooterBlock = exports.isFlexibleUiFooterBlock = function isFlexibleUiFooterBlock(node) {
  return /*#__PURE__*/_react.default.isValidElement(node) && node.type === _blocks.FooterBlock;
};