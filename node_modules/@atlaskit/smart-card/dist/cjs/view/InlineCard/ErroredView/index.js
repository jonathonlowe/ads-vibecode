/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InlineCardErroredView = void 0;
require("./index.compiled.css");
var _runtime = require("@compiled/react/runtime");
var _react = _interopRequireDefault(require("react"));
var _reactIntlNext = require("react-intl-next");
var _button = _interopRequireDefault(require("@atlaskit/button"));
var _error = _interopRequireDefault(require("@atlaskit/icon/core/migration/error"));
var _error2 = _interopRequireDefault(require("@atlaskit/icon/utility/migration/error"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _compiled = require("@atlaskit/primitives/compiled");
var _colors = require("@atlaskit/theme/colors");
var _messages = require("../../../messages");
var _HoverCard = require("../../HoverCard");
var _actionButton = require("../common/action-button");
var _Frame = require("../Frame");
var _Icon = require("../Icon");
var _IconAndTitleLayout = require("../IconAndTitleLayout");
var _styled = require("../styled");
var _withFrameStyleControl = _interopRequireDefault(require("../utils/withFrameStyleControl"));
var styles = {
  iconWrapper: "_2hwx1i6y"
};
var fallbackIcon = function fallbackIcon() {
  if ((0, _platformFeatureFlags.fg)('platform-linking-visual-refresh-v1')) {
    return /*#__PURE__*/_react.default.createElement(_error.default, {
      color: "var(--ds-icon-danger, #C9372C)",
      label: "error",
      LEGACY_size: "small",
      testId: "errored-view-default-icon"
    });
  }
  if ((0, _platformFeatureFlags.fg)('platform-smart-card-icon-migration')) {
    return /*#__PURE__*/_react.default.createElement(_compiled.Box, {
      as: "span",
      xcss: styles.iconWrapper
    }, /*#__PURE__*/_react.default.createElement(_error2.default, {
      color: "var(--ds-icon-danger, #C9372C)",
      label: "error",
      LEGACY_size: "small",
      testId: "errored-view-default-icon"
    }));
  }
  return /*#__PURE__*/_react.default.createElement(_Icon.AKIconWrapper, null, /*#__PURE__*/_react.default.createElement(_error2.default, {
    label: "error",
    LEGACY_size: "small",
    color: "var(--ds-icon-danger, ".concat(_colors.R300, ")"),
    testId: "errored-view-default-icon"
  }));
};
var InlineCardErroredView = exports.InlineCardErroredView = function InlineCardErroredView(_ref) {
  var url = _ref.url,
    onClick = _ref.onClick,
    isSelected = _ref.isSelected,
    _ref$testId = _ref.testId,
    testId = _ref$testId === void 0 ? 'inline-card-errored-view' : _ref$testId,
    icon = _ref.icon,
    message = _ref.message,
    onRetry = _ref.onRetry,
    truncateInline = _ref.truncateInline,
    showHoverPreview = _ref.showHoverPreview;
  var frameRef = _react.default.useRef(null);
  var hashAction = !!onRetry;
  var handleRetry = _react.default.useCallback(function (event) {
    if (onRetry) {
      event.preventDefault();
      event.stopPropagation();
      onRetry();
    }
  }, [onRetry]);
  var renderActionButton = _react.default.useCallback(function () {
    var Button = (0, _withFrameStyleControl.default)(_button.default, frameRef);
    return onRetry && ((0, _platformFeatureFlags.fg)('platform-linking-visual-refresh-v1') ? /*#__PURE__*/_react.default.createElement(_actionButton.ActionButton, {
      onClick: handleRetry
    }, /*#__PURE__*/_react.default.createElement(_reactIntlNext.FormattedMessage, _messages.messages.try_again)) : /*#__PURE__*/_react.default.createElement(Button, {
      spacing: "none",
      component: _styled.IconStyledButtonOldVisualRefresh,
      onClick: handleRetry,
      role: "button"
    }, /*#__PURE__*/_react.default.createElement(_reactIntlNext.FormattedMessage, _messages.messages.try_again)));
  }, [handleRetry, onRetry]);
  var content = (0, _platformFeatureFlags.fg)('platform-linking-visual-refresh-v1') ? /*#__PURE__*/_react.default.createElement(_Frame.Frame, {
    link: hashAction ? undefined : url,
    onClick: hashAction ? undefined : onClick,
    isSelected: isSelected,
    ref: frameRef,
    testId: testId,
    truncateInline: truncateInline
  }, /*#__PURE__*/_react.default.createElement(_IconAndTitleLayout.IconAndTitleLayout, {
    icon: icon || fallbackIcon(),
    link: hashAction ? url : undefined,
    title: url,
    onClick: hashAction ? onClick : undefined,
    rightSide: message
  }), renderActionButton()) : /*#__PURE__*/_react.default.createElement(_Frame.Frame, {
    testId: testId,
    isSelected: isSelected,
    ref: frameRef,
    truncateInline: truncateInline
  }, /*#__PURE__*/_react.default.createElement(_IconAndTitleLayout.IconAndTitleLayout, {
    icon: icon || fallbackIcon(),
    link: url,
    title: url,
    onClick: onClick,
    rightSide: message
  }), renderActionButton());
  if (showHoverPreview) {
    return /*#__PURE__*/_react.default.createElement(_HoverCard.HoverCard, {
      url: url
    }, content);
  }
  return content;
};