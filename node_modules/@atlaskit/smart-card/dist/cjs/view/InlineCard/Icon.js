/* Icon.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Shimmer = exports.Icon = exports.AKIconWrapper = void 0;
require("./Icon.compiled.css");
var _react = _interopRequireWildcard(require("react"));
var _runtime = require("@compiled/react/runtime");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _linkingCommon = require("@atlaskit/linking-common");
var _excluded = ["as", "style"],
  _excluded2 = ["as", "style"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
// TODO: Figure out a more scalable/responsive solution
// for vertical alignment.
// Current rationale: vertically positioned at the top of
// the smart card container (when set to 0). Offset this
// to position it with appropriate whitespace from the top.
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var Icon = exports.Icon = (0, _react.forwardRef)(function (_ref, __cmplr) {
  var _ref$as = _ref.as,
    C = _ref$as === void 0 ? "img" : _ref$as,
    __cmpls = _ref.style,
    __cmplp = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return /*#__PURE__*/_react.default.createElement(C, (0, _extends2.default)({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: (0, _runtime.ax)(["_2rkoyh40 _4t3i7vkz _1bsb7vkz _2hwx1b66 _uiztglyw _kqswstnw _154i1ssb _1ltv1ssb _t9ec1ooe", __cmplp.className])
  }));
});

// TODO: Remove on platform-smart-card-icon-migration cleanup
// Used for 'untrue' icons which claim to be 16x16 but
// are less than that in height/width.
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
if (process.env.NODE_ENV !== 'production') {
  Icon.displayName = 'Icon';
}
var AKIconWrapper = exports.AKIconWrapper = (0, _react.forwardRef)(function (_ref2, __cmplr) {
  var _ref2$as = _ref2.as,
    C = _ref2$as === void 0 ? "span" : _ref2$as,
    __cmpls = _ref2.style,
    __cmplp = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);
  return /*#__PURE__*/_react.default.createElement(C, (0, _extends2.default)({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: (0, _runtime.ax)(["_2hwx1i6y", __cmplp.className])
  }));
});
if (process.env.NODE_ENV !== 'production') {
  AKIconWrapper.displayName = 'AKIconWrapper';
}
var Shimmer = exports.Shimmer = function Shimmer(_ref3) {
  var testId = _ref3.testId;
  var skeletonCustomStyles = {
    position: 'absolute',
    // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage/preview
    top: '50%',
    // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage/preview
    left: '50%',
    transform: 'translate(-50%, -50%)',
    marginRight: "var(--ds-space-050, 4px)"
  };
  return /*#__PURE__*/_react.default.createElement(_linkingCommon.SpanSkeleton, {
    width: 16,
    height: 16,
    borderRadius: 2,
    testId: testId
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    ,
    style: skeletonCustomStyles
  });
};