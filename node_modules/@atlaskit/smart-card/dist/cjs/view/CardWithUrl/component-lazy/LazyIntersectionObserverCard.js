"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LazyIntersectionObserverCard = LazyIntersectionObserverCard;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _state = require("../../../state");
var _ufoExperiences = require("../../../state/analytics/ufoExperiences");
var _shouldSample = require("../../../utils/shouldSample");
var _component = require("../component");
var _LoadingCardLink = require("./LoadingCardLink");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
// This property enables the intersection observer to be run once the
// HTML element being observed is within `X` px of the target container it is
// being compared to. Since the default container is the `document`, we set this
// up to check once a Smart Link is within `X` px from the bottom of the viewport.
var ROOT_MARGIN_VERTICAL = '360px';
function LazyIntersectionObserverCard(props) {
  var ref = (0, _react.useRef)(null);
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    isIntersecting = _useState2[0],
    setIsIntersecting = _useState2[1];
  var _useState3 = (0, _react.useState)((0, _shouldSample.shouldSample)()),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 1),
    shouldSendRenderedUFOEvent = _useState4[0];
  var appearance = props.appearance,
    url = props.url,
    id = props.id;
  var prefetch = (0, _state.usePrefetch)(url);
  var Component = appearance === 'inline' ? 'span' : 'div';
  var ComponentObserver = Component;
  var onIntersection = (0, _react.useCallback)(function (entries, observer) {
    var isVisible = entries.some(function (entry) {
      return entry.isIntersecting;
    });
    if (isVisible) {
      if ((0, _platformFeatureFlags.fg)('send-smart-link-rendered-ufo-event-half-time')) {
        if (shouldSendRenderedUFOEvent) {
          (0, _ufoExperiences.startUfoExperience)('smart-link-rendered', id);
        }
      } else {
        (0, _ufoExperiences.startUfoExperience)('smart-link-rendered', id);
      }
      setIsIntersecting(true);
      observer.disconnect();
    } else {
      prefetch();
    }
  }, [id, prefetch, shouldSendRenderedUFOEvent]);
  (0, _react.useEffect)(function () {
    if (!ref.current) {
      return;
    }
    var intersectionObserver = new IntersectionObserver(onIntersection, {
      rootMargin: "".concat(ROOT_MARGIN_VERTICAL, " 0px ").concat(ROOT_MARGIN_VERTICAL, " 0px")
    });
    intersectionObserver.observe(ref.current);
    return function () {
      return intersectionObserver.disconnect();
    };
  }, [ref, onIntersection]);
  var content = isIntersecting ? /*#__PURE__*/_react.default.createElement(_component.CardWithUrlContent, props) : /*#__PURE__*/_react.default.createElement(ComponentObserver, {
    ref: ref
  }, /*#__PURE__*/_react.default.createElement(_LoadingCardLink.LoadingCardLink, props));

  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
  return /*#__PURE__*/_react.default.createElement(Component, {
    className: "loader-wrapper"
  }, content);
}