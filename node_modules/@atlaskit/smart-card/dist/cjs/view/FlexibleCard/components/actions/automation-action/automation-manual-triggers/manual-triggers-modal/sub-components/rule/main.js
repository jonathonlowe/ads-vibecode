/* main.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AutomationModalRule = void 0;
require("./main.compiled.css");
var React = _interopRequireWildcard(require("react"));
var _runtime = require("@compiled/react/runtime");
var _analyticsNext = require("@atlaskit/analytics-next");
var _menu = require("@atlaskit/menu");
var _compiled = require("@atlaskit/primitives/compiled");
var _spinner = _interopRequireDefault(require("@atlaskit/spinner"));
var _menuContext = require("../../menu-context");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var styles = {
  ruleButtonStyle: "_2rkoglpi _1h6dmuej _1dqonqa1 _189ee4h9",
  selectedRuleButtonStyle: "_2rkoglpi _1h6d15qp _1dqonqa1 _189e1bk5",
  ruleNameStyle: "_4t3i1f4h"
};
var AutomationModalRule = exports.AutomationModalRule = function AutomationModalRule(_ref) {
  var rule = _ref.rule,
    selectedRule = _ref.selectedRule,
    setSelectedRule = _ref.setSelectedRule;
  var _useAnalyticsEvents = (0, _analyticsNext.useAnalyticsEvents)(),
    createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;
  var _useAutomationMenu = (0, _menuContext.useAutomationMenu)(),
    analyticsSource = _useAutomationMenu.analyticsSource,
    invokingRuleId = _useAutomationMenu.invokingRuleId;
  var isSelectedRule = (selectedRule === null || selectedRule === void 0 ? void 0 : selectedRule.id) === rule.id;
  var isExecuting = rule.id === invokingRuleId;
  var ruleOnClick = function ruleOnClick() {
    createAnalyticsEvent({
      type: 'sendUIEvent',
      data: {
        action: 'clicked',
        actionSubject: 'button',
        actionSubjectId: 'selectManualTriggerAutomation',
        source: analyticsSource,
        attributes: {
          ruleId: rule.id.toString()
        }
      }
    }).fire();
    setSelectedRule(rule);
  };
  return /*#__PURE__*/React.createElement(_compiled.Box, {
    xcss: isSelectedRule ? styles.selectedRuleButtonStyle : styles.ruleButtonStyle,
    backgroundColor: isSelectedRule ? 'color.background.accent.blue.subtlest' : undefined
  }, /*#__PURE__*/React.createElement(_menu.ButtonItem, {
    isDisabled: !!invokingRuleId,
    iconBefore: isExecuting ? /*#__PURE__*/React.createElement(_spinner.default, {
      size: "small"
    }) : null,
    onClick: ruleOnClick
  }, /*#__PURE__*/React.createElement(_compiled.Stack, {
    xcss: styles.ruleNameStyle,
    alignBlock: "center"
  }, rule.name)));
};