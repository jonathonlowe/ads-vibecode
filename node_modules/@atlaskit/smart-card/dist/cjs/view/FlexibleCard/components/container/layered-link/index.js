/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
require("./index.compiled.css");
var React = _interopRequireWildcard(require("react"));
var _runtime = require("@compiled/react/runtime");
var _useLinkClicked = require("../../../../../state/analytics/useLinkClicked");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var styles = null;

/**
 * An anchor component to cover the entire container creating a clickable area.
 * @internal
 * @see `clickableContainer`
 */
var LayeredLink = function LayeredLink(_ref) {
  var onClick = _ref.onClick,
    target = _ref.target,
    testId = _ref.testId,
    text = _ref.text,
    url = _ref.url;
  var onMouseDown = (0, _useLinkClicked.useMouseDownEvent)();
  return /*#__PURE__*/React.createElement("a", {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    className: (0, _runtime.ax)(["_1reo15vq _18m915vq _154iidpf _1xi2idpf _94n5idpf _1ltvidpf _azhw1osq _o5721q9c _hboxstnw _obkmidpf _a52dkb7n", "layered-link"]),
    "data-testid": "".concat(testId, "-layered-link"),
    href: url,
    onClick: onClick,
    onMouseDown: onMouseDown,
    target: target,
    tabIndex: -1 // Hide tab index and let the title link be the link.
  }, text);
};
var _default = exports.default = LayeredLink;