"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireWildcard(require("react"));
var _warning = _interopRequireDefault(require("@atlaskit/icon/core/migration/warning"));
var _warning2 = _interopRequireDefault(require("@atlaskit/icon/glyph/warning"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _colors = require("@atlaskit/theme/colors");
var _messages = require("../../../messages");
var _text = _interopRequireDefault(require("../../FlexibleCard/components/elements/text"));
var _RetryAction = require("../actions/RetryAction");
var _unresolvedView = _interopRequireDefault(require("./unresolved-view"));
var _withFlexibleUIBlockCardStyle = require("./utils/withFlexibleUIBlockCardStyle");
var _excluded = ["testId"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * This view represents a Block Card with an 'Errored' status.
 *
 * @see SmartLinkStatus
 * @see FlexibleCardProps
 */
var ErroredView = function ErroredView(_ref) {
  var _ref$testId = _ref.testId,
    testId = _ref$testId === void 0 ? 'smart-block-errored-view' : _ref$testId,
    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var actions = (0, _react.useMemo)(function () {
    return props.onAuthorize ? [(0, _RetryAction.RetryAction)(props.onAuthorize)] : [];
  }, [props.onAuthorize]);
  return /*#__PURE__*/_react.default.createElement(_unresolvedView.default, (0, _extends2.default)({}, props, {
    actions: actions,
    testId: testId
  }), (0, _platformFeatureFlags.fg)('platform-smart-card-icon-migration') ? /*#__PURE__*/_react.default.createElement(_warning.default, {
    label: "errored-warning-icon",
    color: "var(--ds-icon-warning, #E56910)",
    LEGACY_size: "small",
    testId: "".concat(testId, "-warning-icon")
  }) :
  /*#__PURE__*/
  // eslint-disable-next-line @atlaskit/design-system/no-legacy-icons -- TODO - https://product-fabric.atlassian.net/browse/DSP-19497
  _react.default.createElement(_warning2.default, {
    label: "errored-warning-icon",
    size: "small",
    primaryColor: "var(--ds-icon-warning, ".concat(_colors.R300, ")"),
    testId: "".concat(testId, "-warning-icon")
  }), /*#__PURE__*/_react.default.createElement(_text.default, {
    maxLines: 3,
    message: {
      descriptor: _messages.messages.could_not_load_link
    }
  }));
};
var _default = exports.default = (0, _withFlexibleUIBlockCardStyle.withFlexibleUIBlockCardStyle)(ErroredView);