/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
require("./index.compiled.css");
var _runtime = require("@compiled/react/runtime");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _useAnalyticsEvents2 = require("../../../../../common/analytics/generated/use-analytics-events");
var _constants = require("../../../../../constants");
var _analytics = require("../../../../../state/analytics");
var _FlexibleCard = _interopRequireDefault(require("../../../../FlexibleCard"));
var _blocks = require("../../../../FlexibleCard/components/blocks");
var _utils = require("../../../utils");
var _ImagePreview = _interopRequireDefault(require("../../ImagePreview"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var hiddenSnippetStyles = null;
var metadataBlockCssOld = null;

/**
 * Moved from HoverCardContent.tsx due to CompiledCSS migration.
 */
var titleBlockStyleOld = null;
var titleBlockStyles = null;
var snippetBlockCss = null;
var actionBlockCss = null;
var HoverCardResolvedView = function HoverCardResolvedView(_ref) {
  var _cardState$details;
  var cardState = _ref.cardState,
    extensionKey = _ref.extensionKey,
    flexibleCardProps = _ref.flexibleCardProps,
    isAISummaryEnabled = _ref.isAISummaryEnabled,
    onActionClick = _ref.onActionClick,
    titleBlockProps = _ref.titleBlockProps,
    id = _ref.id;
  var _useAnalyticsEvents = (0, _useAnalyticsEvents2.useAnalyticsEvents)(),
    fireEvent = _useAnalyticsEvents.fireEvent;
  (0, _react.useEffect)(function () {
    // Since this hover view is only rendered on resolved status,
    // there is no need to check for statuses.
    (0, _analytics.succeedUfoExperience)('smart-link-rendered', id || 'NULL', {
      extensionKey: extensionKey,
      display: _constants.CardDisplay.HoverCardPreview
    });

    // UFO will disregard this if authentication experience has not yet been started
    (0, _analytics.succeedUfoExperience)('smart-link-authenticated', id || 'NULL', {
      display: _constants.CardDisplay.HoverCardPreview
    });
    fireEvent('ui.smartLink.renderSuccess', {
      display: _constants.CardDisplay.HoverCardPreview
    });
  }, [extensionKey, fireEvent, id]);
  var data = (_cardState$details = cardState.details) === null || _cardState$details === void 0 ? void 0 : _cardState$details.data;
  var _useMemo = (0, _react.useMemo)(function () {
      return (0, _utils.getMetadata)(extensionKey, data);
    }, [data, extensionKey]),
    primary = _useMemo.primary,
    secondary = _useMemo.secondary;
  var snippetHeight = _react.default.useRef(0);
  var snippetBlockRef = (0, _react.useRef)(null);
  var onSnippetRender = (0, _react.useCallback)(function () {
    var _snippetBlockRef$curr, _snippetBlockRef$curr2;
    snippetHeight.current = (_snippetBlockRef$curr = (_snippetBlockRef$curr2 = snippetBlockRef.current) === null || _snippetBlockRef$curr2 === void 0 ? void 0 : _snippetBlockRef$curr2.getBoundingClientRect().height) !== null && _snippetBlockRef$curr !== void 0 ? _snippetBlockRef$curr : 0;
  }, []);
  var imagePreview = (0, _ImagePreview.default)({
    data: data,
    fallbackElementHeight: snippetHeight.current
  });
  var snippet = imagePreview ? null : /*#__PURE__*/_react.default.createElement(_blocks.SnippetBlock, {
    status: _constants.SmartLinkStatus.Resolved,
    className: (0, _runtime.ax)([(0, _platformFeatureFlags.fg)('platform-linking-visual-refresh-v1') && "_ca0q1b66"])
  });
  var aiSummaryMinHeight = snippet ? snippetHeight.current : 0;
  return /*#__PURE__*/_react.default.createElement(_FlexibleCard.default, flexibleCardProps, imagePreview, /*#__PURE__*/_react.default.createElement(_blocks.TitleBlock, (0, _extends2.default)({}, titleBlockProps, {
    metadataPosition: _constants.SmartLinkPosition.Top,
    status: _constants.SmartLinkStatus.Resolved,
    className: (0, _runtime.ax)([(0, _platformFeatureFlags.fg)('platform-linking-visual-refresh-v1') ? "_zulpu2gc _quenze3t _oebj1txw _13mh1pd9" : "_zulpu2gc _quenui7n _oebj1txw _x7z0u2gc _1ljqu2gc _13mh1pd9"])
  })), /*#__PURE__*/_react.default.createElement(_blocks.MetadataBlock, {
    primary: primary,
    secondary: secondary,
    maxLines: 1,
    size: _constants.SmartLinkSize.Medium,
    status: _constants.SmartLinkStatus.Resolved,
    className: (0, _runtime.ax)([!(0, _platformFeatureFlags.fg)('platform-linking-visual-refresh-v1') && "_zulpidpf _2aco1o8v _fmt31ohn _yklxcxkx _w3mucxkx _ia0l11wp _3tmpcxkx"])
  }), isAISummaryEnabled ? /*#__PURE__*/_react.default.createElement(_blocks.AISummaryBlock, {
    aiSummaryMinHeight: aiSummaryMinHeight,
    placeholder: snippet,
    status: _constants.SmartLinkStatus.Resolved
  }) : snippet, /*#__PURE__*/_react.default.createElement(_blocks.SnippetBlock, {
    testId: "hidden-snippet",
    onRender: onSnippetRender,
    blockRef: snippetBlockRef,
    status: _constants.SmartLinkStatus.Resolved,
    className: (0, _runtime.ax)(["_3um015vq _kqswstnw"])
  }), /*#__PURE__*/_react.default.createElement(_blocks.ActionBlock, {
    onClick: onActionClick,
    spaceInline: "space.100",
    className: (0, _runtime.ax)([(0, _platformFeatureFlags.fg)('platform-linking-visual-refresh-v1') && "_n3td1b66"])
  }), /*#__PURE__*/_react.default.createElement(_blocks.AIFooterBlock, null));
};
var _default = exports.default = HoverCardResolvedView;