/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
require("./index.compiled.css");
var _runtime = require("@compiled/react/runtime");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _blocks = require("../../../../FlexibleCard/components/blocks");
var _actionGroup = _interopRequireDefault(require("../../../../FlexibleCard/components/blocks/action-group"));
var _loadingSkeleton = require("../../../../FlexibleCard/components/common/loading-skeleton");
var _icon = _interopRequireDefault(require("../../../../FlexibleCard/components/elements/icon"));
var _styled = require("../../../styled");
var loadingViewContainer = null;
var skeletonContainer = null;
var titleStyle = null;
var titleBlockStyles = null;
var HoverCardLoadingView = function HoverCardLoadingView(_ref) {
  var titleBlockProps = _ref.titleBlockProps;
  var testId = 'hover-card-loading-view';
  var lineHeightRem = 1.25;
  var skeletonWidth = _styled.CARD_WIDTH_REM - 2;
  var size = titleBlockProps.size,
    actions = titleBlockProps.actions;
  var actionGroup = (actions === null || actions === void 0 ? void 0 : actions.length) && (actions === null || actions === void 0 ? void 0 : actions.length) > 0 && /*#__PURE__*/_react.default.createElement(_actionGroup.default, {
    items: actions,
    visibleButtonsNum: 2
  });
  var LoadingSkeleton = (0, _platformFeatureFlags.fg)('platform-smart-card-icon-migration') ? _loadingSkeleton.LoadingSkeletonNew : _loadingSkeleton.LoadingSkeletonOld;
  return /*#__PURE__*/_react.default.createElement("div", {
    "data-testid": testId,
    className: (0, _runtime.ax)(["_1e0c1txw _2lx21bp4 _ca0q1e9d _u5f31e9d _n3td1e9d _19bv1e9d"])
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _runtime.ax)(["_zulpud5o _1e0c1txw _2lx21bp4 _4cvr1h6o"])
  }, /*#__PURE__*/_react.default.createElement(_blocks.CustomBlock, (0, _extends2.default)({}, titleBlockProps, {
    testId: "".concat(testId, "-title-block"),
    className: (0, _runtime.ax)(["_zulpcxkx _1bsb1osq"])
  }), /*#__PURE__*/_react.default.createElement(_icon.default, {
    render: function render() {
      return /*#__PURE__*/_react.default.createElement(LoadingSkeleton, null);
    },
    size: size
  }), /*#__PURE__*/_react.default.createElement("span", {
    "data-testid": "".concat(testId, "-title"),
    className: (0, _runtime.ax)(["_16jlkb7n _1o9zidpf _i0dl1wug _4t3i1k92 _e2oo1osq"])
  }, (0, _platformFeatureFlags.fg)('platform-smart-card-icon-migration') ? /*#__PURE__*/_react.default.createElement(_loadingSkeleton.LoadingSkeletonNew, {
    height: "".concat(lineHeightRem, "rem")
  }) : /*#__PURE__*/_react.default.createElement(_loadingSkeleton.LoadingSkeletonOld, {
    height: lineHeightRem
  })), actionGroup), (0, _platformFeatureFlags.fg)('platform-smart-card-icon-migration') ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_loadingSkeleton.LoadingSkeletonNew, {
    width: "".concat(skeletonWidth, "rem"),
    height: "".concat(lineHeightRem, "rem")
  }), /*#__PURE__*/_react.default.createElement(_loadingSkeleton.LoadingSkeletonNew, {
    width: "".concat(skeletonWidth, "rem"),
    height: "".concat(lineHeightRem * 3, "rem")
  }), /*#__PURE__*/_react.default.createElement(_loadingSkeleton.LoadingSkeletonNew, {
    width: "".concat(skeletonWidth, "rem"),
    height: "".concat(lineHeightRem, "rem")
  })) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_loadingSkeleton.LoadingSkeletonOld, {
    width: skeletonWidth,
    height: lineHeightRem
  }), /*#__PURE__*/_react.default.createElement(_loadingSkeleton.LoadingSkeletonOld, {
    width: skeletonWidth,
    height: lineHeightRem * 3
  }), /*#__PURE__*/_react.default.createElement(_loadingSkeleton.LoadingSkeletonOld, {
    width: skeletonWidth,
    height: lineHeightRem
  }))));
};
var _default = exports.default = HoverCardLoadingView;