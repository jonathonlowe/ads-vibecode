/* ErroredView.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EmbedCardErroredView = void 0;
require("./ErroredView.compiled.css");
var React = _interopRequireWildcard(require("react"));
var _runtime = require("@compiled/react/runtime");
var _reactIntlNext = require("react-intl-next");
var _button = _interopRequireDefault(require("@atlaskit/button"));
var _error = _interopRequireDefault(require("@atlaskit/icon/core/migration/error"));
var _compiled = require("@atlaskit/primitives/compiled");
var _colors = require("@atlaskit/theme/colors");
var _messages = require("../../../messages");
var _ErrorFrame = require("../components/ErrorFrame");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var styles = {
  boxStyles: "_19bv1b66 _u5f31b66"
};
var EmbedCardErroredView = exports.EmbedCardErroredView = function EmbedCardErroredView(_ref) {
  var onRetry = _ref.onRetry,
    _ref$isSelected = _ref.isSelected,
    isSelected = _ref$isSelected === void 0 ? false : _ref$isSelected,
    _ref$testId = _ref.testId,
    testId = _ref$testId === void 0 ? 'embed-card-errored-view' : _ref$testId,
    inheritDimensions = _ref.inheritDimensions;
  return /*#__PURE__*/React.createElement(_ErrorFrame.Frame, {
    inheritDimensions: inheritDimensions,
    compact: true,
    isSelected: isSelected,
    testId: testId
  }, /*#__PURE__*/React.createElement(_error.default, {
    LEGACY_size: "small",
    color: "var(--ds-icon-danger, ".concat(_colors.R300, ")"),
    label: "error-icon"
  }), /*#__PURE__*/React.createElement(_compiled.Box, {
    xcss: styles.boxStyles
  }, /*#__PURE__*/React.createElement(_compiled.Inline, null, /*#__PURE__*/React.createElement(_reactIntlNext.FormattedMessage, _messages.messages.could_not_load_link))), /*#__PURE__*/React.createElement(_button.default, {
    testId: "err-view-retry",
    appearance: "link",
    spacing: "none",
    onClick: onRetry
  }, /*#__PURE__*/React.createElement(_reactIntlNext.FormattedMessage, _messages.messages.try_again)));
};