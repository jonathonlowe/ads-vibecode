/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
require("./index.compiled.css");
var _runtime = require("@compiled/react/runtime");
var _react = _interopRequireWildcard(require("react"));
var _reactIntlNext = require("react-intl-next");
var _heading = _interopRequireDefault(require("@atlaskit/heading"));
var _download = _interopRequireDefault(require("@atlaskit/icon/core/download"));
var _fullscreenExit = _interopRequireDefault(require("@atlaskit/icon/core/fullscreen-exit"));
var _closeCross = _interopRequireDefault(require("@atlaskit/icon/core/migration/close--cross"));
var _fullscreenEnterVidFullScreenOn = _interopRequireDefault(require("@atlaskit/icon/core/migration/fullscreen-enter--vid-full-screen-on"));
var _linkExternalShortcut = _interopRequireDefault(require("@atlaskit/icon/core/migration/link-external--shortcut"));
var _download2 = _interopRequireDefault(require("@atlaskit/icon/glyph/download"));
var _vidFullScreenOff = _interopRequireDefault(require("@atlaskit/icon/glyph/vid-full-screen-off"));
var _modalDialog = require("@atlaskit/modal-dialog");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _messages = require("../../../../messages");
var _Icon = require("../../../common/Icon");
var _constants = require("../../constants");
var _linkInfoButton = _interopRequireDefault(require("./link-info-button"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var containerStylesOld = null;
var containerStyles = null;
var iconSize = '24px';

// EDM-7328: CSS Specificity
// An embed modal icon css for img, span, svg has specificity weight of 0-1-1.
// Specify flex ui icon selector to increase specificity weight to 0-2-1.
var iconCss = null;
var titleCssOld = null;
var titleCss = null;
var actionCss = null;
var LinkInfo = function LinkInfo(_ref) {
  var icon = _ref.icon,
    providerName = _ref.providerName,
    onDownloadButtonClick = _ref.onDownloadButtonClick,
    onResizeButtonClick = _ref.onResizeButtonClick,
    onViewButtonClick = _ref.onViewButtonClick,
    size = _ref.size,
    testId = _ref.testId,
    title = _ref.title;
  var _useModal = (0, _modalDialog.useModal)(),
    onClose = _useModal.onClose;
  var downloadButton = (0, _react.useMemo)(function () {
    if (onDownloadButtonClick) {
      return /*#__PURE__*/_react.default.createElement(_linkInfoButton.default, {
        content: /*#__PURE__*/_react.default.createElement(_reactIntlNext.FormattedMessage, _messages.messages.download),
        icon: /*#__PURE__*/_react.default.createElement(_download.default, {
          label: _messages.messages.download.defaultMessage,
          LEGACY_fallbackIcon: _download2.default,
          spacing: "spacious",
          color: "currentColor"
        }),
        onClick: onDownloadButtonClick,
        testId: "".concat(testId, "-download")
      });
    }
  }, [onDownloadButtonClick, testId]);
  var urlButton = (0, _react.useMemo)(function () {
    if (onViewButtonClick) {
      var content = providerName ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_reactIntlNext.FormattedMessage, _messages.messages.viewIn), " ", providerName) : /*#__PURE__*/_react.default.createElement(_reactIntlNext.FormattedMessage, _messages.messages.viewOriginal);
      return /*#__PURE__*/_react.default.createElement(_linkInfoButton.default, {
        content: content,
        icon: /*#__PURE__*/_react.default.createElement(_linkExternalShortcut.default, {
          label: _messages.messages.viewOriginal.defaultMessage,
          spacing: "spacious",
          color: "currentColor"
        }),
        onClick: onViewButtonClick,
        testId: "".concat(testId, "-url")
      });
    }
  }, [onViewButtonClick, providerName, testId]);
  var sizeButton = (0, _react.useMemo)(function () {
    var isFullScreen = size === _constants.MAX_MODAL_SIZE;
    var message = isFullScreen ? _messages.messages.preview_min_size : _messages.messages.preview_max_size;
    var icon = isFullScreen ? /*#__PURE__*/_react.default.createElement(_fullscreenExit.default, {
      LEGACY_fallbackIcon: _vidFullScreenOff.default,
      label: message.defaultMessage,
      spacing: "spacious",
      color: "currentColor"
    }) : /*#__PURE__*/_react.default.createElement(_fullscreenEnterVidFullScreenOn.default, {
      label: message.defaultMessage,
      spacing: "spacious",
      color: "currentColor"
    });
    return (
      /*#__PURE__*/
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
      _react.default.createElement("span", {
        className: "smart-link-resize-button"
      }, /*#__PURE__*/_react.default.createElement(_linkInfoButton.default, {
        content: /*#__PURE__*/_react.default.createElement(_reactIntlNext.FormattedMessage, message),
        icon: icon,
        onClick: onResizeButtonClick,
        testId: "".concat(testId, "-resize")
      }))
    );
  }, [onResizeButtonClick, size, testId]);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _runtime.ax)([(0, _platformFeatureFlags.fg)('platform-linking-visual-refresh-v1') ? "_zulpu2gc _1e0c1txw _19bv1ejb _u5f31ejb _ca0q1ejb _n3tdpxbi _1wpz1fhb _4t3i1tcg" : "_zulpu2gc _4cvr1h6o _1e0c1txw _1bah1yb4 _ca0q1ejb _u5f31ejb _n3tddlk8 _19bv1ejb"])
  }, icon && /*#__PURE__*/_react.default.createElement("div", {
    "data-testid": "".concat(testId, "-icon"),
    className: (0, _runtime.ax)(["_4t3i1tcg _gire1tcg _yrry1tcg _1bnm1tcg _bna71tcg _1xjx1tcg _17521tcg _1tke1tcg _x9xj1tcg _v5981tcg _z15s1tcg _qci81tcg _15iz1tcg _erub1tcg _c71l1tcg _1q121tcg _2s1x1tcg _1rh41tcg _19l31tcg _1pr21tcg _1u5t1tcg _1bsb1tcg _1xyl1tcg _1h1b1tcg _prfw1tcg _mezj1tcg _e2oo1tcg _w8l51tcg _1ul91tcg _1ekg1tcg _jbhf1tcg _11hh1tcg _1rg21tcg _q7cv1tcg _xwbj1tcg _p12f1tcg _1mj01tcg _1r9c1tcg _1xch1tcg _rtys1tcg _b8nk1tcg _4x201tcg"])
  }, /*#__PURE__*/_react.default.createElement(_Icon.Icon, icon)), /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _runtime.ax)([(0, _platformFeatureFlags.fg)('platform-linking-visual-refresh-v1') ? "_16jlkb7n _1o9zidpf _i0dlf1ug _1e0c1txw _2lx21bp4 _1bah1h6o _1wpz1fhb" : "_16jlkb7n _1o9zkb7n _i0dl1wug _yrj2kb7n _1wkfkb7n _923e1wug _1umonbxd _101p15vq _12bo15vq _r8nti7a9 _1flvcj1k _4wztidpf _c7bk1l2s _1r7d1hna _uepwkb7n _shpw1e54 _130wgktf"])
  }, /*#__PURE__*/_react.default.createElement(_heading.default, {
    size: (0, _platformFeatureFlags.fg)('platform-linking-visual-refresh-v1') ? 'small' : 'medium',
    color: (0, _platformFeatureFlags.fg)('platform-linking-visual-refresh-v1') ? 'color.text' : undefined,
    testId: "".concat(testId, "-title")
  }, title), /*#__PURE__*/_react.default.createElement("span", {
    tabIndex: 0
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _runtime.ax)(["_16jlidpf _1o9zidpf _i0dl1wug _zulp1b66 _1e0c1txw _3kllglyw"])
  }, downloadButton, urlButton, sizeButton, /*#__PURE__*/_react.default.createElement(_linkInfoButton.default, {
    content: /*#__PURE__*/_react.default.createElement(_reactIntlNext.FormattedMessage, _messages.messages.preview_close),
    icon: /*#__PURE__*/_react.default.createElement(_closeCross.default, {
      label: _messages.messages.preview_close.defaultMessage,
      color: "currentColor",
      spacing: "spacious"
    }),
    onClick: onClose,
    testId: "".concat(testId, "-close")
  })));
};
var _default = exports.default = LinkInfo;