"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _modalDialog = _interopRequireWildcard(require("@atlaskit/modal-dialog"));
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _useInvokeClientAction = _interopRequireDefault(require("../../state/hooks/use-invoke-client-action"));
var _utils = require("../../utils");
var _icon = _interopRequireDefault(require("../FlexibleCard/components/elements/icon"));
var _analytics = _interopRequireDefault(require("./components/analytics"));
var _embedContent = _interopRequireDefault(require("./components/embed-content"));
var _errorBoundary = _interopRequireDefault(require("./components/error-boundary"));
var _linkInfo = _interopRequireDefault(require("./components/link-info"));
var _constants2 = require("./constants");
var _types = require("./types");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var toSize = function toSize(width) {
  return width === _constants2.MAX_MODAL_SIZE ? _types.EmbedModalSize.Large : _types.EmbedModalSize.Small;
};
var toWidth = function toWidth(size) {
  return size === _types.EmbedModalSize.Large ? _constants2.MAX_MODAL_SIZE : _constants2.MIN_MODAL_SIZE;
};
var EmbedModal = function EmbedModal(_ref) {
  var invokeDownloadAction = _ref.invokeDownloadAction,
    fireEvent = _ref.fireEvent,
    iframeName = _ref.iframeName,
    isSupportTheming = _ref.isSupportTheming,
    _ref$isTrusted = _ref.isTrusted,
    isTrusted = _ref$isTrusted === void 0 ? false : _ref$isTrusted,
    linkIcon = _ref.linkIcon,
    onClose = _ref.onClose,
    onOpen = _ref.onOpen,
    onResize = _ref.onResize,
    providerName = _ref.providerName,
    showModal = _ref.showModal,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? _types.EmbedModalSize.Large : _ref$size,
    src = _ref.src,
    _ref$testId = _ref.testId,
    testId = _ref$testId === void 0 ? 'smart-embed-preview-modal' : _ref$testId,
    title = _ref.title,
    invokeViewAction = _ref.invokeViewAction;
  var defaultWidth = toWidth(size);
  var _useState = (0, _react.useState)(showModal),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    isOpen = _useState2[0],
    setIsOpen = _useState2[1];
  var _useState3 = (0, _react.useState)(defaultWidth),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    width = _useState4[0],
    setWidth = _useState4[1];
  var openAt = (0, _react.useRef)();
  var invoke = (0, _useInvokeClientAction.default)({
    fireEvent: fireEvent
  });
  var handleOnOpenComplete = (0, _react.useCallback)(function () {
    openAt.current = Date.now();
    if (onOpen) {
      onOpen({
        size: size
      });
    }
  }, [onOpen, size]);
  var handleOnClose = (0, _react.useCallback)(function () {
    return setIsOpen(false);
  }, []);
  var handleOnCloseComplete = (0, _react.useCallback)(function () {
    if (onClose) {
      var duration = openAt.current ? Date.now() - openAt.current : undefined;
      onClose({
        duration: duration,
        size: toSize(width)
      });
    }
  }, [onClose, width]);
  var handleOnResizeClick = (0, _react.useCallback)(function () {
    var newWidth = width === _constants2.MIN_MODAL_SIZE ? _constants2.MAX_MODAL_SIZE : _constants2.MIN_MODAL_SIZE;
    setWidth(newWidth);
    if (onResize) {
      onResize({
        size: toSize(newWidth)
      });
    }
  }, [onResize, width]);
  var themeState = (0, _tokens.useThemeObserver)();
  var previewUrl = src;
  var handleOnViewActionClick = (0, _react.useCallback)(function () {
    invokeViewAction && invoke(invokeViewAction);
  }, [invoke, invokeViewAction]);
  var handleOnDownloadActionClick = (0, _react.useCallback)(function () {
    invokeDownloadAction && invoke(invokeDownloadAction);
  }, [invokeDownloadAction, invoke]);
  if (previewUrl && isSupportTheming) {
    previewUrl = (0, _utils.getPreviewUrlWithTheme)(previewUrl, themeState);
  }
  return /*#__PURE__*/_react.default.createElement(_modalDialog.ModalTransition, null, isOpen && /*#__PURE__*/_react.default.createElement(_modalDialog.default, {
    height: "100%",
    onClose: handleOnClose,
    onCloseComplete: handleOnCloseComplete,
    onOpenComplete: handleOnOpenComplete,
    testId: testId,
    width: width
  }, /*#__PURE__*/_react.default.createElement(_linkInfo.default, {
    icon: linkIcon && {
      icon: /*#__PURE__*/_react.default.createElement(_icon.default, (0, _extends2.default)({}, linkIcon, {
        size: _constants.SmartLinkSize.Large
      })),
      isFlexibleUi: true
    },
    providerName: providerName,
    onViewButtonClick: invokeViewAction ? handleOnViewActionClick : undefined,
    onDownloadButtonClick: invokeDownloadAction ? handleOnDownloadActionClick : undefined,
    onResizeButtonClick: handleOnResizeClick,
    size: width,
    title: title,
    testId: testId
  }), /*#__PURE__*/_react.default.createElement(_modalDialog.ModalBody, null, /*#__PURE__*/_react.default.createElement(_embedContent.default, {
    isTrusted: isTrusted,
    name: iframeName,
    src: previewUrl,
    testId: testId
  }))));
};
var _default = exports.default = (0, _analytics.default)((0, _errorBoundary.default)(EmbedModal));