import React from 'react';
import { type ContextViewModel, type FrameStyle } from '../types';
export interface EmbedCardResolvedViewProps {
    /** The title of the link */
    title?: string;
    /** The context view model */
    context?: ContextViewModel;
    /** The link to display */
    link: string;
    /** A flag that determines whether the card is selected in edit mode. */
    isSelected?: boolean;
    /** A prop that determines the style of a frame: whether to show it, hide it or only show it when a user hovers over embed */
    frameStyle?: FrameStyle;
    /** The src to be used for the `iframe` */
    preview?: {
        src?: string;
        aspectRatio?: number;
    };
    /** A flag that determines whether link source can be trusted in iframe **/
    isTrusted?: boolean;
    /** The optional click handler */
    onClick?: (evt: React.MouseEvent) => void;
    /** For testing purposes only. */
    testId?: string;
    isSupportTheming?: boolean;
    inheritDimensions?: boolean;
    /** Optional callback for when user dwells cursor over iframe - for analytics **/
    onIframeDwell?: (dwellTime: number, dwellPercentVisible: number) => void;
    /** Optional callback for when user navigates into an iframe - for analytics **/
    onIframeFocus?: () => void;
}
export declare const EmbedCardResolvedView: React.ForwardRefExoticComponent<EmbedCardResolvedViewProps & React.RefAttributes<HTMLIFrameElement>>;
