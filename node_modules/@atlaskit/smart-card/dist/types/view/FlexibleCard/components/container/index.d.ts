/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';
import { type FlexibleUiDataContext } from '../../../../state/flexible-ui-context/types';
import { type ChildrenOptions, type ContainerProps } from './types';
export declare const getChildrenOptions: (children: React.ReactNode, context?: FlexibleUiDataContext) => ChildrenOptions;
/**
 * Note: This function is only necessary for CompiledCSS within Jest tests due to the way it handles Styles.
 * CompiledCSS will inject a StyleCacheProvider around the component tree, which
 * causes the children to be wrapped in a StyleCacheProvider as well. This function recursively
 * searches for the first valid TitleBlock within the children of the StyleCacheProvider.
 */
export declare const getFlexibleUiBlock: (node: React.ReactNode) => React.ReactNode | undefined;
/**
 * A container is a hidden component that build the Flexible Smart Link.
 * All the Flexible UI components are wrapped inside the container.
 * It inherits the ui props from Card component and applies the custom styling
 * accordingly.
 * @internal
 * @see Block
 */
declare const Container: ({ children, clickableContainer, hideBackground, hideElevation, hidePadding, onClick, retry, showHoverPreview, hoverPreviewOptions, actionOptions, removeBlockRestriction, size, status, testId, theme, }: ContainerProps) => JSX.Element;
export default Container;
