import React from 'react';
import { ElementName, SmartLinkSize } from '../../../../constants';
import type { FlexibleUiDataContext } from '../../../../state/flexible-ui-context/types';
import { type ActionItem, type ElementItem } from './types';
export type ElementDisplaySchemaType = 'inline' | 'block';
export declare const ElementDisplaySchema: Record<ElementName, ElementDisplaySchemaType[]>;
/**
 * Get gap size between elements inside a block
 * Equivalent version for DS primitives space token is getPrimitivesInlineSpaceBySize()
 * at view/FlexibleCard/components/utils.tsx
 */
export declare const getGapSize: (size: SmartLinkSize) => number;
export declare const isJSXElementNull: (children: JSX.Element) => boolean;
export declare const filterActionItems: (items?: ActionItem[], context?: FlexibleUiDataContext) => ActionItem[];
export declare const renderChildren: (children: React.ReactNode, size: SmartLinkSize) => React.ReactNode;
export declare const renderElementItems: (items?: ElementItem[], display?: ElementDisplaySchemaType) => React.ReactNode | undefined;
