import React from 'react';
import { type ManualRulesData } from '../../manual-triggers-container';
type AutomationMenuContextContainerProps = {
    baseAutomationUrl: string;
    objectAri: string;
    siteAri: string;
    canManageAutomation: boolean;
    analyticsSource: string;
    children: () => React.ReactElement;
    emptyStateDescription?: React.ReactNode;
    emptyStateAdminDescription?: React.ReactNode;
    onRuleInvocationSuccess?: () => void;
    onRuleInvocationFailure?: () => void;
    onRuleInvocationLifecycleDone?: () => void;
};
export type RuleExecutionState = 'SUCCEED' | 'FAILURE' | 'NONE';
export type MenuContext = Omit<ManualRulesData, 'error'> & {
    fetchError: any;
    analyticsSource: string;
    objectAri: string;
    baseAutomationUrl: string;
    canManageAutomation: boolean;
    emptyStateDescription?: React.ReactNode;
    emptyStateAdminDescription?: React.ReactNode;
    ruleExecutionState: RuleExecutionState;
};
export declare const useAutomationMenu: () => MenuContext;
export declare const AutomationMenuContextContainer: ({ baseAutomationUrl, analyticsSource, objectAri, siteAri, canManageAutomation, children, emptyStateDescription, emptyStateAdminDescription, onRuleInvocationSuccess, onRuleInvocationFailure, onRuleInvocationLifecycleDone, }: AutomationMenuContextContainerProps) => React.JSX.Element;
export {};
