import type { Ari } from '../types';
/**
 * This function will extract the cloud ID and product from a product level Site ARI.
 * ARIs can be found at the following link: {@link https://developer.atlassian.com/platform/atlassian-resource-identifier/resource-owners/registry/#ari-registry}
 * @param site The Site ARI where the manual trigger rule is executed. Should be a product level Site ARI.
 */
export declare const extractCloudIdAndProductFromSite: (site: Ari) => {
    product: string;
    cloudId: string;
};
/***
 * TODO remove when unified public API is available.
 *
 * Currently we're in a transitory phase where we have one API for invocation for Jira, and one for JSM. They concern themselves
 * with issues and alerts respectively.
 *
 * We are working on a unified public API that only cares about product-agnostic filters like object, workspace, container as
 * part of the collaboration model. For the meantime, you'll see two APIs instead. In this package, we're only using the
 * alerts API. It is this API that will be expanded to retroactively support Jira, and thus the updated collaboration
 * model language is used here, even though for the meantime we only concern ourselves with alerts.
 *
 */
export declare const getSearchUrl: (site: Ari) => Promise<string>;
export declare const getInvocationUrl: (site: Ari, ruleId: number) => Promise<string>;
export declare const performGetRequest: (url: string, options?: RequestInit) => Promise<any>;
export declare const performPostRequest: (url: string, options?: RequestInit) => Promise<any>;
