import { TrackQuickActionFailureReason } from '../../../utils/analytics/analytics';
export var getInvokeFailureReason = function getInvokeFailureReason(err) {
  if (!isInvokeCustomError(err)) {
    return TrackQuickActionFailureReason.UnknownError;
  }
  switch (err === null || err === void 0 ? void 0 : err.errorCode) {
    case 403:
      return TrackQuickActionFailureReason.PermissionError;
    default:
      return TrackQuickActionFailureReason.UnknownError;
  }
};
export var isInvokeCustomError = function isInvokeCustomError(err) {
  return (err === null || err === void 0 ? void 0 : err.message) !== undefined && (err === null || err === void 0 ? void 0 : err.errorCode) !== undefined;
};