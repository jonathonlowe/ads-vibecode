import { extractEntityProvider, extractLink, extractProvider,
// extractSmartLinkIcon,
extractSmartLinkTitle, extractSmartLinkUrl, extractTitle, isEntityPresent } from '@atlaskit/link-extractors';
import { fg } from '@atlaskit/platform-feature-flags';
import { extractIcon } from '../common/icon';
import { extractLozenge } from '../common/lozenge';
import { extractTitleTextColor } from '../common/primitives';
import { extractTitlePrefix } from '../common/title-prefix';
import { CONFLUENCE_GENERATOR_ID, JIRA_GENERATOR_ID } from '../constants';
var extractInlineIcon = function extractInlineIcon(jsonLd) {
  var showIconLabel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var provider = extractProvider(jsonLd);
  if (provider && provider.id) {
    if (provider.id === CONFLUENCE_GENERATOR_ID || provider.id === JIRA_GENERATOR_ID) {
      return extractIcon(jsonLd, 'type', showIconLabel);
    }
  }
  return extractIcon(jsonLd, 'provider', showIconLabel);
};
var extractSmartLinkInlineIcon = function extractSmartLinkInlineIcon(response) {
  var showLabel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  if (isEntityPresent(response)) {
    var provider = extractEntityProvider(response);
    if (provider) {
      return provider.icon;
    }
    // We don't need this for design entities,
    // but we can add it back when we support more nouns
    // it requires extractInlineIcon to be moved to the smart link extractor package.
    // see: https://product-fabric.atlassian.net/browse/EDM-12375
    // return extractSmartLinkIcon(response);
  }
  return extractInlineIcon(response === null || response === void 0 ? void 0 : response.data, showLabel);
};
export var extractInlineProps = function extractInlineProps(response, renderers, removeTextHighlightingFromTitle) {
  var showLabel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
  var jsonLd = response === null || response === void 0 ? void 0 : response.data;
  if (fg('smart_links_noun_support')) {
    return {
      icon: extractSmartLinkInlineIcon(response, showLabel),
      link: extractSmartLinkUrl(response),
      title: extractSmartLinkTitle(response, removeTextHighlightingFromTitle),
      // As we migrate to support more nouns we can incorporate these fields
      lozenge: extractLozenge(jsonLd),
      titleTextColor: extractTitleTextColor(jsonLd),
      titlePrefix: extractTitlePrefix(jsonLd, renderers, 'inline')
    };
  }
  return {
    link: extractLink(jsonLd),
    title: extractTitle(jsonLd, removeTextHighlightingFromTitle),
    lozenge: extractLozenge(jsonLd),
    icon: extractInlineIcon(jsonLd, showLabel),
    titleTextColor: extractTitleTextColor(jsonLd),
    titlePrefix: extractTitlePrefix(jsonLd, renderers, 'inline')
  };
};