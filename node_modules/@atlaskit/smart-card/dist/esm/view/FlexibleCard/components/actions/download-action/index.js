import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["onClick"];
import React, { useCallback } from 'react';
import { FormattedMessage } from 'react-intl-next';
import DownloadIcon from '@atlaskit/icon/core/migration/download';
import { ActionName } from '../../../../../constants';
import { messages } from '../../../../../messages';
import { useFlexibleUiContext } from '../../../../../state/flexible-ui-context';
import useInvokeClientAction from '../../../../../state/hooks/use-invoke-client-action';
import Action from '../action';
var DownloadAction = function DownloadAction(_ref) {
  var _context$actions;
  var onClickCallback = _ref.onClick,
    props = _objectWithoutProperties(_ref, _excluded);
  var context = useFlexibleUiContext();
  var invoke = useInvokeClientAction({});
  var data = context === null || context === void 0 || (_context$actions = context.actions) === null || _context$actions === void 0 ? void 0 : _context$actions[ActionName.DownloadAction];
  var onClick = useCallback(function () {
    if (data !== null && data !== void 0 && data.invokeAction) {
      invoke(data.invokeAction);
      onClickCallback === null || onClickCallback === void 0 || onClickCallback();
    }
  }, [data, invoke, onClickCallback]);
  var isStackItem = props.as === 'stack-item';
  var label = isStackItem ? messages.download_file : messages.download;
  var tooltipMessage = isStackItem ? messages.download_description : messages.download;
  return data ? /*#__PURE__*/React.createElement(Action, _extends({
    content: /*#__PURE__*/React.createElement(FormattedMessage, label),
    icon: /*#__PURE__*/React.createElement(DownloadIcon, {
      spacing: "spacious",
      color: "currentColor",
      label: "Download"
    }),
    onClick: onClick,
    testId: "smart-action-download-action",
    tooltipMessage: /*#__PURE__*/React.createElement(FormattedMessage, tooltipMessage)
  }, data, props)) : null;
};
export default DownloadAction;