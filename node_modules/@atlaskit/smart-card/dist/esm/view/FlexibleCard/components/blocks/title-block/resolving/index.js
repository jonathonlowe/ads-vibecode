/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["actionGroup", "testId", "title", "hideIcon"];
import "./index.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
/* eslint-disable @atlaskit/ui-styling-standard/no-unsafe-values */

import { fg } from '@atlaskit/platform-feature-flags';
import { SmartLinkSize } from '../../../../../../constants';
import { LoadingSkeletonNew, LoadingSkeletonOld } from '../../../common/loading-skeleton';
import { getIconWidthNew } from '../../../utils';
import Block from '../../block';
var iconStyle = {
  xlarge: "_16jlidpf _1o9zidpf _i0dl1wug _4t3iviql _1tkeviql _c71lviql _1bsbviql _1ul9viql _p12fviql _i2i3idpf _uhasidpf _5jw9idpf _7wy9idpf _bna7viql _1xjxviql _1752viql _qci8viql _15izviql _erubviql _19l3viql _1pr2viql _1u5tviql _mezjviql _e2ooviql _w8l5viql _1rg2viql _q7cvviql _xwbjviql _rtysviql _b8nkviql _4x20viql",
  large: "_16jlidpf _1o9zidpf _i0dl1wug _4t3i1k8s _1tke1k8s _c71l1k8s _1bsb1k8s _1ul91k8s _p12f1k8s _i2i3idpf _uhasidpf _5jw9idpf _7wy9idpf _bna71k8s _1xjx1k8s _17521k8s _qci81k8s _15iz1k8s _erub1k8s _19l31k8s _1pr21k8s _1u5t1k8s _mezj1k8s _e2oo1k8s _w8l51k8s _1rg21k8s _q7cv1k8s _xwbj1k8s _rtys1k8s _b8nk1k8s _4x201k8s",
  medium: "_16jlidpf _1o9zidpf _i0dl1wug _4t3i1j6v _1tke1j6v _c71l1j6v _1bsb1j6v _1ul91j6v _p12f1j6v _i2i3idpf _uhasidpf _5jw9idpf _7wy9idpf _bna71j6v _1xjx1j6v _17521j6v _qci81j6v _15iz1j6v _erub1j6v _19l31j6v _1pr21j6v _1u5t1j6v _mezj1j6v _e2oo1j6v _w8l51j6v _1rg21j6v _q7cv1j6v _xwbj1j6v _rtys1j6v _b8nk1j6v _4x201j6v",
  small: "_16jlidpf _1o9zidpf _i0dl1wug _4t3ioqnp _1tkeoqnp _c71loqnp _1bsboqnp _1ul9oqnp _p12foqnp _i2i3idpf _uhasidpf _5jw9idpf _7wy9idpf _bna7oqnp _1xjxoqnp _1752oqnp _qci8oqnp _15izoqnp _eruboqnp _19l3oqnp _1pr2oqnp _1u5toqnp _mezjoqnp _e2oooqnp _w8l5oqnp _1rg2oqnp _q7cvoqnp _xwbjoqnp _rtysoqnp _b8nkoqnp _4x20oqnp"
};

/**
 * This represents a TitleBlock for a Smart Link that is currently waiting
 * for a request to finish.
 * This should render when a Smart Link has sent a request.
 * @see TitleBlock
 */
var TitleBlockResolvingView = function TitleBlockResolvingView(_ref) {
  var actionGroup = _ref.actionGroup,
    testId = _ref.testId,
    title = _ref.title,
    hideIcon = _ref.hideIcon,
    blockProps = _objectWithoutProperties(_ref, _excluded);
  var _blockProps$size = blockProps.size,
    size = _blockProps$size === void 0 ? SmartLinkSize.Medium : _blockProps$size;
  if (fg('platform-smart-card-icon-migration')) {
    var iconWidth = getIconWidthNew(size);
    return /*#__PURE__*/React.createElement(Block, _extends({}, blockProps, {
      testId: "".concat(testId, "-resolving-view")
    }), !hideIcon && /*#__PURE__*/React.createElement("span", {
      style: {
        width: iconWidth,
        height: iconWidth
      },
      "data-testid": "".concat(testId, "-icon")
    }, /*#__PURE__*/React.createElement(LoadingSkeletonNew, {
      width: iconWidth,
      height: iconWidth,
      testId: "".concat(testId, "-icon-loading")
    })), title, actionGroup);
  }
  return /*#__PURE__*/React.createElement(Block, _extends({}, blockProps, {
    testId: "".concat(testId, "-resolving-view")
  }), !hideIcon && /*#__PURE__*/React.createElement("span", {
    "data-testid": "".concat(testId, "-icon"),
    className: ax([iconStyle[size]])
  }, /*#__PURE__*/React.createElement(LoadingSkeletonOld, {
    testId: "".concat(testId, "-icon-loading")
  })), title, actionGroup);
};
export default TitleBlockResolvingView;