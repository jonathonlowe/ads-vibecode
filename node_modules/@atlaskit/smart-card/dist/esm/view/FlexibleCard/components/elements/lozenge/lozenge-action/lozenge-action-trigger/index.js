/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["appearance", "isOpen", "testId", "text", "triggerRef"];
import "./index.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
/* eslint-disable @atlaskit/design-system/use-tokens-typography */

import { useCallback, useMemo, useState } from 'react';
import ChevronDownIcon from '@atlaskit/icon/utility/migration/chevron-down';
import Lozenge from '@atlaskit/lozenge';
import { fg } from '@atlaskit/platform-feature-flags';
import { Box } from '@atlaskit/primitives/compiled';
var styles = {
  chevronDown: "_18u012x7 _1e0c1txw"
};
var triggerLozengeStyles = null;
var triggerButtonStyles = null;
var LozengeActionTrigger = function LozengeActionTrigger(_ref) {
  var appearance = _ref.appearance,
    isOpen = _ref.isOpen,
    testId = _ref.testId,
    text = _ref.text,
    triggerRef = _ref.triggerRef,
    props = _objectWithoutProperties(_ref, _excluded);
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    isBold = _useState2[0],
    setIsBold = _useState2[1];
  var onMouseEnter = useCallback(function () {
    return setIsBold(true);
  }, []);
  var onMouseLeave = useCallback(function () {
    return setIsBold(false);
  }, []);
  var lozenge = useMemo(function () {
    return /*#__PURE__*/React.createElement(Lozenge, {
      appearance: appearance,
      isBold: fg('platform-component-visual-refresh') ? true : isBold
    }, /*#__PURE__*/React.createElement("span", {
      className: ax(["_4cvr1h6o _1e0c1txw"])
    }, /*#__PURE__*/React.createElement("span", null, text), /*#__PURE__*/React.createElement(Box, {
      as: "span",
      xcss: styles.chevronDown
    }, /*#__PURE__*/React.createElement(ChevronDownIcon, {
      color: "currentColor",
      label: "options",
      LEGACY_size: "medium",
      LEGACY_margin: "-4px -8px -4px -7px"
    }))));
  }, [appearance, isBold, text]);
  return /*#__PURE__*/React.createElement("button", _extends({
    type: "button"
  }, props, {
    "data-action-open": isOpen,
    "data-testid": "".concat(testId, "--trigger"),
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    ref: triggerRef,
    className: ax(["_kkk2n7od _ca0qidpf _u5f3idpf _n3tdidpf _19bvidpf _15vhn7od _1dqonqa1 _189eyh40 _1h6d1j28 _bfhk1j28 _syazn7od _80omtlke _ect4n7od _1wybn7od _zg8ln7od _k48pn7od _vwz4idpf _1p1dn7od _19pkv77o _2hwxv77o _otyrv77o _18u0v77o _mizu1r31 _1guj1r31 _p8tl1r31 _ra3xglyw _pbhaglyw _1q2vglyw _128m1o36 _11ow1o36 _j8b81o36 _1bas14y2 _19h614y2 _1d3914y2 _1ejjo89b _1u6lo89b _6ssho89b"]),
    style: {
      "--_sq39bb": ix("0 0 0 2px ".concat("var(--ds-border-focused, #388BFF)"))
    }
  }), lozenge);
};
export default LozengeActionTrigger;