import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
import { di } from 'react-magnetic-di';
import { ErrorMessage, Field } from '@atlaskit/form';
import Select from '@atlaskit/select';
import messages from '../../common/messages';
var Errors = /*#__PURE__*/function (Errors) {
  Errors["EMPTY"] = "EMPTY";
  return Errors;
}(Errors || {});
var SelectInputPrompt = function SelectInputPrompt(_ref) {
  var userInputPrompt = _ref.userInputPrompt;
  var variableName = userInputPrompt.variableName,
    required = userInputPrompt.required,
    displayName = userInputPrompt.displayName,
    defaultValue = userInputPrompt.defaultValue;
  var validate = function validate(value) {
    if (required && !value) {
      return Errors.EMPTY;
    }
    return undefined;
  };
  var selectOptions = defaultValue.map(function (value) {
    return {
      label: value,
      value: value
    };
  });
  return /*#__PURE__*/React.createElement(Field, {
    name: variableName,
    label: displayName,
    isRequired: required,
    validate: validate
  }, function (_ref2) {
    var fieldProps = _ref2.fieldProps,
      error = _ref2.error;
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select, _extends({
      isClearable: true,
      isSearchable: true,
      options: selectOptions,
      menuPosition: "fixed"
    }, fieldProps)), error === Errors.EMPTY && /*#__PURE__*/React.createElement(ErrorMessage, null, messages.errorInputMustNotBeEmpty.defaultMessage));
  });
};
export default SelectInputPrompt;