import _extends from "@babel/runtime/helpers/extends";
import React, { useContext } from 'react';
import { useIntl } from 'react-intl-next';
import { IconType } from '../../../../../constants';
import { messages } from '../../../../../messages';
import { FlexibleUiContext } from '../../../../../state/flexible-ui-context';
import Badge from '../badge';
var AppliedToComponentsCount = function AppliedToComponentsCount(props) {
  var _useIntl = useIntl(),
    formatMessage = _useIntl.formatMessage;
  var context = useContext(FlexibleUiContext);
  if (
  // Check for null and undefined, render if it's 0.
  (context === null || context === void 0 ? void 0 : context.appliedToComponentsCount) === null || (context === null || context === void 0 ? void 0 : context.appliedToComponentsCount) === undefined) {
    return null;
  }
  var label = formatMessage(messages.compass_applied_components_count, {
    numberOfComponents: context.appliedToComponentsCount
  });
  return /*#__PURE__*/React.createElement(Badge, _extends({
    icon: IconType.Component,
    label: label
  }, props));
};
export default AppliedToComponentsCount;