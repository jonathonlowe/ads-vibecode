/* main.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./main.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { defineMessages, useIntl } from 'react-intl-next';
import Heading from '@atlaskit/heading';
import LegacyManualTriggerIcon from '@atlaskit/legacy-custom-icons/manual-trigger-icon';
import { ModalHeader, useModal } from '@atlaskit/modal-dialog';
import { Box, Inline, Stack } from '@atlaskit/primitives/compiled';
import { G50 } from '@atlaskit/theme/colors';
import { useAutomationMenu } from '../../menu-context';
var styles = {
  iconStyle: "_2rkoglpi _18zr1b66 _1rjcv77o _2hwxutpp",
  modalDescriptionStyle: "_19pkutpp"
};
var i18n = defineMessages({
  modalHeaderIconLabel: {
    id: 'automation-menu.modal.header.icon.label',
    defaultMessage: 'Automation modal header icon',
    description: 'A label for the icon in the header of the automation modal.'
  }
});
export var AutomationModalHeader = function AutomationModalHeader(_ref) {
  var modalTitle = _ref.modalTitle,
    modalDescription = _ref.modalDescription;
  var _useIntl = useIntl(),
    formatMessage = _useIntl.formatMessage;
  var _useAutomationMenu = useAutomationMenu(),
    initialised = _useAutomationMenu.initialised,
    rules = _useAutomationMenu.rules;
  var _useModal = useModal(),
    titleId = _useModal.titleId;
  var showDescription = initialised && rules.length > 0 && !!modalDescription;
  return /*#__PURE__*/React.createElement(ModalHeader, null, /*#__PURE__*/React.createElement(Stack, null, /*#__PURE__*/React.createElement(Inline, {
    alignBlock: "center"
  }, /*#__PURE__*/React.createElement(Box, {
    xcss: styles.iconStyle
    // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage
    ,
    backgroundColor: "color.background.accent.green.subtlest"
  }, /*#__PURE__*/React.createElement(LegacyManualTriggerIcon, {
    size: "small",
    label: formatMessage(i18n.modalHeaderIconLabel),
    primaryColor: "var(--ds-icon-accent-green, ".concat(G50, ")")
  })), /*#__PURE__*/React.createElement(Heading, {
    size: "medium",
    id: titleId
  }, modalTitle)), showDescription && /*#__PURE__*/React.createElement(Box, {
    xcss: styles.modalDescriptionStyle
  }, modalDescription)));
};