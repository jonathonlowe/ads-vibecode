import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
var _importIconMapperOld;
import React from 'react';
import Loadable from 'react-loadable';
import DocumentIconOld from '@atlaskit/icon-file-type/glyph/document/16';
import BlogIconOld from '@atlaskit/icon-object/glyph/blog/16';
import { ConfluenceIcon, JiraIcon } from '@atlaskit/logo';
import { fg } from '@atlaskit/platform-feature-flags';
import { R400 } from '@atlaskit/theme/colors';
import BlogIconNew from '../../../../../common/ui/icons/blog-icon';
import LiveDocumentIcon from '../../../../../common/ui/icons/live-document-icon';
import DocumentIconNew from '../../../../../common/ui/icons/page-icon';
import { IconType, SmartLinkSize } from '../../../../../constants';
import { getLazyIcons, isIconSizeLarge } from '../../../../../utils';
// prettier-ignore
var importIconMapperOld = (_importIconMapperOld = {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_importIconMapperOld, IconType.Archive, function () {
  return import( /* webpackChunkName: "glyphArchive" */'@atlaskit/icon-file-type/glyph/archive/16');
}), IconType.Audio, function () {
  return import( /* webpackChunkName: "glyphAudio" */'@atlaskit/icon-file-type/glyph/audio/16');
}), IconType.Code, function () {
  return import( /* webpackChunkName: "glyphCode" */'@atlaskit/icon-file-type/glyph/source-code/16');
}), IconType.Executable, function () {
  return import( /* webpackChunkName: "glyphExecutable" */'@atlaskit/icon-file-type/glyph/executable/16');
}), IconType.File, function () {
  return import( /* webpackChunkName: "glyphFile" */'@atlaskit/icon-file-type/glyph/generic/16');
}), IconType.Folder, function () {
  return import( /* webpackChunkName: "glyphFolder" */'@atlaskit/icon-file-type/glyph/folder/16');
}), IconType.Generic, function () {
  return import( /* webpackChunkName: "glyphGeneric" */'@atlaskit/icon-file-type/glyph/generic/16');
}), IconType.GIF, function () {
  return import( /* webpackChunkName: "glyphGIF" */'@atlaskit/icon-file-type/glyph/gif/16');
}), IconType.GoogleDocs, function () {
  return import( /* webpackChunkName: "glyphGoogleDocs" */'@atlaskit/icon-file-type/glyph/google-doc/16');
}), IconType.GoogleForms, function () {
  return import( /* webpackChunkName: "glyphGoogleForms" */'@atlaskit/icon-file-type/glyph/google-form/16');
}), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_importIconMapperOld, IconType.GoogleSheets, function () {
  return import( /* webpackChunkName: "glyphGoogleSheets" */'@atlaskit/icon-file-type/glyph/google-sheet/16');
}), IconType.GoogleSlides, function () {
  return import( /* webpackChunkName: "glyphGoogleSlides" */'@atlaskit/icon-file-type/glyph/google-slide/16');
}), IconType.Image, function () {
  return import( /* webpackChunkName: "glyphImage" */'@atlaskit/icon-file-type/glyph/image/16');
}), IconType.MSExcel, function () {
  return import( /* webpackChunkName: "glyphMSExcel" */'@atlaskit/icon-file-type/glyph/excel-spreadsheet/16');
}), IconType.MSPowerpoint, function () {
  return import( /* webpackChunkName: "glyphMSPowerpoint" */'@atlaskit/icon-file-type/glyph/powerpoint-presentation/16');
}), IconType.MSWord, function () {
  return import( /* webpackChunkName: "glyphMSWord" */'@atlaskit/icon-file-type/glyph/word-document/16');
}), IconType.PDF, function () {
  return import( /* webpackChunkName: "glyphPDF" */'@atlaskit/icon-file-type/glyph/pdf-document/16');
}), IconType.Presentation, function () {
  return import( /* webpackChunkName: "glyphPresentation" */'@atlaskit/icon-file-type/glyph/presentation/16');
}), IconType.Sketch, function () {
  return import( /* webpackChunkName: "glyphSketch" */'@atlaskit/icon-file-type/glyph/sketch/16');
}), IconType.Spreadsheet, function () {
  return import( /* webpackChunkName: "glyphSpreadsheet" */'@atlaskit/icon-file-type/glyph/spreadsheet/16');
}), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_importIconMapperOld, IconType.Template, function () {
  return import( /* webpackChunkName: "glyphTemplate" */'@atlaskit/icon/glyph/document-filled');
}), IconType.Video, function () {
  return import( /* webpackChunkName: "glyphVideo" */'@atlaskit/icon-file-type/glyph/video/16');
}), IconType.Branch, function () {
  return import( /* webpackChunkName: "glyphBranch" */'@atlaskit/icon-object/glyph/branch/16');
}), IconType.Commit, function () {
  return import( /* webpackChunkName: "glyphCommit" */'@atlaskit/icon-object/glyph/commit/16');
}), IconType.Project, function () {
  return import( /* webpackChunkName: "glyphProject" */'@atlaskit/icon/glyph/people-group');
}), IconType.PullRequest, function () {
  return import( /* webpackChunkName: "glyphPullRequest" */'@atlaskit/icon-object/glyph/pull-request/16');
}), IconType.Repo, function () {
  return import( /* webpackChunkName: "glyphRepo" */'@atlaskit/icon-object/glyph/code/16');
}), IconType.Bug, function () {
  return import( /* webpackChunkName: "glyphBug" */'@atlaskit/icon-object/glyph/bug/16');
}), IconType.Change, function () {
  return import( /* webpackChunkName: "glyphChange" */'@atlaskit/icon-object/glyph/changes/16');
}), IconType.Epic, function () {
  return import( /* webpackChunkName: "glyphEpic" */'@atlaskit/icon-object/glyph/epic/16');
}), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_importIconMapperOld, IconType.Incident, function () {
  return import( /* webpackChunkName: "glyphIncident" */'@atlaskit/icon-object/glyph/incident/16');
}), IconType.Problem, function () {
  return import( /* webpackChunkName: "glyphProblem" */'@atlaskit/icon-object/glyph/problem/16');
}), IconType.ServiceRequest, function () {
  return import( /* webpackChunkName: "glyphServiceRequest" */'@atlaskit/icon-object/glyph/issue/16');
}), IconType.Story, function () {
  return import( /* webpackChunkName: "glyphStory" */'@atlaskit/icon-object/glyph/story/16');
}), IconType.SubTask, function () {
  return import( /* webpackChunkName: "glyphSubTask" */'@atlaskit/icon-object/glyph/subtask/16');
}), IconType.Task, function () {
  return import( /* webpackChunkName: "glyphTask" */'@atlaskit/icon-object/glyph/task/16');
}), IconType.Confluence, function () {
  return import( /* webpackChunkName: "glyphConfluence" */'@atlaskit/logo/confluence-icon').then(function (_ref) {
    var ConfluenceIcon = _ref.ConfluenceIcon;
    return {
      default: ConfluenceIcon
    };
  });
}), IconType.Jira, function () {
  return import( /* webpackChunkName: "glyphJira" */'@atlaskit/logo/jira-icon').then(function (_ref2) {
    var JiraIcon = _ref2.JiraIcon;
    return {
      default: JiraIcon
    };
  });
}), IconType.Default, function () {
  return import( /* webpackChunkName: "glyphDefault" */'@atlaskit/icon/glyph/link');
}), IconType.Error, function () {
  return import( /* webpackChunkName: "glyphError" */'@atlaskit/icon/glyph/error');
}), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_importIconMapperOld, IconType.Forbidden, function () {
  return import( /* webpackChunkName: "glyphForbidden" */'@atlaskit/icon/glyph/lock-filled');
}), IconType.Attachment, function () {
  return import( /* webpackChunkName: "glyphAttachment" */'@atlaskit/icon/glyph/attachment');
}), IconType.CheckItem, function () {
  return import( /* webpackChunkName: "glyphAttachment" */'@atlaskit/icon/glyph/task');
}), IconType.Comment, function () {
  return import( /* webpackChunkName: "glyphComment" */'@atlaskit/icon/glyph/comment');
}), IconType.View, function () {
  return import( /* webpackChunkName: "glyphComment" */'@atlaskit/icon/glyph/watch');
}), IconType.React, function () {
  return import( /* webpackChunkName: "glyphComment" */'@atlaskit/icon/glyph/like');
}), IconType.Vote, function () {
  return import( /* webpackChunkName: "glyphComment" */'@atlaskit/icon/glyph/arrow-up');
}), IconType.PriorityBlocker, function () {
  return import( /* webpackChunkName: "glyphBlocker" */'@atlaskit/icon-priority/glyph/priority-blocker');
}), IconType.PriorityCritical, function () {
  return import( /* webpackChunkName: "glyphCritical" */'@atlaskit/icon-priority/glyph/priority-critical');
}), IconType.PriorityHigh, function () {
  return import( /* webpackChunkName: "glyphHigh" */'@atlaskit/icon-priority/glyph/priority-high');
}), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_importIconMapperOld, IconType.PriorityHighest, function () {
  return import( /* webpackChunkName: "glyphHighest" */'@atlaskit/icon-priority/glyph/priority-highest');
}), IconType.PriorityLow, function () {
  return import( /* webpackChunkName: "glyphLow" */'@atlaskit/icon-priority/glyph/priority-low');
}), IconType.PriorityLowest, function () {
  return import( /* webpackChunkName: "glyphLowest" */'@atlaskit/icon-priority/glyph/priority-lowest');
}), IconType.PriorityMajor, function () {
  return import( /* webpackChunkName: "glyphMajor" */'@atlaskit/icon-priority/glyph/priority-major');
}), IconType.PriorityMedium, function () {
  return import( /* webpackChunkName: "glyphMedium" */'@atlaskit/icon-priority/glyph/priority-medium');
}), IconType.PriorityMinor, function () {
  return import( /* webpackChunkName: "glyphMinor" */'@atlaskit/icon-priority/glyph/priority-minor');
}), IconType.PriorityTrivial, function () {
  return import( /* webpackChunkName: "glyphTrivial" */'@atlaskit/icon-priority/glyph/priority-trivial');
}), IconType.PriorityUndefined, function () {
  return import( /* webpackChunkName: "glyphUndefined" */'@atlaskit/icon/glyph/question');
}), IconType.ProgrammingLanguage, function () {
  return import( /* webpackChunkName: "glyphProgrammingLanguage" */'@atlaskit/icon/glyph/code');
}), IconType.Subscriber, function () {
  return import( /* webpackChunkName: "glyphSubscriber" */'@atlaskit/icon/glyph/people');
}), _defineProperty(_importIconMapperOld, IconType.SubTasksProgress, function () {
  return import( /* webpackChunkName: "glyphSubtaskProgress" */'@atlaskit/icon/glyph/subtask');
}));
var getIconImportFn = function getIconImportFn(icon, size) {
  if (fg('platform-smart-card-icon-migration')) {
    var item = getLazyIcons()[icon];
    if (isIconSizeLarge(size) && item !== null && item !== void 0 && item.large) {
      return item.large;
    }
    return item === null || item === void 0 ? void 0 : item.default;
  }
  return importIconMapperOld[icon];
};
var importIcon = function importIcon(importFn) {
  return Loadable({
    loader: function loader() {
      return importFn().then(function (module) {
        return module.default;
      });
    },
    loading: function loading() {
      return null;
    }
  }); // Because we're using dynamic loading here, TS will not be able to infer the type.
};
var AtlaskitIcon = function AtlaskitIcon(_ref3) {
  var icon = _ref3.icon,
    label = _ref3.label,
    testId = _ref3.testId,
    _ref3$size = _ref3.size,
    size = _ref3$size === void 0 ? SmartLinkSize.Medium : _ref3$size;
  var DocumentIcon = fg('platform-smart-card-icon-migration') ? DocumentIconNew : DocumentIconOld;
  var BlogIcon = fg('platform-smart-card-icon-migration') ? BlogIconNew : BlogIconOld;

  // Check for synchonously loaded icons first for SSR purposes
  switch (icon) {
    case IconType.Document:
      return /*#__PURE__*/React.createElement(DocumentIcon, _extends({
        label: label !== null && label !== void 0 ? label : 'document',
        testId: testId
      }, fg('platform-smart-card-icon-migration') && {
        size: size
      }));
    case IconType.Blog:
      return /*#__PURE__*/React.createElement(BlogIcon, _extends({
        label: label !== null && label !== void 0 ? label : 'blog',
        testId: testId
      }, fg('platform-smart-card-icon-migration') && {
        size: size
      }));
    case IconType.LiveDocument:
      return /*#__PURE__*/React.createElement(LiveDocumentIcon, _extends({
        label: label !== null && label !== void 0 ? label : 'live-doc',
        testId: testId
      }, fg('platform-smart-card-icon-migration') && {
        size: size
      }));
  }
  var importFn = getIconImportFn(icon, size);
  if (!importFn) {
    return null;
  }
  var ImportedIcon = importIcon(importFn);
  switch (icon) {
    case IconType.Confluence:
      return /*#__PURE__*/React.createElement(ConfluenceIcon, _extends({
        appearance: "brand",
        testId: testId
      }, fg('platform-smart-card-icon-migration') && {
        size: size === SmartLinkSize.Large ? 'small' : 'xsmall'
      }));
    case IconType.Jira:
      return /*#__PURE__*/React.createElement(JiraIcon, _extends({
        appearance: "brand",
        testId: testId
      }, fg('platform-smart-card-icon-migration') && {
        size: size === SmartLinkSize.Large ? 'small' : 'xsmall'
      }));
    case IconType.Error:
    case IconType.Forbidden:
      return /*#__PURE__*/React.createElement(ImportedIcon, _extends({
        label: label,
        testId: testId
      }, fg('platform-smart-card-icon-migration') ? {
        size: size,
        color: "var(--ds-icon-danger, #C9372C)"
      } : {
        primaryColor: "var(--ds-icon-danger, ".concat(R400, ")")
      }));
    default:
      return /*#__PURE__*/React.createElement(ImportedIcon, _extends({
        label: label,
        testId: testId
      }, fg('platform-smart-card-icon-migration') && {
        size: size
      }));
  }
};
export default AtlaskitIcon;