import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["status", "testId"];
import React from 'react';
import { InternalActionName, SmartLinkStatus } from '../../../../../constants';
import { useFlexibleUiContext } from '../../../../../state/flexible-ui-context';
import AISummaryBlockResolvedView from './resolved';
/**
 * Represents an AISummaryBlock, designed to summarising link resource
 * content using AI.
 * @public
 * @param {AISummaryBlockProps} AISummaryBlock
 * @see Block
 */
var AISummaryBlock = function AISummaryBlock(_ref) {
  var _context$actions;
  var status = _ref.status,
    _ref$testId = _ref.testId,
    testId = _ref$testId === void 0 ? 'smart-ai-summary-block' : _ref$testId,
    props = _objectWithoutProperties(_ref, _excluded);
  var context = useFlexibleUiContext();
  var actionData = context === null || context === void 0 || (_context$actions = context.actions) === null || _context$actions === void 0 ? void 0 : _context$actions[InternalActionName.AISummaryAction];
  if (status !== SmartLinkStatus.Resolved) {
    return null;
  }
  if (!(actionData !== null && actionData !== void 0 && actionData.url)) {
    return null;
  }
  return /*#__PURE__*/React.createElement(AISummaryBlockResolvedView, _extends({}, props, {
    testId: testId,
    url: actionData.url
  }));
};
export default AISummaryBlock;