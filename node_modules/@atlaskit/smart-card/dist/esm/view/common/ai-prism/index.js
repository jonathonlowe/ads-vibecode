/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./index.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { useThemeObserver } from '@atlaskit/tokens';
import AIGlowingBorder from './ai-glowing-border';
import { AI_BORDER_PALETTE } from './constants';
var contentStyles = null;
var contentStylesPrismVisible = null;
var animatedSvgContainerStyles = {
  true: "_v564fs5d _tzy4kb7n",
  false: "_v564fs5d _tzy4idpf"
};
var popupContainerStyles = null;
var AIPrism = function AIPrism(_ref) {
  var _AI_BORDER_PALETTE$co;
  var children = _ref.children,
    _ref$isGlowing = _ref.isGlowing,
    isGlowing = _ref$isGlowing === void 0 ? true : _ref$isGlowing,
    _ref$isMoving = _ref.isMoving,
    isMoving = _ref$isMoving === void 0 ? true : _ref$isMoving,
    isVisible = _ref.isVisible,
    testId = _ref.testId;
  var _useThemeObserver = useThemeObserver(),
    _useThemeObserver$col = _useThemeObserver.colorMode,
    colorMode = _useThemeObserver$col === void 0 ? 'light' : _useThemeObserver$col;
  return /*#__PURE__*/React.createElement(AIGlowingBorder, {
    palette: (_AI_BORDER_PALETTE$co = AI_BORDER_PALETTE[colorMode]) !== null && _AI_BORDER_PALETTE$co !== void 0 ? _AI_BORDER_PALETTE$co : AI_BORDER_PALETTE.light,
    isGlowing: isGlowing,
    isMoving: isMoving,
    testId: testId,
    className: ax([animatedSvgContainerStyles[isVisible ? 'true' : 'false']])
  }, /*#__PURE__*/React.createElement("div", {
    className: ax(["_2rkopd34 _bfhk1bhr _16qsie2t", "_v5649spz", isVisible && "_16qs1aef"])
  }, children));
};
export default AIPrism;