/* RelatedLinksBaseModal.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./RelatedLinksBaseModal.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { useCallback, useRef } from 'react';
import { FormattedMessage } from 'react-intl-next';
import Button from '@atlaskit/button/new';
import Modal, { ModalBody, ModalFooter, ModalHeader, ModalTitle, ModalTransition } from '@atlaskit/modal-dialog';
import { fg } from '@atlaskit/platform-feature-flags';
import { Box } from '@atlaskit/primitives/compiled';
import { useAnalyticsEvents } from '../../../common/analytics/generated/use-analytics-events';
import { messages } from '../../../messages';
var styles = {
  box: "_4t3i1i94"
};
var fixedWidth = 'small'; // pre-defined 400px by Atlaskit

var RelatedLinksBaseModal = function RelatedLinksBaseModal(_ref) {
  var onClose = _ref.onClose,
    showModal = _ref.showModal,
    children = _ref.children;
  var _useAnalyticsEvents = useAnalyticsEvents(),
    fireEvent = _useAnalyticsEvents.fireEvent;
  var modalOpenTimeRef = useRef(Date.now());
  var openCompleteHandler = useCallback(function (el) {
    el.focus();
    modalOpenTimeRef.current = Date.now();
    fireEvent('ui.modal.opened.relatedLinks', {});
  }, [fireEvent]);
  var closeHandler = useCallback(function () {
    fireEvent('ui.modal.closed.relatedLinks', {
      dwellTime: Date.now() - modalOpenTimeRef.current
    });
    onClose === null || onClose === void 0 || onClose();
  }, [fireEvent, onClose]);
  return /*#__PURE__*/React.createElement(ModalTransition, null, showModal && /*#__PURE__*/React.createElement(Modal, {
    testId: "related-links-modal",
    onClose: closeHandler,
    width: fixedWidth,
    autoFocus: false,
    shouldReturnFocus: false,
    onOpenComplete: openCompleteHandler,
    height: fg('platform-linking-visual-refresh-v2') ? '504px' : undefined
  }, /*#__PURE__*/React.createElement(ModalHeader, null, /*#__PURE__*/React.createElement(ModalTitle, null, /*#__PURE__*/React.createElement(FormattedMessage, fg('platform-linking-visual-refresh-v2') ? messages.related_links_modal_title_v2 : messages.related_links_modal_title))), /*#__PURE__*/React.createElement(ModalBody, null, fg('platform-linking-visual-refresh-v2') ? children : /*#__PURE__*/React.createElement(Box, {
    xcss: styles.box
  }, children)), /*#__PURE__*/React.createElement(ModalFooter, null, /*#__PURE__*/React.createElement(Button, {
    appearance: "primary",
    onClick: closeHandler
  }, /*#__PURE__*/React.createElement(FormattedMessage, messages.close)))));
};
export default RelatedLinksBaseModal;