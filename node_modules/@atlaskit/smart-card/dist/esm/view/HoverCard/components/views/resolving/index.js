/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import "./index.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
import React from 'react';
import { fg } from '@atlaskit/platform-feature-flags';
import { CustomBlock } from '../../../../FlexibleCard/components/blocks';
import ActionGroup from '../../../../FlexibleCard/components/blocks/action-group';
import { LoadingSkeletonNew, LoadingSkeletonOld } from '../../../../FlexibleCard/components/common/loading-skeleton';
import Icon from '../../../../FlexibleCard/components/elements/icon';
import { CARD_WIDTH_REM } from '../../../styled';
var loadingViewContainer = null;
var skeletonContainer = null;
var titleStyle = null;
var titleBlockStyles = null;
var HoverCardLoadingView = function HoverCardLoadingView(_ref) {
  var titleBlockProps = _ref.titleBlockProps;
  var testId = 'hover-card-loading-view';
  var lineHeightRem = 1.25;
  var skeletonWidth = CARD_WIDTH_REM - 2;
  var size = titleBlockProps.size,
    actions = titleBlockProps.actions;
  var actionGroup = (actions === null || actions === void 0 ? void 0 : actions.length) && (actions === null || actions === void 0 ? void 0 : actions.length) > 0 && /*#__PURE__*/React.createElement(ActionGroup, {
    items: actions,
    visibleButtonsNum: 2
  });
  var LoadingSkeleton = fg('platform-smart-card-icon-migration') ? LoadingSkeletonNew : LoadingSkeletonOld;
  return /*#__PURE__*/React.createElement("div", {
    "data-testid": testId,
    className: ax(["_1e0c1txw _2lx21bp4 _ca0q1e9d _u5f31e9d _n3td1e9d _19bv1e9d"])
  }, /*#__PURE__*/React.createElement("div", {
    className: ax(["_zulpud5o _1e0c1txw _2lx21bp4 _4cvr1h6o"])
  }, /*#__PURE__*/React.createElement(CustomBlock, _extends({}, titleBlockProps, {
    testId: "".concat(testId, "-title-block"),
    className: ax(["_zulpcxkx _1bsb1osq"])
  }), /*#__PURE__*/React.createElement(Icon, {
    render: function render() {
      return /*#__PURE__*/React.createElement(LoadingSkeleton, null);
    },
    size: size
  }), /*#__PURE__*/React.createElement("span", {
    "data-testid": "".concat(testId, "-title"),
    className: ax(["_16jlkb7n _1o9zidpf _i0dl1wug _4t3i1k92 _e2oo1osq"])
  }, fg('platform-smart-card-icon-migration') ? /*#__PURE__*/React.createElement(LoadingSkeletonNew, {
    height: "".concat(lineHeightRem, "rem")
  }) : /*#__PURE__*/React.createElement(LoadingSkeletonOld, {
    height: lineHeightRem
  })), actionGroup), fg('platform-smart-card-icon-migration') ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LoadingSkeletonNew, {
    width: "".concat(skeletonWidth, "rem"),
    height: "".concat(lineHeightRem, "rem")
  }), /*#__PURE__*/React.createElement(LoadingSkeletonNew, {
    width: "".concat(skeletonWidth, "rem"),
    height: "".concat(lineHeightRem * 3, "rem")
  }), /*#__PURE__*/React.createElement(LoadingSkeletonNew, {
    width: "".concat(skeletonWidth, "rem"),
    height: "".concat(lineHeightRem, "rem")
  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LoadingSkeletonOld, {
    width: skeletonWidth,
    height: lineHeightRem
  }), /*#__PURE__*/React.createElement(LoadingSkeletonOld, {
    width: skeletonWidth,
    height: lineHeightRem * 3
  }), /*#__PURE__*/React.createElement(LoadingSkeletonOld, {
    width: skeletonWidth,
    height: lineHeightRem
  }))));
};
export default HoverCardLoadingView;