import React, { useCallback } from 'react';
import { ErrorBoundary } from 'react-error-boundary';
var FallbackComponent = function FallbackComponent() {
  return /*#__PURE__*/React.createElement("span", null);
};
var withErrorBoundary = function withErrorBoundary(Component) {
  return function (props) {
    var onOpenFailed = props.onOpenFailed;
    var onError = useCallback(function (error, errorInfo) {
      if (onOpenFailed) {
        onOpenFailed(error, errorInfo);
      }
    }, [onOpenFailed]);
    return /*#__PURE__*/React.createElement(ErrorBoundary, {
      FallbackComponent: FallbackComponent,
      onError: onError
    }, /*#__PURE__*/React.createElement(Component, props));
  };
};
export default withErrorBoundary;