/* styled.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["as", "style"],
  _excluded2 = ["as", "style"],
  _excluded3 = ["as", "style"],
  _excluded4 = ["as", "style"],
  _excluded5 = ["as", "style"],
  _excluded6 = ["as", "style"],
  _excluded7 = ["as", "style"],
  _excluded8 = ["as", "style"];
import "./styled.compiled.css";
import { forwardRef } from 'react';
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
// Wraps all icons represented in Inline Links. Icons have three sources/types:
// - JSON-LD: from the generator.icon property coming back from ORS.
// - @atlaskit/icon: for lock icons, unauthorized, etc.
// - @atlaskit/icon-object: for object icons, e.g. repository, branch, etc.
// NB: the first set of overrides style icons imported from @atlaskit/icon-object correctly.
// NB: the second set of overrides style icons imported from @atlaskit/icon correctly.
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766

// TODO: remove this override behaviour for @atlaskit/icon-object
var IconObjectOverrides = "\n  & > span {\n    height: 16px;\n    width: 16px;\n    position: absolute;\n    top: 3px;\n    left: 0;\n    & > svg {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n";

// TODO: remove this override behaviour for @atlaskit/icon
var IconOverrides = "\n  & > * > span {\n    height: 16px;\n    width: 16px;\n    position: absolute;\n    left: 0;\n    & > svg {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n";

// TODO Delete when cleaning platform-linking-visual-refresh-v1
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
export var IconWrapperOldVisualRefresh = forwardRef(function (_ref, __cmplr) {
  var _ref$as = _ref.as,
    C = _ref$as === void 0 ? "span" : _ref$as,
    __cmpls = _ref.style,
    __cmplp = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement(C, _extends({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: ax(["_uiztglyw _17047vkz _iibf7vkz _lacastnw _1yg7idpf _15x0stnw _k9fw1ssb _1tr81ssb _q3v31ooe _1f027vkz _nbgx7vkz _4d7tstnw _o5fv1l7b _3g5ridpf _1fqgstnw _d1gw1ssb _1gx11ssb _18lx1ooe", __cmplp.className])
  }));
});

// Wraps all emoji in Inline Links similar to icon
// TODO Delete when cleaning platform-linking-visual-refresh-v1
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
if (process.env.NODE_ENV !== 'production') {
  IconWrapperOldVisualRefresh.displayName = 'IconWrapperOldVisualRefresh';
}
export var EmojiWrapperOldVisualRefresh = forwardRef(function (_ref2, __cmplr) {
  var _ref2$as = _ref2.as,
    C = _ref2$as === void 0 ? "span" : _ref2$as,
    __cmpls = _ref2.style,
    __cmplp = _objectWithoutProperties(_ref2, _excluded2);
  return /*#__PURE__*/React.createElement(C, _extends({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: ax(["_1e0c1o8l _2hwxv77o _uiztglyw _17047vkz _iibf7vkz _lacastnw _1yg7idpf _15x0stnw _k9fw1ssb _1tr81ssb _q3v31ooe _1f027vkz _nbgx7vkz _4d7tstnw _o5fv1l7b _3g5ridpf _1fqgstnw _d1gw1ssb _1gx11ssb _18lx1ooe", __cmplp.className])
  }));
});

// The main 'wrapping' element, title of the content.
// NB: `white-space` adds little whitespace before wrapping.
// NB: `word-break` line breaks as soon as an overflow takes place.
// TODO Delete when cleaning platform-linking-visual-refresh-v1
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
if (process.env.NODE_ENV !== 'production') {
  EmojiWrapperOldVisualRefresh.displayName = 'EmojiWrapperOldVisualRefresh';
}
export var IconTitleWrapperOldVisualRefresh = forwardRef(function (_ref3, __cmplr) {
  var _ref3$as = _ref3.as,
    C = _ref3$as === void 0 ? "span" : _ref3$as,
    __cmpls = _ref3.style,
    __cmplp = _objectWithoutProperties(_ref3, _excluded3);
  return /*#__PURE__*/React.createElement(C, _extends({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: ax(["_o5721jtm _1nmz9jpi _16d9qvcn _ca0qv77o _u5f31b66 _n3tdv77o _19bv1b66", __cmplp.className])
  }));
});

// TODO Delete when cleaning platform-linking-visual-refresh-v1
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
if (process.env.NODE_ENV !== 'production') {
  IconTitleWrapperOldVisualRefresh.displayName = 'IconTitleWrapperOldVisualRefresh';
}
export var LozengeWrapperOldVisualRefresh = forwardRef(function (_ref4, __cmplr) {
  var _ref4$as = _ref4.as,
    C = _ref4$as === void 0 ? "span" : _ref4$as,
    __cmpls = _ref4.style,
    __cmplp = _objectWithoutProperties(_ref4, _excluded4);
  return /*#__PURE__*/React.createElement(C, _extends({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: ax(["_1e0c1o8l _s7n4t94y _19pkidpf _2hwx1b66 _otyridpf _18u0v77o", __cmplp.className])
  }));
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
if (process.env.NODE_ENV !== 'production') {
  LozengeWrapperOldVisualRefresh.displayName = 'LozengeWrapperOldVisualRefresh';
}
export var RightIconPositionWrapper = forwardRef(function (_ref5, __cmplr) {
  var _ref5$as = _ref5.as,
    C = _ref5$as === void 0 ? "span" : _ref5$as,
    __cmpls = _ref5.style,
    __cmplp = _objectWithoutProperties(_ref5, _excluded5);
  return /*#__PURE__*/React.createElement(C, _extends({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: ax(["_18u0v77o _kqswh2mm _1e0c1o8l", __cmplp.className])
  }));
});

// The following components are used to absolutely position icons in the vertical center.
// - IconPositionWrapper: the `relative` parent which has no height in itself.
// - IconEmptyWrapper: the child which forces `IconPositionWrapper` to have a height.
// TODO Delete when cleaning platform-linking-visual-refresh-v1
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
if (process.env.NODE_ENV !== 'production') {
  RightIconPositionWrapper.displayName = 'RightIconPositionWrapper';
}
export var IconPositionWrapperOldVisualRefresh = forwardRef(function (_ref6, __cmplr) {
  var _ref6$as = _ref6.as,
    C = _ref6$as === void 0 ? "span" : _ref6$as,
    __cmpls = _ref6.style,
    __cmplp = _objectWithoutProperties(_ref6, _excluded6);
  return /*#__PURE__*/React.createElement(C, _extends({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: ax(["_2hwx1b66 _kqswh2mm _1e0c1o8l", __cmplp.className])
  }));
});

// TODO Delete when cleaning platform-linking-visual-refresh-v1
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
if (process.env.NODE_ENV !== 'production') {
  IconPositionWrapperOldVisualRefresh.displayName = 'IconPositionWrapperOldVisualRefresh';
}
export var IconEmptyWrapperOldVisualRefresh = forwardRef(function (_ref7, __cmplr) {
  var _ref7$as = _ref7.as,
    C = _ref7$as === void 0 ? "span" : _ref7$as,
    __cmpls = _ref7.style,
    __cmplp = _objectWithoutProperties(_ref7, _excluded7);
  return /*#__PURE__*/React.createElement(C, _extends({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: ax(["_1bsb7vkz _4t3i1osq _1e0c1o8l _tzy4idpf", __cmplp.className])
  }));
});

// With emotion it's not possible to use reference to `TitleWrapper` as part of a selector,
// TODO Delete when cleaning platform-linking-visual-refresh-v1
// To achieve same result we use classname instead.
if (process.env.NODE_ENV !== 'production') {
  IconEmptyWrapperOldVisualRefresh.displayName = 'IconEmptyWrapperOldVisualRefresh';
}
export var TitleWrapperClassNameOldVisualRefresh = 'smart-link-title-wrapper';

// TODO Delete when cleaning platform-linking-visual-refresh-v1
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles, @atlaskit/design-system/no-empty-styled-expression -- Ignored via go/DSP-18766
export var TitleWrapperOldVisualRefresh = forwardRef(function (_ref8, __cmplr) {
  var _ref8$as = _ref8.as,
    C = _ref8$as === void 0 ? "span" : _ref8$as,
    __cmpls = _ref8.style,
    __cmplp = _objectWithoutProperties(_ref8, _excluded8);
  return /*#__PURE__*/React.createElement(C, _extends({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: ax(["", __cmplp.className])
  }));
});
if (process.env.NODE_ENV !== 'production') {
  TitleWrapperOldVisualRefresh.displayName = 'TitleWrapperOldVisualRefresh';
}