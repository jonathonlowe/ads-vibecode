import { type JsonLd } from '@atlaskit/json-ld-types';
import { type DatasourceResolveResponse, type JsonLdDatasourceResponse } from '@atlaskit/link-client-extension';
import { type CardStore, type CardType } from '@atlaskit/linking-common';
import { type DestinationProduct, type DestinationSubproduct } from '../utils/analytics/types';
export declare const getByDefinitionId: (definitionId: string | undefined, store: CardStore) => string[];
export declare const getClickUrl: (url: string, jsonLd?: JsonLd.Response) => string;
export declare const getDefinitionId: (details?: JsonLd.Response) => string | undefined;
export declare const getExtensionKey: (details?: JsonLd.Response) => string | undefined;
export declare const getResourceType: (details?: JsonLd.Response) => string | undefined;
export declare const getProduct: (details?: JsonLd.Response) => DestinationProduct | string | undefined;
export declare const getSubproduct: (details?: JsonLd.Response) => DestinationSubproduct | string | undefined;
export declare const getServices: (details?: JsonLd.Response) => JsonLd.Primitives.AuthService[];
export declare const hasResolved: (details?: JsonLd.Response) => boolean | undefined;
export declare const isAccessible: ({ meta: { access } }: JsonLd.Response) => boolean;
export declare const isVisible: ({ meta: { visibility } }: JsonLd.Response) => boolean;
export declare const getStatusDetails: (details?: JsonLd.Response) => string | undefined;
export declare const isFinalState: (status: CardType) => boolean;
export declare const getDatasources: (details?: JsonLdDatasourceResponse) => DatasourceResolveResponse[] | undefined;
export declare const getCanBeDatasource: (details?: JsonLdDatasourceResponse) => boolean;
export declare const hasAuthScopeOverrides: (details?: JsonLd.Response) => boolean;
