/// <reference types="react" />
import { type AtlaskitBadgeProps } from './atlaskit-badge/types';
import { type AvatarGroupProps } from './avatar-group/types';
import { type BadgeProps } from './badge/types';
import { type DateTimeProps } from './date-time/types';
import { type IconProps } from './icon/types';
import { type LinkProps } from './link/types';
import { type LozengeProps } from './lozenge/types';
import { type TextProps } from './text/types';
/**
 * Creates a AssignedTo text element using the data from AssignedTo in the Flexible UI Context.
 * @see Text
 */
export declare const AssignedTo: import("react").ComponentType<TextProps>;
/**
 * An AvatarGroup element using the data from AssignedToGroup in the Flexible UI Context.
 * @see AvatarGroup
 */
export declare const AssignedToGroup: import("react").ComponentType<AvatarGroupProps>;
/**
 * Creates a AttachmentCount Badge element using the data from AttachmentCount in the Flexible UI Context.
 * @see Badge
 */
export declare const AttachmentCount: import("react").ComponentType<BadgeProps>;
/**
 * An AvatarGroup element using the data from AuthorGroup in the Flexible UI Context.
 * @see AvatarGroup
 */
export declare const AuthorGroup: import("react").ComponentType<AvatarGroupProps>;
/**
 * Creates a Checklist Badge element using the data from ChecklistProgress in the Flexible UI Context.
 * @see Badge
 */
export declare const ChecklistProgress: import("react").ComponentType<BadgeProps>;
/**
 * An AvatarGroup element using the data from CollaboratorGroup in the Flexible UI Context.
 * @see AvatarGroup
 */
export declare const CollaboratorGroup: import("react").ComponentType<AvatarGroupProps>;
/**
 * Creates a CommentCount Badge element using the data from CommentCount in the Flexible UI Context.
 * @see Badge
 */
export declare const CommentCount: import("react").ComponentType<BadgeProps>;
/**
 * Creates a CreatedOn DateTime element using the data from CreatedOn in the Flexible UI Context.
 * @see DateTime
 */
export declare const CreatedOn: import("react").ComponentType<DateTimeProps>;
/**
 * Creates a CreatedBy text element using the data from CreatedBy in the Flexible UI Context.
 * @see Text
 */
export declare const CreatedBy: import("react").ComponentType<TextProps>;
/**
 * Creates a DueOn Lozenge element using the data from dueOn in the Flexible UI Context.
 * @see Lozenge
 */
export declare const DueOn: import("react").ComponentType<LozengeProps>;
/**
 * Creates an element that contains Last Commit hash
 */
export declare const LatestCommit: import("react").ComponentType<BadgeProps>;
/**
 * Creates a LinkIcon Icon element using the data from LinkIcon in the Flexible UI Context.
 * @see Icon
 */
export declare const LinkIcon: import("react").ComponentType<IconProps>;
/**
 * Creates a Location Link element.
 * This represents the location or container of the resource.
 * @see Link
 */
export declare const Location: import("react").ComponentType<LinkProps>;
/**
 * Creates a ModifiedBy Text element using the data from ModifiedBy in the Flexible UI Context.
 * @see Text
 */
export declare const ModifiedBy: import("react").ComponentType<TextProps>;
/**
 * Creates a ModifiedOn DateTime element using the data from ModifiedOn in the Flexible UI Context.
 * @see DateTime
 */
export declare const ModifiedOn: import("react").ComponentType<DateTimeProps>;
/**
 * Creates a OwnedBy text element using the data from OwnedBy in the Flexible UI Context.
 * @see Text
 */
export declare const OwnedBy: import("react").ComponentType<TextProps>;
/**
 * An AvatarGroup element using the data from OwnedByGroup in the Flexible UI Context.
 * @see AvatarGroup
 */
export declare const OwnedByGroup: import("react").ComponentType<AvatarGroupProps>;
/**
 * Creates a Preview element using the data from Preview in the Flexible UI Context.
 * @see Preview
 */
export { default as Preview } from './preview';
/**
 * Creates a Priority Badge element using the data from Priority in the Flexible UI Context.
 * @see Badge
 */
export declare const Priority: import("react").ComponentType<BadgeProps>;
/**
 * Creates a ProgrammingLanguage Badge element using the data from ProgrammingLanguage in the Flexible UI Context.
 * @see Badge
 */
export declare const ProgrammingLanguage: import("react").ComponentType<BadgeProps>;
/**
 * Creates a Provider Badge element using the data from Provider in the Flexible UI Context.
 * @see Badge
 */
export declare const Provider: import("react").ComponentType<BadgeProps>;
/**
 * Creates a ReactCount Badge element using the data from ReactCount in the Flexible UI Context.
 * @see Badge
 */
export declare const ReactCount: import("react").ComponentType<BadgeProps>;
/**
 * Creates a ReadTime Text element using the data from readTime in the Flexible UI Context
 */
export declare const ReadTime: import("react").ComponentType<TextProps>;
/**
 * Creates a SentOn DateTime element using the data from SentOn in the Flexible UI Context.
 * @see DateTime
 */
export declare const SentOn: import("react").ComponentType<DateTimeProps>;
/**
 * Creates a Snippet element using the data from Snippet in the Flexible UI Context.
 * @see Text
 */
export { default as Snippet } from './snippet-element';
/**
 * Creates a SourceBranch Text element using the data from sourceBranch in the Flexible UI Context.
 * @see Text
 */
export declare const SourceBranch: import("react").ComponentType<TextProps>;
/**
 * Creates a State Lozenge element using the data from State in the Flexible UI Context.
 * @see Lozenge
 */
export declare const State: import("react").ComponentType<LozengeProps>;
/**
 * Creates a SubscriberCount Badge element using the data from SubscriberCount in the Flexible UI Context.
 * @see Badge
 */
export declare const SubscriberCount: import("react").ComponentType<BadgeProps>;
/**
 * Create a SubTasks Badge element using the data from subTasks in the Flexible UI Context.
 * @see Badge
 */
export declare const SubTasksProgress: import("react").ComponentType<BadgeProps>;
/**
 * Create a StoryPoints Badge element using the data from storyPoints in the Flexible UI Context.
 * @see AtlaskitBadge
 */
export declare const StoryPoints: import("react").ComponentType<AtlaskitBadgeProps>;
/**
 * Creates a TargetBranch Text element using the data from targetBranch in the Flexible UI Context.
 * @see Text
 */
export declare const TargetBranch: import("react").ComponentType<TextProps>;
/**
 * Creates a Title Link element using the data from Title in the Flexible UI Context.
 * This represents the main link text within the Smart Link.
 * @see Link
 */
export declare const Title: import("react").ComponentType<LinkProps>;
/**
 * Creates a ViewCount Badge element using the data from ViewCount in the Flexible UI Context.
 * @see Badge
 */
export declare const ViewCount: import("react").ComponentType<BadgeProps>;
/**
 * Creates a VoteCount Badge element using the data from VoteCount in the Flexible UI Context.
 * @see Badge
 */
export declare const VoteCount: import("react").ComponentType<BadgeProps>;
export { default as AppliedToComponentsCount } from './applied-to-components-count';
