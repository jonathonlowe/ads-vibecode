declare const messages: {
    readonly successFlag: {
        readonly id: "automation-platform.common.success-flag";
        readonly defaultMessage: "Your automation is in progress";
        readonly description: "Text for a success flag when an automation rule has been triggered";
    };
    readonly failureFlagTitle: {
        readonly id: "automation-platform.common.failure-flag-title";
        readonly defaultMessage: "Oops we ran into a problem";
        readonly description: "Title for an error flag when an automation rule failed to be triggered";
    };
    readonly failureFlagDescription: {
        readonly id: "automation-platform.common.failure-flag-description";
        readonly defaultMessage: "There was a problem and we couldn't run the automation '{0}'";
        readonly description: "Description for an error flag when an automation rule failed to be triggered";
    };
    readonly partialFailureFlagDescription: {
        readonly id: "automation-platform.common.partial-failure-flag-description";
        readonly defaultMessage: "Couldn't run the automation against issues {0}, please ensure you have permission to view these issues";
        readonly description: "Description for an error flag when some issues failed to invoke because user does not have view permission";
    };
    readonly errorInputMustNotBeEmpty: {
        readonly id: "automation-platform.common.error-input-must-not-be-empty";
        readonly defaultMessage: "Input must not be empty";
        readonly description: "The error message to show the value of a required field is empty";
    };
    readonly errorInputCharacterLimitReached: {
        readonly id: "automation-platform.common.error-input-character-limit-reached";
        readonly defaultMessage: "Provided value exceeds the character limit for the field.";
        readonly description: "The error message to show that the character limit has been reached for the field";
    };
    readonly inputRequiredForAction: {
        readonly id: "automation-platform.common.input-required-for-action";
        readonly defaultMessage: "Your input is required to complete this action";
        readonly description: "The title of the modal for user inputs";
    };
    readonly errorInputTypeIsNotSupported: {
        readonly id: "automation-platform.common.error-input-type-is-not-supported";
        readonly defaultMessage: "Input type not supported yet";
        readonly description: "The error message to show when the type of user input is not recognised";
    };
    readonly errorValueIsNotValidNumber: {
        readonly id: "automation-platform.common.error-value-is-not-valid-number";
        readonly defaultMessage: "The value is not a valid number";
        readonly description: "The error message for when the type of user input is number but the value is not a valid number";
    };
    readonly cancelButtonTitle: {
        readonly id: "automation-platform.common.cancel-button-title";
        readonly defaultMessage: "Cancel";
        readonly description: "The cancel button title";
    };
    readonly continueButtonTitle: {
        readonly id: "automation-platform.common.continue-button-title";
        readonly defaultMessage: "Continue";
        readonly description: "The continue button title";
    };
};
export default messages;
