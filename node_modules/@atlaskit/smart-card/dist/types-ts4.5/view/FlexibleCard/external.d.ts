/**
 * This file contains export components and API for FlexibleCard components.
 * For internal usage for access to all available props, please use following
 * - ./components/elements for metadata component
 * - ./components/actions for action component
 *
 * DO NOT add a new prop to these components until we are ready to support it externally.
 */
import React from 'react';
import { type LinkProps } from './components/elements/link/types';
import { type TextProps } from './components/elements/text/types';
export declare const AssignedToElement: () => React.JSX.Element;
export declare const AssignedToGroupElement: () => React.JSX.Element;
export declare const AttachmentCountElement: () => React.JSX.Element;
export declare const AuthorGroupElement: () => React.JSX.Element;
export declare const ChecklistProgressElement: () => React.JSX.Element;
export declare const CollaboratorGroupElement: () => React.JSX.Element;
export declare const CommentCountElement: () => React.JSX.Element;
export declare const CreatedOnElement: () => React.JSX.Element;
export declare const CreatedByElement: () => React.JSX.Element;
export declare const DueOnElement: () => React.JSX.Element;
export declare const LatestCommitElement: () => React.JSX.Element;
export declare const LinkIconElement: () => React.JSX.Element;
export declare const LocationElement: () => React.JSX.Element;
export declare const ModifiedByElement: () => React.JSX.Element;
export declare const ModifiedOnElement: () => React.JSX.Element;
export declare const OwnedByElement: () => React.JSX.Element;
export declare const OwnedByGroupElement: () => React.JSX.Element;
export declare const PreviewElement: () => React.JSX.Element;
export declare const PriorityElement: () => React.JSX.Element;
export declare const ProgrammingLanguageElement: () => React.JSX.Element;
export declare const ProviderElement: () => React.JSX.Element;
export declare const ReactCountElement: () => React.JSX.Element;
export declare const ReadTimeElement: () => React.JSX.Element;
export declare const SentOnElement: () => React.JSX.Element;
export type SnippetElementProps = Pick<TextProps, 'maxLines'> & {
    text?: TextProps['content'];
};
export declare const SnippetElement: (props: SnippetElementProps) => React.JSX.Element;
export declare const SourceBranchElement: () => React.JSX.Element;
export declare const StateElement: () => React.JSX.Element;
export declare const StoryPointsElement: () => React.JSX.Element;
export declare const SubscriberCountElement: () => React.JSX.Element;
export declare const SubTasksProgressElement: () => React.JSX.Element;
export declare const TargetBranchElement: () => React.JSX.Element;
export type TitleElementProps = Pick<LinkProps, 'hideTooltip' | 'maxLines' | 'target' | 'text'>;
export declare const TitleElement: (props: TitleElementProps) => React.JSX.Element;
export declare const ViewCountElement: () => React.JSX.Element;
export declare const VoteCountElement: () => React.JSX.Element;
type BaseActionProps = {
    appearance?: 'default' | 'subtle';
};
export declare const toActionProps: (props?: BaseActionProps) => {
    appearance: "default" | "subtle";
    icon: undefined;
};
export type CopyLinkActionProps = BaseActionProps;
export declare const CopyLinkAction: (props: CopyLinkActionProps) => React.JSX.Element;
export type CustomActionProps = BaseActionProps & {
    children: React.ReactNode;
    onClick: () => void;
};
export declare const CustomAction: (props: CustomActionProps) => React.JSX.Element;
export type DownloadActionProps = BaseActionProps;
export declare const DownloadAction: (props: DownloadActionProps) => React.JSX.Element;
export type FollowActionProps = BaseActionProps;
export declare const FollowAction: (props: FollowActionProps) => React.JSX.Element;
export type PreviewActionProps = BaseActionProps;
export declare const PreviewAction: (props: PreviewActionProps) => React.JSX.Element;
export {};
