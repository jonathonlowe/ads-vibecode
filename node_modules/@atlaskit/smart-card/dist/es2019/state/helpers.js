import { extractVisitUrl } from '../extractors/common/primitives/extractVisitUrl';
export const getByDefinitionId = (definitionId, store) => {
  const urls = Object.keys(store);
  return urls.filter(url => {
    const {
      details
    } = store[url];
    return details && details.meta.definitionId === definitionId;
  });
};
export const getClickUrl = (url, jsonLd) => {
  if (jsonLd && jsonLd.data) {
    const visitUrl = extractVisitUrl(jsonLd.data);
    if (visitUrl) {
      return visitUrl;
    }
  }
  return url;
};
export const getDefinitionId = details => {
  var _details$meta;
  return details === null || details === void 0 ? void 0 : (_details$meta = details.meta) === null || _details$meta === void 0 ? void 0 : _details$meta.definitionId;
};
export const getExtensionKey = details => {
  var _details$meta2;
  return details === null || details === void 0 ? void 0 : (_details$meta2 = details.meta) === null || _details$meta2 === void 0 ? void 0 : _details$meta2.key;
};
export const getResourceType = details => {
  var _details$meta3;
  return details === null || details === void 0 ? void 0 : (_details$meta3 = details.meta) === null || _details$meta3 === void 0 ? void 0 : _details$meta3.resourceType;
};
export const getProduct = details => {
  var _details$meta4;
  return details === null || details === void 0 ? void 0 : (_details$meta4 = details.meta) === null || _details$meta4 === void 0 ? void 0 : _details$meta4.product;
};
export const getSubproduct = details => {
  var _details$meta5;
  return details === null || details === void 0 ? void 0 : (_details$meta5 = details.meta) === null || _details$meta5 === void 0 ? void 0 : _details$meta5.subproduct;
};
export const getServices = details => details && details.meta.auth || [];
export const hasResolved = details => details && isAccessible(details) && isVisible(details);
export const isAccessible = ({
  meta: {
    access
  }
}) => access === 'granted';
export const isVisible = ({
  meta: {
    visibility
  }
}) => visibility === 'restricted' || visibility === 'public';
export const getStatusDetails = details => {
  var _details$meta6, _details$meta6$reques;
  return details === null || details === void 0 ? void 0 : (_details$meta6 = details.meta) === null || _details$meta6 === void 0 ? void 0 : (_details$meta6$reques = _details$meta6.requestAccess) === null || _details$meta6$reques === void 0 ? void 0 : _details$meta6$reques.accessType;
};
export const isFinalState = status => {
  return ['unauthorized', 'forbidden', 'errored', 'resolved', 'not_found'].indexOf(status) > -1;
};
export const getDatasources = details => details === null || details === void 0 ? void 0 : details.datasources;
export const getCanBeDatasource = details => {
  const datasources = getDatasources(details);
  return !!datasources && datasources.length > 0;
};
export const hasAuthScopeOverrides = details => !!(details !== null && details !== void 0 && details.meta.hasScopeOverrides);