import React, { useCallback } from 'react';
import { ErrorBoundary } from 'react-error-boundary';
const FallbackComponent = () => /*#__PURE__*/React.createElement("span", null);
const withErrorBoundary = Component => props => {
  const {
    onOpenFailed
  } = props;
  const onError = useCallback((error, errorInfo) => {
    if (onOpenFailed) {
      onOpenFailed(error, errorInfo);
    }
  }, [onOpenFailed]);
  return /*#__PURE__*/React.createElement(ErrorBoundary, {
    FallbackComponent: FallbackComponent,
    onError: onError
  }, /*#__PURE__*/React.createElement(Component, props));
};
export default withErrorBoundary;