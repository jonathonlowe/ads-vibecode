/* action-button.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import "./action-button.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { useCallback } from 'react';
import { cx } from '@atlaskit/css';
import { fg } from '@atlaskit/platform-feature-flags';
import { Box, Inline, Pressable } from '@atlaskit/primitives/compiled';
import Spinner from '@atlaskit/spinner';
import { getPrimitivesInlineSpaceBySize } from '../../../utils';
import ActionIcon from '../action-icon';
const stylesOld = {
  button: "_kkk2n7od _ca0q1b66 _u5f31b66 _n3td1b66 _19bv1b66 _1bsb1osq _irr3166n _1di61dty",
  content: "_11c8dcr7 _syaz1fxt"
};
const styles = {
  button: "_bfhksm61 _ca0q1b66 _u5f31b66 _n3td1b66 _19bv1b66 _1bsb1osq _1ah31i6y _irr3166n _1di61dty",
  content: "_11c81o8v _syaz1fxt"
};
const ActionButton = ({
  content,
  icon: iconOption,
  isDisabled,
  isLoading,
  onClick: onClickCallback,
  size,
  space: spaceOption,
  testId,
  tooltipProps,
  style
}) => {
  const space = spaceOption !== null && spaceOption !== void 0 ? spaceOption : getPrimitivesInlineSpaceBySize(size);
  const onClick = useCallback(() => {
    if (!isDisabled && !isLoading && onClickCallback) {
      onClickCallback();
    }
  }, [isDisabled, isLoading, onClickCallback]);
  const icon = iconOption && isLoading ? /*#__PURE__*/React.createElement(ActionIcon, {
    asStackItemIcon: true,
    icon: /*#__PURE__*/React.createElement(Spinner, {
      testId: `${testId}-loading`
    }),
    size: size
  }) : iconOption;
  return /*#__PURE__*/React.createElement(Pressable, _extends({
    xcss: cx(!fg('platform-linking-visual-refresh-v1') && stylesOld.button, fg('platform-linking-visual-refresh-v1') && styles.button)
  }, tooltipProps, {
    onClick: onClick,
    testId: testId
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop
    ,
    style: style
  }), /*#__PURE__*/React.createElement(Inline, {
    alignBlock: "center",
    grow: "fill",
    space: space
  }, icon, /*#__PURE__*/React.createElement(Box, {
    xcss: cx(!fg('platform-linking-visual-refresh-v1') && stylesOld.content, fg('platform-linking-visual-refresh-v1') && styles.content)
  }, content)));
};
export default ActionButton;