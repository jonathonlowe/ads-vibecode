/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./index.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { useEffect, useMemo, useRef } from 'react';
import { StorageClient } from '@atlaskit/frontend-utilities/storage-client';
const LOCAL_STORAGE_CLIENT_KEY = '@atlaskit/smart-card';
const LOCAL_STORAGE_DISCOVERY_KEY = 'action-discovery-ai-summarise';
const LOCAL_STORAGE_DISCOVERY_VALUE = 'discovered';
const LOCAL_STORAGE_DISCOVERY_EXPIRY_IN_MS = 15552000000; // 180 days
const LOCAL_STORAGE_DISCOVERY_REQUIRED_TIME = 2000;
const pulseKeyframes = null;
const pulseStyles = null;

/**
 * This is a hacky solution to help with the feature discovery.
 * This implementation must be removed once the experiment is completed.
 * Cleanup on https://product-fabric.atlassian.net/browse/EDM-9649
 */
const FeatureDiscovery = ({
  children,
  testId
}) => {
  const renderedTime = useRef();
  const storageClient = useMemo(() => new StorageClient(LOCAL_STORAGE_CLIENT_KEY), []);
  const discovered = useMemo(() => {
    try {
      return storageClient.getItem(LOCAL_STORAGE_DISCOVERY_KEY) === LOCAL_STORAGE_DISCOVERY_VALUE;
    } catch {
      // If localStorage is not available, don't show feature discovery component. Treat it as 'discovered'.
      return true;
    }
  }, [storageClient]);
  useEffect(() => {
    renderedTime.current = Date.now();
    return () => {
      if (!discovered && renderedTime.current) {
        const duration = Date.now() - renderedTime.current;
        if (duration > LOCAL_STORAGE_DISCOVERY_REQUIRED_TIME) {
          try {
            storageClient.setItemWithExpiry(LOCAL_STORAGE_DISCOVERY_KEY, LOCAL_STORAGE_DISCOVERY_VALUE, LOCAL_STORAGE_DISCOVERY_EXPIRY_IN_MS);
          } catch {
            // silent error
          }
        }
      }
    };
  }, [storageClient, discovered]);
  const component = useMemo(() => {
    if (!discovered) {
      return /*#__PURE__*/React.createElement("span", {
        "data-testid": `${testId}-discovery`,
        className: ax(["_2rko1l7b _y44v1k6k _1e0c116y _16qslqk2"])
      }, children);
    }
  }, [children, discovered, testId]);
  return component !== null && component !== void 0 ? component : children;
};
export default FeatureDiscovery;