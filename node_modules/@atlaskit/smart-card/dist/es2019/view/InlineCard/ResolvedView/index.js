import React from 'react';
import Lozenge from '@atlaskit/lozenge';
import { fg } from '@atlaskit/platform-feature-flags';
import { HoverCard } from '../../HoverCard';
import { Frame } from '../Frame';
import { IconAndTitleLayout, LozengeWrapper } from '../IconAndTitleLayout';
export class InlineCardResolvedView extends React.Component {
  renderLozenge() {
    const {
      lozenge
    } = this.props;
    if (!lozenge) {
      return null;
    }
    const appearance = lozenge.appearance || 'default';
    return /*#__PURE__*/React.createElement(LozengeWrapper, null, /*#__PURE__*/React.createElement(Lozenge, {
      testId: "inline-card-resolved-view-lozenge",
      appearance: appearance
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      ,
      style: lozenge.style,
      isBold: fg('platform-component-visual-refresh') ? lozenge.isBold !== false : lozenge.isBold
    }, lozenge.text));
  }
  render() {
    const {
      id,
      title = '',
      isSelected,
      isHovered,
      onClick,
      icon,
      link,
      testId = 'inline-card-resolved-view',
      titleTextColor,
      titlePrefix,
      showHoverPreview = false,
      hoverPreviewOptions,
      actionOptions,
      truncateInline
    } = this.props;
    const inlineCardResolvedView = /*#__PURE__*/React.createElement(Frame, {
      testId: testId,
      link: link,
      isSelected: isSelected,
      isHovered: isHovered,
      onClick: onClick,
      truncateInline: truncateInline
    }, /*#__PURE__*/React.createElement(IconAndTitleLayout, {
      emoji: titlePrefix,
      icon: icon,
      title: title,
      titleTextColor: titleTextColor
    }), this.renderLozenge());
    if (showHoverPreview && link) {
      return /*#__PURE__*/React.createElement(HoverCard, {
        id: id,
        url: link,
        actionOptions: actionOptions,
        hoverPreviewOptions: hoverPreviewOptions,
        showLabel: false
      }, inlineCardResolvedView);
    }
    return inlineCardResolvedView;
  }
}