import { extractTitle } from '@atlaskit/link-extractors';
import { IconType } from '../../../constants';
import { CONFLUENCE_GENERATOR_ID, JIRA_GENERATOR_ID } from '../../constants';
import extractUrlIcon from './extract-url-icon';
/**
 * Extracts the provider icon and label from the given JSON-LD data.
 *
 * If the data is from Confluence, the icon will be the Confluence icon and the label will be 'Confluence'.
 * If the data is from Jira, the icon will be the Jira icon and the label will be 'Jira'.
 * If the data is from another provider, the icon and label will be extracted from the generator object.
 *
 * @param data - The JSON-LD data to extract the provider icon and label from.
 * @returns IconDescriptor with optional icon string name, url and label, or `undefined` if the data is not provided.
 */
const extractProviderIcon = data => {
  if (!data) {
    return undefined;
  }
  const generator = data.generator;
  const provider = generator === null || generator === void 0 ? void 0 : generator['@id'];
  const icon = generator === null || generator === void 0 ? void 0 : generator.icon;
  const label = (generator === null || generator === void 0 ? void 0 : generator.name) || extractTitle(data);
  if (provider === CONFLUENCE_GENERATOR_ID) {
    return {
      icon: IconType.Confluence,
      label: label || 'Confluence'
    };
  }
  if (provider === JIRA_GENERATOR_ID) {
    return {
      icon: IconType.Jira,
      label: label || 'Jira'
    };
  }
  return extractUrlIcon(icon, label);
};
export default extractProviderIcon;