import { IconType, SmartLinkStatus } from '../../../constants';
import extractIconRenderer from './extract-icon-renderer';
import extractJsonldDataIcon from './extract-jsonld-data-icon';
import extractProviderIcon from './extract-provider-icon';
export const extractLinkIcon = (response, renderers) => {
  const data = response.data;
  const render = extractIconRenderer(data, renderers);
  return {
    ...extractJsonldDataIcon(data),
    render
  };
};
export const extractErrorIcon = (response, status) => {
  // Try to get provider icon first.
  if (response) {
    const data = response.data;
    const {
      icon,
      url
    } = extractProviderIcon(data) || {};
    if (icon || url) {
      return {
        icon,
        url
      };
    }
  }

  // Otherwise, use fallback icon for each status.
  switch (status) {
    case SmartLinkStatus.Forbidden:
    case SmartLinkStatus.Unauthorized:
      return {
        icon: IconType.Forbidden
      };
    case SmartLinkStatus.NotFound:
      return {
        icon: IconType.Error
      };
    case SmartLinkStatus.Errored:
    case SmartLinkStatus.Fallback:
    default:
      return {
        icon: IconType.Default
      };
  }
};