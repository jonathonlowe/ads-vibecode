import { extractType } from '@atlaskit/link-extractors';
import { extractState } from './extractState';
import { extractTag } from './extractTag';
import { extractTaskStatus } from './extractTaskStatus';
import { extractTaskType } from './extractTaskType';
export const extractLozenge = jsonLd => {
  const type = extractType(jsonLd);
  if (type) {
    if (type.includes('atlassian:Task')) {
      const jsonLdTask = jsonLd;
      const lozengeFromTag = extractTag(jsonLdTask);
      const lozengeFromStatus = extractTaskStatus(jsonLdTask);
      const lozengeFromTaskType = extractLozengeFromTaskType(jsonLdTask);
      return lozengeFromTag || lozengeFromStatus || lozengeFromTaskType;
    }
    if (type.includes('atlassian:UndefinedLink')) {
      return {
        text: 'UNDEFINED',
        appearance: 'inprogress'
      };
    }

    // casting it because `extractState` can safely handle missing properties
    return extractState(jsonLd);
  }
};
const extractLozengeFromTaskType = jsonLdTask => {
  const taskType = extractTaskType(jsonLdTask);
  if (taskType && taskType.name) {
    return {
      text: taskType.name,
      appearance: 'success'
    };
  }
};