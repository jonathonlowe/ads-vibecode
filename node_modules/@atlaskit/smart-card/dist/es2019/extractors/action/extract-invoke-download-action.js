import { ActionName, CardAction } from '../../index';
import { getDefinitionId, getExtensionKey, getResourceType } from '../../state/helpers';
import { downloadUrl as download } from '../../utils';
import { canShowAction } from '../../utils/actions/can-show-action';
import { getActionsFromJsonLd } from '../common/actions/extractActions';
import { extractDownloadUrl } from '../common/download/extractDownloadUrl';
export const extractInvokeDownloadAction = ({
  actionOptions,
  appearance,
  id,
  response
}) => {
  if (!canShowAction(CardAction.DownloadAction, actionOptions)) {
    return;
  }
  const data = response.data;
  const downloadActionExists = getActionsFromJsonLd(data).find(action => action['@type'] === 'DownloadAction');
  if (downloadActionExists) {
    const downloadUrl = extractDownloadUrl(data);
    return {
      actionFn: async () => download(downloadUrl),
      actionSubjectId: 'downloadDocument',
      actionType: ActionName.DownloadAction,
      definitionId: getDefinitionId(response),
      display: appearance,
      extensionKey: getExtensionKey(response),
      id,
      resourceType: getResourceType(response)
    };
  }
};