"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "autoJoin", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.autoJoin;
  }
});
Object.defineProperty(exports, "baseKeymap", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.baseKeymap;
  }
});
Object.defineProperty(exports, "chainCommands", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.chainCommands;
  }
});
Object.defineProperty(exports, "createParagraphNear", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.createParagraphNear;
  }
});
Object.defineProperty(exports, "deleteSelection", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.deleteSelection;
  }
});
Object.defineProperty(exports, "exitCode", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.exitCode;
  }
});
Object.defineProperty(exports, "joinBackward", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.joinBackward;
  }
});
Object.defineProperty(exports, "joinDown", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.joinDown;
  }
});
Object.defineProperty(exports, "joinForward", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.joinForward;
  }
});
Object.defineProperty(exports, "joinTextblockBackward", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.joinTextblockBackward;
  }
});
Object.defineProperty(exports, "joinTextblockForward", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.joinTextblockForward;
  }
});
Object.defineProperty(exports, "joinUp", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.joinUp;
  }
});
Object.defineProperty(exports, "lift", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.lift;
  }
});
Object.defineProperty(exports, "liftEmptyBlock", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.liftEmptyBlock;
  }
});
Object.defineProperty(exports, "macBaseKeymap", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.macBaseKeymap;
  }
});
Object.defineProperty(exports, "newlineInCode", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.newlineInCode;
  }
});
Object.defineProperty(exports, "pcBaseKeymap", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.pcBaseKeymap;
  }
});
Object.defineProperty(exports, "selectAll", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.selectAll;
  }
});
Object.defineProperty(exports, "selectNodeBackward", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.selectNodeBackward;
  }
});
Object.defineProperty(exports, "selectNodeForward", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.selectNodeForward;
  }
});
Object.defineProperty(exports, "selectParentNode", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.selectParentNode;
  }
});
Object.defineProperty(exports, "selectTextblockEnd", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.selectTextblockEnd;
  }
});
Object.defineProperty(exports, "selectTextblockStart", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.selectTextblockStart;
  }
});
Object.defineProperty(exports, "setBlockType", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.setBlockType;
  }
});
Object.defineProperty(exports, "splitBlock", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.splitBlock;
  }
});
Object.defineProperty(exports, "splitBlockAs", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.splitBlockAs;
  }
});
Object.defineProperty(exports, "splitBlockKeepMarks", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.splitBlockKeepMarks;
  }
});
Object.defineProperty(exports, "toggleMark", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.toggleMark;
  }
});
Object.defineProperty(exports, "wrapIn", {
  enumerable: true,
  get: function get() {
    return _prosemirrorCommands.wrapIn;
  }
});
var _prosemirrorCommands = require("prosemirror-commands");