import type { ExtensionState } from '../extensionPluginType';
export declare const createPluginState: (dispatch: import("@atlaskit/editor-common/event-dispatcher").Dispatch, initialState: ExtensionState | ((state: import("prosemirror-state").EditorState) => ExtensionState)) => import("prosemirror-state").SafeStateField<ExtensionState>;
export declare const createCommand: <A = import("../extensionPluginType").ExtensionAction>(action: A | ((state: Readonly<import("prosemirror-state").EditorState>) => false | A), transform?: ((tr: import("prosemirror-state").Transaction, state: import("prosemirror-state").EditorState) => import("prosemirror-state").Transaction) | undefined) => import("@atlaskit/editor-common/types").Command;
export declare const getPluginState: (state: import("prosemirror-state").EditorState) => ExtensionState;
