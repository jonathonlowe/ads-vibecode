import type { Mark, Node as PMNode, Schema } from '@atlaskit/editor-prosemirror/model';
import type { EditorState } from '@atlaskit/editor-prosemirror/state';
import type { DomAtPos, NodeWithPos } from '@atlaskit/editor-prosemirror/utils';
export declare const getSelectedExtension: (state: EditorState, searchParent?: boolean) => import("prosemirror-utils/dist/types").ContentNodeWithPos | undefined;
export declare const findExtensionWithLocalId: (state: EditorState, localId?: string) => NodeWithPos | undefined;
export declare const getSelectedDomElement: (schema: Schema, domAtPos: DomAtPos, selectedExtensionNode: NodeWithPos) => HTMLElement;
export declare const getDataConsumerMark: (newNode: PMNode) => Mark | undefined;
export declare const getNodeTypesReferenced: (ids: string[], state: EditorState) => string[];
export declare const findNodePosWithLocalId: (state: EditorState, localId: string) => NodeWithPos | undefined;
export interface Position {
    top?: number;
    right?: number;
    bottom?: number;
    left?: number;
}
