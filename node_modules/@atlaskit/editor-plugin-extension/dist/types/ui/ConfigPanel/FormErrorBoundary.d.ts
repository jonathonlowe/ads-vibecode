import React from 'react';
import type { WrappedComponentProps } from 'react-intl-next';
import type { WithAnalyticsEventsProps } from '@atlaskit/analytics-next';
import type { FieldDefinition } from '@atlaskit/editor-common/extensions';
import type { ContextIdentifierProvider } from '@atlaskit/editor-common/provider-factory';
interface Props {
    fields: FieldDefinition[];
    extensionKey: string;
    contextIdentifierProvider?: ContextIdentifierProvider;
    children: React.ReactNode;
}
export declare const FormErrorBoundaryImpl: React.FC<import("react-intl-next").WithIntlProps<Props & WithAnalyticsEventsProps & WrappedComponentProps>> & {
    WrappedComponent: React.ComponentType<Props & WithAnalyticsEventsProps & WrappedComponentProps>;
};
export declare const FormErrorBoundary: React.ForwardRefExoticComponent<Omit<Omit<Omit<Props & WithAnalyticsEventsProps & WrappedComponentProps, "intl"> & {
    forwardedRef?: React.Ref<any> | undefined;
}, keyof WithAnalyticsEventsProps> & React.RefAttributes<any> & import("@atlaskit/analytics-next").WithContextProps, "ref"> & React.RefAttributes<any>>;
export {};
