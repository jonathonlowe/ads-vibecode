"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _react2 = require("@emotion/react");
var _reactIntlNext = require("react-intl-next");
var _tabs = _interopRequireWildcard(require("@atlaskit/tabs"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var panelWrapperStyles = (0, _react2.css)({
  flexGrow: 1,
  maxWidth: '100%'
});
var TabGroupImpl = function TabGroupImpl(props) {
  var field = props.field,
    renderPanel = props.renderPanel;
  var fields = field.fields;
  var _useState = (0, _react.useState)(function () {
      var activeTabName = field.defaultTab || fields[0].name;
      var index = fields.findIndex(function (f) {
        return f.name === activeTabName;
      });
      return Math.max(index, 0);
    }),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    activeTab = _useState2[0],
    setActiveTab = _useState2[1];
  var onChange = _react.default.useCallback(function (index) {
    setActiveTab(index);
  }, [setActiveTab]);
  return (0, _react2.jsx)(_tabs.default, {
    id: "configPanelTabs-".concat(field.name),
    onChange: onChange,
    selected: activeTab
  }, (0, _react2.jsx)(_tabs.TabList, null, fields.map(function (_ref) {
    var name = _ref.name,
      label = _ref.label;
    return (0, _react2.jsx)(_tabs.Tab, {
      key: "tab-".concat(name)
    }, label);
  })), fields.map(function (field) {
    return (0, _react2.jsx)(_tabs.TabPanel, {
      key: "panel-".concat(field.name)
    }, (0, _react2.jsx)("div", {
      css: panelWrapperStyles
    }, renderPanel(field)));
  }));
};
TabGroupImpl.displayName = 'TabGroup';
var TabGroup = (0, _reactIntlNext.injectIntl)(TabGroupImpl);
var _default = exports.default = TabGroup;