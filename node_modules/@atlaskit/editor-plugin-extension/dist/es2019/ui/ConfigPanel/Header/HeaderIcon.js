import React, { Suspense, lazy, useMemo } from 'react';
import { Box, xcss } from '@atlaskit/primitives';
import { withExtensionManifest } from '../withExtensionManifest';
const iconWidth = '40px';
const itemIconStyles = xcss({
  width: iconWidth,
  height: iconWidth,
  overflow: 'hidden',
  border: `1px solid ${"var(--ds-border, rgba(223, 225, 229, 0.5))"}`,
  borderRadius: "var(--ds-border-radius, 3px)",
  boxSizing: 'border-box',
  display: 'flex',
  justifyContent: 'center',
  alignItems: 'center'
});
function HeaderIcon({
  extensionManifest
}) {
  const icon = extensionManifest.icons['48'];
  const title = extensionManifest.title;
  const ResolvedIcon = useMemo(() => {
    return /*#__PURE__*/lazy(() => icon().then(Cmp => {
      if ('default' in Cmp) {
        return Cmp;
      }
      return {
        default: Cmp
      };
    }));
  }, [icon]);
  return /*#__PURE__*/React.createElement(Box, {
    xcss: itemIconStyles
  }, /*#__PURE__*/React.createElement(Suspense, {
    fallback: null
  }, /*#__PURE__*/React.createElement(ResolvedIcon, {
    label: title
  })));
}
export default withExtensionManifest(HeaderIcon);