import React, { Fragment } from 'react';
import { useIntl } from 'react-intl-next';
import { configPanelMessages as messages } from '@atlaskit/editor-common/extensions';
import { fg } from '@atlaskit/platform-feature-flags';
import { Box, Text, xcss } from '@atlaskit/primitives';
import { HelpLink } from './HelpLink';
const descriptionStyles = xcss({
  marginBottom: 'space.300'
});
const helpLinkStyles = xcss({
  paddingTop: 'space.150'
});
export function DescriptionSummary({
  extensionManifest
}) {
  const {
    formatMessage
  } = useIntl();
  const {
    description,
    deprecation,
    documentationUrl
  } = extensionManifest;
  // Use a temporary allowlist of top 3 macros to test out a new "Documentation" CTA ("Need help?")
  // This will be removed when Top 5 Modernized Macros updates are rolled out
  const modernizedMacrosList = ['children', 'recently-updated', 'excerpt'];
  const enableHelpCTA = modernizedMacrosList.includes(extensionManifest.key);
  return /*#__PURE__*/React.createElement(Fragment, null, (description || documentationUrl) && /*#__PURE__*/React.createElement(Box, {
    xcss: descriptionStyles
  }, /*#__PURE__*/React.createElement(Text, {
    as: "p",
    testId: "config-panel-header-description"
  }, description && /*#__PURE__*/React.createElement(Fragment, null,
  // Ignored via go/ees005
  // eslint-disable-next-line require-unicode-regexp
  description.replace(/([^.])$/, '$1.'), ' '), (deprecation === null || deprecation === void 0 ? void 0 : deprecation.isDeprecated) && (deprecation === null || deprecation === void 0 ? void 0 : deprecation.message) && fg('platform_editor_extension_deprecation_status') && /*#__PURE__*/React.createElement(Box, {
    paddingBlockStart: "space.150"
  }, deprecation.message), documentationUrl && (enableHelpCTA ? /*#__PURE__*/React.createElement(Box, {
    xcss: helpLinkStyles
  }, /*#__PURE__*/React.createElement(Text, {
    as: "p"
  }, /*#__PURE__*/React.createElement(HelpLink, {
    documentationUrl: documentationUrl,
    label: formatMessage(messages.help)
  }))) : /*#__PURE__*/React.createElement(HelpLink, {
    documentationUrl: documentationUrl,
    label: formatMessage(messages.documentation)
  })))));
}