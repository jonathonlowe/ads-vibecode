import React from 'react';
import type { ExtractInjectionAPI, FeatureFlags } from '@atlaskit/editor-common/types';
import type { Node } from '@atlaskit/editor-prosemirror/model';
import type { EditorState, Selection } from '@atlaskit/editor-prosemirror/state';
import type { ContentNodeWithPos } from '@atlaskit/editor-prosemirror/utils';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { ExtensionPlugin } from '../extensionPluginType';
export declare const duplicateSelection: (selectionToDuplicate: Selection, doc: Node) => Selection | undefined;
export declare const getContextPanel: (getEditorView?: () => EditorView | undefined) => (api: ExtractInjectionAPI<ExtensionPlugin> | undefined, featureFlags?: FeatureFlags) => (state: EditorState) => React.JSX.Element | undefined;
interface Parameters {
    [key: string]: unknown;
    macroParams?: Record<string, unknown>;
}
export declare function onChangeAction(editorView: EditorView, updatedParameters: Parameters | undefined, oldParameters: Parameters | undefined, nodeWithPos: ContentNodeWithPos, onSaving?: () => void): Promise<void>;
export {};
