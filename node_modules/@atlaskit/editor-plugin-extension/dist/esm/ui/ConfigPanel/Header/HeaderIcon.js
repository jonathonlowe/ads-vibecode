import React, { Suspense, lazy, useMemo } from 'react';
import { Box, xcss } from '@atlaskit/primitives';
import { withExtensionManifest } from '../withExtensionManifest';
var iconWidth = '40px';
var itemIconStyles = xcss({
  width: iconWidth,
  height: iconWidth,
  overflow: 'hidden',
  border: "1px solid ".concat("var(--ds-border, rgba(223, 225, 229, 0.5))"),
  borderRadius: "var(--ds-border-radius, 3px)",
  boxSizing: 'border-box',
  display: 'flex',
  justifyContent: 'center',
  alignItems: 'center'
});
function HeaderIcon(_ref) {
  var extensionManifest = _ref.extensionManifest;
  var icon = extensionManifest.icons['48'];
  var title = extensionManifest.title;
  var ResolvedIcon = useMemo(function () {
    return /*#__PURE__*/lazy(function () {
      return icon().then(function (Cmp) {
        if ('default' in Cmp) {
          return Cmp;
        }
        return {
          default: Cmp
        };
      });
    });
  }, [icon]);
  return /*#__PURE__*/React.createElement(Box, {
    xcss: itemIconStyles
  }, /*#__PURE__*/React.createElement(Suspense, {
    fallback: null
  }, /*#__PURE__*/React.createElement(ResolvedIcon, {
    label: title
  })));
}
export default withExtensionManifest(HeaderIcon);