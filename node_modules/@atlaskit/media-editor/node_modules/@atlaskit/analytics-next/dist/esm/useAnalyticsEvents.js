import { useContext, useRef } from 'react';
import { useCallbackOne } from 'use-memo-one';
import { AnalyticsReactContext, } from './AnalyticsReactContext';
import UIAnalyticsEvent from './UIAnalyticsEvent';
var noop = function () { return []; };
export function useAnalyticsEvents() {
    var analyticsContext = useContext(AnalyticsReactContext);
    var contextRef = useRef(analyticsContext);
    contextRef.current.getAtlaskitAnalyticsEventHandlers =
        analyticsContext.getAtlaskitAnalyticsEventHandlers;
    contextRef.current.getAtlaskitAnalyticsContext =
        analyticsContext.getAtlaskitAnalyticsContext;
    var createAnalyticsEvent = useCallbackOne(function (payload) {
        var getAtlaskitAnalyticsContext = contextRef.current.getAtlaskitAnalyticsContext || noop;
        var getAtlaskitAnalyticsEventHandlers = contextRef.current.getAtlaskitAnalyticsEventHandlers || noop;
        return new UIAnalyticsEvent({
            context: getAtlaskitAnalyticsContext(),
            handlers: getAtlaskitAnalyticsEventHandlers(),
            payload: payload,
        });
    }, []);
    return {
        createAnalyticsEvent: createAnalyticsEvent,
    };
}
//# sourceMappingURL=useAnalyticsEvents.js.map