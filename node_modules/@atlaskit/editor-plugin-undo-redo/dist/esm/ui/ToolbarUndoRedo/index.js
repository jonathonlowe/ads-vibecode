/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx } from '@emotion/react';
import { injectIntl } from 'react-intl-next';
import { useSharedPluginState } from '@atlaskit/editor-common/hooks';
import { getAriaKeyshortcuts, redo, redoAlt, tooltip, ToolTipContent, undo as undoKeymap } from '@atlaskit/editor-common/keymaps';
import { undoRedoMessages } from '@atlaskit/editor-common/messages';
import { buttonGroupStyle, buttonGroupStyleBeforeVisualRefresh, separatorStyles } from '@atlaskit/editor-common/styles';
import { TOOLBAR_BUTTON, ToolbarButton } from '@atlaskit/editor-common/ui-menu';
import RedoIcon from '@atlaskit/icon/core/migration/redo';
import UndoIcon from '@atlaskit/icon/core/migration/undo';
import { fg } from '@atlaskit/platform-feature-flags';
import { redoFromToolbar, undoFromToolbar } from '../../pm-plugins/commands';
import { forceFocus } from '../../pm-plugins/utils';
export var ToolbarUndoRedo = function ToolbarUndoRedo(_ref) {
  var disabled = _ref.disabled,
    isReducedSpacing = _ref.isReducedSpacing,
    editorView = _ref.editorView,
    api = _ref.api,
    formatMessage = _ref.intl.formatMessage;
  var _useSharedPluginState = useSharedPluginState(api, ['history']),
    historyState = _useSharedPluginState.historyState;
  var handleUndo = function handleUndo() {
    forceFocus(editorView, api)(undoFromToolbar);
  };
  var handleRedo = function handleRedo() {
    forceFocus(editorView, api)(redoFromToolbar);
  };
  var labelUndo = formatMessage(undoRedoMessages.undo);
  var labelRedo = formatMessage(undoRedoMessages.redo);
  var _ref2 = historyState !== null && historyState !== void 0 ? historyState : {},
    canUndo = _ref2.canUndo,
    canRedo = _ref2.canRedo;
  var redoKeymap = fg('platform_editor_cmd_y_mac_redo_shortcut') ? redoAlt : redo;
  return (
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    jsx("span", {
      css:
      // eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-registration, @atlaskit/platform/ensure-feature-flag-prefix
      fg('platform-visual-refresh-icons') ?
      // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values
      buttonGroupStyle :
      // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values
      buttonGroupStyleBeforeVisualRefresh
    }, jsx(ToolbarButton, {
      buttonId: TOOLBAR_BUTTON.UNDO,
      spacing: isReducedSpacing ? 'none' : 'default',
      onClick: handleUndo,
      disabled: !canUndo || disabled,
      "aria-label": tooltip(undoKeymap, labelUndo),
      "aria-keyshortcuts": getAriaKeyshortcuts(undoKeymap),
      title: jsx(ToolTipContent, {
        description: labelUndo,
        keymap: undoKeymap
      }),
      iconBefore: jsx(UndoIcon, {
        label: "",
        color: "currentColor",
        spacing: "spacious"
      }),
      testId: "ak-editor-toolbar-button-undo"
    }), jsx(ToolbarButton, {
      spacing: isReducedSpacing ? 'none' : 'default',
      buttonId: TOOLBAR_BUTTON.REDO,
      onClick: handleRedo,
      disabled: !canRedo || disabled,
      title: jsx(ToolTipContent, {
        description: labelRedo,
        keymap: redoKeymap
      }),
      iconBefore: jsx(RedoIcon, {
        label: "",
        color: "currentColor",
        spacing: "spacious"
      }),
      testId: "ak-editor-toolbar-button-redo",
      "aria-label": tooltip(redoKeymap, labelRedo),
      "aria-keyshortcuts": getAriaKeyshortcuts(redoKeymap)
    }), !(api !== null && api !== void 0 && api.primaryToolbar) && /* eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage */
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
    jsx("span", {
      css: separatorStyles
    }))
  );
};
export default injectIntl(ToolbarUndoRedo);