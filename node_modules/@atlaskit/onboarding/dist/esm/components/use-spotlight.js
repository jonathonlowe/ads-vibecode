import { useCallback, useContext, useEffect, useMemo, useRef } from 'react';
import { SpotlightContext } from './spotlight-manager';

/**
 * Use spotlight hook returns information about available spotlight targets.
 */
export default function useSpotlight() {
  var _useContext = useContext(SpotlightContext),
    targets = _useContext.targets;
  var targetRef = useRef(targets);
  useEffect(function () {
    targetRef.current = targets;
  }, [targets]);
  var isTargetRendered = useCallback(function (target) {
    return !!targetRef.current[target];
  }, []);
  return useMemo(function () {
    return {
      isTargetRendered: isTargetRendered
    };
  }, [isTargetRendered]);
}