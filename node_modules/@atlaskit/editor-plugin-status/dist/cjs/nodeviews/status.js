"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StatusNodeView = exports.IntlStatusContainerView = void 0;
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@emotion/react");
var _reactIntlNext = require("react-intl-next");
var _messages = require("@atlaskit/editor-common/messages");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _element = require("@atlaskit/status/element");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var styledStatusStyles = (0, _react2.css)({
  opacity: 1
});
var styledStatusPlaceholderStyles = (0, _react2.css)({
  opacity: 0.5
});
var StatusContainerView = function StatusContainerView(props) {
  var text = props.text,
    color = props.color,
    localId = props.localId,
    style = props.style,
    formatMessage = props.intl.formatMessage;
  var statusText = text ? text : formatMessage(_messages.statusMessages.placeholder);
  var handleClick = function handleClick(event) {
    if (event.nativeEvent.stopImmediatePropagation) {
      event.nativeEvent.stopImmediatePropagation();
    }
    // handling of popup is done in plugin.apply on selection change.
  };
  return (0, _react2.jsx)("span", {
    css: text ? styledStatusStyles : styledStatusPlaceholderStyles,
    "data-testid": "statusContainerView"
  }, (0, _react2.jsx)(_element.Status, {
    text: statusText,
    color: color,
    localId: localId
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    ,
    style: style,
    onClick: handleClick,
    isBold: (0, _platformFeatureFlags.fg)('platform-component-visual-refresh')
  }));
};
var IntlStatusContainerView = exports.IntlStatusContainerView = (0, _reactIntlNext.injectIntl)(StatusContainerView);
var StatusNodeView = exports.StatusNodeView = function StatusNodeView(props) {
  var view = props.view;
  var _props$node$attrs = props.node.attrs,
    text = _props$node$attrs.text,
    color = _props$node$attrs.color,
    localId = _props$node$attrs.localId,
    style = _props$node$attrs.style;
  return (0, _react2.jsx)(IntlStatusContainerView, {
    view: view,
    text: text,
    color: color
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    ,
    style: style,
    localId: localId
  });
};