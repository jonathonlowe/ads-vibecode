/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';
import { jsx } from '@emotion/react';
import type { IntlShape } from 'react-intl-next';
import type { EventDispatcher } from '@atlaskit/editor-common/event-dispatcher';
import type { InlineNodeViewComponentProps } from '@atlaskit/editor-common/react-node-view';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { Color, StatusStyle } from '@atlaskit/status/element';
import type { StatusPluginOptions } from '../types';
export interface ContainerProps {
    view: EditorView;
    intl: IntlShape;
    text?: string;
    color: Color;
    style?: StatusStyle;
    localId?: string;
    eventDispatcher?: EventDispatcher;
}
export declare const IntlStatusContainerView: React.FC<import("react-intl-next").WithIntlProps<ContainerProps>> & {
    WrappedComponent: React.ComponentType<ContainerProps>;
};
export type Props = InlineNodeViewComponentProps & {
    options: StatusPluginOptions | undefined;
};
export declare const StatusNodeView: (props: Props) => jsx.JSX.Element;
