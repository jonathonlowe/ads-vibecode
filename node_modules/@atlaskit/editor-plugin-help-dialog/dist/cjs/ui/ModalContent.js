"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ModalContent = void 0;
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@emotion/react");
var _reactIntlNext = require("react-intl-next");
var _browser = require("@atlaskit/editor-common/browser");
var _messages = require("@atlaskit/editor-common/messages");
var _heading = _interopRequireDefault(require("@atlaskit/heading"));
var _compiled = require("@atlaskit/primitives/compiled");
var _ModalFooter = _interopRequireDefault(require("./ModalFooter"));
var _ModalHeader = _interopRequireDefault(require("./ModalHeader"));
var _styles = require("./styles");
var _utils = require("./utils");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
/** @jsxFrag */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var ModalContent = exports.ModalContent = function ModalContent(_ref) {
  var formatting = _ref.formatting,
    onClose = _ref.onClose;
  return (0, _react2.jsx)(_react.default.Fragment, null, (0, _react2.jsx)(_ModalHeader.default, {
    onClose: onClose
  }), (0, _react2.jsx)("div", {
    css: _styles.contentWrapper
  }, (0, _react2.jsx)("div", {
    css: _styles.line
  }), (0, _react2.jsx)("div", {
    css: _styles.content
  }, (0, _react2.jsx)("div", {
    css: _styles.column
  }, (0, _react2.jsx)(_heading.default, {
    size: "medium"
  }, (0, _react2.jsx)(_reactIntlNext.FormattedMessage
  // Ignored via go/ees005
  // eslint-disable-next-line react/jsx-props-no-spreading
  , _messages.helpDialogMessages.keyboardShortcuts)), (0, _react2.jsx)("ul", null, formatting.filter(function (form) {
    var keymap = form.keymap && form.keymap();
    return keymap && keymap[_browser.browser.mac ? 'mac' : 'windows'];
  }).map(function (form) {
    // Ignored via go/ees005
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    var keymap = form.keymap;
    return (
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
      (0, _react2.jsx)("li", {
        css: _styles.row,
        key: "textFormatting-".concat(form.name)
      }, (0, _react2.jsx)(_compiled.Text, null, form.name), (0, _utils.getComponentFromKeymap)(keymap()))
    );
  }), formatting.filter(function (form) {
    return _utils.shortcutNamesWithoutKeymap.indexOf(form.type) !== -1;
  }).filter(function (form) {
    return form.autoFormatting;
  }).map(function (form) {
    // Ignored via go/ees005
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    var autoFormatting = form.autoFormatting;
    return (
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
      (0, _react2.jsx)("li", {
        css: _styles.row,
        key: "autoFormatting-".concat(form.name)
      }, (0, _react2.jsx)(_compiled.Text, null, form.name), autoFormatting())
    );
  }))), (0, _react2.jsx)("div", {
    css: _styles.line
  }), (0, _react2.jsx)("div", {
    css: _styles.column
  }, (0, _react2.jsx)(_heading.default, {
    size: "medium"
  }, (0, _react2.jsx)(_reactIntlNext.FormattedMessage
  // Ignored via go/ees005
  // eslint-disable-next-line react/jsx-props-no-spreading
  , _messages.helpDialogMessages.markdown)), (0, _react2.jsx)("ul", null, formatting.filter(function (form) {
    return _utils.shortcutNamesWithoutKeymap.indexOf(form.type) === -1;
  }).map(function (form) {
    return form.autoFormatting &&
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
    (0, _react2.jsx)("li", {
      key: "autoFormatting-".concat(form.name),
      css: _styles.row
    }, (0, _react2.jsx)("span", null, form.name), form.autoFormatting());
  }))))), (0, _react2.jsx)(_ModalFooter.default, null));
};
var _default = exports.default = ModalContent;