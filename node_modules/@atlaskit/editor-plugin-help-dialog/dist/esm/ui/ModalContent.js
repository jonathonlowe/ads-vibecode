/**
 * @jsxRuntime classic
 * @jsx jsx
 */
/** @jsxFrag */
import React from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx } from '@emotion/react';
import { FormattedMessage } from 'react-intl-next';
import { browser } from '@atlaskit/editor-common/browser';
import { helpDialogMessages as messages } from '@atlaskit/editor-common/messages';
import Heading from '@atlaskit/heading';
import { Text } from '@atlaskit/primitives/compiled';
import ModalFooter from './ModalFooter';
import ModalHeader from './ModalHeader';
import { column, content, contentWrapper, line, row } from './styles';
import { getComponentFromKeymap, shortcutNamesWithoutKeymap } from './utils';
export var ModalContent = function ModalContent(_ref) {
  var formatting = _ref.formatting,
    onClose = _ref.onClose;
  return jsx(React.Fragment, null, jsx(ModalHeader, {
    onClose: onClose
  }), jsx("div", {
    css: contentWrapper
  }, jsx("div", {
    css: line
  }), jsx("div", {
    css: content
  }, jsx("div", {
    css: column
  }, jsx(Heading, {
    size: "medium"
  }, jsx(FormattedMessage
  // Ignored via go/ees005
  // eslint-disable-next-line react/jsx-props-no-spreading
  , messages.keyboardShortcuts)), jsx("ul", null, formatting.filter(function (form) {
    var keymap = form.keymap && form.keymap();
    return keymap && keymap[browser.mac ? 'mac' : 'windows'];
  }).map(function (form) {
    // Ignored via go/ees005
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    var keymap = form.keymap;
    return (
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
      jsx("li", {
        css: row,
        key: "textFormatting-".concat(form.name)
      }, jsx(Text, null, form.name), getComponentFromKeymap(keymap()))
    );
  }), formatting.filter(function (form) {
    return shortcutNamesWithoutKeymap.indexOf(form.type) !== -1;
  }).filter(function (form) {
    return form.autoFormatting;
  }).map(function (form) {
    // Ignored via go/ees005
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    var autoFormatting = form.autoFormatting;
    return (
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
      jsx("li", {
        css: row,
        key: "autoFormatting-".concat(form.name)
      }, jsx(Text, null, form.name), autoFormatting())
    );
  }))), jsx("div", {
    css: line
  }), jsx("div", {
    css: column
  }, jsx(Heading, {
    size: "medium"
  }, jsx(FormattedMessage
  // Ignored via go/ees005
  // eslint-disable-next-line react/jsx-props-no-spreading
  , messages.markdown)), jsx("ul", null, formatting.filter(function (form) {
    return shortcutNamesWithoutKeymap.indexOf(form.type) === -1;
  }).map(function (form) {
    return form.autoFormatting &&
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
    jsx("li", {
      key: "autoFormatting-".concat(form.name),
      css: row
    }, jsx("span", null, form.name), form.autoFormatting());
  }))))), jsx(ModalFooter, null));
};
export default ModalContent;