import _defineProperty from "@babel/runtime/helpers/defineProperty";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
export var ELEMENTS_CHANNEL = 'fabric-elements';
var packageName = "@atlaskit/status";
var packageVersion = "3.0.4";
export var createStatusAnalyticsAndFire = function createStatusAnalyticsAndFire(createAnalyticsEvent) {
  return function (payload) {
    var statusPayload = _objectSpread(_objectSpread({}, payload), {}, {
      eventType: 'ui'
    });
    if (!statusPayload.attributes) {
      statusPayload.attributes = {};
    }
    statusPayload.attributes.packageName = packageName;
    statusPayload.attributes.packageVersion = packageVersion;
    statusPayload.attributes.componentName = 'status';
    var event = createAnalyticsEvent(statusPayload);
    event.fire(ELEMENTS_CHANNEL);
    return event;
  };
};