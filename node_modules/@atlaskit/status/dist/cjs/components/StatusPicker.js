/* StatusPicker.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StatusPicker = void 0;
require("./StatusPicker.compiled.css");
var _runtime = require("@compiled/react/runtime");
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _textfield = _interopRequireDefault(require("@atlaskit/textfield"));
var _react = _interopRequireWildcard(require("react"));
var _reactIntlNext = require("react-intl-next");
var _colorPalette = _interopRequireDefault(require("./internal/color-palette"));
var _i18n = require("./i18n");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var fieldTextWrapperStyles = null;
var Picker = /*#__PURE__*/function (_PureComponent) {
  function Picker() {
    var _this;
    (0, _classCallCheck2.default)(this, Picker);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, Picker, [].concat(args));
    (0, _defineProperty2.default)(_this, "fieldTextWrapperKey", Math.random().toString());
    (0, _defineProperty2.default)(_this, "colorPaletteKey", Math.random().toString());
    (0, _defineProperty2.default)(_this, "onChange", function (evt) {
      // @ts-ignore
      _this.props.onTextChanged(evt.target.value);
    });
    (0, _defineProperty2.default)(_this, "onKeyPress", function (event) {
      if (event.key === 'Enter') {
        _this.props.onEnter();
      }
    });
    (0, _defineProperty2.default)(_this, "handleInputRef", function (ref) {
      _this.inputRef = ref;
      if (ref && _this.props.autoFocus) {
        _this.focusInput();
      }
    });
    (0, _defineProperty2.default)(_this, "focusInput", function () {
      if (!_this.inputRef) {
        return;
      }
      // Defer to prevent editor scrolling to top
      _this.autofocusTimeout = setTimeout(function () {
        var _this$inputRef;
        (_this$inputRef = _this.inputRef) === null || _this$inputRef === void 0 || _this$inputRef.focus();
      });
    });
    return _this;
  }
  (0, _inherits2.default)(Picker, _PureComponent);
  return (0, _createClass2.default)(Picker, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        text = _this$props.text,
        selectedColor = _this$props.selectedColor,
        onColorClick = _this$props.onColorClick,
        onColorHover = _this$props.onColorHover,
        intl = _this$props.intl;

      // Using <React.Fragment> instead of [] to workaround Enzyme
      // (https://github.com/airbnb/enzyme/issues/1149)
      return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
        key: this.fieldTextWrapperKey,
        className: (0, _runtime.ax)(["_19pkidpf _otyridpf _2hwxu2gc _18u0u2gc _n6347jlr"])
      }, /*#__PURE__*/_react.default.createElement(_textfield.default, {
        value: text,
        isCompact: true,
        ref: this.handleInputRef,
        onChange: this.onChange,
        onKeyPress: this.onKeyPress,
        spellCheck: false,
        autoComplete: "off",
        "aria-label": intl.formatMessage(_i18n.messages.statusInputLabel)
      })), /*#__PURE__*/_react.default.createElement(_colorPalette.default, {
        key: this.colorPaletteKey,
        onClick: onColorClick,
        onHover: onColorHover,
        selectedColor: selectedColor
      }));
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (this.inputRef && this.props.autoFocus) {
        this.focusInput();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.autofocusTimeout !== undefined) {
        clearTimeout(this.autofocusTimeout);
      }
    }
  }]);
}(_react.PureComponent);
(0, _defineProperty2.default)(Picker, "defaultProps", {
  autoFocus: true
});
var StatusPicker = exports.StatusPicker = (0, _reactIntlNext.injectIntl)(Picker);