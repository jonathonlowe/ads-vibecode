/* color.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
require("./color.compiled.css");
var _react = _interopRequireWildcard(require("react"));
var React = _react;
var _runtime = require("@compiled/react/runtime");
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _checkMarkEditorDone = _interopRequireDefault(require("@atlaskit/icon/core/migration/check-mark--editor-done"));
var _compiled = require("@atlaskit/primitives/compiled");
var _reactIntlNext = require("react-intl-next");
var _constants = require("../constants");
var _i18n = require("../i18n");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var styles = {
  button: "_2rkoglpi _19it7r9e _1reo15vq _18m915vq _4t3i1tcg _1bsb1tcg _bfhkm7j4 _ca0qze3t _u5f3ze3t _n3tdze3t _19bvze3t _1e0c1ule"
};

// We have tried with changing border and padding from 1px to token near version 2px,
// the pop - up is being expanded to two lines.
var buttonWrapperStyles = null;
var Color = exports.default = /*#__PURE__*/function (_PureComponent) {
  function Color() {
    var _this;
    (0, _classCallCheck2.default)(this, Color);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, Color, [].concat(args));
    (0, _defineProperty2.default)(_this, "hoverStartTime", 0);
    (0, _defineProperty2.default)(_this, "onMouseEnter", function () {
      _this.hoverStartTime = Date.now();
    });
    (0, _defineProperty2.default)(_this, "onMouseLeave", function () {
      var onHover = _this.props.onHover;
      var delay = Date.now() - _this.hoverStartTime;
      if (delay >= _constants.ANALYTICS_HOVER_DELAY && onHover) {
        onHover(_this.props.value);
      }
      _this.hoverStartTime = 0;
    });
    (0, _defineProperty2.default)(_this, "onMouseDown", function (e) {
      e.preventDefault();
    });
    (0, _defineProperty2.default)(_this, "onClick", function (e) {
      var _this$props = _this.props,
        onClick = _this$props.onClick,
        value = _this$props.value;
      e.preventDefault();
      onClick(value);
    });
    return _this;
  }
  (0, _inherits2.default)(Color, _PureComponent);
  return (0, _createClass2.default)(Color, [{
    key: "render",
    value: function render() {
      var _this2 = this;
      var _this$props2 = this.props,
        tabIndex = _this$props2.tabIndex,
        backgroundColor = _this$props2.backgroundColor,
        isSelected = _this$props2.isSelected,
        borderColor = _this$props2.borderColor,
        iconColor = _this$props2.iconColor,
        value = _this$props2.value,
        setRef = _this$props2.setRef;
      return /*#__PURE__*/React.createElement("li", {
        className: (0, _runtime.ax)(["_ca0qt94y _u5f3t94y _n3tdt94y _19bvt94y _2rko12x7 _189et94y _1dqonqa1 _1h6d1j28 _19pkidpf _2hwxv77o _otyridpf _18u0v77o _1e0c1txw _4cvr1h6o _bfw7pp12"]),
        style: {
          "--_18x9sjc": (0, _runtime.ix)("1px solid ".concat("var(--ds-border, #091E4224)"))
        }
      }, /*#__PURE__*/React.createElement(_reactIntlNext.FormattedMessage, _i18n.messages["".concat(value, "Color")], function (labels) {
        return /*#__PURE__*/React.createElement(_compiled.Pressable, {
          xcss: styles.button,
          onClick: _this2.onClick,
          onMouseEnter: _this2.onMouseEnter,
          onMouseLeave: _this2.onMouseLeave,
          onMouseDown: _this2.onMouseDown,
          tabIndex: tabIndex,
          title: labels[0]
          // button element does not support aria-selected.
          // For button selected (to be precise pressed) or not
          //  use aria-pressed as per
          // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/button_role#associated_aria_roles_states_and_properties
          ,
          "aria-pressed": isSelected,
          style: {
            backgroundColor: backgroundColor || 'transparent',
            // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop
            color: iconColor,
            // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
            borderColor: borderColor
          },
          ref: setRef
        }, isSelected && /*#__PURE__*/React.createElement(_checkMarkEditorDone.default, {
          color: "currentColor",
          label: labels[0]
        }));
      }));
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.hoverStartTime = 0;
    }
  }]);
}(_react.PureComponent);