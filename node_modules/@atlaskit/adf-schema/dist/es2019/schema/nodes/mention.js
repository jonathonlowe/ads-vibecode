import { uuid } from '../../utils';
import { mention as mentionFactory } from '../../next-schema/generated/nodeTypes';
export let USER_TYPES = /*#__PURE__*/function (USER_TYPES) {
  USER_TYPES["DEFAULT"] = "DEFAULT";
  USER_TYPES["SPECIAL"] = "SPECIAL";
  USER_TYPES["APP"] = "APP";
  return USER_TYPES;
}({});

/**
 * @name mention_node
 */

export const mention = mentionFactory({
  parseDOM: [{
    tag: 'span[data-mention-id]',
    getAttrs: domNode => {
      const dom = domNode;
      const attrs = {
        id: dom.getAttribute('data-mention-id') || mention.attrs.id.default,
        text: dom.textContent || mention.attrs.text.default,
        accessLevel: dom.getAttribute('data-access-level') || mention.attrs.accessLevel.default,
        localId: uuid.generate()
      };
      const userType = dom.getAttribute('data-user-type');
      if (USER_TYPES[userType]) {
        attrs.userType = userType;
      }
      return attrs;
    }
  }],
  toDOM(node) {
    const {
      id,
      accessLevel,
      text,
      userType,
      localId
    } = node.attrs;
    const attrs = {
      'data-mention-id': id,
      'data-access-level': accessLevel,
      contenteditable: 'false'
    };
    if (localId) {
      attrs['data-local-id'] = localId;
    }
    if (userType) {
      attrs['data-user-type'] = userType;
    }
    return ['span', attrs, text];
  }
});
const isOptional = key => {
  return ['userType', 'localId'].indexOf(key) > -1;
};
export const toJSON = node => ({
  attrs: Object.keys(node.attrs).reduce((obj, key) => {
    if (isOptional(key) && !node.attrs[key]) {
      return obj;
    }
    return {
      ...obj,
      [key]: node.attrs[key]
    };
  }, {})
});