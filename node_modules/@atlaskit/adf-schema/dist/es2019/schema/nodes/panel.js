import { panel as panelFactory, panelWithoutNestedNonBodiedMacros as panelWithoutNestedNonBodiedMacrosFactory } from '../../next-schema/generated/nodeTypes';
export let PanelType = /*#__PURE__*/function (PanelType) {
  PanelType["INFO"] = "info";
  PanelType["NOTE"] = "note";
  PanelType["TIP"] = "tip";
  PanelType["WARNING"] = "warning";
  PanelType["ERROR"] = "error";
  PanelType["SUCCESS"] = "success";
  PanelType["CUSTOM"] = "custom";
  return PanelType;
}({});

/**
 * @name panel_node
 */

const getDomAttrs = nodeAttrs => {
  const attrs = {
    'data-panel-type': nodeAttrs.panelType,
    'data-panel-icon': nodeAttrs.panelIcon,
    'data-panel-icon-id': nodeAttrs.panelIconId,
    'data-panel-icon-text': nodeAttrs.panelIconText,
    'data-panel-color': nodeAttrs.panelColor
  };
  return attrs;
};
const getParseDOMAttrs = (allowCustomPanel, dom) => {
  let parseDOMAttrs = {
    panelType: dom.getAttribute('data-panel-type')
  };
  if (allowCustomPanel) {
    parseDOMAttrs = {
      ...parseDOMAttrs,
      panelIcon: dom.getAttribute('data-panel-icon'),
      panelIconId: dom.getAttribute('data-panel-icon-id'),
      panelIconText: dom.getAttribute('data-panel-icon-text'),
      panelColor: dom.getAttribute('data-panel-color')
    };
  } else {
    parseDOMAttrs.panelType = parseDOMAttrs.panelType === PanelType.CUSTOM ? PanelType.INFO : parseDOMAttrs.panelType;
  }
  return parseDOMAttrs;
};
const createPanelNodeSpecOptions = allowCustomPanel => ({
  parseDOM: [{
    tag: 'div[data-panel-type]',
    getAttrs: dom => getParseDOMAttrs(allowCustomPanel, dom)
  }],
  toDOM(node) {
    const attrs = getDomAttrs(node.attrs);
    const contentAttrs = {
      'data-panel-content': 'true'
    };
    return ['div', attrs, ['div', contentAttrs, 0]];
  }
});

/**
 * @name extended_panel
 * @description it allows more content to be nested as compared to panel node.
 * Specifically, it allows Media, action, code-block, rule and decision nodes in
 * addition to content allowed inside panel
 */
export const extendedPanel = allowCustomPanel => panelFactory(createPanelNodeSpecOptions(allowCustomPanel));
export const panelWithoutNestedNonBodiedMacros = allowCustomPanel => panelWithoutNestedNonBodiedMacrosFactory(createPanelNodeSpecOptions(allowCustomPanel));