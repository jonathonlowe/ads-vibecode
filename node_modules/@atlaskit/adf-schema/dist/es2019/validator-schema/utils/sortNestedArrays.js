export function sortNestedArrays(obj) {
  if (obj === null || obj === undefined) {
    return obj;
  }
  if (Array.isArray(obj) && typeof obj[0] === 'string' && typeof obj[1] === 'object') {
    // 1. tuple of object + string
    obj[1] = sortNestedArrays(obj[1]);
  } else if (Array.isArray(obj) && Array.isArray(obj[0])) {
    // 2. array of arrays
    for (let i = 0; i < obj.length; i++) {
      obj[i] = sortNestedArrays(obj[i]);
    }
  } else if (Array.isArray(obj) && !Array.isArray(obj[0]) && typeof obj[0] !== 'object') {
    // 3. simple array
    obj.sort();
  }
  if (typeof obj === 'object') {
    // 4. object
    for (const key of Object.keys(obj)) {
      obj[key] = sortNestedArrays(obj[key]);
    }
  }
  return obj;
}