import { ParagraphDefinition as Paragraph } from './paragraph';
import { OrderedListDefinition as OrderedList } from './types/list';
import { BulletListDefinition as BulletList } from './types/list';
import { CodeBlockDefinition as CodeBlock } from './code-block';
import { MediaGroupDefinition as MediaGroup } from './media-group';
import { MediaSingleDefinition as MediaSingle } from './media-single';
import { ExtensionDefinition as Extension } from './extension';
/**
 * @name blockquote_node
 */
export interface BlockQuoteDefinition {
    type: 'blockquote';
    /**
     * @minItems 1
     * @allowUnsupportedBlock true
     */
    content: Array<Paragraph | OrderedList | BulletList | CodeBlock | MediaGroup | MediaSingle | Extension>;
}
export declare const blockquote: import("prosemirror-model").NodeSpec;
/**
 * @name blockquoteWithNestedCodeblockOrMedia
 * @deprecated use extentedBlockquote instead
 */
export declare const blockquoteWithNestedCodeblockOrMedia: import("prosemirror-model").NodeSpec;
/**
 * @name extentedBlockquote
 * @description the block quote node with nested code block, media, and extension
 */
export declare const extendedBlockquote: import("prosemirror-model").NodeSpec;
/**
 * @name blockquote_with_list_node
 * @deprecated use extentedBlockquote instead
 * TODO: remove this node in the next major version
 */
export declare const blockquoteWithList: import("prosemirror-model").NodeSpec;
/**
 * @name blockquote_without_non_bodied_macros_node
 */
export declare const blockquoteWithoutNonBodiedMacros: import("prosemirror-model").NodeSpec;
