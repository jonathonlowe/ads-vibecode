import { ExtensionAttributes } from './types/extensions';
import { BodiedExtensionDefinition as BodiedExtension } from './bodied-extension';
import { PanelDefinition as Panel } from './panel';
import { ParagraphDefinition as Paragraph } from './paragraph';
import { BlockQuoteDefinition as Blockquote } from './blockquote';
import { OrderedListDefinition as OrderedList } from './types/list';
import { BulletListDefinition as BulletList } from './types/list';
import { RuleDefinition as Rule } from './rule';
import { HeadingDefinition as Heading } from './heading';
import { CodeBlockDefinition as CodeBlock } from './code-block';
import { MediaGroupDefinition as MediaGroup } from './media-group';
import { MediaSingleDefinition as MediaSingle } from './media-single';
import { DecisionListDefinition as DecisionList } from './decision-list';
import { TaskListDefinition as TaskList } from './task-list';
import { TableDefinition as Table } from './tableNodes';
import { ExtensionDefinition as Extension } from './extension';
import { BlockCardDefinition as BlockCard } from './block-card';
import { EmbedCardDefinition as EmbedCard } from './embed-card';
import { DataConsumerDefinition, FragmentDefinition } from '../marks';
/**
 * @stage 0
 * @name extensionFrame_node
 * @description Wraps the block content
 */
export interface ExtensionFrameDefinition {
    type: 'extensionFrame';
    /**
     * @minItems 1
     */
    content: Array<BodiedExtension | Panel | Paragraph | Blockquote | OrderedList | BulletList | Rule | Heading | CodeBlock | MediaGroup | MediaSingle | DecisionList | TaskList | Table | Extension | BlockCard | EmbedCard>;
    marks?: Array<DataConsumerDefinition | FragmentDefinition>;
}
/**
 * @returns NodeSpec for ExtensionFrameDefinition
 */
export declare const extensionFrame: import("prosemirror-model").NodeSpec;
/**
 * @stage 0
 * @name multiBodiedExtension_node
 * @description Wraps multiple extensionFrame objects.
 */
export interface MultiBodiedExtensionDefinition {
    type: 'multiBodiedExtension';
    attrs: ExtensionAttributes;
    marks?: Array<any>;
    /**
     * @minLength 1
     */
    content: Array<ExtensionFrameDefinition>;
}
export declare const multiBodiedExtension: import("prosemirror-model").NodeSpec;
