"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "AnnotationMarkStates", {
  enumerable: true,
  get: function get() {
    return _marks.AnnotationMarkStates;
  }
});
Object.defineProperty(exports, "AnnotationTypes", {
  enumerable: true,
  get: function get() {
    return _marks.AnnotationTypes;
  }
});
Object.defineProperty(exports, "PanelType", {
  enumerable: true,
  get: function get() {
    return _nodes.PanelType;
  }
});
Object.defineProperty(exports, "alignment", {
  enumerable: true,
  get: function get() {
    return _marks.alignment;
  }
});
Object.defineProperty(exports, "alignmentPositionMap", {
  enumerable: true,
  get: function get() {
    return _marks.alignmentPositionMap;
  }
});
Object.defineProperty(exports, "annotation", {
  enumerable: true,
  get: function get() {
    return _marks.annotation;
  }
});
Object.defineProperty(exports, "backgroundColor", {
  enumerable: true,
  get: function get() {
    return _marks.backgroundColor;
  }
});
Object.defineProperty(exports, "backgroundColorPalette", {
  enumerable: true,
  get: function get() {
    return _marks.backgroundColorPalette;
  }
});
Object.defineProperty(exports, "blockCard", {
  enumerable: true,
  get: function get() {
    return _nodes.blockCard;
  }
});
Object.defineProperty(exports, "blockquote", {
  enumerable: true,
  get: function get() {
    return _nodes.blockquote;
  }
});
Object.defineProperty(exports, "blockquoteWithList", {
  enumerable: true,
  get: function get() {
    return _nodes.blockquoteWithList;
  }
});
Object.defineProperty(exports, "blockquoteWithNestedCodeblockOrMedia", {
  enumerable: true,
  get: function get() {
    return _nodes.blockquoteWithNestedCodeblockOrMedia;
  }
});
Object.defineProperty(exports, "blockquoteWithoutNonBodiedMacros", {
  enumerable: true,
  get: function get() {
    return _nodes.blockquoteWithoutNonBodiedMacros;
  }
});
Object.defineProperty(exports, "bodiedExtension", {
  enumerable: true,
  get: function get() {
    return _nodes.bodiedExtension;
  }
});
Object.defineProperty(exports, "border", {
  enumerable: true,
  get: function get() {
    return _marks.border;
  }
});
Object.defineProperty(exports, "borderColorPalette", {
  enumerable: true,
  get: function get() {
    return _marks.borderColorPalette;
  }
});
Object.defineProperty(exports, "breakout", {
  enumerable: true,
  get: function get() {
    return _marks.breakout;
  }
});
Object.defineProperty(exports, "buildAnnotationMarkDataAttributes", {
  enumerable: true,
  get: function get() {
    return _marks.buildAnnotationMarkDataAttributes;
  }
});
Object.defineProperty(exports, "bulletList", {
  enumerable: true,
  get: function get() {
    return _nodes.bulletList;
  }
});
Object.defineProperty(exports, "bulletListSelector", {
  enumerable: true,
  get: function get() {
    return _nodes.bulletListSelector;
  }
});
Object.defineProperty(exports, "caption", {
  enumerable: true,
  get: function get() {
    return _nodes.caption;
  }
});
Object.defineProperty(exports, "code", {
  enumerable: true,
  get: function get() {
    return _marks.code;
  }
});
Object.defineProperty(exports, "codeBlock", {
  enumerable: true,
  get: function get() {
    return _nodes.codeBlock;
  }
});
Object.defineProperty(exports, "codeBlockToJSON", {
  enumerable: true,
  get: function get() {
    return _nodes.codeBlockToJSON;
  }
});
Object.defineProperty(exports, "colorPalette", {
  enumerable: true,
  get: function get() {
    return _marks.colorPalette;
  }
});
Object.defineProperty(exports, "colorPaletteExtended", {
  enumerable: true,
  get: function get() {
    return _marks.colorPaletteExtended;
  }
});
Object.defineProperty(exports, "confluenceInlineComment", {
  enumerable: true,
  get: function get() {
    return _marks.confluenceInlineComment;
  }
});
Object.defineProperty(exports, "confluenceJiraIssue", {
  enumerable: true,
  get: function get() {
    return _nodes.confluenceJiraIssue;
  }
});
Object.defineProperty(exports, "confluenceUnsupportedBlock", {
  enumerable: true,
  get: function get() {
    return _nodes.confluenceUnsupportedBlock;
  }
});
Object.defineProperty(exports, "confluenceUnsupportedInline", {
  enumerable: true,
  get: function get() {
    return _nodes.confluenceUnsupportedInline;
  }
});
Object.defineProperty(exports, "copyPrivateMediaAttributes", {
  enumerable: true,
  get: function get() {
    return _nodes.copyPrivateMediaAttributes;
  }
});
Object.defineProperty(exports, "createPMMarkSpecFactory", {
  enumerable: true,
  get: function get() {
    return _createPMSpecFactory.createPMMarkSpecFactory;
  }
});
Object.defineProperty(exports, "createPMNodeSpecFactory", {
  enumerable: true,
  get: function get() {
    return _createPMSpecFactory.createPMNodeSpecFactory;
  }
});
Object.defineProperty(exports, "createSchema", {
  enumerable: true,
  get: function get() {
    return _createSchema.createSchema;
  }
});
Object.defineProperty(exports, "dataConsumer", {
  enumerable: true,
  get: function get() {
    return _marks.dataConsumer;
  }
});
Object.defineProperty(exports, "dataConsumerToJSON", {
  enumerable: true,
  get: function get() {
    return _marks.dataConsumerToJSON;
  }
});
Object.defineProperty(exports, "date", {
  enumerable: true,
  get: function get() {
    return _nodes.date;
  }
});
Object.defineProperty(exports, "decisionItem", {
  enumerable: true,
  get: function get() {
    return _nodes.decisionItem;
  }
});
Object.defineProperty(exports, "decisionList", {
  enumerable: true,
  get: function get() {
    return _nodes.decisionList;
  }
});
Object.defineProperty(exports, "decisionListSelector", {
  enumerable: true,
  get: function get() {
    return _nodes.decisionListSelector;
  }
});
Object.defineProperty(exports, "doc", {
  enumerable: true,
  get: function get() {
    return _nodes.doc;
  }
});
Object.defineProperty(exports, "em", {
  enumerable: true,
  get: function get() {
    return _marks.em;
  }
});
Object.defineProperty(exports, "embedCard", {
  enumerable: true,
  get: function get() {
    return _nodes.embedCard;
  }
});
Object.defineProperty(exports, "emoji", {
  enumerable: true,
  get: function get() {
    return _nodes.emoji;
  }
});
Object.defineProperty(exports, "expand", {
  enumerable: true,
  get: function get() {
    return _nodes.expand;
  }
});
Object.defineProperty(exports, "expandToJSON", {
  enumerable: true,
  get: function get() {
    return _nodes.expandToJSON;
  }
});
Object.defineProperty(exports, "expandWithNestedExpand", {
  enumerable: true,
  get: function get() {
    return _nodes.expandWithNestedExpand;
  }
});
Object.defineProperty(exports, "extendedBlockquote", {
  enumerable: true,
  get: function get() {
    return _nodes.extendedBlockquote;
  }
});
Object.defineProperty(exports, "extendedPanel", {
  enumerable: true,
  get: function get() {
    return _nodes.extendedPanel;
  }
});
Object.defineProperty(exports, "extension", {
  enumerable: true,
  get: function get() {
    return _nodes.extension;
  }
});
Object.defineProperty(exports, "extensionFrame", {
  enumerable: true,
  get: function get() {
    return _nodes.extensionFrame;
  }
});
Object.defineProperty(exports, "fragment", {
  enumerable: true,
  get: function get() {
    return _marks.fragment;
  }
});
Object.defineProperty(exports, "fragmentToJSON", {
  enumerable: true,
  get: function get() {
    return _marks.fragmentToJSON;
  }
});
Object.defineProperty(exports, "getCellAttrs", {
  enumerable: true,
  get: function get() {
    return _nodes.getCellAttrs;
  }
});
Object.defineProperty(exports, "getCellDomAttrs", {
  enumerable: true,
  get: function get() {
    return _nodes.getCellDomAttrs;
  }
});
Object.defineProperty(exports, "hardBreak", {
  enumerable: true,
  get: function get() {
    return _nodes.hardBreak;
  }
});
Object.defineProperty(exports, "heading", {
  enumerable: true,
  get: function get() {
    return _nodes.heading;
  }
});
Object.defineProperty(exports, "image", {
  enumerable: true,
  get: function get() {
    return _nodes.image;
  }
});
Object.defineProperty(exports, "indentation", {
  enumerable: true,
  get: function get() {
    return _marks.indentation;
  }
});
Object.defineProperty(exports, "inlineCard", {
  enumerable: true,
  get: function get() {
    return _nodes.inlineCard;
  }
});
Object.defineProperty(exports, "inlineExtension", {
  enumerable: true,
  get: function get() {
    return _nodes.inlineExtension;
  }
});
Object.defineProperty(exports, "inlineNodes", {
  enumerable: true,
  get: function get() {
    return _inlineNodes.inlineNodes;
  }
});
Object.defineProperty(exports, "layoutColumn", {
  enumerable: true,
  get: function get() {
    return _nodes.layoutColumn;
  }
});
Object.defineProperty(exports, "layoutSection", {
  enumerable: true,
  get: function get() {
    return _nodes.layoutSection;
  }
});
Object.defineProperty(exports, "layoutSectionWithSingleColumn", {
  enumerable: true,
  get: function get() {
    return _nodes.layoutSectionWithSingleColumn;
  }
});
Object.defineProperty(exports, "link", {
  enumerable: true,
  get: function get() {
    return _marks.link;
  }
});
Object.defineProperty(exports, "linkToJSON", {
  enumerable: true,
  get: function get() {
    return _marks.linkToJSON;
  }
});
Object.defineProperty(exports, "listItem", {
  enumerable: true,
  get: function get() {
    return _nodes.listItem;
  }
});
Object.defineProperty(exports, "listItemWithDecisionStage0", {
  enumerable: true,
  get: function get() {
    return _nodes.listItemWithDecisionStage0;
  }
});
Object.defineProperty(exports, "listItemWithTask", {
  enumerable: true,
  get: function get() {
    return _nodes.listItemWithTask;
  }
});
Object.defineProperty(exports, "listItemWithoutNonBodiedMacros", {
  enumerable: true,
  get: function get() {
    return _nodes.listItemWithoutNonBodiedMacros;
  }
});
Object.defineProperty(exports, "media", {
  enumerable: true,
  get: function get() {
    return _nodes.media;
  }
});
Object.defineProperty(exports, "mediaGroup", {
  enumerable: true,
  get: function get() {
    return _nodes.mediaGroup;
  }
});
Object.defineProperty(exports, "mediaInline", {
  enumerable: true,
  get: function get() {
    return _nodes.mediaInline;
  }
});
Object.defineProperty(exports, "mediaSingle", {
  enumerable: true,
  get: function get() {
    return _nodes.mediaSingle;
  }
});
Object.defineProperty(exports, "mediaSingleFull", {
  enumerable: true,
  get: function get() {
    return _nodes.mediaSingleFull;
  }
});
Object.defineProperty(exports, "mediaSingleSpec", {
  enumerable: true,
  get: function get() {
    return _nodes.mediaSingleSpec;
  }
});
Object.defineProperty(exports, "mediaSingleToJSON", {
  enumerable: true,
  get: function get() {
    return _nodes.mediaSingleToJSON;
  }
});
Object.defineProperty(exports, "mediaSingleWithCaption", {
  enumerable: true,
  get: function get() {
    return _nodes.mediaSingleWithCaption;
  }
});
Object.defineProperty(exports, "mediaSingleWithWidthType", {
  enumerable: true,
  get: function get() {
    return _nodes.mediaSingleWithWidthType;
  }
});
Object.defineProperty(exports, "mediaToJSON", {
  enumerable: true,
  get: function get() {
    return _nodes.mediaToJSON;
  }
});
Object.defineProperty(exports, "mention", {
  enumerable: true,
  get: function get() {
    return _nodes.mention;
  }
});
Object.defineProperty(exports, "mentionToJSON", {
  enumerable: true,
  get: function get() {
    return _nodes.mentionToJSON;
  }
});
Object.defineProperty(exports, "multiBodiedExtension", {
  enumerable: true,
  get: function get() {
    return _nodes.multiBodiedExtension;
  }
});
Object.defineProperty(exports, "nestedExpand", {
  enumerable: true,
  get: function get() {
    return _nodes.nestedExpand;
  }
});
Object.defineProperty(exports, "nestedExpandWithoutNonBodiedMacros", {
  enumerable: true,
  get: function get() {
    return _nodes.nestedExpandWithoutNonBodiedMacros;
  }
});
Object.defineProperty(exports, "orderedList", {
  enumerable: true,
  get: function get() {
    return _nodes.orderedList;
  }
});
Object.defineProperty(exports, "orderedListSelector", {
  enumerable: true,
  get: function get() {
    return _nodes.orderedListSelector;
  }
});
Object.defineProperty(exports, "orderedListWithOrder", {
  enumerable: true,
  get: function get() {
    return _nodes.orderedListWithOrder;
  }
});
Object.defineProperty(exports, "panelWithoutNestedNonBodiedMacros", {
  enumerable: true,
  get: function get() {
    return _nodes.panelWithoutNestedNonBodiedMacros;
  }
});
Object.defineProperty(exports, "paragraph", {
  enumerable: true,
  get: function get() {
    return _nodes.paragraph;
  }
});
Object.defineProperty(exports, "placeholder", {
  enumerable: true,
  get: function get() {
    return _nodes.placeholder;
  }
});
Object.defineProperty(exports, "rule", {
  enumerable: true,
  get: function get() {
    return _nodes.rule;
  }
});
Object.defineProperty(exports, "sanitizeNodes", {
  enumerable: true,
  get: function get() {
    return _sanitizeNodes.sanitizeNodes;
  }
});
Object.defineProperty(exports, "status", {
  enumerable: true,
  get: function get() {
    return _nodes.status;
  }
});
Object.defineProperty(exports, "strike", {
  enumerable: true,
  get: function get() {
    return _marks.strike;
  }
});
Object.defineProperty(exports, "strong", {
  enumerable: true,
  get: function get() {
    return _marks.strong;
  }
});
Object.defineProperty(exports, "subsup", {
  enumerable: true,
  get: function get() {
    return _marks.subsup;
  }
});
Object.defineProperty(exports, "table", {
  enumerable: true,
  get: function get() {
    return _nodes.table;
  }
});
Object.defineProperty(exports, "tableBackgroundBorderColor", {
  enumerable: true,
  get: function get() {
    return _nodes.tableBackgroundBorderColor;
  }
});
Object.defineProperty(exports, "tableBackgroundColorNames", {
  enumerable: true,
  get: function get() {
    return _nodes.tableBackgroundColorNames;
  }
});
Object.defineProperty(exports, "tableBackgroundColorPalette", {
  enumerable: true,
  get: function get() {
    return _nodes.tableBackgroundColorPalette;
  }
});
Object.defineProperty(exports, "tableCell", {
  enumerable: true,
  get: function get() {
    return _nodes.tableCell;
  }
});
Object.defineProperty(exports, "tableCellContentDomSelector", {
  enumerable: true,
  get: function get() {
    return _nodes.tableCellContentDomSelector;
  }
});
Object.defineProperty(exports, "tableCellContentWrapperSelector", {
  enumerable: true,
  get: function get() {
    return _nodes.tableCellContentWrapperSelector;
  }
});
Object.defineProperty(exports, "tableCellSelector", {
  enumerable: true,
  get: function get() {
    return _nodes.tableCellSelector;
  }
});
Object.defineProperty(exports, "tableCellWithNestedTable", {
  enumerable: true,
  get: function get() {
    return _nodes.tableCellWithNestedTable;
  }
});
Object.defineProperty(exports, "tableHeader", {
  enumerable: true,
  get: function get() {
    return _nodes.tableHeader;
  }
});
Object.defineProperty(exports, "tableHeaderSelector", {
  enumerable: true,
  get: function get() {
    return _nodes.tableHeaderSelector;
  }
});
Object.defineProperty(exports, "tableHeaderWithNestedTable", {
  enumerable: true,
  get: function get() {
    return _nodes.tableHeaderWithNestedTable;
  }
});
Object.defineProperty(exports, "tablePrefixSelector", {
  enumerable: true,
  get: function get() {
    return _nodes.tablePrefixSelector;
  }
});
Object.defineProperty(exports, "tableRow", {
  enumerable: true,
  get: function get() {
    return _nodes.tableRow;
  }
});
Object.defineProperty(exports, "tableRowWithNestedTable", {
  enumerable: true,
  get: function get() {
    return _nodes.tableRowWithNestedTable;
  }
});
Object.defineProperty(exports, "tableStage0", {
  enumerable: true,
  get: function get() {
    return _nodes.tableStage0;
  }
});
Object.defineProperty(exports, "tableToJSON", {
  enumerable: true,
  get: function get() {
    return _nodes.tableToJSON;
  }
});
Object.defineProperty(exports, "tableWithCustomWidth", {
  enumerable: true,
  get: function get() {
    return _nodes.tableWithCustomWidth;
  }
});
Object.defineProperty(exports, "tableWithNestedTable", {
  enumerable: true,
  get: function get() {
    return _nodes.tableWithNestedTable;
  }
});
Object.defineProperty(exports, "taskItem", {
  enumerable: true,
  get: function get() {
    return _nodes.taskItem;
  }
});
Object.defineProperty(exports, "taskList", {
  enumerable: true,
  get: function get() {
    return _nodes.taskList;
  }
});
Object.defineProperty(exports, "taskListSelector", {
  enumerable: true,
  get: function get() {
    return _nodes.taskListSelector;
  }
});
Object.defineProperty(exports, "text", {
  enumerable: true,
  get: function get() {
    return _nodes.text;
  }
});
Object.defineProperty(exports, "textColor", {
  enumerable: true,
  get: function get() {
    return _marks.textColor;
  }
});
Object.defineProperty(exports, "toJSONTableCell", {
  enumerable: true,
  get: function get() {
    return _nodes.toJSONTableCell;
  }
});
Object.defineProperty(exports, "toJSONTableHeader", {
  enumerable: true,
  get: function get() {
    return _nodes.toJSONTableHeader;
  }
});
Object.defineProperty(exports, "typeAheadQuery", {
  enumerable: true,
  get: function get() {
    return _marks.typeAheadQuery;
  }
});
Object.defineProperty(exports, "underline", {
  enumerable: true,
  get: function get() {
    return _marks.underline;
  }
});
Object.defineProperty(exports, "unknownBlock", {
  enumerable: true,
  get: function get() {
    return _nodes.unknownBlock;
  }
});
Object.defineProperty(exports, "unsupportedBlock", {
  enumerable: true,
  get: function get() {
    return _nodes.unsupportedBlock;
  }
});
Object.defineProperty(exports, "unsupportedInline", {
  enumerable: true,
  get: function get() {
    return _nodes.unsupportedInline;
  }
});
Object.defineProperty(exports, "unsupportedMark", {
  enumerable: true,
  get: function get() {
    return _marks.unsupportedMark;
  }
});
Object.defineProperty(exports, "unsupportedNodeAttribute", {
  enumerable: true,
  get: function get() {
    return _marks.unsupportedNodeAttribute;
  }
});
Object.defineProperty(exports, "unsupportedNodeTypesForMediaCards", {
  enumerable: true,
  get: function get() {
    return _unsupported.unsupportedNodeTypesForMediaCards;
  }
});
var _nodes = require("./nodes");
var _marks = require("./marks");
var _unsupported = require("./unsupported");
var _inlineNodes = require("./inline-nodes");
var _createSchema = require("./create-schema");
var _sanitizeNodes = require("./sanitizeNodes");
var _createPMSpecFactory = require("./createPMSpecFactory");