"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.multiBodiedExtension = exports.extensionFrame = void 0;
var _extensions = require("../../utils/extensions");
var _nodeTypes = require("../../next-schema/generated/nodeTypes");
/**
 * @stage 0
 * @name extensionFrame_node
 * @description Wraps the block content
 */

/**
 * @returns NodeSpec for ExtensionFrameDefinition
 */
var extensionFrame = exports.extensionFrame = (0, _nodeTypes.extensionFrameStage0)({
  parseDOM: [{
    context: 'extensionFrame//',
    tag: 'div[data-extension-frame]',
    skip: true
  }, {
    tag: 'div[data-extension-frame]'
  }],
  toDOM: function toDOM() {
    var attrs = {
      'data-extension-frame': 'true'
    };
    return ['div', attrs, 0];
  }
});

/**
 * @stage 0
 * @name multiBodiedExtension_node
 * @description Wraps multiple extensionFrame objects.
 */

var multiBodiedExtension = exports.multiBodiedExtension = (0, _nodeTypes.multiBodiedExtensionStage0)({
  parseDOM: [{
    context: 'multiBodiedExtension//',
    tag: '[data-node-type="multi-bodied-extension"]',
    skip: true
  }, {
    tag: '[data-node-type="multi-bodied-extension"]',
    getAttrs: function getAttrs(domNode) {
      return (0, _extensions.getExtensionAttrs)(domNode);
    }
  }],
  toDOM: function toDOM(node) {
    var attrs = {
      'data-node-type': 'multi-bodied-extension',
      'data-extension-type': node.attrs.extensionType,
      'data-extension-key': node.attrs.extensionKey,
      'data-text': node.attrs.text,
      'data-parameters': JSON.stringify(node.attrs.parameters),
      'data-layout': node.attrs.layout,
      'data-local-id:': node.attrs.localId
    };
    return ['div', attrs, 0];
  }
});