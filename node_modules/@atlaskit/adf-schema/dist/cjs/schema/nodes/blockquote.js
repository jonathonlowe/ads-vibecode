"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extendedBlockquote = exports.blockquoteWithoutNonBodiedMacros = exports.blockquoteWithNestedCodeblockOrMedia = exports.blockquoteWithList = exports.blockquote = void 0;
var _nodeTypes = require("../../next-schema/generated/nodeTypes");
/**
 * @name blockquote_node
 */

var nodeSpecOptions = {
  parseDOM: [{
    tag: 'blockquote'
  }],
  toDOM: function toDOM() {
    return ['blockquote', 0];
  }
};
var blockquote = exports.blockquote = (0, _nodeTypes.blockquoteLegacy)(nodeSpecOptions);

/**
 * @name blockquoteWithNestedCodeblockOrMedia
 * @deprecated use extentedBlockquote instead
 */
var blockquoteWithNestedCodeblockOrMedia = exports.blockquoteWithNestedCodeblockOrMedia = (0, _nodeTypes.blockquoteWithoutNonBodiedMacros)(nodeSpecOptions);

/**
 * @name extentedBlockquote
 * @description the block quote node with nested code block, media, and extension
 */
var extendedBlockquote = exports.extendedBlockquote = (0, _nodeTypes.blockquote)(nodeSpecOptions);

/**
 * @name blockquote_with_list_node
 * @deprecated use extentedBlockquote instead
 * TODO: remove this node in the next major version
 */
var blockquoteWithList = exports.blockquoteWithList = (0, _nodeTypes.blockquoteWithoutNestedCodeblockOrMedia)({
  parseDOM: [{
    tag: 'blockquote'
  }],
  toDOM: function toDOM() {
    return ['blockquote', 0];
  }
});

/**
 * @name blockquote_without_non_bodied_macros_node
 */
var blockquoteWithoutNonBodiedMacros = exports.blockquoteWithoutNonBodiedMacros = (0, _nodeTypes.blockquoteWithoutNonBodiedMacros)({
  parseDOM: [{
    tag: 'blockquote'
  }],
  toDOM: function toDOM() {
    return ['blockquote', 0];
  }
});