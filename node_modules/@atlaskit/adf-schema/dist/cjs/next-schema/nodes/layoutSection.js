"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.layoutSection = void 0;
var _adfSchemaGenerator = require("@atlaskit/adf-schema-generator");
var _breakout = require("../marks/breakout");
var _unsupportedMark = require("../marks/unsupportedMark");
var _unsupportedNodeAttribute = require("../marks/unsupportedNodeAttribute");
var _layoutColumn = require("./layoutColumn");
var _unsupportedBlock = require("./unsupportedBlock");
var layoutSection = exports.layoutSection = (0, _adfSchemaGenerator.adfNode)('layoutSection').define({
  isolating: true,
  marks: [_breakout.breakout, _unsupportedMark.unsupportedMark, _unsupportedNodeAttribute.unsupportedNodeAttribute],
  content: [(0, _adfSchemaGenerator.$range)(1, 3, (0, _adfSchemaGenerator.$or)(_layoutColumn.layoutColumn, _unsupportedBlock.unsupportedBlock)), (0, _adfSchemaGenerator.$zeroPlus)((0, _adfSchemaGenerator.$or)(_unsupportedBlock.unsupportedBlock))]
}).variant('with_single_column', {
  stage0: true,
  marks: [_breakout.breakout, _unsupportedMark.unsupportedMark, _unsupportedNodeAttribute.unsupportedNodeAttribute],
  content: [(0, _adfSchemaGenerator.$range)(1, 5, (0, _adfSchemaGenerator.$or)(_layoutColumn.layoutColumn, _unsupportedBlock.unsupportedBlock)), (0, _adfSchemaGenerator.$zeroPlus)((0, _adfSchemaGenerator.$or)(_unsupportedBlock.unsupportedBlock))],
  attrs: {
    columnRuleStyle: {
      type: 'enum',
      values: ['solid'],
      default: null,
      optional: true
    }
  }
}).variant('full', {
  marks: [_breakout.breakout, _unsupportedMark.unsupportedMark, _unsupportedNodeAttribute.unsupportedNodeAttribute],
  content: [(0, _adfSchemaGenerator.$range)(2, 3, (0, _adfSchemaGenerator.$or)(_layoutColumn.layoutColumn, _unsupportedBlock.unsupportedBlock))]
});