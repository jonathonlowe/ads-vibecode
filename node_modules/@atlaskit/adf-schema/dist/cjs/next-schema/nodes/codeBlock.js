"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.codeBlock = void 0;
var _adfSchemaGenerator = require("@atlaskit/adf-schema-generator");
var _breakout = require("../marks/breakout");
var _unsupportedMark = require("../marks/unsupportedMark");
var _unsupportedNodeAttribute = require("../marks/unsupportedNodeAttribute");
var _text = require("./text");
var _unsupportedInline = require("./unsupportedInline");
var codeBlock = exports.codeBlock = (0, _adfSchemaGenerator.adfNode)('codeBlock').define({
  code: true,
  defining: true,
  attrs: {
    language: {
      type: 'string',
      default: null,
      optional: true
    },
    uniqueId: {
      type: 'string',
      default: null,
      optional: true
    }
  },
  noMarks: true,
  content: [(0, _adfSchemaGenerator.$zeroPlus)((0, _adfSchemaGenerator.$or)(_text.text.use('with_no_marks'), _unsupportedInline.unsupportedInline))]
})
// Variant used root scenario where we have breakout
.variant('root_only', {
  marks: [_breakout.breakout, _unsupportedMark.unsupportedMark, _unsupportedNodeAttribute.unsupportedNodeAttribute],
  noMarks: false,
  noExtend: true
});