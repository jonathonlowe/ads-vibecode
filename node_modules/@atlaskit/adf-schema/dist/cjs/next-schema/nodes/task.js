"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.taskList = exports.taskItem = void 0;
var _adfSchemaGenerator = require("@atlaskit/adf-schema-generator");
var _inlineContentGroup = require("../groups/inlineContentGroup");
var _inlineGroup = require("../groups/inlineGroup");
var _unsupportedMark = require("../marks/unsupportedMark");
var _unsupportedNodeAttribute = require("../marks/unsupportedNodeAttribute");
var _unsupportedBlock = require("./unsupportedBlock");
var taskItem = exports.taskItem = (0, _adfSchemaGenerator.adfNode)('taskItem');
var taskList = exports.taskList = (0, _adfSchemaGenerator.adfNode)('taskList');
taskItem.define({
  defining: true,
  selectable: false,
  marks: [_unsupportedMark.unsupportedMark, _unsupportedNodeAttribute.unsupportedNodeAttribute],
  allowAnyChildMark: true,
  attrs: {
    localId: {
      type: 'string',
      default: ''
    },
    state: {
      type: 'enum',
      values: ['TODO', 'DONE'],
      default: 'TODO'
    }
  },
  content: [(0, _adfSchemaGenerator.$zeroPlus)((0, _adfSchemaGenerator.$or)(_inlineGroup.inlineGroup, _inlineContentGroup.inlineContentGroup))]
});
taskList.define({
  defining: true,
  selectable: false,
  marks: [_unsupportedMark.unsupportedMark, _unsupportedNodeAttribute.unsupportedNodeAttribute],
  attrs: {
    localId: {
      type: 'string',
      default: ''
    }
  },
  contentMinItems: 1,
  content: [(0, _adfSchemaGenerator.$onePlus)((0, _adfSchemaGenerator.$or)(taskItem, _unsupportedBlock.unsupportedBlock)), (0, _adfSchemaGenerator.$zeroPlus)((0, _adfSchemaGenerator.$or)(taskItem, taskList, _unsupportedBlock.unsupportedBlock))]
});