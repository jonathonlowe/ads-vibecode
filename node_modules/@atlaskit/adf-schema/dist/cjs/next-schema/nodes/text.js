"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.text = void 0;
var _adfSchemaGenerator = require("@atlaskit/adf-schema-generator");
var _annotation = require("../marks/annotation");
var _code = require("../marks/code");
var _em = require("../marks/em");
var _link = require("../marks/link");
var _strike = require("../marks/strike");
var _strong = require("../marks/strong");
var _subsup = require("../marks/subsup");
var _underline = require("../marks/underline");
var _color = require("../marks/color");
var _unsupportedNodeAttribute = require("../marks/unsupportedNodeAttribute");
var _unsupportedMark = require("../marks/unsupportedMark");
var _typeAheadQuery = require("../marks/typeAheadQuery");
var _confluenceInlineComment = require("../marks/confluenceInlineComment");
var text = exports.text = (0, _adfSchemaGenerator.adfNode)('text').define({
  marks: [],
  hasEmptyMarks: true
}).variant('with_no_marks', {
  marks: [],
  noMarks: true
}).variant('link_inline', {
  marks: [_link.link],
  ignore: ['pm-spec', 'json-schema']
}).variant('formatted', {
  marks: [_link.link, _em.em, _strong.strong, _strike.strike, _subsup.subsup, _underline.underline, _color.textColor, _annotation.annotation, _color.backgroundColor, _typeAheadQuery.typeAheadQuery, _confluenceInlineComment.confluenceInlineComment, _unsupportedNodeAttribute.unsupportedNodeAttribute, _unsupportedMark.unsupportedMark],
  DANGEROUS_MANUAL_OVERRIDE: {
    'validator-spec': {
      // Refers to confluence inline comment value (9th on list)
      'props.marks.items[0][9]': {
        remove: true,
        reason: '@DSLCompatibilityException - Confluence inline comment is not matched on the validator'
      }
    }
  }
}).variant('code_inline', {
  marks: [_code.code, _link.link, _annotation.annotation, _unsupportedMark.unsupportedMark, _unsupportedNodeAttribute.unsupportedNodeAttribute]
});