"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.orderedList = exports.bulletList = void 0;
var _adfSchemaGenerator = require("@atlaskit/adf-schema-generator");
var _unsupportedMark = require("../marks/unsupportedMark");
var _unsupportedNodeAttribute = require("../marks/unsupportedNodeAttribute");
var _codeBlock = require("./codeBlock");
var _mediaSingle = require("./mediaSingle");
var _paragraph = require("./paragraph");
var _task = require("./task");
var _unsupportedBlock = require("./unsupportedBlock");
var _decisionList = require("./decisionList");
var _extension = require("./extension");
var orderedList = exports.orderedList = (0, _adfSchemaGenerator.adfNode)('orderedList');
var bulletList = exports.bulletList = (0, _adfSchemaGenerator.adfNode)('bulletList');
var listItem = (0, _adfSchemaGenerator.adfNode)('listItem').define({
  defining: true,
  selectable: false,
  marks: [_unsupportedMark.unsupportedMark, _unsupportedNodeAttribute.unsupportedNodeAttribute],
  contentMinItems: 1,
  content: [(0, _adfSchemaGenerator.$or)(_paragraph.paragraph.use('with_no_marks'), _mediaSingle.mediaSingle.use('caption'), _mediaSingle.mediaSingle.use('full'), _codeBlock.codeBlock, _unsupportedBlock.unsupportedBlock, _extension.extension.use('with_marks')), (0, _adfSchemaGenerator.$zeroPlus)((0, _adfSchemaGenerator.$or)(_paragraph.paragraph.use('with_no_marks'), bulletList, orderedList, _task.taskList, _mediaSingle.mediaSingle.use('caption'), _mediaSingle.mediaSingle.use('full'), _codeBlock.codeBlock, _unsupportedBlock.unsupportedBlock, _extension.extension.use('with_marks')))]
}).variant('with_nested_decision', {
  content: [(0, _adfSchemaGenerator.$or)(_paragraph.paragraph.use('with_no_marks'), _mediaSingle.mediaSingle.use('caption'), _mediaSingle.mediaSingle.use('full'), _codeBlock.codeBlock, _unsupportedBlock.unsupportedBlock, _decisionList.decisionList, _extension.extension.use('with_marks')), (0, _adfSchemaGenerator.$zeroPlus)((0, _adfSchemaGenerator.$or)(_paragraph.paragraph.use('with_no_marks'), bulletList, orderedList, _task.taskList, _mediaSingle.mediaSingle.use('caption'), _mediaSingle.mediaSingle.use('full'), _codeBlock.codeBlock, _unsupportedBlock.unsupportedBlock, _decisionList.decisionList, _extension.extension.use('with_marks')))],
  noExtend: true,
  stage0: true
}).variant('without_non_bodied_macros', {
  content: [(0, _adfSchemaGenerator.$or)(_paragraph.paragraph.use('with_no_marks'), _mediaSingle.mediaSingle.use('caption'), _mediaSingle.mediaSingle.use('full'), _codeBlock.codeBlock, _unsupportedBlock.unsupportedBlock), (0, _adfSchemaGenerator.$zeroPlus)((0, _adfSchemaGenerator.$or)(_paragraph.paragraph.use('with_no_marks'), bulletList, orderedList, _task.taskList, _mediaSingle.mediaSingle.use('caption'), _mediaSingle.mediaSingle.use('full'), _codeBlock.codeBlock, _unsupportedBlock.unsupportedBlock))],
  noExtend: true,
  ignore: ['json-schema', 'validator-spec']
});
orderedList.define({
  selectable: false,
  marks: [_unsupportedMark.unsupportedMark, _unsupportedNodeAttribute.unsupportedNodeAttribute],
  attrs: {
    order: {
      type: 'number',
      minimum: 0,
      default: 1,
      optional: true
    }
  },
  content: [(0, _adfSchemaGenerator.$onePlus)((0, _adfSchemaGenerator.$or)(listItem, listItem.use('with_nested_decision'), listItem.use('without_non_bodied_macros')))]
});
bulletList.define({
  selectable: false,
  marks: [_unsupportedMark.unsupportedMark, _unsupportedNodeAttribute.unsupportedNodeAttribute],
  content: [(0, _adfSchemaGenerator.$onePlus)((0, _adfSchemaGenerator.$or)(listItem, listItem.use('with_nested_decision'), listItem.use('without_non_bodied_macros')))]
});