"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nonNestableBlockContentGroup = exports.nonNestableBlockContent = void 0;
var _adfSchemaGenerator = require("@atlaskit/adf-schema-generator");
var _blockCard = require("../nodes/blockCard");
var _blockquote = require("../nodes/blockquote");
var _codeBlock = require("../nodes/codeBlock");
var _decisionList = require("../nodes/decisionList");
var _embedCard = require("../nodes/embedCard");
var _extension = require("../nodes/extension");
var _heading = require("../nodes/heading");
var _list = require("../nodes/list");
var _mediaGroup = require("../nodes/mediaGroup");
var _mediaSingle = require("../nodes/mediaSingle");
var _panel = require("../nodes/panel");
var _paragraph = require("../nodes/paragraph");
var _rule = require("../nodes/rule");
var _tableNodes = require("../nodes/tableNodes");
var _task = require("../nodes/task");
var _unsupportedBlock = require("../nodes/unsupportedBlock");
// Not an actual group, but a collection of nodes that can't be nested inside each other
// TODO: make it an actual group
var nonNestableBlockContent = exports.nonNestableBlockContent = [_paragraph.paragraph.use('with_no_marks'), _panel.panel, _blockquote.blockquote, _list.orderedList, _list.bulletList, _rule.rule, _heading.heading.use('with_no_marks'), _codeBlock.codeBlock, _mediaGroup.mediaGroup, _mediaSingle.mediaSingle.use('caption'), _mediaSingle.mediaSingle.use('full'), _decisionList.decisionList, _task.taskList, _tableNodes.table,
// @ts-expect-error - types don't deal well with circular references for the variant
_tableNodes.table.use('with_nested_table'), _blockCard.blockCard, _embedCard.embedCard, _extension.extension.use('with_marks'), _unsupportedBlock.unsupportedBlock];

/**
 * @DSLCompatibilityException
 *
 * Pseudo group used to match existing validator and json schema specs.
 */
var nonNestableBlockContentGroup = exports.nonNestableBlockContentGroup = (0, _adfSchemaGenerator.adfNodeGroup)('non_nestable_block_content', nonNestableBlockContent);