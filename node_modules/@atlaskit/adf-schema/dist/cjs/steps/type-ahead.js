"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.insertTypeAheadStepType = exports.InsertTypeAheadStep = exports.InsertTypeAheadStages = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _model = require("@atlaskit/editor-prosemirror/model");
var _transform = require("@atlaskit/editor-prosemirror/transform");
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var insertTypeAheadStepType = exports.insertTypeAheadStepType = 'atlaskit-insert-type-ahead';
var InsertTypeAheadStages = exports.InsertTypeAheadStages = /*#__PURE__*/function (InsertTypeAheadStages) {
  InsertTypeAheadStages["DELETING_RAW_QUERY"] = "DELETING_RAW_QUERY";
  InsertTypeAheadStages["INSERTING_ITEM"] = "INSERTING_ITEM";
  return InsertTypeAheadStages;
}({});
var InsertTypeAheadStep = exports.InsertTypeAheadStep = /*#__PURE__*/function (_Step) {
  function InsertTypeAheadStep(_ref) {
    var _this;
    var stage = _ref.stage,
      query = _ref.query,
      trigger = _ref.trigger,
      selectedIndex = _ref.selectedIndex;
    var isInvertStep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    (0, _classCallCheck2.default)(this, InsertTypeAheadStep);
    _this = _callSuper(this, InsertTypeAheadStep);
    _this.isInvertStep = isInvertStep;
    _this.stage = stage;
    _this.query = query;
    _this.trigger = trigger;
    _this.selectedIndex = selectedIndex;
    return _this;
  }
  (0, _inherits2.default)(InsertTypeAheadStep, _Step);
  return (0, _createClass2.default)(InsertTypeAheadStep, [{
    key: "invert",
    value: function invert() {
      var config = {
        stage: this.stage,
        query: this.query,
        trigger: this.trigger,
        selectedIndex: this.selectedIndex
      };
      return new InsertTypeAheadStep(config, !this.isInvertStep);
    }
  }, {
    key: "apply",
    value: function apply(doc) {
      return _transform.StepResult.ok(doc);
    }
  }, {
    key: "merge",
    value: function merge() {
      return null;
    }
  }, {
    key: "isInsertionStep",
    value: function isInsertionStep() {
      return !this.isInvertStep;
    }
  }, {
    key: "isUndoingStep",
    value: function isUndoingStep() {
      return this.isInvertStep;
    }
  }, {
    key: "map",
    value: function map() {
      var config = {
        stage: this.stage,
        query: this.query,
        trigger: this.trigger,
        selectedIndex: this.selectedIndex
      };
      // Return the same events, this step will never be removed
      return new InsertTypeAheadStep(config, this.isInvertStep);
    }
  }, {
    key: "getMap",
    value: function getMap() {
      return new _transform.StepMap([0, 0, 0]);
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      // When serialized we should create a noop Replace step
      return {
        stepType: 'replace',
        from: 0,
        to: 0
      };
    }
  }], [{
    key: "fromJSON",
    value: function fromJSON() {
      // This is a "local custom step" once serialized
      // we need to transform it in a no-operation action
      return new _transform.ReplaceStep(0, 0, _model.Slice.empty);
    }
  }]);
}(_transform.Step);
/** Register this step with Prosemirror */
_transform.Step.jsonID(insertTypeAheadStepType, InsertTypeAheadStep);