"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SetAttrsStep = void 0;
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _transform = require("@atlaskit/editor-prosemirror/transform");
var _model = require("@atlaskit/editor-prosemirror/model");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
/**
 * For more context on what this is about:
 * @see https://discuss.prosemirror.net/t/preventing-image-placeholder-replacement-from-being-undone/1394
 */
var SetAttrsStep = exports.SetAttrsStep = /*#__PURE__*/function (_Step) {
  function SetAttrsStep(pos, attrs) {
    var _this;
    (0, _classCallCheck2.default)(this, SetAttrsStep);
    _this = _callSuper(this, SetAttrsStep);
    _this.pos = pos;
    _this.attrs = attrs;
    return _this;
  }
  (0, _inherits2.default)(SetAttrsStep, _Step);
  return (0, _createClass2.default)(SetAttrsStep, [{
    key: "apply",
    value: function apply(doc) {
      var target = doc.nodeAt(this.pos);
      if (!target) {
        return _transform.StepResult.fail('No node at given position');
      }
      if (target.isText) {
        return _transform.StepResult.fail('Target is a text node. Attributes are not allowed.');
      }
      var attrs = _objectSpread(_objectSpread({}, target.attrs || {}), this.attrs || {});
      var newNode = target.type.create(attrs, _model.Fragment.empty, target.marks);
      var slice = new _model.Slice(_model.Fragment.from(newNode), 0, target.isLeaf ? 0 : 1);
      return _transform.StepResult.fromReplace(doc, this.pos, this.pos + 1, slice);
    }
  }, {
    key: "invert",
    value: function invert(doc) {
      var target = doc.nodeAt(this.pos);
      return new SetAttrsStep(this.pos, target ? target.attrs : {});
    }
  }, {
    key: "map",
    value: function map(mapping) {
      var result = mapping.mapResult(this.pos, 1);
      return result.deleted ? null : new SetAttrsStep(result.pos, this.attrs);
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      return {
        stepType: 'setAttrs',
        pos: this.pos,
        attrs: this.attrs
      };
    }
  }], [{
    key: "fromJSON",
    value: function fromJSON(_schema, json) {
      if (typeof json.pos !== 'number' || json.attrs !== null && (0, _typeof2.default)(json.attrs) !== 'object') {
        throw new RangeError('Invalid input for SetAttrsStep.fromJSON');
      }
      return new SetAttrsStep(json.pos, json.attrs);
    }
  }]);
}(_transform.Step);
_transform.Step.jsonID('setAttrs', SetAttrsStep);