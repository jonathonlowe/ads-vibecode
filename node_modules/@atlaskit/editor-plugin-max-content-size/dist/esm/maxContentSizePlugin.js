import { SafePlugin } from '@atlaskit/editor-common/safe-plugin';
import { PluginKey } from '@atlaskit/editor-prosemirror/state';
export var pluginKey = new PluginKey('maxContentSizePlugin');
export function createPlugin(dispatch, maxContentSize) {
  if (!maxContentSize) {
    return;
  }
  var maxContentSizeReached = false;
  return new SafePlugin({
    state: {
      init: function init() {
        return {
          maxContentSizeReached: false
        };
      },
      apply: function apply(tr, state) {
        var result = tr.doc && tr.doc.nodeSize > maxContentSize - 1;
        return {
          maxContentSizeReached: result
        };
      }
    },
    key: pluginKey,
    filterTransaction: function filterTransaction(tr) {
      var result = tr.doc && tr.doc.nodeSize > maxContentSize;
      if (result || result !== maxContentSizeReached) {
        dispatch(pluginKey, {
          maxContentSizeReached: result
        });
      }
      maxContentSizeReached = result;
      return !result;
    }
  });
}
var maxContentSizePlugin = function maxContentSizePlugin(_ref) {
  var maxContentSize = _ref.config,
    api = _ref.api;
  return {
    name: 'maxContentSize',
    getSharedState: function getSharedState(editorState) {
      if (!editorState) {
        return undefined;
      }
      return pluginKey.getState(editorState);
    },
    pmPlugins: function pmPlugins() {
      return [{
        name: 'maxContentSize',
        plugin: function plugin(_ref2) {
          var dispatch = _ref2.dispatch;
          return createPlugin(dispatch, maxContentSize);
        }
      }];
    }
  };
};
export default maxContentSizePlugin;