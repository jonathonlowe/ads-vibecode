"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FindReplaceTooltipButton = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _new = require("@atlaskit/button/new");
var _keymaps = require("@atlaskit/editor-common/keymaps");
var _tooltip = _interopRequireDefault(require("@atlaskit/tooltip"));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
// eslint-disable-next-line @repo/internal/react/no-class-components
var FindReplaceTooltipButton = exports.FindReplaceTooltipButton = /*#__PURE__*/function (_React$PureComponent) {
  function FindReplaceTooltipButton() {
    var _this;
    (0, _classCallCheck2.default)(this, FindReplaceTooltipButton);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, FindReplaceTooltipButton, [].concat(args));
    (0, _defineProperty2.default)(_this, "buttonRef", /*#__PURE__*/_react.default.createRef());
    (0, _defineProperty2.default)(_this, "handleClick", function () {
      _this.props.onClick(_this.buttonRef);
    });
    return _this;
  }
  (0, _inherits2.default)(FindReplaceTooltipButton, _React$PureComponent);
  return (0, _createClass2.default)(FindReplaceTooltipButton, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        title = _this$props.title,
        Icon = _this$props.icon,
        iconSize = _this$props.iconSize,
        keymapDescription = _this$props.keymapDescription,
        disabled = _this$props.disabled,
        isPressed = _this$props.isPressed,
        appearance = _this$props.appearance;
      var pressedProps = _objectSpread({}, typeof isPressed === 'boolean' && {
        'aria-pressed': isPressed
      });
      return /*#__PURE__*/_react.default.createElement(_tooltip.default, {
        content: /*#__PURE__*/_react.default.createElement(_keymaps.ToolTipContent, {
          description: title,
          keymap: (0, _keymaps.findKeymapByDescription)(keymapDescription)
        }),
        hideTooltipOnClick: true,
        position: 'top'
      }, /*#__PURE__*/_react.default.createElement(_new.IconButton, (0, _extends2.default)({
        id: "afterInputSection",
        label: title,
        appearance: appearance,
        testId: title,
        ref: this.buttonRef
        // Ignored via go/ees005
        // eslint-disable-next-line react/jsx-props-no-spreading
        ,
        icon: function icon(iconProps) {
          return /*#__PURE__*/_react.default.createElement(Icon, (0, _extends2.default)({}, iconProps, {
            size: iconSize
          }));
        },
        isDisabled: disabled,
        onClick: this.handleClick,
        isSelected: isPressed
        // Ignored via go/ees005
        // eslint-disable-next-line react/jsx-props-no-spreading
      }, pressedProps)));
    }
  }]);
}(_react.default.PureComponent);
(0, _defineProperty2.default)(FindReplaceTooltipButton, "defaultProps", {
  keymapDescription: 'no-keymap',
  appearance: 'subtle'
});