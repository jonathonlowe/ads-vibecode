"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.replaceWithAnalytics = exports.replaceAllWithAnalytics = exports.findWithAnalytics = exports.findPrevWithAnalytics = exports.findNextWithAnalytics = exports.cancelSearchWithAnalytics = exports.activateWithAnalytics = void 0;
var _analytics = require("@atlaskit/editor-common/analytics");
var _editorAnalytics = require("@atlaskit/editor-common/editor-analytics");
var _state = require("@atlaskit/editor-prosemirror/state");
var _commands = require("./commands");
var activateWithAnalytics = exports.activateWithAnalytics = function activateWithAnalytics(editorAnalyticsAPI) {
  return function (_ref) {
    var triggerMethod = _ref.triggerMethod;
    return (0, _editorAnalytics.withAnalytics)(editorAnalyticsAPI, function (state) {
      return {
        eventType: _analytics.EVENT_TYPE.UI,
        action: _analytics.ACTION.ACTIVATED,
        actionSubject: _analytics.ACTION_SUBJECT.FIND_REPLACE_DIALOG,
        attributes: {
          inputMethod: state.selection instanceof _state.TextSelection && !state.selection.empty ? _analytics.INPUT_METHOD.PREFILL : _analytics.INPUT_METHOD.KEYBOARD,
          triggerMethod: triggerMethod
        }
      };
    })((0, _commands.activate)());
  };
};
var findWithAnalytics = exports.findWithAnalytics = function findWithAnalytics(editorAnalyticsAPI) {
  return function (_ref2) {
    var editorView = _ref2.editorView,
      containerElement = _ref2.containerElement,
      keyword = _ref2.keyword;
    return (0, _editorAnalytics.withAnalytics)(editorAnalyticsAPI, {
      eventType: _analytics.EVENT_TYPE.TRACK,
      action: _analytics.ACTION.FIND_PERFORMED,
      actionSubject: _analytics.ACTION_SUBJECT.TEXT
    })((0, _commands.find)(editorView, containerElement, keyword));
  };
};
var findNextWithAnalytics = exports.findNextWithAnalytics = function findNextWithAnalytics(editorAnalyticsAPI) {
  return function (_ref3) {
    var triggerMethod = _ref3.triggerMethod;
    return (0, _editorAnalytics.withAnalytics)(editorAnalyticsAPI, {
      eventType: _analytics.EVENT_TYPE.TRACK,
      action: _analytics.ACTION.FIND_NEXT_PERFORMED,
      actionSubject: _analytics.ACTION_SUBJECT.TEXT,
      attributes: {
        triggerMethod: triggerMethod
      }
    })((0, _commands.findNext)());
  };
};
var findPrevWithAnalytics = exports.findPrevWithAnalytics = function findPrevWithAnalytics(editorAnalyticsAPI) {
  return function (_ref4) {
    var triggerMethod = _ref4.triggerMethod;
    return (0, _editorAnalytics.withAnalytics)(editorAnalyticsAPI, {
      eventType: _analytics.EVENT_TYPE.TRACK,
      action: _analytics.ACTION.FIND_PREV_PERFORMED,
      actionSubject: _analytics.ACTION_SUBJECT.TEXT,
      attributes: {
        triggerMethod: triggerMethod
      }
    })((0, _commands.findPrevious)());
  };
};
var replaceWithAnalytics = exports.replaceWithAnalytics = function replaceWithAnalytics(editorAnalyticsAPI) {
  return function (_ref5) {
    var triggerMethod = _ref5.triggerMethod,
      replaceText = _ref5.replaceText;
    return (0, _editorAnalytics.withAnalytics)(editorAnalyticsAPI, {
      eventType: _analytics.EVENT_TYPE.TRACK,
      action: _analytics.ACTION.REPLACED_ONE,
      actionSubject: _analytics.ACTION_SUBJECT.TEXT,
      attributes: {
        triggerMethod: triggerMethod
      }
    })((0, _commands.replace)(replaceText));
  };
};
var replaceAllWithAnalytics = exports.replaceAllWithAnalytics = function replaceAllWithAnalytics(editorAnalyticsAPI) {
  return function (_ref6) {
    var replaceText = _ref6.replaceText;
    return (0, _editorAnalytics.withAnalytics)(editorAnalyticsAPI, {
      eventType: _analytics.EVENT_TYPE.TRACK,
      action: _analytics.ACTION.REPLACED_ALL,
      actionSubject: _analytics.ACTION_SUBJECT.TEXT
    })((0, _commands.replaceAll)(replaceText));
  };
};
var cancelSearchWithAnalytics = exports.cancelSearchWithAnalytics = function cancelSearchWithAnalytics(editorAnalyticsAPI) {
  return function (_ref7) {
    var triggerMethod = _ref7.triggerMethod;
    return (0, _editorAnalytics.withAnalytics)(editorAnalyticsAPI, {
      eventType: _analytics.EVENT_TYPE.UI,
      action: _analytics.ACTION.DEACTIVATED,
      actionSubject: _analytics.ACTION_SUBJECT.FIND_REPLACE_DIALOG,
      attributes: {
        triggerMethod: triggerMethod
      }
    })((0, _commands.cancelSearch)());
  };
};