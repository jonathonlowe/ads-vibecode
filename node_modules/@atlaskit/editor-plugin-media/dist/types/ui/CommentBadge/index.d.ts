import React from 'react';
import type { IntlShape } from 'react-intl-next';
import type { AnnotationMarkDefinition } from '@atlaskit/adf-schema';
import type { ExtractInjectionAPI } from '@atlaskit/editor-common/types';
import type { Node as PMNode } from '@atlaskit/editor-prosemirror/model';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
import type { MediaNextEditorPluginType } from '../../mediaPluginType';
import type { getPosHandler } from '../../types';
type CommentBadgeProps = {
    intl: IntlShape;
    api: ExtractInjectionAPI<MediaNextEditorPluginType>;
    mediaNode: PMNode | null;
    view: EditorView;
    getPos: getPosHandler;
    isDrafting: boolean;
    badgeOffsetRight?: string;
};
export declare const CommentBadge: React.FC<import("react-intl-next").WithIntlProps<CommentBadgeProps>> & {
    WrappedComponent: React.ComponentType<CommentBadgeProps>;
};
/**
 * Remove CommentBadgeWrapper component above
 * and rename CommentBadgeNextWrapper to CommentBadgeWrapper
 * when clean up platform_editor_add_media_from_url_rollout feature flag
 */
type CommentBadgeNextWrapperProps = {
    mediaSingleElement?: HTMLElement | null;
    marks?: AnnotationMarkDefinition[];
    isDrafting?: boolean;
    api: ExtractInjectionAPI<MediaNextEditorPluginType>;
    mediaNode: PMNode | null;
    view: EditorView;
    getPos: getPosHandler;
};
export declare const CommentBadgeNextWrapper: ({ api, mediaNode, view, getPos, isDrafting, }: CommentBadgeNextWrapperProps) => React.JSX.Element | null;
export {};
