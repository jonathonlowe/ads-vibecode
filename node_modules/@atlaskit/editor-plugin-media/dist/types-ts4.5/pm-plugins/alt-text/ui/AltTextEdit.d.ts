import React from 'react';
import { jsx } from '@emotion/react';
import type { WrappedComponentProps } from 'react-intl-next';
import type { WithAnalyticsEventsProps } from '@atlaskit/analytics-next';
import type { EditorView } from '@atlaskit/editor-prosemirror/view';
export declare const MAX_ALT_TEXT_LENGTH = 510;
type Props = {
    view: EditorView;
    nodeType: 'mediaSingle' | 'mediaInline';
    mediaType: 'file' | 'image' | 'external';
    value?: string;
    altTextValidator?: (value: string) => string[];
    onEscape?: () => void;
} & WrappedComponentProps & WithAnalyticsEventsProps;
export type AltTextEditComponentState = {
    showClearTextButton: boolean;
    validationErrors: string[] | undefined;
    lastValue: string | undefined;
};
export declare class AltTextEditComponent extends React.Component<Props, AltTextEditComponentState> {
    private fireCustomAnalytics?;
    private errorsListRef;
    state: {
        showClearTextButton: boolean;
        validationErrors: string[];
        lastValue: string | undefined;
    };
    constructor(props: Props);
    prevValue: string | undefined;
    componentDidMount(): void;
    componentWillUnmount(): void;
    private getValidationErrors;
    render(): jsx.JSX.Element;
    private closeMediaAltTextMenu;
    private fireAnalytics;
    private dispatchCancelEvent;
    private handleOnChange;
    private handleOnBlur;
    private handleClearText;
}
declare const _default: React.ForwardRefExoticComponent<Omit<Omit<Props, "intl"> & {
    forwardedRef?: React.Ref<any> | undefined;
}, keyof WithAnalyticsEventsProps> & React.RefAttributes<any>>;
export default _default;
