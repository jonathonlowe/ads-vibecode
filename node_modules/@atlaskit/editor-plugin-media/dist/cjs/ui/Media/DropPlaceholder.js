"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("@emotion/react");
var _reactIntlNext = require("react-intl-next");
var _adfSchema = require("@atlaskit/adf-schema");
var _media = require("@atlaskit/editor-common/media");
var _fileDocumentFilled = _interopRequireDefault(require("@atlaskit/icon/core/migration/file--document-filled"));
var _colors = require("@atlaskit/theme/colors");
var _constants = require("@atlaskit/theme/constants");
var _media2 = require("../../nodeviews/mediaNodeView/media");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var iconWrapperStyles = (0, _react.css)({
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
  color: "var(--ds-icon-accent-blue, ".concat((0, _adfSchema.hexToRgba)(_colors.B400, 0.4) || _colors.B400, ")"),
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
  background: "var(--ds-background-accent-blue-subtle, ".concat((0, _adfSchema.hexToRgba)(_colors.B300, 0.6) || _colors.B300, ")"),
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  borderRadius: "".concat((0, _constants.borderRadius)(), "px"),
  margin: "var(--ds-space-075, 6px)".concat(" ", "var(--ds-space-050, 4px)", " ", "var(--ds-space-300, 24px)"),
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  width: "".concat(_media2.FILE_WIDTH, "px"),
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  minHeight: "".concat(_media2.MEDIA_HEIGHT, "px"),
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center'
});
var dropLineStyles = (0, _react.css)({
  background: "var(--ds-border-focused, ".concat(_colors.B200, ")"),
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  borderRadius: "".concat((0, _constants.borderRadius)(), "px"),
  margin: "var(--ds-space-025, 2px)".concat(" 0"),
  width: '100%',
  height: '2px'
});
var IconWrapperComponent = function IconWrapperComponent(props) {
  var intl = props.intl;
  var dropPlaceholderLabel = _media.dropPlaceholderMessages.dropPlaceholderLabel;
  return (0, _react.jsx)("div", {
    css: iconWrapperStyles
  }, (0, _react.jsx)(_fileDocumentFilled.default, {
    label: intl.formatMessage(dropPlaceholderLabel),
    LEGACY_size: "medium"
  }));
};
var IntlIconWrapper = (0, _reactIntlNext.injectIntl)(IconWrapperComponent);
var _default = exports.default = function _default(_ref) {
  var _ref$type = _ref.type,
    type = _ref$type === void 0 ? 'group' : _ref$type;
  return type === 'single' ? (0, _react.jsx)("div", {
    css: dropLineStyles
  }) : (0, _react.jsx)(IntlIconWrapper, null);
};