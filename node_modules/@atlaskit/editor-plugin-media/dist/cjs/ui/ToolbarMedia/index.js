"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactIntlNext = require("react-intl-next");
var _hooks = require("@atlaskit/editor-common/hooks");
var _media = require("@atlaskit/editor-common/media");
var _uiMenu = require("@atlaskit/editor-common/ui-menu");
var _attachmentEditorAttachment = _interopRequireDefault(require("@atlaskit/icon/core/migration/attachment--editor-attachment"));
var onClickMediaButton = function onClickMediaButton(pluginState) {
  return function () {
    pluginState.showMediaPicker();
    return true;
  };
};
var ToolbarMedia = function ToolbarMedia(_ref) {
  var isDisabled = _ref.isDisabled,
    isReducedSpacing = _ref.isReducedSpacing,
    intl = _ref.intl,
    api = _ref.api;
  var _useSharedPluginState = (0, _hooks.useSharedPluginState)(api, ['media']),
    mediaState = _useSharedPluginState.mediaState;
  if (!(mediaState !== null && mediaState !== void 0 && mediaState.allowsUploads)) {
    return null;
  }
  var toolbarMediaTitle = _media.toolbarMediaMessages.toolbarMediaTitle;
  return /*#__PURE__*/_react.default.createElement(_uiMenu.ToolbarButton, {
    buttonId: _uiMenu.TOOLBAR_BUTTON.MEDIA,
    onClick: onClickMediaButton(mediaState),
    disabled: isDisabled,
    title: intl.formatMessage(toolbarMediaTitle),
    spacing: isReducedSpacing ? 'none' : 'default',
    iconBefore: /*#__PURE__*/_react.default.createElement(_attachmentEditorAttachment.default, {
      label: intl.formatMessage(toolbarMediaTitle)
    })
  });
};
var _default = exports.default = (0, _reactIntlNext.injectIntl)(ToolbarMedia);