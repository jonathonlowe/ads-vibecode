"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getPluginState = exports.createPlugin = exports.createCommand = void 0;
var _safePlugin = require("@atlaskit/editor-common/safe-plugin");
var _utils = require("@atlaskit/editor-common/utils");
var _state = require("@atlaskit/editor-prosemirror/state");
var _reducer = _interopRequireDefault(require("./reducer"));
var pluginKey = new _state.PluginKey('mediaAltTextPlugin');
var _pluginFactory = (0, _utils.pluginFactory)(pluginKey, _reducer.default, {
    onSelectionChanged: function onSelectionChanged(tr, newState) {
      // dont close alt text for undo/redo transactions (if it comes from prosemirror-history)
      if (tr.getMeta(_utils.pmHistoryPluginKey)) {
        return newState;
      }
      return {
        isAltTextEditorOpen: false
      };
    }
  }),
  createPluginState = _pluginFactory.createPluginState,
  createCommand = exports.createCommand = _pluginFactory.createCommand,
  getPluginState = exports.getPluginState = _pluginFactory.getPluginState;
var createPlugin = exports.createPlugin = function createPlugin(_ref) {
  var dispatch = _ref.dispatch,
    providerFactory = _ref.providerFactory;
  return new _safePlugin.SafePlugin({
    state: createPluginState(dispatch, {
      isAltTextEditorOpen: false
    }),
    key: pluginKey
  });
};