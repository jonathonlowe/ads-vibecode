"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mediaGroupSpecWithFixedToDOM = exports.getDefaultCardDimensions = exports.defaultSquareCardDimensions = exports.defaultImageCardDimensions = exports.defaultHorizontalCardDimensions = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _adfSchema = require("@atlaskit/adf-schema");
var _experiments = require("@atlaskit/tmp-editor-statsig/experiments");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
/**
 * Duplicate consts from `media-card`.
 * `packages/media/media-card/src/utils/cardDimensions.ts`
 *
 * WHY?
 * This will eventually move to `@atlaskit/adf-schema` and we cannot reference
 * `media-card` from here or it will cause dependency issues.
 *
 * In the long term likely `toDOM` will move back out of `adf-schema` in which
 * case we can consolidate them.
 */
var defaultImageCardDimensions = exports.defaultImageCardDimensions = {
  width: 156,
  height: 125
};
var defaultHorizontalCardDimensions = exports.defaultHorizontalCardDimensions = {
  width: 435,
  height: 125
};
var defaultSquareCardDimensions = exports.defaultSquareCardDimensions = {
  width: 300,
  height: 300
};

/**
 * Duplicate logic from `@atlaskit/media-card` for computing the dimensions of a media group card.
 * From: `packages/media/media-card/src/utils/cardDimensions.ts`
 *
 * WHY?
 * This will eventually move to `@atlaskit/adf-schema` and we cannot reference
 * `@atlaskit/media-card` from here or it will cause dependency issues.
 *
 * In the long term likely `toDOM` will move back out of `adf-schema` in which
 * case we can consolidate them.
 */
var getDefaultCardDimensions = exports.getDefaultCardDimensions = function getDefaultCardDimensions() {
  var appearance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'auto';
  if (appearance === 'image') {
    return defaultImageCardDimensions;
  }
  if (appearance === 'square') {
    return defaultSquareCardDimensions;
  }
  if (appearance === 'horizontal') {
    return defaultHorizontalCardDimensions;
  }
  return defaultImageCardDimensions;
};

// @nodeSpecException:toDOM patch
var mediaGroupSpecWithFixedToDOM = exports.mediaGroupSpecWithFixedToDOM = function mediaGroupSpecWithFixedToDOM() {
  if ((0, _experiments.editorExperiment)('platform_editor_exp_lazy_node_views', false)) {
    return _adfSchema.mediaGroup;
  }
  return _objectSpread(_objectSpread({}, _adfSchema.mediaGroup), {}, {
    toDOM: function toDOM(node) {
      // Margin margin that consolidates the margin in the
      return ['div', {
        style: "\n\t\t\t\t\t\tmargin: 3px 5px;\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\tgap: 8px;\n\t\t\t\t\t\t--ak-editor-media-card-background-color: #EBECF0;\n\t\t\t\t\t\t--ak-editor-media-card-width: ".concat(defaultImageCardDimensions.width, "px;\n\t\t\t\t\t\t--ak-editor-media-card-height: ").concat(defaultImageCardDimensions.height, "px;\n\t\t\t\t\t"),
        'data-node-type': 'mediaGroup'
      }, 0];
    }
  });
};