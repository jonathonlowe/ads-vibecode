import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import React, { useState } from 'react';
import { injectIntl } from 'react-intl-next';
import { ACTION, ACTION_SUBJECT, ACTION_SUBJECT_ID, EVENT_TYPE } from '@atlaskit/editor-common/analytics';
import { DropdownMenuWithKeyboardNavigation as DropdownMenu } from '@atlaskit/editor-common/ui-menu';
import { SelectionExtensionDropdownMenuButton } from './SelectionExtensionDropdownMenuButton';
var SelectionExtensionDropdownMenuComponent = /*#__PURE__*/React.memo(function (_ref) {
  var items = _ref.items,
    onItemActivated = _ref.onItemActivated,
    editorAnalyticsAPI = _ref.editorAnalyticsAPI;
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    isMenuOpen = _useState2[0],
    setIsMenuOpen = _useState2[1];
  return /*#__PURE__*/React.createElement(DropdownMenu, {
    section: {
      hasSeparator: true
    },
    isOpen: isMenuOpen,
    items: items,
    fitHeight: 188,
    fitWidth: 136,
    onItemActivated: onItemActivated,
    "data-testid": "selection-extension-dropdown-menu"
  }, /*#__PURE__*/React.createElement(SelectionExtensionDropdownMenuButton, {
    "aria-expanded": isMenuOpen,
    selected: isMenuOpen,
    onClick: function onClick() {
      return setIsMenuOpen(function (prevIsMenuOpen) {
        var nextIsMenuOpen = !prevIsMenuOpen;
        if (editorAnalyticsAPI) {
          editorAnalyticsAPI.fireAnalyticsEvent({
            action: ACTION.CLICKED,
            actionSubject: ACTION_SUBJECT.BUTTON,
            actionSubjectId: ACTION_SUBJECT_ID.EDITOR_PLUGIN_SELECTION_EXTENSION_DROPDOWN,
            eventType: EVENT_TYPE.TRACK,
            attributes: {
              toggle: nextIsMenuOpen ? ACTION.OPENED : ACTION.CLOSED
            }
          });
        }
        return nextIsMenuOpen;
      });
    }
  }));
});
export var SelectionExtensionDropdownMenu = injectIntl(SelectionExtensionDropdownMenuComponent);