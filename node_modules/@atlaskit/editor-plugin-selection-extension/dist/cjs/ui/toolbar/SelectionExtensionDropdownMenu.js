"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SelectionExtensionDropdownMenu = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactIntlNext = require("react-intl-next");
var _analytics = require("@atlaskit/editor-common/analytics");
var _uiMenu = require("@atlaskit/editor-common/ui-menu");
var _SelectionExtensionDropdownMenuButton = require("./SelectionExtensionDropdownMenuButton");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var SelectionExtensionDropdownMenuComponent = /*#__PURE__*/_react.default.memo(function (_ref) {
  var items = _ref.items,
    onItemActivated = _ref.onItemActivated,
    editorAnalyticsAPI = _ref.editorAnalyticsAPI;
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    isMenuOpen = _useState2[0],
    setIsMenuOpen = _useState2[1];
  return /*#__PURE__*/_react.default.createElement(_uiMenu.DropdownMenuWithKeyboardNavigation, {
    section: {
      hasSeparator: true
    },
    isOpen: isMenuOpen,
    items: items,
    fitHeight: 188,
    fitWidth: 136,
    onItemActivated: onItemActivated,
    "data-testid": "selection-extension-dropdown-menu"
  }, /*#__PURE__*/_react.default.createElement(_SelectionExtensionDropdownMenuButton.SelectionExtensionDropdownMenuButton, {
    "aria-expanded": isMenuOpen,
    selected: isMenuOpen,
    onClick: function onClick() {
      return setIsMenuOpen(function (prevIsMenuOpen) {
        var nextIsMenuOpen = !prevIsMenuOpen;
        if (editorAnalyticsAPI) {
          editorAnalyticsAPI.fireAnalyticsEvent({
            action: _analytics.ACTION.CLICKED,
            actionSubject: _analytics.ACTION_SUBJECT.BUTTON,
            actionSubjectId: _analytics.ACTION_SUBJECT_ID.EDITOR_PLUGIN_SELECTION_EXTENSION_DROPDOWN,
            eventType: _analytics.EVENT_TYPE.TRACK,
            attributes: {
              toggle: nextIsMenuOpen ? _analytics.ACTION.OPENED : _analytics.ACTION.CLOSED
            }
          });
        }
        return nextIsMenuOpen;
      });
    }
  }));
});
var SelectionExtensionDropdownMenu = exports.SelectionExtensionDropdownMenu = (0, _reactIntlNext.injectIntl)(SelectionExtensionDropdownMenuComponent);