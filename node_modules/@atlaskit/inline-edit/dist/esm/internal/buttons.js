/* buttons.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import "./buttons.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
/* eslint-disable @atlaskit/design-system/no-nested-styles */
/* eslint-disable @atlaskit/ui-styling-standard/no-nested-selectors */

import { IconButton } from '@atlaskit/button/new';
import CancelIcon from '@atlaskit/icon/glyph/cross';
import CrossIcon from '@atlaskit/icon/utility/cross';
import CheckMarkIcon from '@atlaskit/icon/utility/migration/check-mark--check';
import { B400, N0, N20A, N30A, N50A, N60A } from '@atlaskit/theme/colors';
var buttonsContainerStyles = null;
var buttonWrapperBaseStyles = null;
var Buttons = function Buttons(_ref) {
  var confirmButtonLabel = _ref.confirmButtonLabel,
    cancelButtonLabel = _ref.cancelButtonLabel,
    onMouseDown = _ref.onMouseDown,
    onCancelClick = _ref.onCancelClick,
    testId = _ref.testId;
  return /*#__PURE__*/React.createElement("div", {
    className: ax(["_1e0c1txw _kqswstnw _1o9zidpf _152t1osq _rjxpidpf _1pfh12x7"])
  }, /*#__PURE__*/React.createElement("div", {
    tabIndex: -1,
    className: ax(["_2rko1sit _11c82smr _vchhusvi _1bsbxy5q _1pby1kze _bfhk13b4 _16qs1a23 _1mpy1b66 _1nlx13nm _l2uv11wk _7mfvdecw _szlb17km"]),
    style: {
      "--_1f6rtr1": ix("var(--ds-surface-overlay, ".concat(N0, ")")),
      "--_3t1odq": ix("var(--ds-shadow-overlay, ".concat("0 4px 8px -2px ".concat(N50A, ", 0 0 1px ").concat(N60A), ")")),
      "--_12yx4z3": ix("var(--ds-surface-overlay, ".concat(N20A, ")")),
      "--_qfu7kd": ix("var(--ds-surface-overlay-hovered, ".concat(N30A, ")")),
      "--_1lrmnoy": ix("var(--ds-text, ".concat(B400, ")"))
    }
  }, /*#__PURE__*/React.createElement(IconButton, {
    type: "submit",
    icon: function icon(iconProps) {
      return /*#__PURE__*/React.createElement(CheckMarkIcon, _extends({}, iconProps, {
        LEGACY_size: "small"
      }));
    },
    onMouseDown: onMouseDown,
    label: confirmButtonLabel,
    testId: testId && "".concat(testId, "--confirm")
  })), /*#__PURE__*/React.createElement("div", {
    tabIndex: -1,
    className: ax(["_2rko1sit _11c82smr _vchhusvi _1bsbxy5q _1pby1kze _bfhk13b4 _16qs1a23 _1mpy1b66 _1nlx13nm _l2uv11wk _7mfvdecw _szlb17km"]),
    style: {
      "--_1f6rtr1": ix("var(--ds-surface-overlay, ".concat(N0, ")")),
      "--_3t1odq": ix("var(--ds-shadow-overlay, ".concat("0 4px 8px -2px ".concat(N50A, ", 0 0 1px ").concat(N60A), ")")),
      "--_12yx4z3": ix("var(--ds-surface-overlay, ".concat(N20A, ")")),
      "--_qfu7kd": ix("var(--ds-surface-overlay-hovered, ".concat(N30A, ")")),
      "--_1lrmnoy": ix("var(--ds-text, ".concat(B400, ")"))
    }
  }, /*#__PURE__*/React.createElement(IconButton, {
    icon: function icon(iconProps) {
      return /*#__PURE__*/React.createElement(CrossIcon, _extends({}, iconProps, {
        LEGACY_size: "small",
        LEGACY_fallbackIcon: CancelIcon
      }));
    },
    label: cancelButtonLabel,
    onClick: onCancelClick,
    onMouseDown: onMouseDown,
    testId: testId && "".concat(testId, "--cancel")
  })));
};

// eslint-disable-next-line @repo/internal/react/require-jsdoc
export default Buttons;