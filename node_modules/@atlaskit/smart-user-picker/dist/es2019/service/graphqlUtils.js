const buildHeaders = () => {
  const headers = new Headers();
  headers.append('Content-Type', 'application/json');
  return headers;
};
/**
 * @param {string} serviceUrl - GraphQL service endpoint
 * @param {Query} query - GraphQL query
 */
export function graphqlQuery(serviceUrl, query) {
  const headers = buildHeaders();
  return fetch(new Request(`${serviceUrl}`, {
    method: 'POST',
    credentials: 'include',
    mode: 'cors',
    headers,
    body: JSON.stringify(query)
  })).then(response => {
    if (!response.ok) {
      return Promise.reject({
        code: response.status,
        reason: response.statusText
      });
    }
    return response;
  }).then(response => response.json()).then(json => {
    if (json.errors) {
      var _json$errors$;
      return Promise.reject({
        reason: ((_json$errors$ = json.errors[0]) === null || _json$errors$ === void 0 ? void 0 : _json$errors$.category) || 'default'
      });
    }
    return json.data;
  });
}