"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.successfulRequestUsersEvent = exports.startSession = exports.requestUsersEvent = exports.preparedUsersLoadedEvent = exports.mountedWithPrefetchEvent = exports.filterUsersEvent = exports.failedRequestUsersEvent = exports.createAndFireEventInElementsChannel = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _analyticsNext = require("@atlaskit/analytics-next");
var _uuid = require("uuid");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var packageName = "@atlaskit/smart-user-picker";
var packageVersion = "8.0.1";
var startSession = exports.startSession = function startSession() {
  return {
    id: (0, _uuid.v4)(),
    start: Date.now(),
    inputChangeTime: Date.now(),
    upCount: 0,
    downCount: 0,
    lastKey: undefined
  };
};
var createAndFireEventInElementsChannel = exports.createAndFireEventInElementsChannel = (0, _analyticsNext.createAndFireEvent)('fabric-elements');
var createEvent = function createEvent(eventType, action, actionSubject) {
  var attributes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  return {
    eventType: eventType,
    action: action,
    actionSubject: actionSubject,
    attributes: _objectSpread({
      packageName: packageName,
      packageVersion: packageVersion
    }, attributes)
  };
};
var createDefaultSmartPickerAttributes = function createDefaultSmartPickerAttributes(props, state) {
  var fieldId = props.fieldId,
    objectId = props.objectId,
    containerId = props.containerId,
    childObjectId = props.childObjectId,
    prefetch = props.prefetch,
    maxOptions = props.maxOptions,
    includeTeams = props.includeTeams,
    productKey = props.productKey,
    principalId = props.principalId,
    siteId = props.siteId,
    orgId = props.orgId,
    filterOptions = props.filterOptions;
  var sessionId = state.sessionId,
    query = state.query;
  var maxNumberOfResults = maxOptions || 100;
  return {
    context: fieldId,
    childObjectId: childObjectId,
    containerId: containerId,
    hasFilterOptions: Boolean(filterOptions),
    includeTeams: includeTeams,
    maxNumberOfResults: maxNumberOfResults,
    objectId: objectId,
    prefetch: prefetch,
    principalId: principalId,
    productKey: productKey,
    queryLength: (query || '').length,
    siteId: siteId,
    orgId: orgId,
    sessionId: sessionId
  };
};
var createSmartUserPickerEvent = function createSmartUserPickerEvent(action, actionSubect) {
  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  return _objectSpread({
    source: 'smart-user-picker'
  }, createEvent('operational', action, actionSubect, attributes));
};
var preparedUsersLoadedEvent = exports.preparedUsersLoadedEvent = function preparedUsersLoadedEvent(props, state) {
  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  return createSmartUserPickerEvent('loaded', 'preparedUsers', _objectSpread(_objectSpread({}, createDefaultSmartPickerAttributes(props, state)), attributes));
};
var mountedWithPrefetchEvent = exports.mountedWithPrefetchEvent = function mountedWithPrefetchEvent(props, state) {
  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  return createSmartUserPickerEvent('mounted', 'prefetch', _objectSpread(_objectSpread({}, createDefaultSmartPickerAttributes(props, state)), attributes));
};
var filterUsersEvent = exports.filterUsersEvent = function filterUsersEvent(props, state) {
  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  return createSmartUserPickerEvent('filtered', 'users', _objectSpread(_objectSpread({}, createDefaultSmartPickerAttributes(props, state)), attributes));
};
var requestUsersEvent = exports.requestUsersEvent = function requestUsersEvent(props, state) {
  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  return createSmartUserPickerEvent('requested', 'users', _objectSpread(_objectSpread({}, createDefaultSmartPickerAttributes(props, state)), attributes));
};
var successfulRequestUsersEvent = exports.successfulRequestUsersEvent = function successfulRequestUsersEvent(props, state) {
  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  return createSmartUserPickerEvent('successful', 'usersRequest', _objectSpread(_objectSpread({}, createDefaultSmartPickerAttributes(props, state)), attributes));
};
var failedRequestUsersEvent = exports.failedRequestUsersEvent = function failedRequestUsersEvent(props, state) {
  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  return createSmartUserPickerEvent('failed', 'usersRequest', _objectSpread(_objectSpread({}, createDefaultSmartPickerAttributes(props, state)), attributes));
};