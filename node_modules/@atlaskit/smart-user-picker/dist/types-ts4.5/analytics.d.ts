import { type AnalyticsEventPayload } from '@atlaskit/analytics-next';
import { type Props } from './types';
export type UserPickerSession = {
    id: string;
    start: number;
    inputChangeTime: number;
    upCount: number;
    downCount: number;
    lastKey?: number;
};
export declare const startSession: () => UserPickerSession;
export declare const createAndFireEventInElementsChannel: (payload: AnalyticsEventPayload) => (createAnalyticsEvent: import("@atlaskit/analytics-next").CreateUIAnalyticsEvent) => import("@atlaskit/analytics-next").UIAnalyticsEvent;
export interface SmartEventCreator {
    (props: Props, ...args: any[]): AnalyticsEventPayload;
}
export declare const preparedUsersLoadedEvent: SmartEventCreator;
export declare const mountedWithPrefetchEvent: SmartEventCreator;
export declare const filterUsersEvent: SmartEventCreator;
export declare const requestUsersEvent: SmartEventCreator;
export declare const successfulRequestUsersEvent: SmartEventCreator;
export declare const failedRequestUsersEvent: SmartEventCreator;
