import { type StoreActionApi } from 'react-sweet-state';
type InjectedEventAttributes = {
    teamId?: string;
};
type PeopleTeamsAnalyticsSubcontextState = {
    eventAttributes?: InjectedEventAttributes;
};
export declare const usePeopleTeamsAnalyticsSubcontext: import("react-sweet-state").HookFunction<PeopleTeamsAnalyticsSubcontextState, import("react-sweet-state").BoundActions<PeopleTeamsAnalyticsSubcontextState, {
    readonly setEventAttributes: (eventAttributes?: Partial<InjectedEventAttributes>) => ({ setState, getState }: StoreActionApi<PeopleTeamsAnalyticsSubcontextState>) => void;
}>, void>;
/**
 * Inject an attribute into all events using `usePeopleTeamAnalyticsEvents`
 * It sets the attribute when the hook is called and clears it when the component is unmounted
 */
export declare const useInjectedEventAttribute: <K extends "teamId">(key: K, value: InjectedEventAttributes[K]) => void;
export {};
