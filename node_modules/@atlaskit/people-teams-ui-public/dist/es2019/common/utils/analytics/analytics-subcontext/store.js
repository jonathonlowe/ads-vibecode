import { useEffect } from 'react';
import { createHook, createStore } from 'react-sweet-state';
const initialState = {
  eventAttributes: {}
};
const actions = {
  setEventAttributes: eventAttributes => ({
    setState,
    getState
  }) => {
    const existingEventAttributes = getState().eventAttributes;
    const newEventAttributes = {
      ...existingEventAttributes,
      ...eventAttributes
    };
    Object.keys(newEventAttributes).forEach(keyString => {
      const key = keyString;
      if (newEventAttributes[key] === undefined) {
        delete newEventAttributes[key];
      }
    });
    setState({
      eventAttributes: newEventAttributes
    });
  }
};
const AnalyticsSubcontextStore = createStore({
  initialState,
  actions
});
export const usePeopleTeamsAnalyticsSubcontext = createHook(AnalyticsSubcontextStore);

/**
 * Inject an attribute into all events using `usePeopleTeamAnalyticsEvents`
 * It sets the attribute when the hook is called and clears it when the component is unmounted
 */
export const useInjectedEventAttribute = (key, value) => {
  const {
    setEventAttributes
  } = usePeopleTeamsAnalyticsSubcontext()[1];
  useEffect(() => {
    setEventAttributes({
      [key]: value
    });
    return () => setEventAttributes({
      [key]: undefined
    });
  }, [key, value, setEventAttributes]);
};