"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.usePeopleTeamsAnalyticsSubcontext = exports.useInjectedEventAttribute = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = require("react");
var _reactSweetState = require("react-sweet-state");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var initialState = {
  eventAttributes: {}
};
var actions = {
  setEventAttributes: function setEventAttributes(eventAttributes) {
    return function (_ref) {
      var setState = _ref.setState,
        getState = _ref.getState;
      var existingEventAttributes = getState().eventAttributes;
      var newEventAttributes = _objectSpread(_objectSpread({}, existingEventAttributes), eventAttributes);
      Object.keys(newEventAttributes).forEach(function (keyString) {
        var key = keyString;
        if (newEventAttributes[key] === undefined) {
          delete newEventAttributes[key];
        }
      });
      setState({
        eventAttributes: newEventAttributes
      });
    };
  }
};
var AnalyticsSubcontextStore = (0, _reactSweetState.createStore)({
  initialState: initialState,
  actions: actions
});
var usePeopleTeamsAnalyticsSubcontext = exports.usePeopleTeamsAnalyticsSubcontext = (0, _reactSweetState.createHook)(AnalyticsSubcontextStore);

/**
 * Inject an attribute into all events using `usePeopleTeamAnalyticsEvents`
 * It sets the attribute when the hook is called and clears it when the component is unmounted
 */
var useInjectedEventAttribute = exports.useInjectedEventAttribute = function useInjectedEventAttribute(key, value) {
  var setEventAttributes = usePeopleTeamsAnalyticsSubcontext()[1].setEventAttributes;
  (0, _react.useEffect)(function () {
    setEventAttributes((0, _defineProperty2.default)({}, key, value));
    return function () {
      return setEventAttributes((0, _defineProperty2.default)({}, key, undefined));
    };
  }, [key, value, setEventAttributes]);
};