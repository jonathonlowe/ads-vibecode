import { fg } from '@atlaskit/platform-feature-flags';
// Used for overwriting ariaLiveMessages builtin onFocus method.
// Returns custom built string while focusing each group option. This string is used for screen reader announcement.
export function onFocus(onFocusProps, defaultOptions) {
  var _groupData$options$fi;
  const {
    focused
  } = onFocusProps;
  const isOptionFocused = option => {
    return option.label === focused.label;
  };
  const groupData = defaultOptions === null || defaultOptions === void 0 ? void 0 : defaultOptions.find(option => {
    var _option$options;
    return (_option$options = option.options) === null || _option$options === void 0 ? void 0 : _option$options.some(isOptionFocused);
  });
  const groupOptionIndex = (_groupData$options$fi = groupData === null || groupData === void 0 ? void 0 : groupData.options.findIndex(isOptionFocused)) !== null && _groupData$options$fi !== void 0 ? _groupData$options$fi : 0;
  if (focused.label && groupData !== null && groupData !== void 0 && groupData.label && fg('design_system_select-a11y-improvement')) {
    return `${focused.label}, ${groupData === null || groupData === void 0 ? void 0 : groupData.label}`;
  }
  return `Option ${focused.label}, ${groupData === null || groupData === void 0 ? void 0 : groupData.label} group, item ${groupOptionIndex + 1} out of ${groupData === null || groupData === void 0 ? void 0 : groupData.options.length}. All in all `;
}

// Helper function which identifies if options are grouped.
export const isOptionsGrouped = arr => {
  return arr === null || arr === void 0 ? void 0 : arr.every(obj => obj.hasOwnProperty('options'));
};

// Helper function which calculates how many options are in total in all groups.
export const countAllOptions = groupsArray => {
  const totalLength = groupsArray === null || groupsArray === void 0 ? void 0 : groupsArray.reduce((acc, currentGroup) => {
    var _group$options;
    const group = currentGroup;
    acc += group === null || group === void 0 ? void 0 : (_group$options = group.options) === null || _group$options === void 0 ? void 0 : _group$options.length;
    return acc;
  }, 0);
  return totalLength;
};