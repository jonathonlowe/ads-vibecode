"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GlobalStylesWrapper = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = require("react");
var _react2 = require("@emotion/react");
var _reactIntlNext = require("react-intl-next");
var _messages = require("@atlaskit/editor-common/messages");
var _experiments = require("@atlaskit/tmp-editor-statsig/experiments");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-global-styles, @atlaskit/ui-styling-standard/use-compiled

var PLACEHOLDER_SELECTOR = '.ProseMirror-focused .layoutSectionView-content-wrap.selected [data-layout-column] > [data-layout-content] > p:only-child:has(.ProseMirror-trailingBreak:only-child)';
var getPlaceholderStyle = function getPlaceholderStyle(message) {
  if ((0, _experiments.editorExperiment)('platform_editor_controls', 'variant1')) {
    return (0, _react2.css)((0, _defineProperty2.default)({}, "".concat(PLACEHOLDER_SELECTOR), {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-important-styles -- Ignored via go/DSP-18766
      '&::before': {
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values
        content: "\"".concat(message, "\""),
        position: 'absolute',
        color: "var(--ds-text-subtlest, #626F86)",
        pointerEvents: 'none'
      }
    }));
  }
  return (0, _react2.css)({
    // when paragraph is the only child, and it only has a trailingBreak.
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-nested-selectors, @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
    '.ProseMirror .layoutSectionView-content-wrap.selected [data-layout-column] > [data-layout-content] > p:only-child:has(.ProseMirror-trailingBreak:only-child)': {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-important-styles -- Ignored via go/DSP-18766
      '&::before': {
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values
        content: "\"".concat(message, "\""),
        position: 'absolute',
        color: "var(--ds-text-disabled, #A5ADBA)",
        font: "var(--ds-font-body, normal 400 14px/20px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
        marginTop: "var(--ds-space-050, 4px)",
        pointerEvents: 'none'
      }
    }
  });
};
var GlobalStylesWrapper = exports.GlobalStylesWrapper = function GlobalStylesWrapper() {
  var _useIntl = (0, _reactIntlNext.useIntl)(),
    formatMessage = _useIntl.formatMessage;
  var placeholderStyle = (0, _react.useMemo)(function () {
    var placeholderText = (0, _experiments.editorExperiment)('platform_editor_controls', 'variant1') ? _messages.layoutMessages.controlslayoutPlaceholder : _messages.layoutMessages.layoutPlaceholder;
    return getPlaceholderStyle(formatMessage(placeholderText));
  }, [formatMessage]);
  return (0, _react2.jsx)(_react2.Global, {
    styles: placeholderStyle
  });
};