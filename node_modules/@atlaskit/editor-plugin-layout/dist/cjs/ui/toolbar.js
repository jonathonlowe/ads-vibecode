"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.layoutToolbarTitle = exports.buildToolbar = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _react = _interopRequireDefault(require("react"));
var _messages = _interopRequireWildcard(require("@atlaskit/editor-common/messages"));
var _utils = require("@atlaskit/editor-prosemirror/utils");
var _editorSharedStyles = require("@atlaskit/editor-shared-styles");
var _copy = _interopRequireDefault(require("@atlaskit/icon/core/copy"));
var _deleteEditorRemove = _interopRequireDefault(require("@atlaskit/icon/core/migration/delete--editor-remove"));
var _layoutOneColumnEditorLayoutSingle = _interopRequireDefault(require("@atlaskit/icon/core/migration/layout-one-column--editor-layout-single"));
var _layoutThreeColumnsEditorLayoutThreeEqual = _interopRequireDefault(require("@atlaskit/icon/core/migration/layout-three-columns--editor-layout-three-equal"));
var _layoutThreeColumnsSidebarsEditorLayoutThreeWithSidebars = _interopRequireDefault(require("@atlaskit/icon/core/migration/layout-three-columns-sidebars--editor-layout-three-with-sidebars"));
var _layoutTwoColumnsEditorLayoutTwoEqual = _interopRequireDefault(require("@atlaskit/icon/core/migration/layout-two-columns--editor-layout-two-equal"));
var _layoutTwoColumnsSidebarLeftEditorLayoutTwoLeftSidebar = _interopRequireDefault(require("@atlaskit/icon/core/migration/layout-two-columns-sidebar-left--editor-layout-two-left-sidebar"));
var _layoutTwoColumnsSidebarRightEditorLayoutTwoRightSidebar = _interopRequireDefault(require("@atlaskit/icon/core/migration/layout-two-columns-sidebar-right--editor-layout-two-right-sidebar"));
var _experiments = require("@atlaskit/tmp-editor-statsig/experiments");
var _actions = require("../pm-plugins/actions");
var _LayoutThreeWithLeftSidebars = require("./icons/LayoutThreeWithLeftSidebars");
var _LayoutThreeWithRightSidebars = require("./icons/LayoutThreeWithRightSidebars");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var LAYOUT_TYPES = [{
  id: 'editor.layout.twoEquals',
  type: 'two_equal',
  title: _messages.layoutMessages.twoColumns,
  icon: _layoutTwoColumnsEditorLayoutTwoEqual.default
}, {
  id: 'editor.layout.threeEquals',
  type: 'three_equal',
  title: _messages.layoutMessages.threeColumns,
  icon: _layoutThreeColumnsEditorLayoutThreeEqual.default
}];
var LAYOUT_TYPES_WITH_SINGLE_COL = [{
  id: 'editor.layout.singeLayout',
  type: 'single',
  title: _messages.layoutMessages.singleColumn,
  icon: _layoutOneColumnEditorLayoutSingle.default
}].concat(LAYOUT_TYPES);
var SIDEBAR_LAYOUT_TYPES = [{
  id: 'editor.layout.twoRightSidebar',
  type: 'two_right_sidebar',
  title: _messages.layoutMessages.rightSidebar,
  icon: _layoutTwoColumnsSidebarRightEditorLayoutTwoRightSidebar.default
}, {
  id: 'editor.layout.twoLeftSidebar',
  type: 'two_left_sidebar',
  title: _messages.layoutMessages.leftSidebar,
  icon: _layoutTwoColumnsSidebarLeftEditorLayoutTwoLeftSidebar.default
}, {
  id: 'editor.layout.threeWithSidebars',
  type: 'three_with_sidebars',
  title: _messages.layoutMessages.threeColumnsWithSidebars,
  icon: _layoutThreeColumnsSidebarsEditorLayoutThreeWithSidebars.default
}];

// These are used for advanced layout options
var LAYOUT_WITH_TWO_COL_DISTRIBUTION = [{
  id: 'editor.layout.twoEquals',
  type: 'two_equal',
  title: _messages.layoutMessages.twoColumns,
  icon: _layoutTwoColumnsEditorLayoutTwoEqual.default
}, {
  id: 'editor.layout.twoRightSidebar',
  type: 'two_right_sidebar',
  title: _messages.layoutMessages.rightSidebar,
  icon: _layoutTwoColumnsSidebarRightEditorLayoutTwoRightSidebar.default
}, {
  id: 'editor.layout.twoLeftSidebar',
  type: 'two_left_sidebar',
  title: _messages.layoutMessages.leftSidebar,
  icon: _layoutTwoColumnsSidebarLeftEditorLayoutTwoLeftSidebar.default
}];
var LAYOUT_WITH_THREE_COL_DISTRIBUTION = [{
  id: 'editor.layout.threeEquals',
  type: 'three_equal',
  title: _messages.layoutMessages.threeColumns,
  icon: _layoutThreeColumnsEditorLayoutThreeEqual.default
}, {
  id: 'editor.layout.threeWithSidebars',
  type: 'three_with_sidebars',
  title: _messages.layoutMessages.threeColumnsWithSidebars,
  icon: _layoutThreeColumnsSidebarsEditorLayoutThreeWithSidebars.default
}, {
  id: 'editor.layout.threeRightSidebars',
  type: 'three_right_sidebars',
  title: _messages.layoutMessages.threeColumnsWithRightSidebars,
  icon: _LayoutThreeWithRightSidebars.LayoutThreeWithRightSidebarsIcon,
  iconFallback: _LayoutThreeWithRightSidebars.LayoutThreeWithRightSidebarsIcon
}, {
  id: 'editor.layout.threeLeftSidebars',
  type: 'three_left_sidebars',
  title: _messages.layoutMessages.threeColumnsWithLeftSidebars,
  icon: _LayoutThreeWithLeftSidebars.LayoutThreeWithLeftSidebarsIcon,
  iconFallback: _LayoutThreeWithLeftSidebars.LayoutThreeWithLeftSidebarsIcon
}];
var buildLayoutButton = function buildLayoutButton(intl, item, currentLayout, editorAnalyticsAPI) {
  return {
    id: item.id,
    type: 'button',
    icon: item.icon,
    iconFallback: item.iconFallback,
    testId: item.title.id ? "".concat(item.title.id) : undefined,
    title: intl.formatMessage(item.title),
    onClick: (0, _actions.setPresetLayout)(editorAnalyticsAPI)(item.type),
    selected: !!currentLayout && currentLayout === item.type,
    tabIndex: null
  };
};
var layoutToolbarTitle = exports.layoutToolbarTitle = 'Layout floating controls';
var iconPlaceholder = _layoutTwoColumnsEditorLayoutTwoEqual.default; // TODO: ED-25466 - Replace with proper icon

var getAdvancedLayoutItems = function getAdvancedLayoutItems(_ref) {
  var addSidebarLayouts = _ref.addSidebarLayouts,
    intl = _ref.intl,
    editorAnalyticsAPI = _ref.editorAnalyticsAPI,
    state = _ref.state,
    node = _ref.node,
    nodeType = _ref.nodeType,
    separator = _ref.separator,
    deleteButton = _ref.deleteButton,
    currentLayout = _ref.currentLayout,
    allowAdvancedSingleColumnLayout = _ref.allowAdvancedSingleColumnLayout;
  var numberOfColumns = node.content.childCount || 2;
  var distributionOptions = numberOfColumns === 2 ? LAYOUT_WITH_TWO_COL_DISTRIBUTION : numberOfColumns === 3 ? LAYOUT_WITH_THREE_COL_DISTRIBUTION : [];
  var columnOptions = [{
    title: intl.formatMessage(_messages.layoutMessages.columnOption, {
      count: 2
    }),
    //'2-columns',
    icon: iconPlaceholder,
    onClick: (0, _actions.setPresetLayout)(editorAnalyticsAPI)('two_equal'),
    selected: numberOfColumns === 2
  }, {
    title: intl.formatMessage(_messages.layoutMessages.columnOption, {
      count: 3
    }),
    //'3-columns'
    icon: iconPlaceholder,
    onClick: (0, _actions.setPresetLayout)(editorAnalyticsAPI)('three_equal'),
    selected: numberOfColumns === 3
  }, {
    title: intl.formatMessage(_messages.layoutMessages.columnOption, {
      count: 4
    }),
    //'4-columns'
    icon: iconPlaceholder,
    onClick: (0, _actions.setPresetLayout)(editorAnalyticsAPI)('four_equal'),
    selected: numberOfColumns === 4
  }, {
    title: intl.formatMessage(_messages.layoutMessages.columnOption, {
      count: 5
    }),
    //'5-columns'
    icon: iconPlaceholder,
    onClick: (0, _actions.setPresetLayout)(editorAnalyticsAPI)('five_equal'),
    selected: numberOfColumns === 5
  }];
  var singleColumnOption = allowAdvancedSingleColumnLayout ? {
    title: intl.formatMessage(_messages.layoutMessages.columnOption, {
      count: 1
    }),
    //'1-columns',
    icon: iconPlaceholder,
    onClick: (0, _actions.setPresetLayout)(editorAnalyticsAPI)('single'),
    selected: numberOfColumns === 1
  } : [];
  return [{
    type: 'dropdown',
    title: intl.formatMessage(_messages.layoutMessages.columnOption, {
      count: numberOfColumns
    }),
    //`${numberOfColumns}-columns`,
    options: [singleColumnOption, columnOptions].flat(),
    showSelected: true,
    testId: 'column-options-button'
  }].concat((0, _toConsumableArray2.default)(distributionOptions.length > 0 ? [separator] : []), (0, _toConsumableArray2.default)(addSidebarLayouts ? distributionOptions.map(function (i) {
    return buildLayoutButton(intl, i, currentLayout, editorAnalyticsAPI);
  }) : []));
};
var fullHeightSeparator = {
  type: 'separator',
  fullHeight: true
};
var buildToolbar = exports.buildToolbar = function buildToolbar(state, intl, pos, _allowBreakout, addSidebarLayouts, allowSingleColumnLayout, allowAdvancedSingleColumnLayout, api) {
  var _api$decorations$acti, _api$decorations, _api$analytics;
  var _ref2 = (_api$decorations$acti = api === null || api === void 0 || (_api$decorations = api.decorations) === null || _api$decorations === void 0 ? void 0 : _api$decorations.actions) !== null && _api$decorations$acti !== void 0 ? _api$decorations$acti : {},
    hoverDecoration = _ref2.hoverDecoration;
  var editorAnalyticsAPI = api === null || api === void 0 || (_api$analytics = api.analytics) === null || _api$analytics === void 0 ? void 0 : _api$analytics.actions;
  var node = state.doc.nodeAt(pos);
  if (node) {
    var currentLayout = (0, _actions.getPresetLayout)(node);
    var separator = {
      type: 'separator'
    };
    var nodeType = state.schema.nodes.layoutSection;
    var deleteButton = {
      id: 'editor.layout.delete',
      type: 'button',
      appearance: 'danger',
      focusEditoronEnter: true,
      icon: _deleteEditorRemove.default,
      testId: _messages.default.remove.id,
      title: intl.formatMessage(_messages.default.remove),
      onClick: (0, _actions.deleteActiveLayoutNode)(editorAnalyticsAPI),
      onMouseEnter: hoverDecoration === null || hoverDecoration === void 0 ? void 0 : hoverDecoration(nodeType, true),
      onMouseLeave: hoverDecoration === null || hoverDecoration === void 0 ? void 0 : hoverDecoration(nodeType, false),
      onFocus: hoverDecoration === null || hoverDecoration === void 0 ? void 0 : hoverDecoration(nodeType, true),
      onBlur: hoverDecoration === null || hoverDecoration === void 0 ? void 0 : hoverDecoration(nodeType, false),
      tabIndex: null
    };
    var copyButton = {
      type: 'copy-button',
      items: [{
        state: state,
        formatMessage: intl.formatMessage,
        nodeType: nodeType
      }]
    };
    var layoutTypes = allowSingleColumnLayout ? LAYOUT_TYPES_WITH_SINGLE_COL : LAYOUT_TYPES;
    var hoverDecorationProps = function hoverDecorationProps(nodeType, className) {
      return {
        onMouseEnter: hoverDecoration === null || hoverDecoration === void 0 ? void 0 : hoverDecoration(nodeType, true, className),
        onMouseLeave: hoverDecoration === null || hoverDecoration === void 0 ? void 0 : hoverDecoration(nodeType, false, className),
        onFocus: hoverDecoration === null || hoverDecoration === void 0 ? void 0 : hoverDecoration(nodeType, true, className),
        onBlur: hoverDecoration === null || hoverDecoration === void 0 ? void 0 : hoverDecoration(nodeType, false, className)
      };
    };
    var overflowMenu = {
      type: 'overflow-dropdown',
      options: [_objectSpread({
        title: intl.formatMessage(_messages.default.copyToClipboard),
        onClick: function onClick() {
          var _api$core, _api$floatingToolbar;
          api === null || api === void 0 || (_api$core = api.core) === null || _api$core === void 0 || _api$core.actions.execute( // @ts-ignore
          api === null || api === void 0 || (_api$floatingToolbar = api.floatingToolbar) === null || _api$floatingToolbar === void 0 ? void 0 : _api$floatingToolbar.commands.copyNode(nodeType));
          return true;
        },
        icon: /*#__PURE__*/_react.default.createElement(_copy.default, {
          label: ""
        })
      }, hoverDecorationProps(nodeType, _editorSharedStyles.akEditorSelectedNodeClassName)), _objectSpread({
        title: intl.formatMessage(_messages.default.delete),
        onClick: (0, _actions.deleteActiveLayoutNode)(editorAnalyticsAPI),
        icon: /*#__PURE__*/_react.default.createElement(_deleteEditorRemove.default, {
          label: ""
        })
      }, hoverDecorationProps(nodeType))]
    };
    return {
      title: layoutToolbarTitle,
      // Ignored via go/ees005
      // eslint-disable-next-line @atlaskit/editor/no-as-casting
      getDomRef: function getDomRef(view) {
        return (0, _utils.findDomRefAtPos)(pos, view.domAtPos.bind(view));
      },
      nodeType: nodeType,
      groupLabel: intl.formatMessage(_messages.layoutMessages.floatingToolbarRadioGroupAriaLabel),
      items: [].concat((0, _toConsumableArray2.default)((0, _experiments.editorExperiment)('advanced_layouts', true) ? getAdvancedLayoutItems({
        addSidebarLayouts: addSidebarLayouts,
        intl: intl,
        editorAnalyticsAPI: editorAnalyticsAPI,
        state: state,
        nodeType: nodeType,
        node: node,
        separator: separator,
        deleteButton: deleteButton,
        currentLayout: currentLayout,
        allowAdvancedSingleColumnLayout: allowAdvancedSingleColumnLayout
      }) : [].concat((0, _toConsumableArray2.default)(layoutTypes.map(function (i) {
        return buildLayoutButton(intl, i, currentLayout, editorAnalyticsAPI);
      })), (0, _toConsumableArray2.default)(addSidebarLayouts ? SIDEBAR_LAYOUT_TYPES.map(function (i) {
        return buildLayoutButton(intl, i, currentLayout, editorAnalyticsAPI);
      }) : []))), (0, _toConsumableArray2.default)((0, _experiments.editorExperiment)('platform_editor_controls', 'variant1') ? [fullHeightSeparator, overflowMenu] : [separator, copyButton, separator, deleteButton])),
      scrollable: true
    };
  }
  return;
};