import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
import { Slice } from '@atlaskit/editor-prosemirror/model';
import { ReplaceStep, Step, StepMap, StepResult } from '@atlaskit/editor-prosemirror/transform';
export var tableSortingStepType = 'atlaskit-table-sorting-ordering';
export var TableSortStep = /*#__PURE__*/function (_Step) {
  function TableSortStep(pos, prev, next) {
    var _this;
    _classCallCheck(this, TableSortStep);
    _this = _callSuper(this, TableSortStep);
    _this.prev = prev;
    _this.next = next;
    _this.pos = pos;
    return _this;
  }
  _inherits(TableSortStep, _Step);
  return _createClass(TableSortStep, [{
    key: "invert",
    value: function invert() {
      return new TableSortStep(this.pos, this.next, this.prev);
    }
  }, {
    key: "apply",
    value: function apply(doc) {
      return StepResult.ok(doc);
    }
  }, {
    key: "map",
    value: function map() {
      return null;
    }
  }, {
    key: "getMap",
    value: function getMap() {
      return new StepMap([0, 0, 0]);
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      return {
        stepType: tableSortingStepType
      };
    }
  }], [{
    key: "fromJSON",
    value: function fromJSON() {
      return new ReplaceStep(0, 0, Slice.empty);
    }
  }]);
}(Step);

/** Register this step with Prosemirror */
Step.jsonID(tableSortingStepType, TableSortStep);