"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tableSortingStepType = exports.TableSortStep = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _model = require("@atlaskit/editor-prosemirror/model");
var _transform = require("@atlaskit/editor-prosemirror/transform");
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var tableSortingStepType = exports.tableSortingStepType = 'atlaskit-table-sorting-ordering';
var TableSortStep = exports.TableSortStep = /*#__PURE__*/function (_Step) {
  function TableSortStep(pos, prev, next) {
    var _this;
    (0, _classCallCheck2.default)(this, TableSortStep);
    _this = _callSuper(this, TableSortStep);
    _this.prev = prev;
    _this.next = next;
    _this.pos = pos;
    return _this;
  }
  (0, _inherits2.default)(TableSortStep, _Step);
  return (0, _createClass2.default)(TableSortStep, [{
    key: "invert",
    value: function invert() {
      return new TableSortStep(this.pos, this.next, this.prev);
    }
  }, {
    key: "apply",
    value: function apply(doc) {
      return _transform.StepResult.ok(doc);
    }
  }, {
    key: "map",
    value: function map() {
      return null;
    }
  }, {
    key: "getMap",
    value: function getMap() {
      return new _transform.StepMap([0, 0, 0]);
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      return {
        stepType: tableSortingStepType
      };
    }
  }], [{
    key: "fromJSON",
    value: function fromJSON() {
      return new _transform.ReplaceStep(0, 0, _model.Slice.empty);
    }
  }]);
}(_transform.Step);
/** Register this step with Prosemirror */
_transform.Step.jsonID(tableSortingStepType, TableSortStep);