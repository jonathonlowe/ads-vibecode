import type { Node as ProseMirrorNode, Schema } from '@atlaskit/editor-prosemirror/model';
import type { Mappable, Transform } from '@atlaskit/editor-prosemirror/transform';
import { StepMap } from '@atlaskit/editor-prosemirror/transform';
import type { TableRect } from '@atlaskit/editor-tables/table-map';
import type { TableSideEffect, TableSideEffectJSON } from './types';
export declare class TableSideEffectHandler {
    table?: TableSideEffect;
    constructor(tableSideEffect?: TableSideEffect);
    private addTableSideEffect;
    handleAddTable(tr: Transform, isDelete: boolean): boolean;
    handleRemoveTable(tr: Transform, tablePos: number, tableRect: TableRect, column: number | null, isDelete: boolean): boolean;
    getTableMap(isDelete: boolean): StepMap | undefined;
    map(mapping: Mappable): TableSideEffect | undefined;
    invert(doc: ProseMirrorNode): TableSideEffect | undefined;
    toJSON(): TableSideEffectJSON | undefined;
    static fromJSON(schema: Schema, json: TableSideEffectJSON): TableSideEffect;
}
