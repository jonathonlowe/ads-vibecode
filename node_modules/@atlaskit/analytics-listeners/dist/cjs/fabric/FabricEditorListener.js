"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.LEGACY_EDITOR_TAG = exports.EDITOR_TAG = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _analyticsNext = require("@atlaskit/analytics-next");
var _types = require("../types");
var _handleEvent = require("./handle-event");
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
/**
 * The TWP Fabric Editor is registered as a Platform Team.
 *
 * When the editor is consumed by products (e.g. Confluence, Jira, etc) it retains
 * their `product` name, and augments 'editor' as a `tag`.
 *
 * This configuration allows us to register events in Data Portal in a product agnostic way,
 * (avoiding duplicated events per product) and receive and filter events per product within Amplitude.
 *
 * @see https://data-portal.us-east-1.prod.public.atl-paas.net/
 * @see https://bitbucket.org/atlassian/events-catalog-service/src/master/src/main/java/com/atlassian/dataservices/eventcatalog/product/ProductService.java
 */
var EDITOR_TAG = exports.EDITOR_TAG = 'editor';

// @deprecated ED-9043 Can be safely removed once all editor products consume a release that uses the new tag.
var LEGACY_EDITOR_TAG = exports.LEGACY_EDITOR_TAG = 'fabricEditor';
var FabricEditorListener = exports.default = /*#__PURE__*/function (_React$Component) {
  function FabricEditorListener() {
    var _this;
    (0, _classCallCheck2.default)(this, FabricEditorListener);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, FabricEditorListener, [].concat(args));
    (0, _defineProperty2.default)(_this, "handleEventWrapper", function (event) {
      (0, _handleEvent.handleEvent)(event, [EDITOR_TAG, LEGACY_EDITOR_TAG], _this.props.logger, _this.props.client);
    });
    return _this;
  }
  (0, _inherits2.default)(FabricEditorListener, _React$Component);
  return (0, _createClass2.default)(FabricEditorListener, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/_react.default.createElement(_analyticsNext.AnalyticsListener, {
        onEvent: this.handleEventWrapper,
        channel: _types.FabricChannel.editor
      }, this.props.children);
    }
  }]);
}(_react.default.Component);