/* icon-wrapper.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IconWrapper = IconWrapper;
require("./icon-wrapper.compiled.css");
var React = _interopRequireWildcard(require("react"));
var _runtime = require("@compiled/react/runtime");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _constants = require("./constants");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var styles = {
  root: "_1e0c1o8l"
};
var sizeMap = {
  '12': "_4t3i1crf",
  '16': "_4t3i7vkz",
  '20': "_4t3igktf",
  '24': "_4t3i1tcg",
  small: "_4t3i1tcg",
  medium: "_4t3izwfg",
  '32': "_4t3izwfg"
};
function IconWrapper(_ref) {
  var _ref$size = _ref.size,
    size = _ref$size === void 0 ? '20' : _ref$size,
    label = _ref.label,
    svg = _ref.svg,
    customThemeSvg = _ref.customThemeSvg,
    userDefinedTestId = _ref.testId,
    _ref$appearance = _ref.appearance,
    appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance,
    iconColor = _ref.iconColor;
  var testId = userDefinedTestId && "".concat(userDefinedTestId, "--wrapper");
  var isCustomThemed = customThemeSvg && iconColor;
  return /*#__PURE__*/React.createElement("span", {
    "data-testid": testId,
    style: (0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)({}, _constants.CSS_VAR_ICON, appearance === 'legacy' ? 'white' : 'initial'), _constants.CSS_VAR_TILE, appearance === 'legacy' ? '#1868DB' : 'initial'), _constants.CSS_VAR_THEMED_ICON, iconColor || 'initial')
    // In some icons (such as the app switcher specific icons), the label is a consumer prop.
    // If the label is provided an empty string, we want to remove the element from the accessibility tree.
    ,
    "aria-label": label ? label : undefined,
    role: label ? 'img' : undefined,
    "aria-hidden": label === '' ? true : undefined
    // We are using dangerouslySetInnerHTML here to tell React not to track changes to the SVG elements.
    // This is because the SVG elements are static and will not change, so we get a little performance benefit by
    // bypassing React.
    ,
    dangerouslySetInnerHTML: {
      __html: isCustomThemed ? customThemeSvg : svg
    },
    className: (0, _runtime.ax)([styles.root, sizeMap[size]])
  });
}