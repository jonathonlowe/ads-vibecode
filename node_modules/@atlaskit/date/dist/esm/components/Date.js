import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
import { DateLozenge } from './DateLozenge';
import React from 'react';
import format from 'date-fns/format';
var isClickable = function isClickable(props) {
  return !!props.onClick;
};
export var Date = /*#__PURE__*/function (_React$Component) {
  function Date() {
    var _this;
    _classCallCheck(this, Date);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, Date, [].concat(args));
    _defineProperty(_this, "handleOnClick", function (event) {
      if (isClickable(_this.props)) {
        _this.props.onClick(_this.props.value, event);
      }
    });
    _defineProperty(_this, "renderContent", function () {
      if (_this.props.children) {
        if (typeof _this.props.children === 'function') {
          return (
            // prettier-ignore
            // eslint-disable-next-line @typescript-eslint/ban-types
            _this.props.children(_this.props)
          );
        }
        return _this.props.children;
      }
      return format(_this.props.value, _this.props.format || '');
    });
    return _this;
  }
  _inherits(Date, _React$Component);
  return _createClass(Date, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/React.createElement(DateLozenge
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
      , {
        className: this.props.className,
        onClick: isClickable(this.props) ? this.handleOnClick : undefined,
        color: this.props.color
      }, this.renderContent());
    }
  }]);
}(React.Component);
_defineProperty(Date, "displayName", 'Date');
_defineProperty(Date, "defaultProps", {
  format: 'dd/MM/yyyy',
  color: 'grey'
});