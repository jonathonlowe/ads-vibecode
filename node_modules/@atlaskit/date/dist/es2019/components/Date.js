import _defineProperty from "@babel/runtime/helpers/defineProperty";
import { DateLozenge } from './DateLozenge';
import React from 'react';
import format from 'date-fns/format';
const isClickable = props => !!props.onClick;
export class Date extends React.Component {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "handleOnClick", event => {
      if (isClickable(this.props)) {
        this.props.onClick(this.props.value, event);
      }
    });
    _defineProperty(this, "renderContent", () => {
      if (this.props.children) {
        if (typeof this.props.children === 'function') {
          return (
            // prettier-ignore
            // eslint-disable-next-line @typescript-eslint/ban-types
            this.props.children(this.props)
          );
        }
        return this.props.children;
      }
      return format(this.props.value, this.props.format || '');
    });
  }
  render() {
    return /*#__PURE__*/React.createElement(DateLozenge
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    , {
      className: this.props.className,
      onClick: isClickable(this.props) ? this.handleOnClick : undefined,
      color: this.props.color
    }, this.renderContent());
  }
}
_defineProperty(Date, "displayName", 'Date');
_defineProperty(Date, "defaultProps", {
  format: 'dd/MM/yyyy',
  color: 'grey'
});