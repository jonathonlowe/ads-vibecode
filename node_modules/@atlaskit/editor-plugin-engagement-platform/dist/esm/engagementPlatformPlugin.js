import { startMessage } from './editor-actions/startMessage';
import { stopMessage } from './editor-actions/stopMessage';
import { engagementPlatformPmPlugin } from './pm-plugins/engagementPlatformPmPlugin/engagementPlatformPmPlugin';
import { engagementPlatformPmPluginKey } from './pm-plugins/engagementPlatformPmPlugin/engagementPlatformPmPluginKey';
export var engagementPlatformPlugin = function engagementPlatformPlugin(_ref) {
  var config = _ref.config,
    api = _ref.api;
  return {
    name: 'engagementPlatform',
    actions: {
      startMessage: startMessage(api, config.coordinationClient),
      stopMessage: stopMessage(api, config.coordinationClient)
    },
    pmPlugins: function pmPlugins() {
      return [{
        name: 'engagementPlatformPmPlugin',
        plugin: function plugin() {
          return engagementPlatformPmPlugin(config);
        }
      }];
    },
    getSharedState: function getSharedState(editorState) {
      if (!editorState) {
        return undefined;
      }
      return engagementPlatformPmPluginKey.getState(editorState);
    }
  };
};