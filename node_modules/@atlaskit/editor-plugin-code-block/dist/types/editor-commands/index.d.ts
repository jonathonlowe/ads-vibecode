import type { EditorAnalyticsAPI, INPUT_METHOD } from '@atlaskit/editor-common/analytics';
import type { Command } from '@atlaskit/editor-common/types';
import type { EditorState } from '@atlaskit/editor-prosemirror/state';
export declare const removeCodeBlock: Command;
export declare const changeLanguage: (editorAnalyticsAPI: EditorAnalyticsAPI | undefined) => (language: string) => Command;
export declare const copyContentToClipboard: Command;
export declare const resetCopiedState: Command;
export declare const ignoreFollowingMutations: Command;
export declare const resetShouldIgnoreFollowingMutations: Command;
/**
 * This function creates a new transaction that inserts a code block,
 * if there is text selected it will wrap the current selection if not it will
 * append the codeblock to the end of the document.
 */
export declare function createInsertCodeBlockTransaction({ state }: {
    state: EditorState;
}): import("prosemirror-state").Transaction;
export declare function insertCodeBlockWithAnalytics(inputMethod: INPUT_METHOD, analyticsAPI?: EditorAnalyticsAPI): Command;
/**
 * Add the given node to the codeBlockWrappedStates WeakMap with the toggle boolean value.
 */
export declare const toggleWordWrapStateForCodeBlockNode: (editorAnalyticsAPI: EditorAnalyticsAPI | undefined) => Command;
