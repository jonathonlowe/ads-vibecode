import type { IntlShape } from 'react-intl-next';
import { SafePlugin } from '@atlaskit/editor-common/safe-plugin';
import type { ExtractInjectionAPI } from '@atlaskit/editor-common/types';
import type { Node as PMNode } from '@atlaskit/editor-prosemirror/model';
import { DecorationSet } from '@atlaskit/editor-prosemirror/view';
import type { CodeBlockPlugin } from '../index';
import { type CodeBlockState } from './main-state';
export declare const createPlugin: ({ useLongPressSelection, getIntl, allowCompositionInputOverride, api, }: {
    useLongPressSelection?: boolean | undefined;
    getIntl: () => IntlShape;
    allowCompositionInputOverride?: boolean | undefined;
    api?: import("@atlaskit/editor-common/types").EditorInjectionAPI<"codeBlock", {
        pluginConfiguration: import("../types").CodeBlockPluginOptions | undefined;
        dependencies: [import("@atlaskit/editor-common/types").NextEditorPluginFunctionOptionalConfigDefinition<"decorations", {
            sharedState: import("@atlaskit/editor-plugin-decorations").DecorationState;
            actions: {
                hoverDecoration: (nodeType: import("prosemirror-model").NodeType | import("prosemirror-model").NodeType[], add: boolean, className?: string | undefined) => import("@atlaskit/editor-common/types").Command;
                removeDecoration: import("@atlaskit/editor-common/types").Command;
            };
        }, undefined>, import("@atlaskit/editor-common/types").NextEditorPluginFunctionOptionalConfigDefinition<"composition", {
            sharedState: import("@atlaskit/editor-plugin-composition").CompositionState;
        }, undefined>, import("@atlaskit/editor-common/types").OptionalPlugin<import("@atlaskit/editor-common/types").NextEditorPluginFunctionOptionalConfigDefinition<"analytics", {
            pluginConfiguration: import("@atlaskit/editor-plugin-analytics").AnalyticsPluginOptions;
            sharedState: {
                createAnalyticsEvent: import("packages/analytics/analytics-next/dist/types").CreateUIAnalyticsEvent | null;
                attachAnalyticsEvent: import("@atlaskit/editor-plugin-analytics").CreateAttachPayloadIntoTransaction | null;
                performanceTracking: import("@atlaskit/editor-common/types").PerformanceTracking | undefined;
            };
            dependencies: [import("@atlaskit/editor-common/types").OptionalPlugin<import("@atlaskit/editor-common/types").NextEditorPluginFunctionOptionalConfigDefinition<"featureFlags", {
                pluginConfiguration: import("@atlaskit/editor-common/types").FeatureFlags;
                sharedState: import("@atlaskit/editor-common/types").FeatureFlags;
            }, import("@atlaskit/editor-common/types").FeatureFlags>>];
            actions: import("@atlaskit/editor-common/analytics").EditorAnalyticsAPI;
        }, import("@atlaskit/editor-plugin-analytics").AnalyticsPluginOptions>>, import("@atlaskit/editor-common/types").OptionalPlugin<import("@atlaskit/editor-common/types").NextEditorPluginFunctionOptionalConfigDefinition<"editorDisabled", {
            sharedState: import("@atlaskit/editor-plugin-editor-disabled").EditorDisabledPluginState;
        }, undefined>>, import("@atlaskit/editor-common/types").OptionalPlugin<import("@atlaskit/editor-common/types").NextEditorPluginFunctionOptionalConfigDefinition<"featureFlags", {
            pluginConfiguration: import("@atlaskit/editor-common/types").FeatureFlags;
            sharedState: import("@atlaskit/editor-common/types").FeatureFlags;
        }, import("@atlaskit/editor-common/types").FeatureFlags>>];
        sharedState: {
            copyButtonHoverNode: PMNode;
        } | undefined;
        actions: {
            insertCodeBlock: (inputMethod: import("@atlaskit/editor-common/analytics").INPUT_METHOD) => import("@atlaskit/editor-common/types").Command;
        };
    }> | undefined;
    decorations?: DecorationSet | undefined;
}) => SafePlugin<CodeBlockState>;
