import {
  button_base_default,
  getCss,
  getIsOnlySingleIcon,
  useTheme
} from "./chunk-F4C7FX7D.js";
import "./chunk-PCDGTODS.js";
import {
  mergeRefs
} from "./chunk-HDYTRULV.js";
import {
  tooltip_default
} from "./chunk-ZGVEQJNH.js";
import "./chunk-XHPNGOQJ.js";
import "./chunk-IK2BBCJ5.js";
import {
  N200
} from "./chunk-UZBHDBTD.js";
import {
  noop,
  usePlatformLeafEventHandler
} from "./chunk-CVCFKGGR.js";
import "./chunk-IYLTOISH.js";
import "./chunk-WGZLMHA6.js";
import {
  _toConsumableArray
} from "./chunk-UEZMFDUV.js";
import {
  ax,
  cssCustomPropertyValue
} from "./chunk-55ID7ZG3.js";
import "./chunk-FN3H3NMO.js";
import {
  _extends,
  init_extends
} from "./chunk-BA6HJOCH.js";
import {
  _defineProperty,
  _objectWithoutProperties,
  _slicedToArray,
  fg,
  init_defineProperty,
  init_esm,
  init_objectWithoutProperties,
  init_slicedToArray
} from "./chunk-2WJRDDYS.js";
import "./chunk-IYLHYNH2.js";
import "./chunk-4JLRNKH6.js";
import {
  require_react
} from "./chunk-2YZST6ER.js";
import {
  __toESM
} from "./chunk-EWTE5DHJ.js";

// node_modules/@atlaskit/breadcrumbs/dist/esm/components/breadcrumbs.js
init_extends();
init_objectWithoutProperties();
init_defineProperty();
init_slicedToArray();
import "/Users/mjerkovic/Documents/GitHub/ads-vibecode/node_modules/@atlaskit/breadcrumbs/dist/esm/components/breadcrumbs.compiled.css";
var import_react5 = __toESM(require_react());

// node_modules/@atlaskit/breadcrumbs/dist/esm/components/ellipsis-item.js
var React2 = __toESM(require_react());
import "/Users/mjerkovic/Documents/GitHub/ads-vibecode/node_modules/@atlaskit/breadcrumbs/dist/esm/components/ellipsis-item.compiled.css";
var import_react2 = __toESM(require_react());

// node_modules/@atlaskit/button/dist/esm/old-button/button.js
init_extends();
init_slicedToArray();
init_objectWithoutProperties();
var import_react = __toESM(require_react());
var _excluded = ["appearance", "children", "iconBefore", "iconAfter", "isSelected", "onMouseDown", "onMouseUp", "shouldFitContainer", "spacing"];
var isFirefox = typeof navigator !== "undefined" && navigator.userAgent.toLowerCase().indexOf("firefox") > -1;
var Button = import_react.default.memo(import_react.default.forwardRef(function Button2(_ref, ref) {
  var _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? "default" : _ref$appearance, children = _ref.children, iconBefore = _ref.iconBefore, iconAfter = _ref.iconAfter, _ref$isSelected = _ref.isSelected, isSelected = _ref$isSelected === void 0 ? false : _ref$isSelected, _ref$onMouseDown = _ref.onMouseDown, providedOnMouseDown = _ref$onMouseDown === void 0 ? noop : _ref$onMouseDown, _ref$onMouseUp = _ref.onMouseUp, providedOnMouseUp = _ref$onMouseUp === void 0 ? noop : _ref$onMouseUp, _ref$shouldFitContain = _ref.shouldFitContainer, shouldFitContainer = _ref$shouldFitContain === void 0 ? false : _ref$shouldFitContain, _ref$spacing = _ref.spacing, spacing = _ref$spacing === void 0 ? "default" : _ref$spacing, rest = _objectWithoutProperties(_ref, _excluded);
  var _useGlobalTheme = useTheme(), mode = _useGlobalTheme.mode;
  var isOnlySingleIcon = getIsOnlySingleIcon({
    children,
    iconBefore,
    iconAfter
  });
  var _useState = (0, import_react.useState)(false), _useState2 = _slicedToArray(_useState, 2), isActive = _useState2[0], setIsActive = _useState2[1];
  var onMouseDown = (0, import_react.useCallback)(function(event) {
    providedOnMouseDown(event);
    if (isFirefox) {
      setIsActive(true);
    }
  }, [providedOnMouseDown, setIsActive]);
  var onMouseUp = (0, import_react.useCallback)(function(event) {
    providedOnMouseUp(event);
    if (isFirefox) {
      setIsActive(false);
    }
  }, [providedOnMouseUp, setIsActive]);
  var buttonCss = (0, import_react.useMemo)(function() {
    return getCss({
      appearance,
      spacing,
      mode,
      isSelected,
      shouldFitContainer,
      isOnlySingleIcon
    });
  }, [appearance, spacing, mode, isSelected, shouldFitContainer, isOnlySingleIcon]);
  return import_react.default.createElement(button_base_default, _extends({}, rest, {
    ref,
    appearance,
    buttonCss,
    children,
    "data-firefox-is-active": isActive ? true : void 0,
    iconAfter,
    iconBefore,
    isSelected,
    onMouseDown,
    onMouseUp,
    spacing
  }));
}));
Button.displayName = "Button";
var button_default = Button;

// node_modules/@atlaskit/breadcrumbs/dist/esm/components/ellipsis-item.js
var noop2 = noop;
var EllipsisItem = (0, import_react2.memo)(function(_ref) {
  var label = _ref.label, _ref$onClick = _ref.onClick, onClick = _ref$onClick === void 0 ? noop2 : _ref$onClick, testId = _ref.testId;
  return React2.createElement("li", {
    className: ax(["_1e0c1txw _vchhusvi _p12f1osq _4t3i59ms _2lx2vrvc _6rthze3t _1pfhze3t _12l2ze3t _ahbqze3t _85i5ze3t _1q51ze3t _y4tize3t _bozgze3t _5nddv77o _1j1pu2gc _1dsou2gc _toskidpf _15621n76 _191d1h6o"]),
    style: {
      "--_1fdrbou": cssCustomPropertyValue("".concat(24 / 14, "em"))
    }
  }, React2.createElement(button_default, {
    appearance: "subtle-link",
    "aria-label": label,
    onClick,
    spacing: "none",
    testId,
    className: ax(["_1rjc1raa _k48p13dq _vwz41txs"]),
    style: {
      "--_ymfj9u": cssCustomPropertyValue("var(--ds-font-weight-regular, 400)".concat(" !important")),
      "--_lugd7d": cssCustomPropertyValue("var(--ds-space-025, 2px)".concat(" !important"))
    }
  }, "â€¦"));
});
var ellipsis_item_default = EllipsisItem;

// node_modules/@atlaskit/breadcrumbs/dist/esm/components/internal/use-on-revealed.js
var import_react4 = __toESM(require_react());

// node_modules/@atlaskit/ds-lib/dist/esm/hooks/use-previous-value.js
var import_react3 = __toESM(require_react());
function usePreviousValue(value) {
  var ref = (0, import_react3.useRef)();
  (0, import_react3.useEffect)(function() {
    ref.current = value;
  }, [value]);
  return ref.current;
}

// node_modules/@atlaskit/breadcrumbs/dist/esm/components/internal/use-on-revealed.js
function useOnRevealed(callback, _ref) {
  var isExpanded = _ref.isExpanded, isDisabled = _ref.isDisabled;
  var prevExtended = usePreviousValue(isExpanded);
  (0, import_react4.useEffect)(function() {
    var hasBeenRevealed = !prevExtended && isExpanded;
    if (!isDisabled && hasBeenRevealed) {
      callback();
    }
  }, [isExpanded, isDisabled, callback, prevExtended]);
}

// node_modules/@atlaskit/breadcrumbs/dist/esm/components/breadcrumbs.js
var _excluded2 = ["analyticsContext", "children", "createAnalyticsEvent", "defaultExpanded", "ellipsisLabel", "isExpanded", "itemsAfterCollapse", "itemsBeforeCollapse", "label", "maxItems", "onExpand", "testId"];
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var defaultMaxItems = 8;
var defaultBreadcrumbsLabel = "Breadcrumbs";
var defaultEllipsisLabel = "Show more breadcrumbs";
var toArray = import_react5.default.Children.toArray;
var analyticsAttributes = {
  componentName: "breadcrumbs",
  packageName: "@atlaskit/breadcrumbs",
  packageVersion: "15.1.0"
};
var noop3 = noop;
var interactiveElementSelector = 'a, button, [tabindex]:not([tabindex="-1"])';
var InnerBreadcrumbs = (0, import_react5.forwardRef)(function(props, ref) {
  var _props$defaultExpande = props.defaultExpanded, defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande, isExpanded = props.isExpanded, _props$maxItems = props.maxItems, maxItems = _props$maxItems === void 0 ? defaultMaxItems : _props$maxItems, _props$itemsBeforeCol = props.itemsBeforeCollapse, itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol, _props$itemsAfterColl = props.itemsAfterCollapse, itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl, _props$children = props.children, children = _props$children === void 0 ? [] : _props$children, testId = props.testId, _props$onExpand = props.onExpand, providedExpanse = _props$onExpand === void 0 ? noop3 : _props$onExpand, analyticsContext = props.analyticsContext, _props$label = props.label, label = _props$label === void 0 ? defaultBreadcrumbsLabel : _props$label, _props$ellipsisLabel = props.ellipsisLabel, ellipsisLabel = _props$ellipsisLabel === void 0 ? defaultEllipsisLabel : _props$ellipsisLabel;
  var _useState = (0, import_react5.useState)(defaultExpanded), _useState2 = _slicedToArray(_useState, 2), expanded = _useState2[0], setExpanse = _useState2[1];
  var _useState3 = (0, import_react5.useState)(false), _useState4 = _slicedToArray(_useState3, 2), isClickedBySpace = _useState4[0], setExpansionTrigger = _useState4[1];
  var wrapperRef = (0, import_react5.useRef)(null);
  var isControlled = typeof isExpanded !== "undefined";
  var isExpansionHandled = providedExpanse !== noop3;
  var shouldExpand = isControlled ? isExpanded : expanded;
  var focusFirstRevealed = function focusFirstRevealed2() {
    if (wrapperRef.current) {
      var listItems = Array.from(wrapperRef.current.querySelectorAll("li"));
      var interactiveElements = listItems.map(function(li) {
        return li.querySelector(interactiveElementSelector);
      });
      var elementToFocus = interactiveElements[itemsBeforeCollapse];
      var firstInteractiveElement = interactiveElements[0];
      if (elementToFocus) {
        elementToFocus.focus && elementToFocus.focus();
      } else if (firstInteractiveElement) {
        firstInteractiveElement.focus && firstInteractiveElement.focus();
      } else {
        wrapperRef.current.focus();
      }
    }
    setExpansionTrigger(false);
  };
  useOnRevealed(focusFirstRevealed, {
    isExpanded: shouldExpand,
    isDisabled: !isClickedBySpace
  });
  var handleExpansion = usePlatformLeafEventHandler(_objectSpread({
    fn: function fn(event, analyticsEvent) {
      if (!isControlled) {
        setExpanse(function(expanded2) {
          return !expanded2;
        });
      }
      if (isExpansionHandled && isControlled || !isControlled) {
        setExpansionTrigger(event.target === document.activeElement);
      }
      return providedExpanse(event, analyticsEvent);
    },
    action: "expanded",
    analyticsData: analyticsContext
  }, analyticsAttributes));
  var childrenArray = toArray(children);
  var breadcrumbsArray = import_react5.default.Children.map(childrenArray, function(child, index) {
    if (typeof child === "string") {
      return child;
    }
    return childrenArray.length - 1 === index ? (
      // eslint-disable-next-line @repo/internal/react/no-clone-element
      import_react5.default.cloneElement(child, {
        "aria-current": "page"
      })
    ) : child;
  });
  var renderItemsWithEllipsis = function renderItemsWithEllipsis2() {
    var allItems = breadcrumbsArray;
    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {
      return allItems;
    }
    var beforeItems = allItems.slice(0, itemsBeforeCollapse);
    var afterItems = allItems.slice(allItems.length - itemsAfterCollapse, allItems.length);
    return [].concat(_toConsumableArray(beforeItems), [import_react5.default.createElement(ellipsis_item_default, {
      key: "ellipsis",
      testId: testId && "".concat(testId, "--breadcrumb-ellipsis"),
      onClick: handleExpansion,
      label: ellipsisLabel
    })], _toConsumableArray(afterItems));
  };
  var shouldDisplayItems = shouldExpand || maxItems && breadcrumbsArray.length <= maxItems;
  var breadcrumbsItems = shouldDisplayItems ? breadcrumbsArray : renderItemsWithEllipsis();
  return import_react5.default.createElement("nav", {
    "aria-label": label,
    ref: mergeRefs([ref, wrapperRef]),
    tabIndex: -1
  }, import_react5.default.createElement("ol", {
    "data-testid": testId,
    className: ax(["_1e0c1txw _1n261g80 _syazpsu8 _6rthze3t _1pfhze3t _12l2ze3t _ahbqze3t _85i5ze3t _1q51ze3t _y4tize3t _bozgze3t"]),
    style: {
      "--_vrm7dk": cssCustomPropertyValue("var(--ds-text-subtlest, ".concat(N200, ")"))
    }
  }, breadcrumbsItems));
});
var Breadcrumbs = (0, import_react5.memo)((0, import_react5.forwardRef)(function(_ref, ref) {
  var analyticsContext = _ref.analyticsContext, children = _ref.children, createAnalyticsEvent = _ref.createAnalyticsEvent, defaultExpanded = _ref.defaultExpanded, ellipsisLabel = _ref.ellipsisLabel, isExpanded = _ref.isExpanded, itemsAfterCollapse = _ref.itemsAfterCollapse, itemsBeforeCollapse = _ref.itemsBeforeCollapse, label = _ref.label, maxItems = _ref.maxItems, onExpand = _ref.onExpand, testId = _ref.testId, props = _objectWithoutProperties(_ref, _excluded2);
  return import_react5.default.createElement(InnerBreadcrumbs, _extends({}, props, {
    analyticsContext,
    children,
    createAnalyticsEvent,
    defaultExpanded,
    ellipsisLabel,
    isExpanded,
    itemsAfterCollapse,
    itemsBeforeCollapse,
    label,
    maxItems,
    onExpand,
    ref,
    testId
  }));
}));
var breadcrumbs_default = Breadcrumbs;

// node_modules/@atlaskit/breadcrumbs/dist/esm/components/breadcrumbs-item.js
init_extends();
init_defineProperty();
init_slicedToArray();
init_objectWithoutProperties();
var React5 = __toESM(require_react());
import "/Users/mjerkovic/Documents/GitHub/ads-vibecode/node_modules/@atlaskit/breadcrumbs/dist/esm/components/breadcrumbs-item.compiled.css";
var import_react8 = __toESM(require_react());

// node_modules/@atlaskit/breadcrumbs/dist/esm/components/internal/step.js
init_extends();
init_defineProperty();
init_objectWithoutProperties();
var import_react6 = __toESM(require_react());
var _excluded3 = ["analyticsContext", "component", "hasOverflow", "href", "iconAfter", "iconBefore", "onClick", "target", "testId"];
function ownKeys2(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys2(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys2(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var analyticsAttributes2 = {
  componentName: "breadcrumbsItem",
  packageName: "@atlaskit/breadcrumbs",
  packageVersion: "15.1.0"
};
var noop4 = noop;
var Step = import_react6.default.forwardRef(function(_ref, ref) {
  var analyticsContext = _ref.analyticsContext, component = _ref.component, _ref$hasOverflow = _ref.hasOverflow, hasOverflow = _ref$hasOverflow === void 0 ? true : _ref$hasOverflow, _ref$href = _ref.href, href = _ref$href === void 0 ? "#" : _ref$href, iconAfter = _ref.iconAfter, iconBefore = _ref.iconBefore, _ref$onClick = _ref.onClick, onClickProvided = _ref$onClick === void 0 ? noop4 : _ref$onClick, target = _ref.target, testId = _ref.testId, props = _objectWithoutProperties(_ref, _excluded3);
  var handleClicked = usePlatformLeafEventHandler(_objectSpread2({
    fn: onClickProvided,
    action: "clicked",
    analyticsData: analyticsContext
  }, analyticsAttributes2));
  return import_react6.default.createElement(button_default, _extends({}, props, {
    appearance: "subtle-link",
    component,
    href,
    iconAfter: hasOverflow ? void 0 : iconAfter,
    iconBefore: hasOverflow ? void 0 : iconBefore,
    onClick: handleClicked,
    ref,
    spacing: "none",
    target,
    testId
  }));
});
var step_default = Step;

// node_modules/@atlaskit/breadcrumbs/dist/esm/components/internal/use-overflowable.js
init_slicedToArray();
var import_react7 = __toESM(require_react());
init_esm();
function useOverflowable(truncationWidth, buttonRefCurrent, iconWidthAllowance) {
  var shouldCheckWidth = truncationWidth && buttonRefCurrent;
  var _useState = (0, import_react7.useState)(fg("platform_fix_unnessesary_re-renders_in_breadcrumbs") ? Boolean(shouldCheckWidth) : true), _useState2 = _slicedToArray(_useState, 2), hasOverflow = _useState2[0], setOverflow = _useState2[1];
  var _useState3 = (0, import_react7.useState)(false), _useState4 = _slicedToArray(_useState3, 2), showTooltip = _useState4[0], setShowTooltip = _useState4[1];
  (0, import_react7.useEffect)(function() {
    if (shouldCheckWidth) {
      var shouldOverflow = buttonRefCurrent.clientWidth + iconWidthAllowance > truncationWidth;
      var shouldShowTooltip = buttonRefCurrent.clientWidth + iconWidthAllowance >= truncationWidth;
      setOverflow(shouldOverflow);
      setShowTooltip(shouldShowTooltip);
    } else {
      setOverflow(false);
      setShowTooltip(false);
    }
  }, [truncationWidth, buttonRefCurrent, iconWidthAllowance, shouldCheckWidth]);
  return [hasOverflow, showTooltip];
}

// node_modules/@atlaskit/breadcrumbs/dist/esm/components/breadcrumbs-item.js
var _excluded4 = ["analyticsContext", "component", "href", "iconAfter", "iconBefore", "onClick", "onTooltipShown", "ref", "target", "testId", "text", "truncationWidth"];
function ownKeys3(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread3(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys3(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys3(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var VAR_STEP_TRUNCATION_WIDTH = "--max-width";
var ICON_WIDTH_ESTIMATE = 24;
var BreadcrumbsItem = (0, import_react8.memo)(function(_ref) {
  var analyticsContext = _ref.analyticsContext, component = _ref.component, href = _ref.href, iconAfter = _ref.iconAfter, iconBefore = _ref.iconBefore, onClick = _ref.onClick, onTooltipShown = _ref.onTooltipShown, ref = _ref.ref, target = _ref.target, testId = _ref.testId, text = _ref.text, truncationWidth = _ref.truncationWidth, rest = _objectWithoutProperties(_ref, _excluded4);
  var buttonRef = (0, import_react8.useRef)(null);
  var iconWidthAllowance = 0;
  if (iconBefore) {
    iconWidthAllowance += ICON_WIDTH_ESTIMATE;
  }
  if (iconAfter) {
    iconWidthAllowance += ICON_WIDTH_ESTIMATE;
  }
  var _useOverflowable = useOverflowable(truncationWidth, buttonRef.current, iconWidthAllowance), _useOverflowable2 = _slicedToArray(_useOverflowable, 2), hasOverflow = _useOverflowable2[0], showTooltip = _useOverflowable2[1];
  var dynamicItemStyles = _defineProperty({}, VAR_STEP_TRUNCATION_WIDTH, typeof truncationWidth !== "undefined" && "".concat(truncationWidth, "px"));
  var step = React5.createElement(step_default, _extends({}, rest, {
    analyticsContext,
    component,
    hasOverflow,
    href,
    iconAfter,
    iconBefore,
    onClick,
    ref: buttonRef,
    target,
    testId,
    className: ax(["_1rjc1raa _k48p13dq _vwz41txs", truncationWidth ? "_p12f1pis" : "_1ul9grf3 _1o9zzg3v"]),
    style: _objectSpread3(_objectSpread3({}, truncationWidth ? dynamicItemStyles : void 0), {}, {
      "--_ymfj9u": cssCustomPropertyValue("var(--ds-font-weight-regular, 400)".concat(" !important")),
      "--_lugd7d": cssCustomPropertyValue("var(--ds-space-025, 2px)".concat(" !important")),
      "--_1fteikb": cssCustomPropertyValue("var(".concat(VAR_STEP_TRUNCATION_WIDTH, ") !important"))
    })
  }), text);
  return React5.createElement("li", {
    className: ax(["_1e0c1txw _vchhusvi _p12f1osq _4t3i59ms _2lx2vrvc _ect41gqc _6rthze3t _1pfhze3t _12l2ze3t _ahbqze3t _85i5ze3t _1q51ze3t _y4tize3t _bozgze3t _5nddv77o _1j1pu2gc _1dsoftgi _toskidpf _15621n76 _191d1h6o"]),
    style: {
      "--_1fdrbou": cssCustomPropertyValue("".concat(24 / 14, "em"))
    }
  }, showTooltip ? React5.createElement(tooltip_default, {
    content: text,
    position: "bottom",
    onShow: onTooltipShown
  }, step) : step);
});
var breadcrumbs_item_default = BreadcrumbsItem;
export {
  breadcrumbs_item_default as BreadcrumbsItem,
  breadcrumbs_default as default
};
//# sourceMappingURL=@atlaskit_breadcrumbs.js.map
