{
  "version": 3,
  "sources": ["../../@atlaskit/icon/dist/esm/components/icon-tile.js", "../../@atlaskit/icon/dist/esm/index.js", "../../@atlaskit/icon/dist/esm/components/skeleton.js"],
  "sourcesContent": ["/**\n * @jsxRuntime classic\n * @jsx jsx\n */\n\n// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766\nimport { css, jsx } from '@emotion/react';\nimport { fg } from '@atlaskit/platform-feature-flags';\nvar sizeMap = {\n  '16': css({\n    width: '16px',\n    height: '16px'\n  }),\n  '24': css({\n    width: '24px',\n    height: '24px'\n  }),\n  '32': css({\n    width: '32px',\n    height: '32px'\n  }),\n  '40': css({\n    width: '40px',\n    height: '40px'\n  }),\n  '48': css({\n    width: '48px',\n    height: '48px'\n  })\n};\nvar appearanceMap = {\n  grayBold: css({\n    backgroundColor: \"var(--ds-background-accent-gray-bolder, #626F86)\",\n    color: \"var(--ds-icon-inverse, #FFFFFF)\"\n  }),\n  limeBold: css({\n    backgroundColor: \"var(--ds-background-accent-lime-bolder, #5B7F24)\",\n    color: \"var(--ds-icon-inverse, #FFFFFF)\"\n  }),\n  greenBold: css({\n    backgroundColor: \"var(--ds-background-accent-green-bolder, #1F845A)\",\n    color: \"var(--ds-icon-inverse, #FFFFFF)\"\n  }),\n  blueBold: css({\n    backgroundColor: \"var(--ds-background-accent-blue-bolder, #0C66E4)\",\n    color: \"var(--ds-icon-inverse, #FFFFFF)\"\n  }),\n  redBold: css({\n    backgroundColor: \"var(--ds-background-accent-red-bolder, #C9372C)\",\n    color: \"var(--ds-icon-inverse, #FFFFFF)\"\n  }),\n  purpleBold: css({\n    backgroundColor: \"var(--ds-background-accent-purple-bolder, #6E5DC6)\",\n    color: \"var(--ds-icon-inverse, #FFFFFF)\"\n  }),\n  magentaBold: css({\n    backgroundColor: \"var(--ds-background-accent-magenta-bolder, #AE4787)\",\n    color: \"var(--ds-icon-inverse, #FFFFFF)\"\n  }),\n  tealBold: css({\n    backgroundColor: \"var(--ds-background-accent-teal-bolder, #227D9B)\",\n    color: \"var(--ds-icon-inverse, #FFFFFF)\"\n  }),\n  orangeBold: css({\n    backgroundColor: \"var(--ds-background-accent-orange-bolder, #C25100)\",\n    color: \"var(--ds-icon-inverse, #FFFFFF)\"\n  }),\n  yellowBold: css({\n    backgroundColor: \"var(--ds-background-accent-yellow-bolder, #946F00)\",\n    color: \"var(--ds-icon-inverse, #FFFFFF)\"\n  }),\n  gray: css({\n    backgroundColor: \"var(--ds-background-accent-gray-subtler, #DCDFE4)\",\n    color: \"var(--ds-icon-accent-gray, #758195)\"\n  }),\n  lime: css({\n    backgroundColor: \"var(--ds-background-accent-lime-subtler, #D3F1A7)\",\n    color: \"var(--ds-icon-accent-lime, #6A9A23)\"\n  }),\n  orange: css({\n    backgroundColor: \"var(--ds-background-accent-orange-subtler, #FEDEC8)\",\n    color: \"var(--ds-icon-accent-orange, #E56910)\"\n  }),\n  magenta: css({\n    backgroundColor: \"var(--ds-background-accent-magenta-subtler, #FDD0EC)\",\n    color: \"var(--ds-icon-accent-magenta, #CD519D)\"\n  }),\n  green: css({\n    backgroundColor: \"var(--ds-background-accent-green-subtler, #BAF3DB)\",\n    color: \"var(--ds-icon-accent-green, #22A06B)\"\n  }),\n  blue: css({\n    backgroundColor: \"var(--ds-background-accent-blue-subtler, #CCE0FF)\",\n    color: \"var(--ds-icon-accent-blue, #1D7AFC)\"\n  }),\n  red: css({\n    backgroundColor: \"var(--ds-background-accent-red-subtler, #FFD5D2)\",\n    color: \"var(--ds-icon-accent-red, #C9372C)\"\n  }),\n  purple: css({\n    backgroundColor: \"var(--ds-background-accent-purple-subtler, #DFD8FD)\",\n    color: \"var(--ds-icon-accent-purple, #8270DB)\"\n  }),\n  teal: css({\n    backgroundColor: \"var(--ds-background-accent-teal-subtler, #C6EDFB)\",\n    color: \"var(--ds-icon-accent-teal, #2898BD)\"\n  }),\n  yellow: css({\n    backgroundColor: \"var(--ds-background-accent-yellow-subtler, #F8E6A0)\",\n    color: \"var(--ds-icon-accent-yellow, #B38600)\"\n  })\n};\nvar shapeMap = {\n  square: css({\n    borderRadius: \"var(--ds-border-radius-100, 4px)\"\n  }),\n  circle: css({\n    borderRadius: \"var(--ds-border-radius-circle, 32032px)\"\n  })\n};\nvar iconTileStyles = css({\n  display: 'inline-flex',\n  boxSizing: 'border-box',\n  alignItems: 'center',\n  justifyContent: 'center',\n  // eslint-disable-next-line @atlaskit/design-system/use-tokens-typography\n  fontSize: 0 /* Prevents parent font-size from affecting the container */\n});\n\n/**\n * __IconTile__ -- ⚠️ Experimental ⚠️\n *\n * An icon tile is used to present an icon with a background color.\n * Icon tiles, unlike standard icons, can scale up and down to provide greater emphasis.\n *\n * This component is currently in an experimental state and is subject to change in minor or patch releases.\n *\n */\nexport default function IconTile(props) {\n  var Icon = props.icon,\n    label = props.label,\n    appearance = props.appearance,\n    _props$size = props.size,\n    size = _props$size === void 0 ? '24' : _props$size,\n    _props$shape = props.shape,\n    shape = _props$shape === void 0 ? 'square' : _props$shape,\n    LEGACY_fallbackComponent = props.LEGACY_fallbackComponent,\n    testId = props.testId;\n  var ExpandedIcon = Icon;\n  if (LEGACY_fallbackComponent && !fg('platform-visual-refresh-icons')) {\n    return LEGACY_fallbackComponent;\n  } else {\n    return jsx(\"span\", {\n      \"data-testid\": testId,\n      css: [iconTileStyles, appearanceMap[appearance], sizeMap[size], shapeMap[shape]]\n    }, jsx(ExpandedIcon, {\n      color: \"currentColor\",\n      label: label,\n      spacing: \"spacious\",\n      shouldScale: true\n    }));\n  }\n}", "export { default } from './components/icon';\nexport { default as IconNew } from './components/icon-new';\nexport { default as SVG } from './components/svg';\nexport { sizeMap as size, sizes } from './constants';\nexport { default as Skeleton } from './components/skeleton';\nexport { default as IconTile } from './components/icon-tile';", "/**\n * @jsxRuntime classic\n * @jsx jsx\n */\n// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766\nimport { css, jsx } from '@emotion/react';\nimport { memo } from 'react';\nimport { sizeStyleMap } from './styles';\nvar skeletonStyles = css({\n  display: 'inline-block',\n  borderRadius: \"var(--ds-border-radius-circle, 50%)\"\n});\nvar subtleOpacityStyles = css({\n  opacity: 0.15\n});\nvar strongOpacityStyles = css({\n  opacity: 0.3\n});\n\n/**\n * __Skeleton__\n */\nvar Skeleton = /*#__PURE__*/memo(function Skeleton(_ref) {\n  var testId = _ref.testId,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 'medium' : _ref$size,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n    _ref$weight = _ref.weight,\n    weight = _ref$weight === void 0 ? 'normal' : _ref$weight;\n  return jsx(\"div\", {\n    \"data-testid\": testId,\n    style: {\n      backgroundColor: color\n    },\n    css: [skeletonStyles, weight === 'strong' ? strongOpacityStyles : subtleOpacityStyles,\n    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766\n    sizeStyleMap[size]]\n  });\n});\nexport default Skeleton;"],
  "mappings": "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",
  "names": ["import_react", "Skeleton"]
}
