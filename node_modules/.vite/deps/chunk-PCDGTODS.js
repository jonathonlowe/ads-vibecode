import {
  ClassNames,
  css,
  init_emotion_react_browser_development_esm,
  jsx
} from "./chunk-FN3H3NMO.js";
import {
  init_slicedToArray
} from "./chunk-2WJRDDYS.js";
import {
  require_react
} from "./chunk-2YZST6ER.js";
import {
  __toESM
} from "./chunk-EWTE5DHJ.js";

// node_modules/@atlaskit/focus-ring/dist/esm/focus-ring.js
var import_react = __toESM(require_react());
init_emotion_react_browser_development_esm();
var BORDER_WIDTH = 2;
var baseFocusOutsideStyles = css({
  outline: "".concat(BORDER_WIDTH, "px solid ", "var(--ds-border-focused, #2684FF)"),
  outlineOffset: BORDER_WIDTH
});
var baseInsetStyles = css({
  outlineColor: "var(--ds-border-focused, #2684FF)",
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  outlineOffset: -BORDER_WIDTH,
  outlineStyle: "solid",
  outlineWidth: "var(--ds-border-width-outline, 2px)"
});
var focusRingStyles = css({
  // Focus styles used when :focus-visible isn't supported
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values
  "&:focus": baseFocusOutsideStyles,
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values
  "&:focus-visible": baseFocusOutsideStyles,
  // Remove default focus styles for mouse interactions if :focus-visible is supported
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors
  "&:focus:not(:focus-visible)": {
    outline: "none"
  },
  "@media screen and (forced-colors: active), screen and (-ms-high-contrast: active)": {
    "&:focus-visible": {
      outline: "1px solid"
    }
  }
});
var insetFocusRingStyles = css({
  // Focus styles used when :focus-visible isn't supported
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values
  "&:focus": baseInsetStyles,
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values
  "&:focus-visible": baseInsetStyles,
  // Remove default focus styles for mouse interactions if :focus-visible is supported
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors
  "&:focus:not(:focus-visible)": {
    outline: "none"
  },
  "@media screen and (forced-colors: active), screen and (-ms-high-contrast: active)": {
    "&:focus-visible": {
      outline: "1px solid",
      // eslint-disable-next-line @atlaskit/design-system/use-tokens-space
      outlineOffset: "-1px"
    }
  }
});
var FocusRing = (0, import_react.memo)(function(_ref) {
  var children = _ref.children, isInset = _ref.isInset, focus = _ref.focus;
  var controlledStyles = isInset ? baseInsetStyles : baseFocusOutsideStyles;
  var uncontrolledStyles = isInset ? insetFocusRingStyles : focusRingStyles;
  var focusCls = typeof focus === "undefined" ? uncontrolledStyles : focus === "on" && controlledStyles;
  return jsx(ClassNames, null, function(_ref2) {
    var css2 = _ref2.css, cx = _ref2.cx;
    return import_react.Children.only(
      // This may look unwieldy but means we skip applying styles / cloning if no className is applicable
      focusCls ? (
        // eslint-disable-next-line @repo/internal/react/no-clone-element
        (0, import_react.cloneElement)(children, {
          className: cx([css2(focusCls), children.props.className])
        })
      ) : children
    );
  });
});
FocusRing.displayName = "FocusRing";
var focus_ring_default = FocusRing;

// node_modules/@atlaskit/focus-ring/dist/esm/use-focus-ring.js
init_slicedToArray();
var import_react3 = __toESM(require_react());

export {
  focus_ring_default
};
//# sourceMappingURL=chunk-PCDGTODS.js.map
