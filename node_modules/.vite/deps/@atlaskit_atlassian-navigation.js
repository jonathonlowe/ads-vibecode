import {
  require_throttle
} from "./chunk-4SX7ZGJ4.js";
import {
  esm_default,
  require_chevron_down,
  require_chevron_down2
} from "./chunk-4WHAOU6A.js";
import {
  button_base_default,
  createTheme,
  getCss,
  getIsOnlySingleIcon,
  theme_default
} from "./chunk-F4C7FX7D.js";
import "./chunk-PCDGTODS.js";
import {
  base_exports,
  base_new_exports,
  init_base,
  init_base_new
} from "./chunk-C5UHE4AN.js";
import {
  spinner_default
} from "./chunk-CGJXAQPS.js";
import {
  tooltip_default
} from "./chunk-ZGVEQJNH.js";
import "./chunk-XHPNGOQJ.js";
import "./chunk-HQP6RSCY.js";
import "./chunk-FYOGWMFM.js";
import "./chunk-SYD3CLUV.js";
import "./chunk-RUVWD2PF.js";
import "./chunk-IK2BBCJ5.js";
import {
  B200,
  B400,
  B50,
  N0,
  N100,
  N20,
  N200,
  N30,
  N600,
  N700
} from "./chunk-UZBHDBTD.js";
import {
  AnalyticsContext_default,
  noop
} from "./chunk-CVCFKGGR.js";
import "./chunk-IYLTOISH.js";
import "./chunk-WGZLMHA6.js";
import {
  _toConsumableArray
} from "./chunk-UEZMFDUV.js";
import "./chunk-55ID7ZG3.js";
import {
  css,
  init_emotion_react_browser_development_esm,
  jsx
} from "./chunk-FN3H3NMO.js";
import {
  _extends,
  init_extends
} from "./chunk-BA6HJOCH.js";
import {
  _classCallCheck,
  _createClass,
  _defineProperty,
  _getPrototypeOf,
  _inherits,
  _objectWithoutProperties,
  _possibleConstructorReturn,
  _slicedToArray,
  fg,
  init_classCallCheck,
  init_createClass,
  init_defineProperty,
  init_esm,
  init_getPrototypeOf,
  init_inherits,
  init_objectWithoutProperties,
  init_possibleConstructorReturn,
  init_slicedToArray
} from "./chunk-2WJRDDYS.js";
import "./chunk-IYLHYNH2.js";
import "./chunk-4JLRNKH6.js";
import {
  require_react
} from "./chunk-2YZST6ER.js";
import {
  __commonJS,
  __toCommonJS,
  __toESM
} from "./chunk-EWTE5DHJ.js";

// node_modules/@atlaskit/icon/core/app-switcher.js
var require_app_switcher = __commonJS({
  "node_modules/@atlaskit/icon/core/app-switcher.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var AppSwitcherIcon2 = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M1 3a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2zm2-.5a.5.5 0 0 0-.5.5v2a.5.5 0 0 0 .5.5h2a.5.5 0 0 0 .5-.5V3a.5.5 0 0 0-.5-.5zM9 3a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2zm2-.5a.5.5 0 0 0-.5.5v2a.5.5 0 0 0 .5.5h2a.5.5 0 0 0 .5-.5V3a.5.5 0 0 0-.5-.5zM1 11a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2zm2-.5a.5.5 0 0 0-.5.5v2a.5.5 0 0 0 .5.5h2a.5.5 0 0 0 .5-.5v-2a.5.5 0 0 0-.5-.5zm6 .5a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2zm2-.5a.5.5 0 0 0-.5.5v2a.5.5 0 0 0 .5.5h2a.5.5 0 0 0 .5-.5v-2a.5.5 0 0 0-.5-.5z" clip-rule="evenodd"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    AppSwitcherIcon2.displayName = "AppSwitcherIcon";
    var _default = exports.default = AppSwitcherIcon2;
  }
});

// node_modules/@atlaskit/icon/glyph/app-switcher.js
var require_app_switcher2 = __commonJS({
  "node_modules/@atlaskit/icon/glyph/app-switcher.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _base = (init_base(), __toCommonJS(base_exports));
    var _appSwitcher = _interopRequireDefault(require_app_switcher());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var AppSwitcherIcon2 = (props) => _react.default.createElement(_base.IconFacade, Object.assign({
      dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><path fill="currentcolor" fill-rule="evenodd" d="M4 5.01C4 4.451 4.443 4 5.01 4h1.98C7.549 4 8 4.443 8 5.01v1.98C8 7.549 7.557 8 6.99 8H5.01C4.451 8 4 7.557 4 6.99zm0 6c0-.558.443-1.01 1.01-1.01h1.98c.558 0 1.01.443 1.01 1.01v1.98C8 13.549 7.557 14 6.99 14H5.01C4.451 14 4 13.557 4 12.99zm6-6c0-.558.443-1.01 1.01-1.01h1.98c.558 0 1.01.443 1.01 1.01v1.98C14 7.549 13.557 8 12.99 8h-1.98C10.451 8 10 7.557 10 6.99zm0 6c0-.558.443-1.01 1.01-1.01h1.98c.558 0 1.01.443 1.01 1.01v1.98c0 .558-.443 1.01-1.01 1.01h-1.98c-.558 0-1.01-.443-1.01-1.01zm6-6c0-.558.443-1.01 1.01-1.01h1.98c.558 0 1.01.443 1.01 1.01v1.98C20 7.549 19.557 8 18.99 8h-1.98C16.451 8 16 7.557 16 6.99zm0 6c0-.558.443-1.01 1.01-1.01h1.98c.558 0 1.01.443 1.01 1.01v1.98c0 .558-.443 1.01-1.01 1.01h-1.98c-.558 0-1.01-.443-1.01-1.01zm-12 6c0-.558.443-1.01 1.01-1.01h1.98c.558 0 1.01.443 1.01 1.01v1.98C8 19.549 7.557 20 6.99 20H5.01C4.451 20 4 19.557 4 18.99zm6 0c0-.558.443-1.01 1.01-1.01h1.98c.558 0 1.01.443 1.01 1.01v1.98c0 .558-.443 1.01-1.01 1.01h-1.98c-.558 0-1.01-.443-1.01-1.01zm6 0c0-.558.443-1.01 1.01-1.01h1.98c.558 0 1.01.443 1.01 1.01v1.98c0 .558-.443 1.01-1.01 1.01h-1.98c-.558 0-1.01-.443-1.01-1.01z"/></svg>`
    }, props, {
      newIcon: _appSwitcher.default
    }));
    AppSwitcherIcon2.displayName = "AppSwitcherIcon";
    var _default = exports.default = AppSwitcherIcon2;
  }
});

// node_modules/@atlaskit/icon/core/migration/app-switcher.js
var require_app_switcher3 = __commonJS({
  "node_modules/@atlaskit/icon/core/migration/app-switcher.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _appSwitcher = _interopRequireDefault(require_app_switcher());
    var _appSwitcher2 = _interopRequireDefault(require_app_switcher2());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var AppSwitcherIcon2 = (props) => _react.default.createElement(_appSwitcher.default, Object.assign({
      LEGACY_fallbackIcon: _appSwitcher2.default
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    AppSwitcherIcon2.Name = "AppSwitcherIconMigration";
    var _default = exports.default = AppSwitcherIcon2;
  }
});

// node_modules/@atlaskit/icon/core/add.js
var require_add = __commonJS({
  "node_modules/@atlaskit/icon/core/add.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var AddIcon2 = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M7.25 8.75V15h1.5V8.75H15v-1.5H8.75V1h-1.5v6.25H1v1.5z" clip-rule="evenodd"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    AddIcon2.displayName = "AddIcon";
    var _default = exports.default = AddIcon2;
  }
});

// node_modules/@atlaskit/icon/glyph/editor/add.js
var require_add2 = __commonJS({
  "node_modules/@atlaskit/icon/glyph/editor/add.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _base = (init_base(), __toCommonJS(base_exports));
    var _add = _interopRequireDefault(require_add());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var EditorAddIcon = (props) => _react.default.createElement(_base.IconFacade, Object.assign({
      dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><path fill="currentcolor" fill-rule="evenodd" d="M13 11V7a1 1 0 0 0-2 0v4H7a1 1 0 0 0 0 2h4v4a1 1 0 0 0 2 0v-4h4a1 1 0 0 0 0-2z"/></svg>`
    }, props, {
      newIcon: _add.default
    }));
    EditorAddIcon.displayName = "EditorAddIcon";
    var _default = exports.default = EditorAddIcon;
  }
});

// node_modules/@atlaskit/icon/core/migration/add--editor-add.js
var require_add_editor_add = __commonJS({
  "node_modules/@atlaskit/icon/core/migration/add--editor-add.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _add = _interopRequireDefault(require_add());
    var _add2 = _interopRequireDefault(require_add2());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var AddIcon2 = (props) => _react.default.createElement(_add.default, Object.assign({
      LEGACY_fallbackIcon: _add2.default
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    AddIcon2.Name = "AddIconMigration";
    var _default = exports.default = AddIcon2;
  }
});

// node_modules/@atlaskit/icon/core/question-circle.js
var require_question_circle = __commonJS({
  "node_modules/@atlaskit/icon/core/question-circle.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var QuestionCircleIcon2 = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M8 1.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m8-3c-.586 0-1 .414-1 1H5.5c0-1.414 1.086-2.5 2.5-2.5s2.5 1.086 2.5 2.5c0 1.133-.713 1.706-1.162 2.058-.511.402-.588.494-.588.692v.75h-1.5v-.75c0-.977.689-1.507 1.078-1.806l.084-.065C8.838 6.544 9 6.367 9 6c0-.586-.414-1-1-1" clip-rule="evenodd"/><path fill="currentcolor" d="M9 11.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    QuestionCircleIcon2.displayName = "QuestionCircleIcon";
    var _default = exports.default = QuestionCircleIcon2;
  }
});

// node_modules/@atlaskit/icon/glyph/question-circle.js
var require_question_circle2 = __commonJS({
  "node_modules/@atlaskit/icon/glyph/question-circle.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _base = (init_base(), __toCommonJS(base_exports));
    var _questionCircle = _interopRequireDefault(require_question_circle());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var QuestionCircleIcon2 = (props) => _react.default.createElement(_base.IconFacade, Object.assign({
      dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><g fill-rule="evenodd"><circle cx="12" cy="12" r="10" fill="currentcolor"/><circle cx="12" cy="18" r="1" fill="inherit"/><path fill="inherit" d="M15.89 9.05a3.98 3.98 0 0 0-2.957-2.942C10.321 5.514 8.017 7.446 8 9.95l.005.147a.99.99 0 0 0 .982.904c.552 0 1-.447 1.002-.998a2.004 2.004 0 0 1 4.007-.002c0 1.102-.898 2-2.003 2H12a1 1 0 0 0-1 .987v2.014a1.001 1.001 0 0 0 2.004 0v-.782c0-.217.145-.399.35-.472A3.99 3.99 0 0 0 15.89 9.05"/></g></svg>`
    }, props, {
      newIcon: _questionCircle.default
    }));
    QuestionCircleIcon2.displayName = "QuestionCircleIcon";
    var _default = exports.default = QuestionCircleIcon2;
  }
});

// node_modules/@atlaskit/icon/core/migration/question-circle.js
var require_question_circle3 = __commonJS({
  "node_modules/@atlaskit/icon/core/migration/question-circle.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _questionCircle = _interopRequireDefault(require_question_circle());
    var _questionCircle2 = _interopRequireDefault(require_question_circle2());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var QuestionCircleIcon2 = (props) => _react.default.createElement(_questionCircle.default, Object.assign({
      LEGACY_fallbackIcon: _questionCircle2.default
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    QuestionCircleIcon2.Name = "QuestionCircleIconMigration";
    var _default = exports.default = QuestionCircleIcon2;
  }
});

// node_modules/@atlaskit/icon/core/notification.js
var require_notification = __commonJS({
  "node_modules/@atlaskit/icon/core/notification.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var NotificationIcon2 = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M3 5a5 5 0 0 1 10 0v3.535l1.788 2.861a1.375 1.375 0 0 1-1.166 2.104h-2.459a3.251 3.251 0 0 1-6.326 0h-2.46a1.375 1.375 0 0 1-1.165-2.104L3 8.535zm3.418 8.5a1.75 1.75 0 0 0 3.164 0zM8 1.5A3.5 3.5 0 0 0 4.5 5v3.636c0 .215-.06.426-.175.608L2.603 12h10.794l-1.723-2.756a1.15 1.15 0 0 1-.174-.608V5A3.5 3.5 0 0 0 8 1.5" clip-rule="evenodd"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    NotificationIcon2.displayName = "NotificationIcon";
    var _default = exports.default = NotificationIcon2;
  }
});

// node_modules/@atlaskit/icon/glyph/notification.js
var require_notification2 = __commonJS({
  "node_modules/@atlaskit/icon/glyph/notification.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _base = (init_base(), __toCommonJS(base_exports));
    var _notification = _interopRequireDefault(require_notification());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var NotificationIcon2 = (props) => _react.default.createElement(_base.IconFacade, Object.assign({
      dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><path fill="currentcolor" fill-rule="evenodd" d="M6.49 17.67a2 2 0 0 0 2.83 0l-2.83-2.83a2 2 0 0 0 0 2.83m4.89-12.19-.72.73c-.78.78-2.21 1.81-3.21 2.31l-3.02 1.51c-.49.25-.58.77-.19 1.17l8.56 8.56c.4.4.92.31 1.17-.19l1.51-3.02c.49-.99 1.53-2.42 2.31-3.21l.73-.73a5.05 5.05 0 0 0 .64-6.36 1.01 1.01 0 1 0-1.35-1.49q-.04.04-.07.08A5.04 5.04 0 0 0 14.95 4a5.04 5.04 0 0 0-3.57 1.48"/></svg>`
    }, props, {
      newIcon: _notification.default
    }));
    NotificationIcon2.displayName = "NotificationIcon";
    var _default = exports.default = NotificationIcon2;
  }
});

// node_modules/@atlaskit/icon/core/migration/notification.js
var require_notification3 = __commonJS({
  "node_modules/@atlaskit/icon/core/migration/notification.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _notification = _interopRequireDefault(require_notification());
    var _notification2 = _interopRequireDefault(require_notification2());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var NotificationIcon2 = (props) => _react.default.createElement(_notification.default, Object.assign({
      LEGACY_fallbackIcon: _notification2.default
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    NotificationIcon2.Name = "NotificationIconMigration";
    var _default = exports.default = NotificationIcon2;
  }
});

// node_modules/@atlaskit/icon/core/search.js
var require_search = __commonJS({
  "node_modules/@atlaskit/icon/core/search.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var SearchIcon2 = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M7 2.5a4.5 4.5 0 1 0 0 9 4.5 4.5 0 0 0 0-9M1 7a6 6 0 1 1 10.74 3.68l3.29 3.29-1.06 1.06-3.29-3.29A6 6 0 0 1 1 7" clip-rule="evenodd"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    SearchIcon2.displayName = "SearchIcon";
    var _default = exports.default = SearchIcon2;
  }
});

// node_modules/@atlaskit/icon/glyph/search.js
var require_search2 = __commonJS({
  "node_modules/@atlaskit/icon/glyph/search.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _base = (init_base(), __toCommonJS(base_exports));
    var _search = _interopRequireDefault(require_search());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var SearchIcon2 = (props) => _react.default.createElement(_base.IconFacade, Object.assign({
      dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><path fill="currentcolor" fill-rule="evenodd" d="m16.436 15.085 3.94 4.01a1 1 0 0 1-1.425 1.402l-3.938-4.006a7.5 7.5 0 1 1 1.423-1.406M10.5 16a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11"/></svg>`
    }, props, {
      newIcon: _search.default
    }));
    SearchIcon2.displayName = "SearchIcon";
    var _default = exports.default = SearchIcon2;
  }
});

// node_modules/@atlaskit/icon/core/migration/search.js
var require_search3 = __commonJS({
  "node_modules/@atlaskit/icon/core/migration/search.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _search = _interopRequireDefault(require_search());
    var _search2 = _interopRequireDefault(require_search2());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var SearchIcon2 = (props) => _react.default.createElement(_search.default, Object.assign({
      LEGACY_fallbackIcon: _search2.default
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    SearchIcon2.Name = "SearchIconMigration";
    var _default = exports.default = SearchIcon2;
  }
});

// node_modules/@atlaskit/icon/core/settings.js
var require_settings = __commonJS({
  "node_modules/@atlaskit/icon/core/settings.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var SettingsIcon2 = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M6.058.462A.75.75 0 0 1 6.75 0h2.5a.75.75 0 0 1 .692.462l1.026 2.462 2.578-.374a.75.75 0 0 1 .757.367l1.25 2.166a.75.75 0 0 1-.049.824L13.937 8l1.567 2.093c.18.24.2.565.05.825l-1.25 2.165a.75.75 0 0 1-.758.367l-2.578-.374-1.026 2.463A.75.75 0 0 1 9.25 16h-2.5a.75.75 0 0 1-.692-.461l-1.026-2.463-2.578.374a.75.75 0 0 1-.757-.367l-1.25-2.165a.75.75 0 0 1 .049-.825L2.063 8 .496 5.907a.75.75 0 0 1-.05-.824l1.25-2.166a.75.75 0 0 1 .758-.367l2.578.374zM7.25 1.5l-.871 2.09c-.242.58-.845.923-1.467.833l-2.17-.315-.749 1.296L3.32 7.176c.366.488.366 1.16 0 1.648l-1.327 1.772.749 1.296 2.17-.315a1.375 1.375 0 0 1 1.467.832L7.25 14.5h1.5l.871-2.09c.242-.58.845-.923 1.467-.833l2.17.315.749-1.296-1.327-1.772a1.375 1.375 0 0 1 0-1.648l1.327-1.772-.749-1.296-2.17.315A1.375 1.375 0 0 1 9.62 3.59L8.75 1.5zm.75 5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3M5 8a3 3 0 1 1 6 0 3 3 0 0 1-6 0" clip-rule="evenodd"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    SettingsIcon2.displayName = "SettingsIcon";
    var _default = exports.default = SettingsIcon2;
  }
});

// node_modules/@atlaskit/icon/glyph/settings.js
var require_settings2 = __commonJS({
  "node_modules/@atlaskit/icon/glyph/settings.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _base = (init_base(), __toCommonJS(base_exports));
    var _settings = _interopRequireDefault(require_settings());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var SettingsIcon2 = (props) => _react.default.createElement(_base.IconFacade, Object.assign({
      dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><path fill="currentcolor" fill-rule="evenodd" d="M11.701 16.7a5.002 5.002 0 1 1 0-10.003 5.002 5.002 0 0 1 0 10.004m8.368-3.117a1.995 1.995 0 0 1-1.346-1.885c0-.876.563-1.613 1.345-1.885a.48.48 0 0 0 .315-.574 9 9 0 0 0-.836-1.993.48.48 0 0 0-.598-.195 2.04 2.04 0 0 1-1.29.08 1.99 1.99 0 0 1-1.404-1.395 2.04 2.04 0 0 1 .076-1.297.48.48 0 0 0-.196-.597 9 9 0 0 0-1.975-.826.48.48 0 0 0-.574.314 1.995 1.995 0 0 1-1.885 1.346 1.99 1.99 0 0 1-1.884-1.345.48.48 0 0 0-.575-.315c-.708.2-1.379.485-2.004.842a.47.47 0 0 0-.198.582A2.002 2.002 0 0 1 4.445 7.06a.48.48 0 0 0-.595.196 9 9 0 0 0-.833 1.994.48.48 0 0 0 .308.572 1.995 1.995 0 0 1 1.323 1.877c0 .867-.552 1.599-1.324 1.877a.48.48 0 0 0-.308.57 9 9 0 0 0 .723 1.79.477.477 0 0 0 .624.194c.595-.273 1.343-.264 2.104.238.117.077.225.185.302.3.527.8.512 1.58.198 2.188a.473.473 0 0 0 .168.628 9 9 0 0 0 2.11.897.474.474 0 0 0 .57-.313 1.995 1.995 0 0 1 1.886-1.353c.878 0 1.618.567 1.887 1.353a.475.475 0 0 0 .57.313 9 9 0 0 0 2.084-.883.473.473 0 0 0 .167-.631c-.318-.608-.337-1.393.191-2.195.077-.116.185-.225.302-.302.772-.511 1.527-.513 2.125-.23a.477.477 0 0 0 .628-.19 9 9 0 0 0 .728-1.793.48.48 0 0 0-.314-.573"/></svg>`
    }, props, {
      newIcon: _settings.default
    }));
    SettingsIcon2.displayName = "SettingsIcon";
    var _default = exports.default = SettingsIcon2;
  }
});

// node_modules/@atlaskit/icon/core/migration/settings.js
var require_settings3 = __commonJS({
  "node_modules/@atlaskit/icon/core/migration/settings.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _settings = _interopRequireDefault(require_settings());
    var _settings2 = _interopRequireDefault(require_settings2());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var SettingsIcon2 = (props) => _react.default.createElement(_settings.default, Object.assign({
      LEGACY_fallbackIcon: _settings2.default
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    SettingsIcon2.Name = "SettingsIconMigration";
    var _default = exports.default = SettingsIcon2;
  }
});

// node_modules/@atlaskit/icon/core/log-in.js
var require_log_in = __commonJS({
  "node_modules/@atlaskit/icon/core/log-in.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var LogInIcon2 = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M13 2.5H8V1h5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H8v-1.5h5a.5.5 0 0 0 .5-.5V3a.5.5 0 0 0-.5-.5M7.44 7.25 5.22 5.03l1.06-1.06 3.5 3.5a.75.75 0 0 1 0 1.06l-3.5 3.5-1.06-1.06 2.22-2.22H1v-1.5z" clip-rule="evenodd"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    LogInIcon2.displayName = "LogInIcon";
    var _default = exports.default = LogInIcon2;
  }
});

// node_modules/@atlaskit/icon/glyph/sign-in.js
var require_sign_in = __commonJS({
  "node_modules/@atlaskit/icon/glyph/sign-in.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _base = (init_base(), __toCommonJS(base_exports));
    var _logIn = _interopRequireDefault(require_log_in());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var SignInIcon = (props) => _react.default.createElement(_base.IconFacade, Object.assign({
      dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><g fill="currentcolor" fill-rule="evenodd"><path d="M15.503 3H12v2h7v14h-7v2h7.006c1.1 0 1.994-.893 1.994-1.995V4.995A1.993 1.993 0 0 0 19.006 3z"/><path d="M3.977 11A.99.99 0 0 0 3 12.001c0 .551.437.999.977.999h11.047a.99.99 0 0 0 .976-.999.99.99 0 0 0-.976-1.001z"/><path d="M12.303 8.305a1.053 1.053 0 0 0 0 1.478L14.5 12l-2.197 2.217a1.05 1.05 0 0 0 0 1.476c.404.409 1.06.409 1.465 0l2.93-2.955a1.055 1.055 0 0 0 0-1.477l-2.93-2.956a1.034 1.034 0 0 0-1.465 0"/></g></svg>`
    }, props, {
      newIcon: _logIn.default
    }));
    SignInIcon.displayName = "SignInIcon";
    var _default = exports.default = SignInIcon;
  }
});

// node_modules/@atlaskit/icon/core/migration/log-in--sign-in.js
var require_log_in_sign_in = __commonJS({
  "node_modules/@atlaskit/icon/core/migration/log-in--sign-in.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _logIn = _interopRequireDefault(require_log_in());
    var _signIn = _interopRequireDefault(require_sign_in());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var LogInIcon2 = (props) => _react.default.createElement(_logIn.default, Object.assign({
      LEGACY_fallbackIcon: _signIn.default
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    LogInIcon2.Name = "LogInIconMigration";
    var _default = exports.default = LogInIcon2;
  }
});

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/AtlassianNavigation/index.js
init_extends();
init_emotion_react_browser_development_esm();

// node_modules/@atlaskit/analytics-namespaced-context/dist/esm/helper/createNamespaceContext.js
init_defineProperty();
var import_react = __toESM(require_react());
var createNamespaceContext = function createNamespaceContext2(namespace) {
  var displayName = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "NamespacedContext";
  var Component = function Component2(props) {
    var newData = _defineProperty({}, namespace, props.data);
    return import_react.default.createElement(AnalyticsContext_default, {
      data: newData
    }, import_react.default.Children.only(props.children));
  };
  Component.displayName = displayName;
  return Component;
};
var createNamespaceContext_default = createNamespaceContext;

// node_modules/@atlaskit/analytics-namespaced-context/dist/esm/FabricElementsAnalyticsContext.js
var ELEMENTS_CONTEXT = "fabricElementsCtx";
var FabricElementsAnalyticsContext = createNamespaceContext_default(ELEMENTS_CONTEXT, "FabricElementsAnalyticsContext");

// node_modules/@atlaskit/analytics-namespaced-context/dist/esm/NavigationAnalyticsContext.js
var NAVIGATION_CONTEXT = "navigationCtx";
var NavigationAnalyticsContext = createNamespaceContext_default(NAVIGATION_CONTEXT, "NavigationAnalyticsContext");

// node_modules/@atlaskit/analytics-namespaced-context/dist/esm/FabricEditorAnalyticsContext.js
var EDITOR_CONTEXT = "fabricEditorCtx";
var EDITOR_APPEARANCE_CONTEXT = function(EDITOR_APPEARANCE_CONTEXT2) {
  EDITOR_APPEARANCE_CONTEXT2["FIXED_WIDTH"] = "fixedWidth";
  EDITOR_APPEARANCE_CONTEXT2["FULL_WIDTH"] = "fullWidth";
  EDITOR_APPEARANCE_CONTEXT2["COMMENT"] = "comment";
  EDITOR_APPEARANCE_CONTEXT2["CHROMELESS"] = "chromeless";
  EDITOR_APPEARANCE_CONTEXT2["MOBILE"] = "mobile";
  return EDITOR_APPEARANCE_CONTEXT2;
}({});
var FabricEditorAnalyticsContext = createNamespaceContext_default(EDITOR_CONTEXT, "FabricEditorAnalyticsContext");

// node_modules/@atlaskit/analytics-namespaced-context/dist/esm/PeopleTeamsAnalyticsContext.js
var PEOPLE_TEAMS_CONTEXT = "peopleTeamsCtx";
var PeopleTeamsAnalyticsContext = createNamespaceContext_default(PEOPLE_TEAMS_CONTEXT, "PeopleTeamsAnalyticsContext");

// node_modules/@atlaskit/analytics-namespaced-context/dist/esm/NotificationsAnalyticsContext.js
var NOTIFICATIONS_CONTEXT = "NotificationsCtx";
var NotificationsAnalyticsContext = createNamespaceContext_default(NOTIFICATIONS_CONTEXT, "NotificationsAnalyticsContext");

// node_modules/@atlaskit/analytics-namespaced-context/dist/esm/RecentWorkAnalyticsContext.js
var RECENT_WORK_CONTEXT = "RecentWorkCtx";
var RecentWorkAnalyticsContext = createNamespaceContext_default(RECENT_WORK_CONTEXT, "RecentWorkAnalyticsContext");

// node_modules/@atlaskit/analytics-namespaced-context/dist/esm/AtlasAnalyticsContext.js
var ATLAS_CONTEXT = "atlasCtx";
var AtlasAnalyticsContext = createNamespaceContext_default(ATLAS_CONTEXT, "AtlasAnalyticsContext");

// node_modules/@atlaskit/analytics-namespaced-context/dist/esm/LinkingPlatformAnalyticsContext.js
var LINKING_PLATFORM_CONTEXT = "linkingPlatformCtx";
var LinkingPlatformAnalyticsContext = createNamespaceContext_default(LINKING_PLATFORM_CONTEXT, "LinkingPlatformAnalyticsContext");

// node_modules/@atlaskit/analytics-namespaced-context/dist/esm/PostOfficeAnalyticsContext.js
var POST_OFFICE_CONTEXT = "postOfficeCtx";
var PostOfficeAnalyticsContext = createNamespaceContext_default(POST_OFFICE_CONTEXT, "PostOfficeAnalyticsContext");

// node_modules/@atlaskit/analytics-namespaced-context/dist/esm/AIMateAnalyticsContext.js
var AI_MATE_CONTEXT = "aiMateCtx";
var AIMateAnalyticsContext = createNamespaceContext_default(AI_MATE_CONTEXT, "AIMateAnalyticsContext");

// node_modules/@atlaskit/analytics-namespaced-context/dist/esm/AVPAnalyticsContext.js
var AVP_CONTEXT = "avpCtx";
var AVPAnalyticsContext = createNamespaceContext_default(AVP_CONTEXT, "AVPAnalyticsContext");

// node_modules/@atlaskit/analytics-namespaced-context/dist/esm/GrowthAnalyticsContext.js
var GROWTH_CONTEXT = "editionAwarenessCtx";
var GrowthAnalyticsContext = createNamespaceContext_default(GROWTH_CONTEXT, "GrowthAnalyticsContext");

// node_modules/@atlaskit/atlassian-navigation/dist/esm/common/constants.js
var HORIZONTAL_GLOBAL_NAV_HEIGHT = 56;
var PRODUCT_HOME_BREAKPOINT = 1280;
var CREATE_BREAKPOINT = 1130;
var varSearchFocusBorderColor = "--ds--ans--fbc";
var varSearchHoverBackgroundColor = "--ds--ans--hbgc";
var varSearchBackgroundColor = "--ds--ans--bgc";
var varSearchColor = "--ds--ans--c";
var varSearchBorderColor = "--ds--ans--bc";

// node_modules/@atlaskit/atlassian-navigation/dist/esm/theme/theme-generator.js
init_defineProperty();
init_esm();

// node_modules/@atlaskit/atlassian-navigation/dist/esm/theme/theme-helpers.js
init_defineProperty();

// node_modules/chromatism/dist/chromatism.esm.js
function fromHex(r, e, n) {
  var t = r.conversions, o = r.operations, s = r.helpers;
  n = n.replace("#", "").match(/.{2}/g);
  for (var a = 0; a < n.length; a++) n[a] = parseInt(n[a], 16);
  switch (e) {
    case "rgb":
      return { r: n[0], g: n[1], b: n[2] };
    default:
      return o.convert({ conversions: t, operations: o, helpers: s }, e, { r: n[0], g: n[1], b: n[2] });
  }
}
function fromRgb(r, e, n) {
  var t = r.conversions, o = r.operations, s = r.helpers;
  switch (e) {
    case "hex":
      return 1 == (g = Math.round(n.r).toString(16)).length && (g = "0" + g), 1 == (y = Math.round(n.g).toString(16)).length && (y = "0" + y), 1 == (_ = Math.round(n.b).toString(16)).length && (_ = "0" + _), "#" + g + y + _;
    case "cssrgb":
      return "rgb(" + Math.round(n.r) + "," + Math.round(n.g) + "," + Math.round(n.b) + ")";
    case "hsl":
      var a = [g = n.r / 255, y = n.g / 255, _ = n.b / 255].sort(), i = (a[0] + a[2]) / 2 * 100;
      return a[0] == a[2] ? (b = 0, d = 0) : (b = i >= 50 ? (a[2] - a[0]) / (2 - a[2] - a[0]) * 100 : (a[2] - a[0]) / (a[2] + a[0]) * 100, (d = a[2] == g ? (y - _) / (a[2] - a[0]) * 60 : a[2] == y ? 60 * (2 + (_ - g) / (a[2] - a[0])) : 60 * (4 + (g - y) / (a[2] - a[0]))) < 0 ? d += 360 : d > 360 && (d %= 360)), { h: d, s: b, l: i };
    case "csshsl":
      var c = o.convert({ conversions: t, helpers: s }, "hsl", n);
      return "hsl(" + Math.round(c.h) + "," + Math.round(c.s) + "%," + Math.round(c.l) + "%)";
    case "cmyk":
      var u = n.r / 255, l = n.g / 255, h = n.b / 255, v = 1 - Math.max(u, l, h);
      if (1 != v) var p = (1 - u - v) / (1 - v), f = (1 - l - v) / (1 - v), m = (1 - h - v) / (1 - v);
      else var p = 0, f = 0, m = 0;
      return { c: p, m: f, y: m, k: v };
    case "hsv":
      var d, b, g = n.r / 255, y = n.g / 255, _ = n.b / 255, M = Math.min(g, y, _), Y = Math.max(g, y, _), L = Y - M, X = Y;
      if (0 == L) d = 0, b = 0;
      else {
        b = L / Y;
        var Z = ((Y - g) / 6 + L / 2) / L, R = ((Y - y) / 6 + L / 2) / L, w = ((Y - _) / 6 + L / 2) / L;
        g == Y ? d = w - R : y == Y ? d = 1 / 3 + Z - w : _ == Y && (d = 2 / 3 + R - Z), d < 0 && (d += 1), d > 1 && (d -= 1);
      }
      return { h: 360 * d, s: 100 * b, v: 100 * X };
    case "yiq":
      var m = n.r / 255 * 0.299 + n.g / 255 * 0.587 + n.b / 255 * 0.114, C = n.r / 255 * 0.596 + n.g / 255 * -0.274 + n.b / 255 * -0.322, x = n.r / 255 * 0.211 + n.g / 255 * -0.523 + n.b / 255 * 0.312;
      return C = s.bounded(C, [-0.5957, 0.5957]), x = s.bounded(x, [-0.5226, 0.5226]), { y: m, i: C, q: x };
    case "XYZ":
      var A = [n.r, n.g, n.b].map(function(r2) {
        return r2 / 255;
      }).map(function(r2) {
        return r2 <= 0.04045 ? r2 / 12.92 : Math.pow((r2 + 0.055) / 1.055, 2.4);
      }), S = s.getTransform("SRGB_XYZ").map(function(r2) {
        return A.reduce(function(e2, n2, t2) {
          return r2[t2] * n2 + e2;
        }, 0);
      }).map(function(r2) {
        return 100 * r2;
      }), O = slicedToArray(S, 3);
      return { X: O[0], Y: O[1], Z: O[2] };
    case "lms":
    case "cielab":
    case "cieluv":
    case "xyY":
      var I = o.convert({ conversions: t, operations: o, helpers: s }, "XYZ", n);
      return o.convert({ conversions: t, operations: o, helpers: s }, e, I);
    case "cielch":
      var j = o.convert({ conversions: t, operations: o, helpers: s }, "cieluv", n);
      return o.convert({ conversions: t, operations: o, helpers: s }, e, j);
    case "hsluv":
      var D = o.convert({ conversions: t, operations: o, helpers: s }, "cielch", n);
      return o.convert({ conversions: t, operations: o, helpers: s }, e, D);
  }
}
function fromCssRgb(r, e, n) {
  var t = r.conversions, o = r.operations, s = r.helpers;
  n = n.replace(/((rgb\(|\))|[\s]*)/g, "").split(",");
  for (var a = 0; a < n.length; a++) n[a] = parseInt(n[a]);
  switch (e) {
    case "rgb":
      return { r: n[0], g: n[1], b: n[2] };
    default:
      return o.convert({ conversions: t, operations: o, helpers: s }, e, { r: n[0], g: n[1], b: n[2] });
  }
}
function fromHsl(r, e, n) {
  var t = r.conversions, o = r.operations, s = r.helpers;
  switch (e) {
    case "rgb":
      if (0 == n.s) {
        var a = n.l / 100 * 255;
        return { r: a, g: a, b: a };
      }
      var i, c, u;
      i = n.l >= 50 ? n.l / 100 + n.s / 100 - n.l / 100 * (n.s / 100) : n.l / 100 * (1 + n.s / 100), c = n.l / 100 * 2 - i;
      var l, h, v, p = ((u = n.h / 360) + 0.333) % 1, f = u, m = s.negMod(u - 0.333, 1);
      return l = 6 * p < 1 ? c + 6 * (i - c) * p : 2 * p < 1 ? i : 3 * p < 2 ? c + 6 * (0.666 - p) * (i - c) : c, h = 6 * f < 1 ? c + 6 * (i - c) * f : 2 * f < 1 ? i : 3 * f < 2 ? c + 6 * (0.666 - f) * (i - c) : c, v = 6 * m < 1 ? c + 6 * (i - c) * m : 2 * m < 1 ? i : 3 * m < 2 ? c + 6 * (0.666 - m) * (i - c) : c, l < 0 && (l = 0), h < 0 && (h = 0), v < 0 && (v = 0), { r: 255 * l, g: 255 * h, b: 255 * v };
    case "csshsl":
      return "hsl(" + Math.round(n.h) + "," + Math.round(n.s) + "%," + Math.round(n.l) + "%)";
    case "hsv":
      n.s = n.s / 100, n.l = n.l / 100;
      var d = n.s * (n.l < 0.5 ? n.l : 1 - n.l);
      return { h: n.h, s: 100 * (2 * d / (n.l + d)), v: 100 * (n.l + d) };
    default:
      var b = o.convert({ conversions: t, operations: o, helpers: s }, "rgb", n);
      return o.convert({ conversions: t, operations: o, helpers: s }, e, b);
  }
}
function fromCssHsl(r, e, n) {
  var t = r.conversions, o = r.operations, s = r.helpers;
  n = n.replace(/(hsl\(|\)|%|[\s]*)/g, "").split(",");
  for (var a = 0; a < n.length; a++) n[a] = parseInt(n[a]);
  switch (e) {
    case "hsl":
      return { h: n[0], s: n[1], l: n[2] };
    default:
      return o.convert({ conversions: t, operations: o, helpers: s }, e, { h: n[0], s: n[1], l: n[2] });
  }
}
function fromHsv(r, e, n) {
  var t = r.conversions, o = r.operations, s = r.helpers;
  switch (e) {
    case "rgb":
      var a, i, c;
      n.h = n.h / 360, n.s = n.s / 100, n.v = n.v / 100;
      var u = 6 * n.h;
      6 == u && (u = 0);
      var l, h, v, p = Math.round(u), f = n.v * (1 - n.s), m = n.v * (1 - n.s * (u - p)), d = n.v * (1 - n.s * (1 - (u - p)));
      return 0 == p ? (l = n.v, h = d, v = f) : 1 == p ? (l = m, h = n.v, v = f) : 2 == p ? (l = f, h = n.v, v = d) : 3 == p ? (l = f, h = m, v = n.v) : 4 == p ? (l = d, h = f, v = n.v) : (l = n.v, h = f, v = m), a = 255 * l, i = 255 * h, c = 255 * v, { r: a, g: i, b: c };
    case "hsl":
      n.h = n.h / 360, n.s = n.s / 100, n.v = n.v / 100;
      return { h: 360 * n.h, s: 100 * ((2 - n.s) * n.v < 1 ? n.s * n.v / ((2 - n.s) * n.v) : n.s * n.v / (2 - (2 - n.s) * n.v)), l: 100 * ((2 - n.s) * n.v / 2) };
    default:
      var b = o.convert({ conversions: t, operations: o, helpers: s }, "rgb", n);
      return o.convert({ conversions: t, operations: o, helpers: s }, e, b);
  }
}
function fromCmyk(r, e, n) {
  var t = r.conversions, o = r.operations, s = r.helpers;
  switch (e) {
    case "rgb":
      return { r: a = 255 * (1 - n.c) * (1 - n.k), g: i = 255 * (1 - n.m) * (1 - n.k), b: c = 255 * (1 - n.y) * (1 - n.k) };
    case "cssrgb":
      var a = 255 * (1 - n.c) * (1 - n.k), i = 255 * (1 - n.m) * (1 - n.k), c = 255 * (1 - n.y) * (1 - n.k);
      return "rgb(" + Math.round(a) + "," + Math.round(i) + "," + Math.round(c) + ")";
    default:
      var u = o.convert({ conversions: t, operations: o, helpers: s }, "rgb", n);
      return o.convert({ conversions: t, operations: o, helpers: s }, e, u);
  }
}
function fromYiq(r, e, n) {
  var t = r.conversions, o = r.operations, s = r.helpers;
  switch (n.i = s.bounded(n.i, [-0.5957, 0.5957]), n.q = s.bounded(n.q, [-0.5226, 0.5226]), e) {
    case "rgb":
      var a = 255 * (n.y + 0.956 * n.i + 0.621 * n.q), i = 255 * (n.y + -0.272 * n.i + -0.647 * n.q), c = 255 * (n.y + -1.106 * n.i + -1.703 * n.q);
      return a = s.bounded(a, [0, 255]), i = s.bounded(i, [0, 255]), c = s.bounded(c, [0, 255]), { r: a, g: i, b: c };
    default:
      var u = o.convert({ conversions: t, operations: o, helpers: s }, "rgb", n);
      return o.convert({ conversions: t, operations: o, helpers: s }, e, u);
  }
}
function fromXYZ(r, e, n) {
  var t = r.conversions, o = r.operations, s = r.helpers, a = s.getIlluminant("D65");
  switch (e) {
    case "rgb":
      var i = [n.X, n.Y, n.Z].map(function(r2) {
        return r2 / 100;
      }), c = s.getTransform("INVERSE_SRGB_XYZ").map(function(r2) {
        return i.reduce(function(e2, n2, t2) {
          return r2[t2] * n2 + e2;
        }, 0);
      }).map(function(r2) {
        return r2 <= 31308e-7 ? 12.92 * r2 : 1.055 * Math.pow(r2, 1 / 2.4) - 0.055;
      }).map(function(r2) {
        return 255 * r2;
      }), u = slicedToArray(c, 3), l = u[0], h = u[1], v = u[2];
      return s.boundedRgb({ r: l, g: h, b: v });
    case "lms":
      var p = [n.X, n.Y, n.Z].map(function(r2) {
        return r2 / 100;
      }), f = s.getTransform("BRADFORD").map(function(r2) {
        return p.reduce(function(e2, n2, t2) {
          return r2[t2] * n2 + e2;
        }, 0);
      });
      return { rho: f[0], gamma: f[1], beta: f[2] };
    case "cielab":
      var m = n.X / a.X, d = n.Y / a.Y, b = n.Z / a.Z, g = function(r2) {
        return r2 > 8856e-6 ? s.cbrt(r2) : (903.3 * r2 + 16) / 116;
      }, y = g(m), _ = g(d);
      return { L: 116 * _ - 16, a: 500 * (y - _), b: 200 * (_ - g(b)) };
    case "cieluv":
      var M = n.Y / a.Y, Y = M > 8856e-6 ? 116 * s.cbrt(M) - 16 : 903.3 * M, L = function(r2) {
        return 4 * r2.X / (r2.X + 15 * r2.Y + 3 * r2.Z);
      }, X = function(r2) {
        return 9 * r2.Y / (r2.X + 15 * r2.Y + 3 * r2.Z);
      };
      return { L: Y, u: 13 * Y * (L(n) - L(a)), v: 13 * Y * (X(n) - X(a)) };
    case "xyY":
      return { x: n.X / (n.X + n.Y + n.Z), y: n.Y / (n.X + n.Y + n.Z), Y: n.Y };
    default:
      var Z = s.boundedRgb(o.convert({ conversions: t, operations: o, helpers: s }, "rgb", n));
      return o.convert({ conversions: t, operations: o, helpers: s }, e, Z);
  }
}
function fromxyY(r, e, n) {
  var t = r.conversions, o = r.operations, s = r.helpers;
  switch (e) {
    case "XYZ":
      var a = n.Y / n.y * n.x, i = n.Y / n.y * (1 - n.x - n.y);
      return { X: a, Y: n.Y, Z: i };
    default:
      var c = o.convert({ conversions: t, operations: o, helpers: s }, "XYZ", n);
      return o.convert({ conversions: t, operations: o, helpers: s }, e, c);
  }
}
function fromLms(r, e, n) {
  var t = r.conversions, o = r.operations, s = r.helpers;
  switch (e) {
    case "XYZ":
      var a = [n.rho, n.gamma, n.beta], i = s.getTransform("INVERSE_BRADFORD").map(function(r2) {
        return a.reduce(function(e2, n2, t2) {
          return r2[t2] * n2 + e2;
        }, 0);
      });
      return { X: 100 * i[0], Y: 100 * i[1], Z: 100 * i[2] };
    default:
      var c = o.convert({ conversions: t, operations: o, helpers: s }, "XYZ", n);
      return o.convert({ conversions: t, operations: o, helpers: s }, e, c);
  }
}
function fromCieLab(r, e, n) {
  var t = r.conversions, o = r.operations, s = r.helpers;
  switch (e) {
    case "XYZ":
      var a = s.getIlluminant("D65"), i = (n.L + 16) / 116, c = n.a / 500 + i, u = i - n.b / 200, l = function(r2) {
        return Math.pow(r2, 3) > 8856e-6 ? Math.pow(r2, 3) : (116 * r2 - 16) / 903.3;
      }, h = l(c), v = l(u), p = n.L > 903.3 * 8856e-6 ? Math.pow(i, 3) : n.L / 903.3;
      return { X: h * a.X, Y: p * a.Y, Z: v * a.Z };
    default:
      var f = o.convert({ conversions: t, operations: o, helpers: s }, "XYZ", n);
      return o.convert({ conversions: t, operations: o, helpers: s }, e, f);
  }
}
function fromCieLuv(r, e, n) {
  var t = r.conversions, o = r.operations, s = r.helpers;
  switch (e) {
    case "XYZ":
      var a = s.getIlluminant("D65"), i = function(r2) {
        return 4 * r2.X / (r2.X + 15 * r2.Y + 3 * r2.Z);
      }(a), c = function(r2) {
        return 9 * r2.Y / (r2.X + 15 * r2.Y + 3 * r2.Z);
      }(a), u = 1 / 3 * (52 * n.L / (n.u + 13 * n.L * i) - 1), l = n.L > 903.3 * 8856e-6 ? Math.pow((n.L + 16) / 116, 3) : n.L / 903.3, h = -5 * l, v = (l * (39 * n.L / (n.v + 13 * n.L * c) - 5) - h) / (u - -1 / 3);
      return { X: 100 * v, Y: 100 * l, Z: 100 * (v * u + h) };
    case "cielch":
      var p = Math.sqrt(Math.pow(n.u, 2) + Math.pow(n.v, 2)), f = Math.atan2(n.v, n.u);
      return f < 0 && (f += 2 * Math.PI), f = s.toDeg(f), { L: n.L, C: p, h: f };
    default:
      var m = o.convert({ conversions: t, operations: o, helpers: s }, "XYZ", n);
      return o.convert({ conversions: t, operations: o, helpers: s }, e, m);
  }
}
function fromCieLch(r, e, n) {
  var t = r.conversions, o = r.operations, s = r.helpers;
  switch (e) {
    case "cieluv":
      var a = s.toRad(n.h), i = n.C * Math.cos(a), c = n.C * Math.sin(a);
      return { L: n.L, u: i, v: c };
    case "hsluv":
      if (n.L > 99.9999999) return { hu: n.h, s: 0, l: 100 };
      if (n.L < 1e-8) return { hu: n.h, s: 0, l: 0 };
      for (var u = (n.L + 16) / 1560896, l = u > 8856e-6 ? u : n.L / 903.3, h = s.getTransform("INVERSE_SRGB_XYZ"), v = [], p = 0; p < 3; p++) for (var f = h[p][0], m = h[p][1], d = h[p][2], b = 0; b < 2; b++) {
        var g = (284517 * f - 94839 * d) * l, y = (838422 * d + 769860 * m + 731718 * f) * n.L * l - 769860 * b * n.L, _ = (632260 * d - 126452 * m) * l + 126452 * b;
        v.push({ m: g / _, b: y / _ });
      }
      var M = Number.MAX_VALUE, Y = s.toRad(n.h);
      v.forEach(function(r2) {
        var e2 = r2.b / (Math.sin(Y) - r2.m * Math.cos(Y));
        e2 >= 0 && (M = Math.min(M, e2));
      });
      var L = M;
      return { hu: n.h, s: n.C / L * 100, l: n.L };
    default:
      var X = o.convert({ conversions: t, operations: o, helpers: s }, "cieluv", n);
      return o.convert({ conversions: t, operations: o, helpers: s }, e, X);
  }
}
function fromCieLch$1(r, e, n) {
  var t = r.conversions, o = r.operations, s = r.helpers;
  switch (e) {
    case "cielch":
      if (n.L > 99.9999999) return { L: 100, C: 0, h: n.hu };
      if (n.L < 1e-8) return { L: 0, C: 0, h: n.hu };
      for (var a = (n.l + 16) / 1560896, i = a > 8856e-6 ? a : n.l / 903.3, c = s.getTransform("INVERSE_SRGB_XYZ"), u = [], l = 0; l < 3; l++) for (var h = c[l][0], v = c[l][1], p = c[l][2], f = 0; f < 2; f++) {
        var m = (284517 * h - 94839 * p) * i, d = (838422 * p + 769860 * v + 731718 * h) * n.l * i - 769860 * f * n.l, b = (632260 * p - 126452 * v) * i + 126452 * f;
        u.push({ m: m / b, b: d / b });
      }
      var g = Number.MAX_VALUE, y = s.toRad(n.hu);
      u.forEach(function(r2) {
        var e2 = r2.b / (Math.sin(y) - r2.m * Math.cos(y));
        e2 >= 0 && (g = Math.min(g, e2));
      });
      var _ = g;
      return { L: n.l, C: _ / 100 * n.s, h: n.hu };
    default:
      var M = o.convert({ conversions: t, operations: o, helpers: s }, "cielch", n);
      return o.convert({ conversions: t, operations: o, helpers: s }, e, M);
  }
}
function contains(r, e) {
  return Object.keys(r).every(function(r2) {
    return -1 !== e.indexOf(r2);
  });
}
function adapt(r, e, n, t) {
  var o = r.operations.convert(r, "XYZ", e), s = r.operations.convert(r, "lms", n);
  if (t) a = r.operations.convert(r, "lms", t);
  else var a = r.operations.convert(r, "lms", r.helpers.getIlluminant("D65"));
  var i = r.helpers.getTransform("BRADFORD"), c = r.helpers.getTransform("INVERSE_BRADFORD"), u = [[s.rho / a.rho, 0, 0], [0, s.gamma / a.gamma, 0], [0, 0, s.beta / a.beta]], l = r.helpers.matrixMultiply(c, u), h = r.helpers.matrixMultiply(l, i), v = [[o.X], [o.Y], [o.Z]], p = r.helpers.matrixMultiply(h, v), f = { X: p[0][0], Y: p[1][0], Z: p[2][0] };
  return r.helpers.ready(r, f);
}
function adjacent(r, e, n, t) {
  for (var o = r.operations.convert(r, "hsl", t), s = [{ h: o.h, s: o.s, l: o.l }], a = 0; a < n - 1; a++) o.h = r.helpers.negMod(o.h + e, 360), s.push({ h: o.h, s: o.s, l: o.l });
  return r.helpers.ready(r, s);
}
function brightness(r, e, n) {
  var t = r.operations.convert(r, "hsl", n);
  return t.l += e, t.l < 0 ? t.l = 0 : t.l > 100 && (t.l = 100), r.helpers.ready(r, t);
}
function complementary(r, e) {
  var n = r.operations.convert(r, "hsl", e);
  return n.h = (n.h + 180) % 360, r.helpers.ready(r, n);
}
function contrast(r, e, n) {
  var t = r.operations.convert(r, "rgb", n);
  return t.r = 255 * ((t.r / 255 - 0.5) * e + 0.5), t.r < 0 ? t.r = 0 : t.r > 255 && (t.r = 255), t.g = 255 * ((t.g / 255 - 0.5) * e + 0.5), t.g < 0 ? t.g = 0 : t.g > 255 && (t.g = 255), t.b = 255 * ((t.b / 255 - 0.5) * e + 0.5), t.b < 0 ? t.b = 0 : t.b > 255 && (t.b = 255), r.helpers.ready(r, t);
}
function contrastRatio(r, e) {
  var n = r.operations.convert(r, "rgb", e);
  return n = (299 * n.r + 587 * n.g + 114 * n.b) / 1e3 >= 128 ? { r: 0, g: 0, b: 0 } : { r: 255, g: 255, b: 255 }, r.helpers.ready(r, n);
}
function convert(r, e, n) {
  if (Object.keys(r.conversions).indexOf(e) > -1) {
    n.colour ? n = n.colour : n.colours && (n = n.colours);
    var t = r.helpers.determineMode(n);
    return t != e ? r.conversions[t].convert(r, e, n) : n;
  }
  return r.helpers.ready(r, e);
}
function difference(r, e, n, t, o) {
  t = t || 1, o = o || 1;
  var s = r.operations.convert(r, "cielab", e), a = r.operations.convert(r, "cielab", n), i = Math.sqrt(Math.pow(s.a, 2) + Math.pow(s.b, 2)), c = i - Math.sqrt(Math.pow(a.a, 2) + Math.pow(a.b, 2)), u = s.L - a.L, l = s.a - a.a, h = s.b - a.b, v = Math.sqrt(Math.pow(l, 2) + Math.pow(h, 2) - Math.pow(c, 2)), p = s.L < 16 ? 0.511 : 0.040975 * s.L / (1.01765 * s.L), f = 0.0638 * i / (1.0131 * i), m = Math.atan2(s.b, s.a), d = m >= 0 ? m : m + 360, b = 164 <= d && d <= 345 ? 0.56 + Math.abs(0.2 * Math.cos(r.helpers.toRad(d + 168))) : 0.36 + Math.abs(0.4 * Math.cos(r.helpers.toRad(d + 35))), g = Math.pow(i, 4) / (Math.pow(i, 4) + 1900), y = f * (g * b + 1 - g), _ = Math.pow(u / (t * p), 2);
  Math.pow(c / (o * f), 2), Math.pow(v / y, 2);
  return Math.sqrt(_ + _ + _);
}
function fade(r, e, n, t) {
  var o = r.operations.convert(r, "rgb", n), s = r.operations.convert(r, "rgb", t), a = [o];
  e -= 1;
  for (var i = (s.r - o.r) / e, c = (s.g - o.g) / e, u = (s.b - o.b) / e, l = { r: o.r, g: o.g, b: o.b }, h = 0; h < e - 1; h++) l.r = r.helpers.slopeMod(l.r + i, 255), l.g = r.helpers.slopeMod(l.g + c, 255), l.b = r.helpers.slopeMod(l.b + u, 255), a.push({ r: l.r, g: l.g, b: l.b });
  return a.push(s), r.helpers.ready(r, a);
}
function greyscale(r, e) {
  var n = r.operations.convert(r, "rgb", e), t = (n.r + n.g + n.b) / 3;
  return n = { r: t, g: t, b: t }, r.helpers.ready(r, n);
}
function hue(r, e, n) {
  var t = r.operations.convert(r, "hsl", n);
  return t.h = r.helpers.negMod(t.h + e, 360), r.helpers.ready(r, t);
}
function invert(r, e) {
  var n = r.operations.convert(r, "rgb", e);
  return n.r = r.helpers.negMod(255 - n.r, 255), n.g = r.helpers.negMod(255 - n.g, 255), n.b = r.helpers.negMod(255 - n.b, 255), r.helpers.ready(r, n);
}
function invertLightness(r, e) {
  var n = r.operations.convert(r, "hsl", e);
  return n.l = 100 - n.l, r.helpers.ready(r, n);
}
function mid(r, e, n) {
  var t = r.operations.convert(r, "hsl", e), o = r.operations.convert(r, "hsl", n), s = { h: (t.h + o.h) / 2, s: (t.s + o.s) / 2, l: (t.l + o.l) / 2 };
  return r.helpers.ready(r, s);
}
function multiply(r, e, n) {
  var t = r.operations.convert(r, "hsl", e), o = r.operations.convert(r, "hsl", n), s = { h: t.h, s: t.s, l: t.l / 100 * (o.l / 100) * 100 };
  return s.l = s.l > 100 ? 100 : s.l, s.l = s.l < 0 ? 0 : s.l, r.helpers.ready(r, s);
}
function saturation(r, e, n) {
  var t = r.operations.convert(r, "hsl", n);
  return t.s += e, t.s < 0 ? t.s = 0 : t.s > 100 && (t.s = 100), r.helpers.ready(r, t);
}
function sepia(r, e) {
  var n = r.operations.convert(r, "rgb", e), t = {};
  return t.r = 0.393 * n.r + 0.769 * n.g + 0.189 * n.b, t.g = 0.349 * n.r + 0.686 * n.g + 0.168 * n.b, t.b = 0.272 * n.r + 0.534 * n.g + 0.131 * n.b, r.helpers.ready(r, t);
}
function shade(r, e, n) {
  var t = r.operations.convert(r, "hsv", n);
  return t.v += e, t.v < 0 ? t.v = 0 : t.v > 100 && (t.v = 100), r.helpers.ready(r, t);
}
function temperature(r, e) {
  var n = r.operations.convert(r, "xyY", e), t = (n.x - 0.332) / (n.y - 0.1858);
  return -449 * Math.pow(t, 3) + 3525 * Math.pow(t, 2) - 6823.3 * t + 5520.33;
}
function tetrad(r, e) {
  for (var n = r.operations.convert(r, "hsl", e), t = [{ h: n.h, s: n.s, l: n.l }], o = 0; o < 3; o++) n.h = (n.h + 90) % 360, t.push({ h: n.h, s: n.s, l: n.l });
  return r.helpers.ready(r, t);
}
function triad(r, e) {
  for (var n = r.operations.convert(r, "hsl", e), t = [{ h: n.h, s: n.s, l: n.l }], o = 0; o < 2; o++) n.h = (n.h + 120) % 360, t.push({ h: n.h, s: n.s, l: n.l });
  return r.helpers.ready(r, t);
}
var fromHex_1 = fromHex;
var _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(r) {
  return typeof r;
} : function(r) {
  return r && "function" == typeof Symbol && r.constructor === Symbol && r !== Symbol.prototype ? "symbol" : typeof r;
};
var slicedToArray = /* @__PURE__ */ function() {
  function r(r2, e) {
    var n = [], t = true, o = false, s = void 0;
    try {
      for (var a, i = r2[Symbol.iterator](); !(t = (a = i.next()).done) && (n.push(a.value), !e || n.length !== e); t = true) ;
    } catch (r3) {
      o = true, s = r3;
    } finally {
      try {
        !t && i.return && i.return();
      } finally {
        if (o) throw s;
      }
    }
    return n;
  }
  return function(e, n) {
    if (Array.isArray(e)) return e;
    if (Symbol.iterator in Object(e)) return r(e, n);
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  };
}();
var toConsumableArray = function(r) {
  if (Array.isArray(r)) {
    for (var e = 0, n = Array(r.length); e < r.length; e++) n[e] = r[e];
    return n;
  }
  return Array.from(r);
};
var fromRgb_1 = fromRgb;
var fromCssRgb_1 = fromCssRgb;
var fromHsl_1 = fromHsl;
var fromCssHsl_1 = fromCssHsl;
var fromHsv_1 = fromHsv;
var fromCmyk_1 = fromCmyk;
var fromYiq_1 = fromYiq;
var fromXYZ_1 = fromXYZ;
var fromxyY_1 = fromxyY;
var fromLms_1 = fromLms;
var fromCieLab_1 = fromCieLab;
var fromCieLuv_1 = fromCieLuv;
var fromCieLch_1 = fromCieLch;
var fromHsluv = fromCieLch$1;
var index = { hex: { test: function(r) {
  return "string" == typeof r && "#" === r.slice(0, 1);
}, convert: fromHex_1 }, rgb: { test: function(r) {
  return contains(r, ["r", "g", "b"]);
}, convert: fromRgb_1 }, cssrgb: { test: function(r) {
  return "string" == typeof r && "rgb(" === r.slice(0, 4);
}, convert: fromCssRgb_1 }, hsl: { test: function(r) {
  return contains(r, ["h", "s", "l"]);
}, convert: fromHsl_1 }, csshsl: { test: function(r) {
  return "string" == typeof r && "hsl(" === r.slice(0, 4);
}, convert: fromCssHsl_1 }, hsv: { test: function(r) {
  return contains(r, ["h", "s", "v"]);
}, convert: fromHsv_1 }, cmyk: { test: function(r) {
  return contains(r, ["c", "m", "y", "k"]);
}, convert: fromCmyk_1 }, yiq: { test: function(r) {
  return contains(r, ["y", "i", "q"]);
}, convert: fromYiq_1 }, XYZ: { test: function(r) {
  return contains(r, ["X", "Y", "Z"]);
}, convert: fromXYZ_1 }, xyY: { test: function(r) {
  return contains(r, ["x", "y", "Y"]);
}, convert: fromxyY_1 }, lms: { test: function(r) {
  return contains(r, ["rho", "gamma", "beta"]);
}, convert: fromLms_1 }, cielab: { test: function(r) {
  return contains(r, ["L", "a", "b"]);
}, convert: fromCieLab_1 }, cieluv: { test: function(r) {
  return contains(r, ["L", "u", "v"]);
}, convert: fromCieLuv_1 }, cielch: { test: function(r) {
  return contains(r, ["L", "C", "h"]);
}, convert: fromCieLch_1 }, hsluv: { test: function(r) {
  return contains(r, ["hu", "s", "l"]);
}, convert: fromHsluv } };
var adapt_1 = adapt;
var adjacent_1 = adjacent;
var brightness_1 = brightness;
var complementary_1 = complementary;
var contrast_1 = contrast;
var contrastRatio_1 = contrastRatio;
var convert_1 = convert;
var difference_1 = difference;
var fade_1 = fade;
var greyscale_1 = greyscale;
var hue_1 = hue;
var invert_1 = invert;
var invertLightness_1 = invertLightness;
var mid_1 = mid;
var multiply_1 = multiply;
var saturation_1 = saturation;
var sepia_1 = sepia;
var shade_1 = shade;
var temperature_1 = temperature;
var tetrad_1 = tetrad;
var triad_1 = triad;
var index$2 = { adapt: adapt_1, adjacent: adjacent_1, brightness: brightness_1, complementary: complementary_1, contrast: contrast_1, contrastRatio: contrastRatio_1, convert: convert_1, difference: difference_1, fade: fade_1, greyscale: greyscale_1, hue: hue_1, invert: invert_1, invertLightness: invertLightness_1, mid: mid_1, multiply: multiply_1, saturation: saturation_1, sepia: sepia_1, shade: shade_1, temperature: temperature_1, tetrad: tetrad_1, triad: triad_1 };
var constants = { ILLUMINANTS: { A: { X: 1.0985 * 100, Y: 100, Z: 35.585 }, B: { X: 99.072, Y: 100, Z: 85.223 }, C: { X: 98.074, Y: 100, Z: 118.232 }, D50: { X: 96.422, Y: 100, Z: 82.521 }, D55: { X: 95.682, Y: 100, Z: 92.149 }, D65: { X: 95.047, Y: 100, Z: 108.883 }, D75: { X: 94.972, Y: 100, Z: 122.638 }, E: { X: 100, Y: 100, Z: 100 }, F2: { X: 0.99186 * 100, Y: 100, Z: 67.393 }, F7: { X: 95.041, Y: 100, Z: 108.747 }, F11: { X: 1.00962 * 100, Y: 100, Z: 64.35 } }, TRANSFORMS: { BRADFORD: [[0.8951, 0.2664, -0.1614], [-0.7502, 1.7135, 0.0367], [0.0389, -0.0685, 1.0296]], INVERSE_BRADFORD: [[0.9869929, -0.1470543, 0.1599627], [0.4323053, 0.5183603, 0.0492912], [-85287e-7, 0.0400428, 0.9684867]], SRGB_XYZ: [[0.4124, 0.3576, 0.1805], [0.2126, 0.7152, 0.0722], [0.0193, 0.1192, 0.9505]], INVERSE_SRGB_XYZ: [[3.2406, -1.5372, -0.4986], [-0.9689, 1.8758, 0.0415], [0.0557, -0.204, 1.057]] } };
var api = function(r, e, n) {
  var t = Object.keys(r.operations).reduce(function(e2, t2) {
    var o = r.operations[t2];
    return e2[t2] = function() {
      for (var e3 = arguments.length, t3 = Array(e3), s = 0; s < e3; s++) t3[s] = arguments[s];
      var a = t3.slice(0).map(function(r2) {
        return "object" === (void 0 === r2 ? "undefined" : _typeof(r2)) ? Object.assign({}, r2) : r2;
      });
      if (n && n.colours) {
        return function e4(n2) {
          var t4 = n2.map(function(n3) {
            if (Array.isArray(n3)) {
              var t5 = e4(n3);
              return t5.colours || t5.colour;
            }
            var s2 = o.apply(void 0, [r].concat(toConsumableArray(a), [n3]));
            return "object" === (void 0 === s2 ? "undefined" : _typeof(s2)) ? s2.colours || s2.colour : s2;
          });
          return "number" != typeof t4[0] ? r.helpers.ready(r, t4) : t4;
        }(n.colours);
      }
      return o.apply(void 0, [r].concat(toConsumableArray(a), [n ? n.colour : void 0]));
    }, e2;
  }, {});
  return n || (t = Object.assign(t, e)), t;
};
var api_1 = api;
var helpers = { getIlluminant: function(r) {
  return constants.ILLUMINANTS[r];
}, getTransform: function(r) {
  return constants.TRANSFORMS[r];
}, matrixMultiply: function(r, e) {
  for (var n = [], t = 0; t < r.length; t++) {
    n[t] = [];
    for (var o = 0; o < e[0].length; o++) {
      for (var s = 0, a = 0; a < r[0].length; a++) s += r[t][a] * e[a][o];
      n[t][o] = s;
    }
  }
  return n;
}, cbrt: function(r) {
  if (Math.cbrt) return Math.cbrt(r);
  var e = Math.pow(Math.abs(r), 1 / 3);
  return r < 0 ? -e : e;
}, toRad: function(r) {
  return r * (Math.PI / 180);
}, toDeg: function(r) {
  return r * (180 / Math.PI);
}, negMod: function(r, e) {
  return (r % e + e) % e;
}, slopeMod: function(r) {
  function e(e2, n) {
    return r.apply(this, arguments);
  }
  return e.toString = function() {
    return r.toString();
  }, e;
}(function(r, e) {
  return r > 2 * e ? slopeMod(r - 2 * e, e) : r > e ? 2 * e - r : r < 0 ? slopeMod(r + 2 * e, e) : r;
}), bounded: function(r, e) {
  return r < e[0] ? r = e[0] : r > e[1] && (r = e[1]), r;
}, boundedRgb: function(r) {
  var e = this, n = function(r2) {
    return e.bounded(r2, [0, 255]);
  };
  return { r: n(r.r), g: n(r.g), b: n(r.b) };
}, determineMode: function(r) {
  for (var e in index) if (index.hasOwnProperty(e) && index[e].test(r)) return e;
  return null;
}, ready: function(r, e) {
  var n = r.conversions, t = r.operations, o = r.helpers, s = {};
  switch (Object.prototype.toString.call(e)) {
    case "[object Object]":
    case "[object String]":
      s.colour = e;
      for (var a in n) n.hasOwnProperty(a) && function(r2) {
        Object.defineProperty(s, r2, { get: function() {
          o.determineMode(e);
          return t.convert({ conversions: n, operations: t, helpers: o }, r2, e);
        }, enumerable: true });
      }(a);
      return s = Object.assign(s, api_1({ conversions: n, operations: t, helpers: o }, constants, s));
    case "[object Array]":
      s.colours = e;
      for (var i in n) n.hasOwnProperty(i) && function(r2) {
        Object.defineProperty(s, r2, { get: function() {
          return function e2(s2) {
            return s2.map(function(s3) {
              return Array.isArray(s3) ? e2(s3) : t.convert({ conversions: n, operations: t, helpers: o }, r2, s3);
            });
          }(e);
        }, enumerable: true });
      }(i);
      return s = Object.assign(s, api_1({ conversions: n, operations: t, helpers: o }, constants, s));
    default:
      return null;
  }
} };
var helpers_1 = helpers;
var dependencies = { conversions: index, operations: index$2, helpers: helpers_1 };
var entry = api_1(dependencies, constants);
var chromatism_esm_default = entry;

// node_modules/@atlaskit/atlassian-navigation/dist/esm/theme/theme-helpers.js
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var hexToRGBA = function hexToRGBA2(hex2) {
  var opacity = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var rgba = _objectSpread(_objectSpread({}, chromatism_esm_default.convert(hex2).rgb), {
    a: opacity
  });
  return "rgba(".concat(Object.values(rgba).join(", "), ")");
};
var getBoxShadow = function getBoxShadow2(color) {
  return "0 0 0 2px ".concat(color);
};
var hex = "[a-z0-9]";
var shortHandHexColorPattern = new RegExp("#(".concat(hex, ")(").concat(hex, ")(").concat(hex, ")"), "i");
var repeat = function repeat2(str, times) {
  return _toConsumableArray(Array(times)).map(function() {
    return str;
  }).join("");
};
var isShortHexColor = function isShortHexColor2(color) {
  return color && color.length === 4;
};
var completeHexColor = function completeHexColor2(colors) {
  var hex2 = colors.map(function(color) {
    return repeat(color, 2);
  }).join("");
  return "#".concat(hex2);
};
var completeTriplet = function completeTriplet2(colors) {
  return "#".concat(repeat(colors[1], 6));
};
var isTriplet = function isTriplet2(colors) {
  return colors[0] === colors[1] && colors[1] === colors[2];
};
var convertHexShorthand = function convertHexShorthand2(color) {
  if (isShortHexColor(color)) {
    var matches = color.match(shortHandHexColorPattern);
    if (matches) {
      var colors = matches.slice(1, 4);
      if (isTriplet(colors)) {
        return completeTriplet(colors);
      } else {
        return completeHexColor(colors);
      }
    }
  }
  return color;
};
var generateTextColor = function generateTextColor2(color) {
  var converted = convertHexShorthand(color);
  return chromatism_esm_default.contrastRatio(converted).hex;
};
var getContrastColor = function getContrastColor2(contrastValue, opacityValue, color) {
  return hexToRGBA(chromatism_esm_default.contrast(contrastValue, color).hex, opacityValue);
};

// node_modules/@atlaskit/atlassian-navigation/dist/esm/theme/default-theme.js
var defaultTheme = {
  mode: {
    create: {
      active: {
        color: "var(--ds-text-inverse, ".concat(N0, ")"),
        backgroundColor: "var(--ds-background-brand-bold-pressed, ".concat(hexToRGBA(B400, 0.8), ")"),
        boxShadow: ""
      },
      default: {
        color: "var(--ds-text-inverse, ".concat(N0, ")"),
        backgroundColor: "var(--ds-background-brand-bold, ".concat(B400, ")"),
        boxShadow: ""
      },
      focus: {
        color: "var(--ds-text-inverse, ".concat(N0, ")"),
        backgroundColor: "",
        boxShadow: ""
      },
      hover: {
        color: "var(--ds-text-inverse, ".concat(N0, ")"),
        backgroundColor: "var(--ds-background-brand-bold-hovered, ".concat(hexToRGBA(B400, 0.9), ")"),
        boxShadow: ""
      },
      selected: {
        color: "",
        backgroundColor: "",
        boxShadow: ""
      }
    },
    iconButton: {
      active: {
        color: "var(--ds-text-subtle, ".concat(B400, ")"),
        backgroundColor: "var(--ds-background-neutral-pressed, ".concat(hexToRGBA(B50, 0.6), ")"),
        boxShadow: ""
      },
      default: {
        color: "var(--ds-text-subtle, ".concat(N600, ")"),
        backgroundColor: "transparent",
        boxShadow: ""
      },
      focus: {
        color: "var(--ds-text-subtle, ".concat(N600, ")"),
        backgroundColor: "",
        boxShadow: ""
      },
      hover: {
        color: "var(--ds-text-subtle, ".concat(B400, ")"),
        backgroundColor: "var(--ds-background-neutral-hovered, ".concat(hexToRGBA(B50, 0.9), ")"),
        boxShadow: ""
      },
      selected: {
        color: "var(--ds-text-selected, ".concat(B400, ")"),
        backgroundColor: "var(--ds-background-selected, ".concat(hexToRGBA(B50, 0.6), ")"),
        boxShadow: ""
      },
      selectedHover: {
        color: "var(--ds-text-selected, ".concat(B400, ")"),
        backgroundColor: "var(--ds-background-selected-hovered, ".concat(hexToRGBA(B50, 0.6), ")"),
        boxShadow: ""
      }
    },
    navigation: {
      backgroundColor: "var(--ds-surface, ".concat(N0, ")"),
      color: "var(--ds-text-subtlest, ".concat(N200, ")")
    },
    productHome: {
      backgroundColor: "var(--ds-text-brand, ".concat(B400, ")"),
      color: "var(--ds-text, ".concat(N700, ")"),
      borderRight: "1px solid ".concat("var(--ds-border, ".concat(hexToRGBA(N200, 0.3), ")")),
      // TODO: replace with token after brand refresh
      // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage
      iconColor: "#357DE8",
      textColor: "var(--ds-text, ".concat(N700, ")")
    },
    primaryButton: {
      active: {
        color: "var(--ds-text-subtle, ".concat(B400, ")"),
        backgroundColor: "var(--ds-background-neutral-pressed, ".concat(hexToRGBA(B50, 0.7), ")"),
        boxShadow: ""
      },
      default: {
        color: "var(--ds-text-subtle, ".concat(N600, ")"),
        backgroundColor: "transparent",
        boxShadow: ""
      },
      focus: {
        color: "var(--ds-text-subtle, ".concat(N600, ")"),
        backgroundColor: "",
        boxShadow: ""
      },
      hover: {
        color: "var(--ds-text-subtle, ".concat(B400, ")"),
        backgroundColor: "var(--ds-background-neutral-hovered, ".concat(hexToRGBA(B50, 0.9), ")"),
        boxShadow: ""
      },
      selected: {
        color: "var(--ds-text-selected, ".concat(B400, ")"),
        backgroundColor: "var(--ds-background-selected, ".concat(hexToRGBA(B50, 0.7), ")"),
        boxShadow: "",
        borderColor: "var(--ds-border-selected, ".concat(B400, ")")
      },
      selectedHover: {
        color: "var(--ds-text-selected, ".concat(B400, ")"),
        backgroundColor: "var(--ds-background-selected-hovered, ".concat(hexToRGBA(B50, 0.6), ")"),
        boxShadow: "",
        borderColor: "var(--ds-border-selected, ".concat(B400, ")")
      }
    },
    search: {
      default: {
        backgroundColor: "var(--ds-background-input, ".concat(N0, ")"),
        color: "var(--ds-text-subtlest, ".concat(N200, ")"),
        borderColor: "var(--ds-border-input, ".concat(N100, ")")
      },
      focus: {
        borderColor: "var(--ds-border-focused, ".concat(B200, ")")
      },
      hover: {
        backgroundColor: "var(--ds-background-input-hovered, ".concat(N0, ")")
      }
    },
    skeleton: {
      backgroundColor: "var(--ds-background-neutral, ".concat(N20, ")"),
      opacity: 1
    }
  }
};
var defaultThemeCopy = JSON.parse(JSON.stringify(defaultTheme));
defaultThemeCopy.mode.productHome.iconColor = void 0;
defaultThemeCopy.mode.productHome.textColor = void 0;
var defaultThemeBrandRefresh = defaultThemeCopy;
var DEFAULT_THEME_NAME = "atlassian";
var default_theme_default = defaultTheme;

// node_modules/@atlaskit/atlassian-navigation/dist/esm/theme/theme-generator.js
function ownKeys2(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys2(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys2(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var generateOpacityValue = function generateOpacityValue2(color) {
  return color === "#000000" ? 0.3 : 0.6;
};
var generateButtonCSSStates = function generateButtonCSSStates2(colors, buttonType) {
  var backgroundColor = colors.backgroundColor, color = colors.color, highlightColor = colors.highlightColor;
  var opacityValue = generateOpacityValue(color);
  var isCreateButton = buttonType === "create";
  return {
    active: {
      backgroundColor: isCreateButton ? hexToRGBA(backgroundColor, 0.65) : getContrastColor(0.3, opacityValue, backgroundColor),
      boxShadow: getBoxShadow("transparent"),
      color
    },
    default: {
      backgroundColor,
      boxShadow: getBoxShadow("transparent"),
      color
    },
    focus: {
      boxShadow: "none",
      color,
      backgroundColor
    },
    hover: {
      backgroundColor: isCreateButton ? hexToRGBA(backgroundColor, 0.8) : getContrastColor(0.1, opacityValue, backgroundColor),
      boxShadow: getBoxShadow("transparent"),
      color
    },
    selected: {
      color,
      backgroundColor: getContrastColor(0.3, opacityValue, backgroundColor),
      borderColor: highlightColor,
      boxShadow: getBoxShadow("transparent")
    },
    selectedHover: {
      color,
      backgroundColor: getContrastColor(0.3, opacityValue, backgroundColor),
      borderColor: highlightColor,
      boxShadow: getBoxShadow("transparent")
    }
  };
};
var generateCreateButtonColors = function generateCreateButtonColors2(themeBackground, themeHighlight) {
  return {
    backgroundColor: themeHighlight,
    color: generateTextColor(themeHighlight),
    highlightColor: themeHighlight
  };
};
var generateTheme = function generateTheme2(themeColors) {
  var backgroundColor = themeColors.backgroundColor, highlightColor = themeColors.highlightColor, name = themeColors.name;
  var color = generateTextColor(backgroundColor);
  var colors = _objectSpread2(_objectSpread2({}, themeColors), {}, {
    color
  });
  if (name === DEFAULT_THEME_NAME) {
    return fg("platform-team25-app-icon-tiles") ? defaultThemeBrandRefresh : default_theme_default;
  }
  return {
    mode: {
      create: generateButtonCSSStates(generateCreateButtonColors(backgroundColor, highlightColor), "create"),
      iconButton: generateButtonCSSStates(colors, "iconButton"),
      primaryButton: generateButtonCSSStates(colors, "primaryButton"),
      navigation: {
        backgroundColor,
        color
      },
      productHome: {
        color,
        iconColor: fg("platform-team25-app-icon-tiles") ? color : void 0,
        textColor: fg("platform-team25-app-icon-tiles") ? color : void 0,
        backgroundColor: highlightColor,
        borderRight: "1px solid ".concat(hexToRGBA(color, 0.5))
      },
      search: {
        default: {
          backgroundColor,
          color,
          borderColor: hexToRGBA(color, 0.5)
        },
        focus: {
          borderColor: hexToRGBA(highlightColor, 0.8),
          boxShadow: getBoxShadow(hexToRGBA(highlightColor, 0.5))
        },
        hover: {
          backgroundColor: getContrastColor(0.1, generateOpacityValue(color), backgroundColor),
          color
        }
      },
      skeleton: {
        backgroundColor: color,
        opacity: 0.08
      }
    }
  };
};

// node_modules/@atlaskit/atlassian-navigation/dist/esm/theme/theme-provider.js
var import_react2 = __toESM(require_react());

// node_modules/@atlaskit/atlassian-navigation/dist/esm/theme/themes.js
var atlassianTheme = generateTheme({
  name: DEFAULT_THEME_NAME,
  // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage
  backgroundColor: N0,
  // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage
  highlightColor: B400
});
var defaultTheme2 = atlassianTheme;

// node_modules/@atlaskit/atlassian-navigation/dist/esm/theme/theme-provider.js
var ThemeContext = (0, import_react2.createContext)(defaultTheme2);
var ThemeProvider = ThemeContext.Provider;

// node_modules/@atlaskit/atlassian-navigation/dist/esm/theme/use-theme.js
var import_react3 = __toESM(require_react());
var useTheme = function useTheme2() {
  return (0, import_react3.useContext)(ThemeContext);
};

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/PrimaryItemsContainer/index.js
init_extends();
init_slicedToArray();
var import_react15 = __toESM(require_react());
init_emotion_react_browser_development_esm();

// node_modules/@atlaskit/width-detector/dist/esm/WidthDetector.js
init_extends();
init_objectWithoutProperties();
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
init_defineProperty();
var import_react4 = __toESM(require_react());

// node_modules/raf-schd/dist/raf-schd.esm.js
var rafSchd = function rafSchd2(fn) {
  var lastArgs = [];
  var frameId = null;
  var wrapperFn = function wrapperFn2() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    lastArgs = args;
    if (frameId) {
      return;
    }
    frameId = requestAnimationFrame(function() {
      frameId = null;
      fn.apply(void 0, lastArgs);
    });
  };
  wrapperFn.cancel = function() {
    if (!frameId) {
      return;
    }
    cancelAnimationFrame(frameId);
    frameId = null;
  };
  return wrapperFn;
};
var raf_schd_esm_default = rafSchd;

// node_modules/@atlaskit/width-detector/dist/esm/WidthDetector.js
var _excluded = ["containerStyle", "onResize", "children"];
function ownKeys3(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread3(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys3(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys3(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _callSuper(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
    return !!t;
  })();
}
var containerDivStyle = {
  width: "100%",
  position: "relative"
};
var sizerStyle = {
  display: "block",
  position: "absolute",
  top: 0,
  left: 0,
  height: 0,
  width: "100%",
  opacity: 0,
  overflow: "hidden",
  pointerEvents: "none",
  zIndex: -1
};
var WidthDetector = function(_React$Component) {
  function WidthDetector2(props) {
    var _this;
    _classCallCheck(this, WidthDetector2);
    _this = _callSuper(this, WidthDetector2, [props]);
    _defineProperty(_this, "state", {});
    _defineProperty(_this, "handleResize", raf_schd_esm_default(function() {
      var _this2 = _this, container = _this2.container;
      if (!container) {
        return;
      }
      var width = container.offsetWidth;
      _this.setState({
        width
      });
      if (_this.props.onResize) {
        _this.props.onResize(width);
      }
    }));
    _defineProperty(_this, "handleContainerRef", function(ref) {
      if (!ref) {
        return;
      }
      _this.container = ref;
    });
    _defineProperty(_this, "handleObjectRef", function(ref) {
      if (!ref) {
        return;
      }
      _this.resizeObject = ref;
    });
    _defineProperty(_this, "handleObjectLoad", function() {
      if (!_this.resizeObject) {
        return;
      }
      _this.resizeObjectDocument = _this.resizeObject.contentDocument.defaultView;
      _this.resizeObjectDocument.addEventListener("resize", _this.handleResize);
      _this.handleResize();
    });
    console.warn("WidthDetector will be deprecated, please use WidthObserver from @atlaskit/width-detector instead.");
    return _this;
  }
  _inherits(WidthDetector2, _React$Component);
  return _createClass(WidthDetector2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.resizeObject) {
        this.resizeObject.data = "about:blank";
      }
      this.handleResize();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.handleResize.cancel();
      if (this.resizeObjectDocument) {
        this.resizeObjectDocument.removeEventListener("resize", this.handleResize);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var sizerEl = import_react4.default.createElement(import_react4.default.Fragment, null, import_react4.default.createElement("object", {
        type: "text/html",
        style: sizerStyle,
        ref: this.handleObjectRef,
        onLoad: this.handleObjectLoad,
        "aria-hidden": true,
        tabIndex: -1
      }));
      var _this$props = this.props, containerStyle = _this$props.containerStyle, onResize = _this$props.onResize, children = _this$props.children, props = _objectWithoutProperties(_this$props, _excluded);
      return import_react4.default.createElement("div", _extends({}, props, {
        // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
        style: _objectSpread3(_objectSpread3({}, containerDivStyle), containerStyle),
        ref: this.handleContainerRef
      }), children(this.state.width), sizerEl);
    }
  }]);
}(import_react4.default.Component);
_defineProperty(WidthDetector, "defaultProps", {
  containerStyle: {}
});

// node_modules/@atlaskit/width-detector/dist/esm/WidthObserver/index.js
var import_react7 = __toESM(require_react());

// node_modules/@atlaskit/width-detector/dist/esm/WidthObserver/width-detector-observer.js
init_slicedToArray();
var import_react6 = __toESM(require_react());

// node_modules/@atlaskit/width-detector/dist/esm/WidthObserver/hooks.js
init_slicedToArray();
var import_react5 = __toESM(require_react());
function useInView() {
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var ref = import_react5.default.useRef();
  var observerInstance = import_react5.default.useRef();
  var _React$useState = import_react5.default.useState({
    inView: false,
    entry: void 0,
    target: void 0
  }), _React$useState2 = _slicedToArray(_React$useState, 2), state = _React$useState2[0], setState = _React$useState2[1];
  var threshold = options.threshold, root = options.root, rootMargin = options.rootMargin;
  var setRef = import_react5.default.useCallback(function(node) {
    observerInstance.current = new IntersectionObserver(function(entries) {
      if (entries && entries.length) {
        var intersection = entries[0];
        var isIntersecting = intersection.isIntersecting, intersectionRatio = intersection.intersectionRatio;
        if (intersectionRatio >= 0) {
          var numericThreshold = typeof threshold === "number" ? threshold : 0;
          var inView = intersectionRatio >= numericThreshold;
          if (isIntersecting !== void 0) {
            inView = inView && isIntersecting;
          }
          setState({
            inView,
            entry: intersection,
            target: node
          });
        }
      }
    }, {
      threshold,
      root,
      rootMargin
    });
    if (ref.current) {
      observerInstance.current.unobserve(ref.current);
    }
    if (node) {
      observerInstance.current.observe(node);
    }
    ref.current = node;
  }, [threshold, root, rootMargin]);
  import_react5.default.useEffect(function() {
    return function() {
      if (observerInstance.current && ref.current) {
        observerInstance.current.unobserve(ref.current);
      }
    };
  }, []);
  return [setRef, state.inView, state.target, state.entry];
}

// node_modules/@atlaskit/width-detector/dist/esm/WidthObserver/width-detector-observer.js
var WidthDetectorObserver = import_react6.default.memo(function(_ref) {
  var setWidth = _ref.setWidth, offscreen = _ref.offscreen;
  var _useInView = useInView({
    /* Optional options */
    threshold: 0
  }), _useInView2 = _slicedToArray(_useInView, 3), inViewRef = _useInView2[0], inView = _useInView2[1], target = _useInView2[2];
  var observer = import_react6.default.useRef(function() {
    if (typeof window === "undefined") {
      return null;
    }
    return new ResizeObserver(function(entries) {
      if (!Array.isArray(entries) || !entries.length) {
        return;
      }
      var width = entries[0].contentRect.width;
      setWidth(Math.round(width));
    });
  });
  import_react6.default.useEffect(function() {
    var currentObserver = observer.current;
    var resizeObserver = currentObserver();
    if (resizeObserver === null) {
      return;
    }
    if (target) {
      if (inView || offscreen) {
        resizeObserver.observe(target);
      } else {
        resizeObserver.unobserve(target);
      }
    }
    return function() {
      resizeObserver.disconnect();
    };
  }, [target, inView, offscreen]);
  return import_react6.default.createElement("div", {
    style: {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      display: "block",
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      width: "100%",
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      position: "absolute"
    },
    ref: inViewRef
  });
});

// node_modules/@atlaskit/width-detector/dist/esm/WidthObserver/index.js
var WidthObserver = import_react7.default.memo(function(props) {
  return import_react7.default.createElement(WidthDetectorObserver, {
    setWidth: props.setWidth,
    offscreen: props.offscreen
  });
});

// node_modules/@atlaskit/atlassian-navigation/dist/esm/controllers/overflow/index.js
init_slicedToArray();
var import_react8 = __toESM(require_react());
var import_throttle = __toESM(require_throttle());
var THROTTLE_INTERVAL = 16 * 4;
var ITEM_APPROX_MINWIDTH = 70;
var calculateHash = function calculateHash2(w, n) {
  return w + "#" + n;
};
var updateHashRef = function updateHashRef2(currentRef, value) {
  currentRef.unshift(value);
  currentRef.length = 3;
};
var OverflowContext = (0, import_react8.createContext)({
  isVisible: true,
  openOverflowMenu: noop,
  closeOverflowMenu: noop
});
var OverflowProvider = function OverflowProvider2(_ref) {
  var children = _ref.children, isVisible = _ref.isVisible, openOverflowMenu = _ref.openOverflowMenu, closeOverflowMenu = _ref.closeOverflowMenu;
  var Provider = OverflowContext.Provider;
  var value = (0, import_react8.useMemo)(function() {
    return {
      isVisible,
      openOverflowMenu,
      closeOverflowMenu
    };
  }, [isVisible, openOverflowMenu, closeOverflowMenu]);
  return import_react8.default.createElement(Provider, {
    value
  }, children);
};
var useOverflowStatus = function useOverflowStatus2() {
  return (0, import_react8.useContext)(OverflowContext);
};
var useOverflowController = function useOverflowController2(nodes) {
  var items = import_react8.default.Children.toArray(nodes);
  var _useState = (0, import_react8.useState)(9999), _useState2 = _slicedToArray(_useState, 2), width = _useState2[0], setWidth = _useState2[1];
  var _useState3 = (0, import_react8.useState)(items.length), _useState4 = _slicedToArray(_useState3, 2), itemsLimit = _useState4[0], setItemsLimit = _useState4[1];
  var _useState5 = (0, import_react8.useState)({}), _useState6 = _slicedToArray(_useState5, 2), forceEffectValue = _useState6[0], triggerForceEffect = _useState6[1];
  var itemsWidths = (0, import_react8.useRef)([]).current;
  var hashRef = (0, import_react8.useRef)([]);
  var throttleSetWidth = (0, import_react8.useCallback)((0, import_throttle.default)(setWidth, THROTTLE_INTERVAL), [setWidth]);
  (0, import_react8.useEffect)(function() {
    var lastItemWidth = itemsWidths[itemsLimit] || 0;
    var wasJustLimited = lastItemWidth < 0;
    var currentHash = calculateHash(width, itemsLimit);
    if (hashRef.current[0] === currentHash) {
      var t = setTimeout(function() {
        updateHashRef(hashRef.current, "");
        triggerForceEffect({});
      }, THROTTLE_INTERVAL * 1.5);
      return function() {
        return clearTimeout(t);
      };
    }
    if (wasJustLimited) {
      var partialWidth = Math.max(Math.min(width + lastItemWidth, ITEM_APPROX_MINWIDTH * 2), ITEM_APPROX_MINWIDTH);
      itemsWidths[itemsLimit] = partialWidth;
    }
    if (width < ITEM_APPROX_MINWIDTH * 0.9 && itemsLimit) {
      var nextHash = calculateHash(width, itemsLimit - 1);
      if (hashRef.current.indexOf(nextHash) === -1) {
        setItemsLimit(itemsLimit - 1);
        itemsWidths[itemsLimit - 1] = -(width || 1);
        updateHashRef(hashRef.current, nextHash);
      }
      return;
    }
    var currentLastItemWidth = itemsWidths[itemsLimit] || 0;
    if (width - currentLastItemWidth > ITEM_APPROX_MINWIDTH * 1.1 && itemsLimit < items.length) {
      var _nextHash = calculateHash(width, itemsLimit + 1);
      if (hashRef.current.indexOf(_nextHash) === -1) {
        setItemsLimit(itemsLimit + 1);
        updateHashRef(hashRef.current, _nextHash);
      }
      return;
    }
  }, [width, hashRef, itemsLimit, itemsWidths, forceEffectValue, items.length]);
  return {
    visibleItems: items.slice(0, itemsLimit),
    overflowItems: items.slice(itemsLimit),
    updateWidth: throttleSetWidth
  };
};

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/PrimaryDropdownButton/index.js
init_extends();
init_objectWithoutProperties();
var import_react13 = __toESM(require_react());
init_emotion_react_browser_development_esm();
var import_chevron_down = __toESM(require_chevron_down());
var import_chevron_down2 = __toESM(require_chevron_down2());
init_esm();

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/PrimaryButton/index.js
init_extends();
init_defineProperty();
init_objectWithoutProperties();
var import_react11 = __toESM(require_react());
init_emotion_react_browser_development_esm();

// node_modules/@atlaskit/button/dist/esm/old-button/custom-theme-button/custom-theme-button.js
init_extends();
init_slicedToArray();
init_defineProperty();
init_objectWithoutProperties();
var import_react10 = __toESM(require_react());

// node_modules/@atlaskit/button/dist/esm/old-button/shared/loading-spinner.js
var import_react9 = __toESM(require_react());
function getSpinnerAppearance(_ref) {
  var appearance = _ref.appearance, isDisabled = _ref.isDisabled, isSelected = _ref.isSelected;
  if (isDisabled) {
    return "inherit";
  }
  if (isSelected) {
    return "invert";
  }
  if (appearance === "primary" || appearance === "danger") {
    return "invert";
  }
  return "inherit";
}
function LoadingSpinner(_ref2) {
  var appearance = _ref2.appearance, isDisabled = _ref2.isDisabled, isSelected = _ref2.isSelected, _ref2$spacing = _ref2.spacing, spacing = _ref2$spacing === void 0 ? "default" : _ref2$spacing;
  var size = spacing === "default" ? "medium" : "small";
  return import_react9.default.createElement(spinner_default, {
    size,
    label: ", Loading",
    appearance: getSpinnerAppearance({
      appearance,
      isDisabled,
      isSelected
    })
  });
}

// node_modules/@atlaskit/button/dist/esm/old-button/custom-theme-button/theme.js
init_defineProperty();
function ownKeys4(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread4(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys4(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys4(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var stateToSelectorMap = {
  focus: "&:focus",
  focusSelected: "&:focus",
  hover: "&:hover",
  active: "&:active",
  disabled: "&[disabled]"
};
function getCustomCss(_ref) {
  var _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? "default" : _ref$appearance, _ref$spacing = _ref.spacing, spacing = _ref$spacing === void 0 ? "default" : _ref$spacing, _ref$mode = _ref.mode, mode = _ref$mode === void 0 ? "light" : _ref$mode, _ref$isSelected = _ref.isSelected, isSelected = _ref$isSelected === void 0 ? false : _ref$isSelected, _ref$shouldFitContain = _ref.shouldFitContainer, shouldFitContainer = _ref$shouldFitContain === void 0 ? false : _ref$shouldFitContain, _ref$iconIsOnlyChild = _ref.iconIsOnlyChild, iconIsOnlyChild = _ref$iconIsOnlyChild === void 0 ? false : _ref$iconIsOnlyChild, _ref$isLoading = _ref.isLoading, isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading, state = _ref.state;
  var result = getCss({
    appearance,
    spacing,
    mode,
    isSelected,
    shouldFitContainer,
    isOnlySingleIcon: iconIsOnlyChild
  });
  result.outline = "none";
  var selector = stateToSelectorMap[state];
  if (selector) {
    result = _objectSpread4(_objectSpread4({}, result), result[selector]);
  }
  if (isLoading) {
    result = _objectSpread4(_objectSpread4({}, result), result['&[data-has-overlay="true"]']);
  }
  Object.keys(result).forEach(function(key) {
    if (key === "&::-moz-focus-inner") {
      return;
    }
    if (key.indexOf("&") === 0) {
      delete result[key];
    }
  });
  return result;
}
function getSpecifiers(styles) {
  return {
    "&, &:hover, &:active, &:focus, &:focus-visible, &:visited, &:disabled, &[disabled]": styles
  };
}
function defaultThemeFn(current, values) {
  return current(values);
}
var Theme = createTheme(function(themeProps) {
  return {
    buttonStyles: getCustomCss(themeProps),
    // No styles being applied directly to spinner by default
    // Keeping this for legacy compat. We could remove it, but given
    // that we are changing theme soon there is no point
    spinnerStyles: {}
  };
});
var theme_default2 = Theme;

// node_modules/@atlaskit/button/dist/esm/old-button/custom-theme-button/custom-theme-button.js
var _excluded2 = ["appearance", "autoFocus", "isDisabled", "isSelected", "shouldFitContainer", "spacing", "isLoading", "onMouseEnter", "onMouseLeave", "onMouseDown", "onMouseUp", "onFocus", "onBlur", "theme"];
function ownKeys5(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread5(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys5(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys5(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function getInteractionState(_ref) {
  var _ref$isDisabled = _ref.isDisabled, isDisabled = _ref$isDisabled === void 0 ? false : _ref$isDisabled, _ref$isActive = _ref.isActive, isActive = _ref$isActive === void 0 ? false : _ref$isActive, _ref$isFocus = _ref.isFocus, isFocus = _ref$isFocus === void 0 ? false : _ref$isFocus, _ref$isHover = _ref.isHover, isHover = _ref$isHover === void 0 ? false : _ref$isHover, _ref$isSelected = _ref.isSelected, isSelected = _ref$isSelected === void 0 ? false : _ref$isSelected, _ref$isLoading = _ref.isLoading, isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading;
  if (isDisabled) {
    return "disabled";
  }
  if (isSelected && isFocus) {
    return "focusSelected";
  }
  if (isSelected) {
    return "selected";
  }
  if (!isLoading && isActive) {
    return "active";
  }
  if (!isLoading && isHover) {
    return "hover";
  }
  if (isFocus) {
    return "focus";
  }
  return "default";
}
var initial = {
  isHover: false,
  isActive: false,
  isFocus: false
};
var CustomThemeButton = import_react10.default.memo(import_react10.default.forwardRef(function CustomThemeButton2(_ref2, ref) {
  var _ref2$appearance = _ref2.appearance, appearance = _ref2$appearance === void 0 ? "default" : _ref2$appearance, _ref2$autoFocus = _ref2.autoFocus, autoFocus = _ref2$autoFocus === void 0 ? false : _ref2$autoFocus, _ref2$isDisabled = _ref2.isDisabled, isDisabled = _ref2$isDisabled === void 0 ? false : _ref2$isDisabled, _ref2$isSelected = _ref2.isSelected, isSelected = _ref2$isSelected === void 0 ? false : _ref2$isSelected, _ref2$shouldFitContai = _ref2.shouldFitContainer, shouldFitContainer = _ref2$shouldFitContai === void 0 ? false : _ref2$shouldFitContai, _ref2$spacing = _ref2.spacing, spacing = _ref2$spacing === void 0 ? "default" : _ref2$spacing, _ref2$isLoading = _ref2.isLoading, isLoading = _ref2$isLoading === void 0 ? false : _ref2$isLoading, providedOnMouseEnter = _ref2.onMouseEnter, providedOnMouseLeave = _ref2.onMouseLeave, providedOnMouseDown = _ref2.onMouseDown, providedOnMouseUp = _ref2.onMouseUp, providedOnFocus = _ref2.onFocus, providedOnBlur = _ref2.onBlur, _ref2$theme = _ref2.theme, theme = _ref2$theme === void 0 ? defaultThemeFn : _ref2$theme, rest = _objectWithoutProperties(_ref2, _excluded2);
  var restProps = _objectSpread5({
    appearance,
    autoFocus,
    isDisabled,
    isSelected,
    shouldFitContainer,
    spacing
  }, rest);
  var _useState = (0, import_react10.useState)(initial), _useState2 = _slicedToArray(_useState, 2), state = _useState2[0], setState = _useState2[1];
  var onMouseEnter = (0, import_react10.useCallback)(function(event) {
    setState(function(current) {
      return _objectSpread5(_objectSpread5({}, current), {}, {
        isHover: true
      });
    });
    if (providedOnMouseEnter) {
      providedOnMouseEnter(event);
    }
  }, [providedOnMouseEnter]);
  var onMouseLeave = (0, import_react10.useCallback)(function(event) {
    setState(function(current) {
      return _objectSpread5(_objectSpread5({}, current), {}, {
        isHover: false,
        isActive: false
      });
    });
    if (providedOnMouseLeave) {
      providedOnMouseLeave(event);
    }
  }, [providedOnMouseLeave]);
  var onMouseDown = (0, import_react10.useCallback)(function(event) {
    setState(function(current) {
      return _objectSpread5(_objectSpread5({}, current), {}, {
        isActive: true
      });
    });
    if (providedOnMouseDown) {
      providedOnMouseDown(event);
    }
  }, [providedOnMouseDown]);
  var onMouseUp = (0, import_react10.useCallback)(function(event) {
    setState(function(current) {
      return _objectSpread5(_objectSpread5({}, current), {}, {
        isActive: false
      });
    });
    if (providedOnMouseUp) {
      providedOnMouseUp(event);
    }
  }, [providedOnMouseUp]);
  var onFocus = (0, import_react10.useCallback)(function(event) {
    setState(function(current) {
      return _objectSpread5(_objectSpread5({}, current), {}, {
        isFocus: true
      });
    });
    if (providedOnFocus) {
      providedOnFocus(event);
    }
  }, [providedOnFocus]);
  var onBlur = (0, import_react10.useCallback)(function(event) {
    setState(function(current) {
      return _objectSpread5(_objectSpread5({}, current), {}, {
        isFocus: false
      });
    });
    if (providedOnBlur) {
      providedOnBlur(event);
    }
  }, [providedOnBlur]);
  return import_react10.default.createElement(theme_default2.Provider, {
    value: theme
  }, import_react10.default.createElement(theme_default.Consumer, null, function(_ref3) {
    var mode = _ref3.mode;
    return import_react10.default.createElement(theme_default2.Consumer, _extends({
      mode,
      state: getInteractionState(_objectSpread5(_objectSpread5({}, state), {}, {
        isLoading,
        isSelected: restProps.isSelected,
        isDisabled: restProps.isDisabled
      })),
      iconIsOnlyChild: getIsOnlySingleIcon(restProps),
      isLoading
    }, restProps), function(_ref4) {
      var buttonStyles = _ref4.buttonStyles;
      return import_react10.default.createElement(button_base_default, _extends({}, restProps, {
        ref,
        overlay: isLoading ? import_react10.default.createElement(LoadingSpinner, restProps) : null,
        "aria-disabled": isLoading || restProps["aria-disabled"],
        onMouseEnter,
        onMouseLeave,
        onMouseDown,
        onMouseUp,
        onFocus,
        onBlur,
        buttonCss: getSpecifiers(buttonStyles)
      }));
    });
  }));
}));
CustomThemeButton.displayName = "CustomThemeButton";
var custom_theme_button_default = CustomThemeButton;

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/PrimaryButton/styles.js
init_defineProperty();
function ownKeys6(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread6(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys6(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys6(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var getPrimaryButtonTheme = function getPrimaryButtonTheme2(_ref) {
  var primaryButton = _ref.mode.primaryButton;
  return function(current, props) {
    var _current = current(props), buttonStyles = _current.buttonStyles, spinnerStyles = _current.spinnerStyles;
    return {
      buttonStyles: _objectSpread6(_objectSpread6(_objectSpread6(_objectSpread6({}, buttonStyles), primaryButton.default), props.isSelected && primaryButton.selected), {}, {
        fontWeight: "var(--ds-font-weight-medium, 500)",
        padding: "0 ".concat("var(--ds-space-050, 4px)"),
        marginLeft: 0,
        marginRight: 0,
        ":hover": props.isSelected ? primaryButton.selectedHover : primaryButton.hover,
        ":focus": primaryButton.focus,
        // :active doesn't work in FF, because we do a
        // e.preventDefault() on mouse down in Button.
        // '&&' is required to add more CSS specificity
        // && it not a valid CSSObject property
        // @ts-ignore
        "&&": _objectSpread6({}, props.state === "active" && primaryButton.active)
      }),
      spinnerStyles
    };
  };
};

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/PrimaryButton/index.js
var _excluded3 = ["children", "component", "isHighlighted", "isLoading", "isSelected", "onClick", "testId", "theme", "tooltip"];
var VAR_BUTTON_SELECTED_COLOR = "--button-selected-color";
var VAR_BUTTON_SELECTED_BORDER_COLOR = "--button-selected-border-color";
var buttonBaseStyles = css({
  display: "flex",
  height: "100%",
  position: "relative",
  alignItems: "center",
  justifyContent: "center",
  flexDirection: "column"
});
var buttonHighlightedStyles = css({
  // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors, @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  "&& > *": {
    color: "var(".concat(VAR_BUTTON_SELECTED_COLOR, ")")
  },
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  "&:after": {
    height: 3,
    position: "absolute",
    backgroundColor: "var(".concat(VAR_BUTTON_SELECTED_BORDER_COLOR, ")"),
    borderStartEndRadius: "var(--ds-border-radius-050, 1px)",
    borderStartStartRadius: "var(--ds-border-radius-050, 1px)",
    content: '""',
    insetBlockEnd: 0,
    insetInlineEnd: "var(--ds-space-050, 4px)",
    insetInlineStart: "var(--ds-space-050, 4px)"
  }
});
var PrimaryButton = (0, import_react11.forwardRef)(function(props, ref) {
  var children = props.children, component = props.component, isHighlighted = props.isHighlighted, isLoading = props.isLoading, isSelected = props.isSelected, onClick = props.onClick, testId = props.testId, theme = props.theme, tooltip = props.tooltip, rest = _objectWithoutProperties(props, _excluded3);
  var themeFromContext = useTheme();
  var button = jsx("div", {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    style: _defineProperty(_defineProperty({}, VAR_BUTTON_SELECTED_COLOR, themeFromContext.mode.primaryButton.selected.color), VAR_BUTTON_SELECTED_BORDER_COLOR, themeFromContext.mode.primaryButton.selected.borderColor),
    css: [buttonBaseStyles, isHighlighted && buttonHighlightedStyles],
    role: "listitem",
    "data-vc": "primary-button"
  }, jsx(custom_theme_button_default, _extends({
    appearance: "primary",
    component,
    isLoading,
    isSelected,
    onClick,
    ref,
    testId,
    theme: theme || getPrimaryButtonTheme(themeFromContext)
    // These are all explicit, leaving it in just in case
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest), children));
  if (tooltip) {
    return jsx(tooltip_default, {
      content: tooltip,
      hideTooltipOnClick: true
    }, button);
  }
  return button;
});

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/PrimaryDropdownButton/index.js
var _excluded4 = ["component", "isHighlighted", "isLoading", "onClick", "testId", "theme", "tooltip"];
var PrimaryDropdownButton = (0, import_react13.forwardRef)(function(props, ref) {
  var component = props.component, isHighlighted = props.isHighlighted, isLoading = props.isLoading, onClick = props.onClick, testId = props.testId, theme = props.theme, tooltip = props.tooltip, rest = _objectWithoutProperties(props, _excluded4);
  return jsx(PrimaryButton, _extends({
    component,
    iconAfter: (
      // eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-prefix
      fg("platform-component-visual-refresh") ? jsx(import_chevron_down.default, {
        label: "",
        color: "currentColor"
      }) : jsx(import_chevron_down2.default, {
        LEGACY_margin: "0 ".concat("var(--ds-space-negative-050, -4px)", " 0 ", "var(--ds-space-negative-100, -8px)"),
        color: "currentColor",
        label: ""
      })
    ),
    isHighlighted,
    isLoading,
    onClick,
    ref,
    testId,
    theme,
    tooltip
    // These are mostly explicit, leaving it in just in case
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest));
});

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/PrimaryItemsContainer/index.js
var containerStyles = css({
  display: "flex",
  height: "100%",
  position: "relative",
  alignItems: "stretch",
  flexBasis: 0,
  flexGrow: 1,
  flexShrink: 0,
  // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  "& > *": {
    margin: "0 ".concat("var(--ds-space-050, 4px)"),
    flexShrink: 0
  }
});
var widthObserverContainerStyles = css({
  width: "100%",
  minWidth: "1px",
  margin: "0px",
  position: "relative",
  flexShrink: 1
});
var overflowItemsStyles = css({
  color: "var(--ds-text, ".concat(N700, ")")
});
var PrimaryItemsContainer = function PrimaryItemsContainer2(_ref) {
  var moreLabel = _ref.moreLabel, items = _ref.items, Create3 = _ref.create, theme = _ref.theme, testId = _ref.testId;
  var _useState = (0, import_react15.useState)(false), _useState2 = _slicedToArray(_useState, 2), isMoreOpen = _useState2[0], setIsMoreOpen = _useState2[1];
  var _useOverflowControlle = useOverflowController(items), updateWidth = _useOverflowControlle.updateWidth, visibleItems = _useOverflowControlle.visibleItems, overflowItems = _useOverflowControlle.overflowItems;
  var onMoreClick = (0, import_react15.useCallback)(function() {
    setIsMoreOpen(!isMoreOpen);
  }, [isMoreOpen, setIsMoreOpen]);
  var onMoreClose = (0, import_react15.useCallback)(function() {
    setIsMoreOpen(false);
  }, []);
  var openOverflowMenu = (0, import_react15.useCallback)(function() {
    setIsMoreOpen(true);
  }, []);
  var trigger = (0, import_react15.useCallback)(function(triggerProps) {
    return jsx(PrimaryDropdownButton, _extends({
      onClick: onMoreClick,
      isSelected: isMoreOpen,
      testId: testId ? "".concat(testId, "-overflow-menu-trigger") : "overflow-menu-trigger"
    }, triggerProps), moreLabel);
  }, [moreLabel, onMoreClick, isMoreOpen, testId]);
  var content = (0, import_react15.useCallback)(
    function() {
      return jsx(OverflowProvider, {
        isVisible: false,
        openOverflowMenu,
        closeOverflowMenu: onMoreClose
      }, jsx("div", {
        css: overflowItemsStyles
      }, overflowItems));
    },
    // Overflow items has an unstable reference - so we will only recalculate
    // content if `overflowItems` length changes.
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [overflowItems.length, openOverflowMenu, onMoreClose]
  );
  return jsx("div", {
    css: containerStyles,
    "data-testid": testId && "".concat(testId, "-primary-actions"),
    role: "list"
  }, jsx(OverflowProvider, {
    isVisible: true,
    openOverflowMenu,
    closeOverflowMenu: onMoreClose
  }, visibleItems), overflowItems.length > 0 && jsx(esm_default, {
    shouldRenderToParent: true,
    placement: "bottom-start",
    content,
    isOpen: isMoreOpen,
    onClose: onMoreClose,
    trigger,
    testId: testId ? "".concat(testId, "-overflow-menu-popup") : "overflow-menu-popup"
  }), Create3 && jsx(Create3, null), jsx("div", {
    css: widthObserverContainerStyles
  }, jsx(WidthObserver, {
    offscreen: true,
    setWidth: updateWidth
  })));
};

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/AtlassianNavigation/index.js
var containerStyles2 = css({
  display: "flex",
  boxSizing: "border-box",
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  height: HORIZONTAL_GLOBAL_NAV_HEIGHT,
  position: "relative",
  alignItems: "center",
  justifyContent: "space-between",
  flexShrink: 0,
  borderBlockEnd: "1px solid ".concat("var(--ds-border, ".concat(N30, ")")),
  paddingInlineEnd: "var(--ds-space-150, 12px)",
  paddingInlineStart: "var(--ds-space-150, 12px)"
});
var leftStyles = css({
  display: "flex",
  minWidth: 0,
  height: "inherit",
  alignItems: "center",
  flexGrow: 1,
  // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  "& > *": {
    flexShrink: 0
  }
});
var rightStyles = css({
  display: "flex",
  alignItems: "center",
  flexShrink: 0,
  // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  "& > *": {
    flexShrink: 0,
    marginInlineEnd: "var(--ds-space-050, 4px)"
  }
});
var noRightMarginStyles = css({
  marginInlineEnd: 0
});
var analyticsData = {
  attributes: {
    navigationLayer: "global"
  },
  componentName: "atlassianNavigation"
};
var AtlassianNavigation = function AtlassianNavigation2(props) {
  var label = props.label, _props$primaryItems = props.primaryItems, primaryItems = _props$primaryItems === void 0 ? [] : _props$primaryItems, AppSwitcher2 = props.renderAppSwitcher, create = props.renderCreate, Help2 = props.renderHelp, Notifications2 = props.renderNotifications, ProductHome3 = props.renderProductHome, Profile2 = props.renderProfile, Search3 = props.renderSearch, SignIn3 = props.renderSignIn, Settings2 = props.renderSettings, _props$moreLabel = props.moreLabel, moreLabel = _props$moreLabel === void 0 ? "…" : _props$moreLabel, _props$theme = props.theme, theme = _props$theme === void 0 ? defaultTheme2 : _props$theme, testId = props.testId, _props$isServer = props.isServer, isServer = _props$isServer === void 0 ? false : _props$isServer, _props$isSSRPlacehold = props.isSSRPlaceholderEnabled, isSSRPlaceholderEnabled = _props$isSSRPlacehold === void 0 ? false : _props$isSSRPlacehold;
  return jsx(ThemeProvider, {
    value: theme
  }, jsx(NavigationAnalyticsContext, {
    data: analyticsData
  }, jsx("header", _extends({
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    style: theme.mode.navigation,
    css: containerStyles2,
    "data-testid": testId && "".concat(testId, "-header"),
    role: "banner",
    "data-vc": "atlassian-navigation".concat(isServer ? "-ssr" : "")
  }, isServer && isSSRPlaceholderEnabled && {
    "data-ssr-placeholder": "atlassian-navigation-placeholder"
  }, !isServer && isSSRPlaceholderEnabled && {
    "data-ssr-placeholder-replace": "atlassian-navigation-placeholder"
  }), jsx("nav", {
    css: leftStyles,
    "aria-label": label
  }, AppSwitcher2 && jsx(AppSwitcher2, null), ProductHome3 && jsx(ProductHome3, null), jsx(PrimaryItemsContainer, {
    testId,
    moreLabel,
    items: primaryItems,
    create,
    theme
  })), jsx("div", {
    css: rightStyles,
    "data-testid": testId && "".concat(testId, "-secondary-actions")
  }, Search3 && jsx(Search3, null), jsx("div", {
    role: "list",
    css: [rightStyles, noRightMarginStyles],
    "data-vc": "atlassian-navigation-secondary-actions"
  }, Notifications2 && jsx(Notifications2, null), Help2 && jsx(Help2, null), Settings2 && jsx(Settings2, null), SignIn3 && jsx(SignIn3, null), Profile2 && jsx(Profile2, null))))));
};

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/AppSwitcher/index.js
init_extends();
init_objectWithoutProperties();
var import_react19 = __toESM(require_react());
var import_app_switcher = __toESM(require_app_switcher());
var import_app_switcher2 = __toESM(require_app_switcher3());

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/IconButton/index.js
init_extends();
init_objectWithoutProperties();
var import_react18 = __toESM(require_react());

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/IconButton/styles.js
init_defineProperty();
function ownKeys7(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread7(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys7(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys7(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var getIconButtonTheme = function getIconButtonTheme2(_ref) {
  var iconButton = _ref.mode.iconButton;
  return function(current, props) {
    var _current = current(props), buttonStyles = _current.buttonStyles, spinnerStyles = _current.spinnerStyles;
    return {
      buttonStyles: _objectSpread7(_objectSpread7(_objectSpread7(_objectSpread7({}, buttonStyles), {}, {
        borderRadius: "var(--ds-border-radius-circle, 100%)",
        display: "flex",
        margin: "0 ".concat("var(--ds-space-025, 2px)"),
        // TODO Delete this comment after verifying space token -> previous value `4`
        padding: "var(--ds-space-050, 4px)",
        height: "auto",
        fontWeight: "var(--ds-font-weight-medium, 500)"
      }, iconButton.default), {}, {
        ":hover": iconButton.hover,
        ":focus": iconButton.focus,
        // :active doesn't work in FF, because we do a
        // e.preventDefault() on mouse down in Button.
        // '&&' is required to add more CSS specificity
        // && it not a valid CSSObject property
        // @ts-ignore
        "&&": _objectSpread7({}, props.state === "active" && iconButton.active)
      }, props.state === "selected" && iconButton.selected), {}, {
        "> span": {
          margin: 0
        }
      }),
      spinnerStyles
    };
  };
};

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/IconButton/index.js
var _excluded5 = ["icon", "label", "testId", "tooltip", "component", "href", "id", "isDisabled", "isSelected", "onBlur", "onClick", "onFocus", "onMouseDown", "onMouseEnter", "onMouseLeave", "onMouseUp", "target", "theme", "isTooltipAnnouncementDisabled"];
var IconButton = (0, import_react18.forwardRef)(function(props, ref) {
  var icon = props.icon, label = props.label, testId = props.testId, tooltip = props.tooltip, component = props.component, href = props.href, id = props.id, isDisabled = props.isDisabled, isSelected = props.isSelected, onBlur = props.onBlur, onClick = props.onClick, onFocus = props.onFocus, onMouseDown = props.onMouseDown, onMouseEnter = props.onMouseEnter, onMouseLeave = props.onMouseLeave, onMouseUp = props.onMouseUp, target = props.target, theme = props.theme, _props$isTooltipAnnou = props.isTooltipAnnouncementDisabled, isTooltipAnnouncementDisabled = _props$isTooltipAnnou === void 0 ? false : _props$isTooltipAnnou, rest = _objectWithoutProperties(props, _excluded5);
  var themeFromContext = useTheme();
  var button = import_react18.default.createElement(custom_theme_button_default, _extends({
    appearance: "primary",
    "aria-label": label,
    component,
    href,
    iconBefore: icon,
    id,
    isDisabled,
    isSelected,
    onBlur,
    onClick,
    onFocus,
    onMouseDown,
    onMouseEnter,
    onMouseLeave,
    onMouseUp,
    ref,
    target,
    testId,
    theme: theme || getIconButtonTheme(themeFromContext)
    // These are all explicit, leaving it in just in case
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest));
  if (tooltip) {
    return import_react18.default.createElement(tooltip_default, {
      content: tooltip,
      hideTooltipOnClick: true,
      isScreenReaderAnnouncementDisabled: isTooltipAnnouncementDisabled
    }, button);
  }
  return button;
});

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/AppSwitcher/index.js
var _excluded6 = ["component", "href", "id", "isDisabled", "isSelected", "label", "onBlur", "onClick", "onFocus", "onMouseDown", "onMouseEnter", "onMouseLeave", "onMouseUp", "target", "testId", "tooltip"];
var _excluded22 = ["component", "href", "id", "isDisabled", "isSelected", "label", "onBlur", "onClick", "onFocus", "onMouseDown", "onMouseEnter", "onMouseLeave", "onMouseUp", "target", "testId", "tooltip"];
var AppSwitcher = (0, import_react19.forwardRef)(function(props, ref) {
  var component = props.component, href = props.href, id = props.id, isDisabled = props.isDisabled, isSelected = props.isSelected, label = props.label, onBlur = props.onBlur, onClick = props.onClick, onFocus = props.onFocus, onMouseDown = props.onMouseDown, onMouseEnter = props.onMouseEnter, onMouseLeave = props.onMouseLeave, onMouseUp = props.onMouseUp, target = props.target, testId = props.testId, tooltip = props.tooltip, rest = _objectWithoutProperties(props, _excluded6);
  return import_react19.default.createElement(IconButton, _extends({
    component,
    href,
    icon: import_react19.default.createElement(import_app_switcher2.default, {
      color: "currentColor",
      spacing: "spacious",
      label: typeof tooltip === "string" ? tooltip : "Switch apps"
    }),
    id,
    isDisabled,
    isSelected,
    label,
    onBlur,
    onClick,
    onFocus,
    onMouseDown,
    onMouseEnter,
    onMouseLeave,
    onMouseUp,
    ref,
    target,
    testId,
    tooltip
    // These are all explicit, leaving it in just in case
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest));
});
var AppSwitcherNav4 = (0, import_react19.forwardRef)(function(props, ref) {
  var component = props.component, href = props.href, id = props.id, isDisabled = props.isDisabled, isSelected = props.isSelected, label = props.label, onBlur = props.onBlur, onClick = props.onClick, onFocus = props.onFocus, onMouseDown = props.onMouseDown, onMouseEnter = props.onMouseEnter, onMouseLeave = props.onMouseLeave, onMouseUp = props.onMouseUp, target = props.target, testId = props.testId, tooltip = props.tooltip, rest = _objectWithoutProperties(props, _excluded22);
  return import_react19.default.createElement(IconButton, _extends({
    icon: import_react19.default.createElement(import_app_switcher.default, {
      label: typeof tooltip === "string" ? tooltip : "Switch apps",
      color: "var(--ds-icon, #44546F)"
    }),
    component,
    href,
    id,
    isDisabled,
    isSelected,
    label,
    onBlur,
    onClick,
    onFocus,
    onMouseDown,
    onMouseEnter,
    onMouseLeave,
    onMouseUp,
    ref,
    target,
    testId,
    tooltip
    // These are all explicit, leaving it in just in case
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest));
});

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/Create/index.js
init_defineProperty();
var import_react20 = __toESM(require_react());
init_emotion_react_browser_development_esm();
var import_add_editor_add = __toESM(require_add_editor_add());

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/Create/styles.js
init_defineProperty();
function ownKeys8(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread8(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys8(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys8(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var getCreateButtonTheme = function getCreateButtonTheme2(_ref) {
  var create = _ref.mode.create;
  return function(current, props) {
    var _current = current(props), buttonStyles = _current.buttonStyles, spinnerStyles = _current.spinnerStyles;
    return {
      buttonStyles: _objectSpread8(_objectSpread8(_objectSpread8({}, buttonStyles), create.default), {}, {
        margin: 0,
        fontWeight: "var(--ds-font-weight-medium, 500)",
        ":hover": create.hover,
        ":focus": create.focus,
        // :active doesn't work in FF, becasue we do a
        // e.preventDefault() on mouse down in Button.
        // '&&' is required to add more CSS specificity
        // && it not a valid CSSObject property
        // @ts-ignore
        "&&": _objectSpread8({}, props.state === "active" && create.active)
      }),
      spinnerStyles
    };
  };
};

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/Create/index.js
var wrapperStyles = css({
  display: "flex",
  alignItems: "center",
  // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  "& [data-hide-on-smallscreens]": _defineProperty({}, "@media (max-width: ".concat(CREATE_BREAKPOINT - 1, "px)"), {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-important-styles -- Ignored via go/DSP-18766
    display: "none !important"
  }),
  // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  "& [data-hide-on-largescreens]": _defineProperty({}, "@media (min-width: ".concat(CREATE_BREAKPOINT, "px)"), {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-important-styles -- Ignored via go/DSP-18766
    display: "none !important"
  }),
  // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors, @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  "&&": {
    marginInlineStart: "var(--ds-space-150, 12px)"
  }
});
var TooltipSwitch = function TooltipSwitch2(_ref) {
  var buttonTooltip = _ref.buttonTooltip, children = _ref.children;
  return buttonTooltip ? jsx(tooltip_default, {
    content: buttonTooltip,
    hideTooltipOnClick: true
  }, children) : jsx(import_react20.Fragment, null, children);
};
var Create = function Create2(_ref2) {
  var onClick = _ref2.onClick, href = _ref2.href, text = _ref2.text, buttonTooltip = _ref2.buttonTooltip, iconButtonTooltip = _ref2.iconButtonTooltip, testId = _ref2.testId, label = _ref2.label;
  var theme = useTheme();
  return jsx("div", {
    css: wrapperStyles,
    role: "listitem",
    "data-testid": "create-button-wrapper"
  }, jsx(TooltipSwitch, {
    buttonTooltip
  }, jsx(custom_theme_button_default, {
    id: "createGlobalItem",
    "aria-label": label,
    onClick,
    href,
    theme: getCreateButtonTheme(theme),
    testId: testId && "".concat(testId, "-button"),
    "data-hide-on-smallscreens": true
  }, text)), jsx(IconButton, {
    id: "createGlobalItemIconButton",
    testId: testId && "".concat(testId, "-icon-button"),
    icon: jsx(import_add_editor_add.default, {
      color: "currentColor",
      spacing: "spacious",
      label: text
    }),
    onClick,
    href,
    tooltip: iconButtonTooltip,
    theme: getCreateButtonTheme(theme),
    "aria-label": text,
    "data-hide-on-largescreens": true
  }));
};

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/Help/index.js
init_extends();
init_objectWithoutProperties();
var import_react23 = __toESM(require_react());
var import_question_circle = __toESM(require_question_circle3());

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/BadgeContainer/index.js
init_emotion_react_browser_development_esm();
var badgeContainerStyles = css({
  position: "absolute",
  insetBlockStart: "var(--ds-space-negative-050, -4px)",
  insetInlineEnd: "var(--ds-space-negative-025, -2px)",
  pointerEvents: "none"
});
var containerStyles3 = css({
  position: "relative"
});
var BadgeContainer = function BadgeContainer2(props) {
  var badgeId = props.id, Badge = props.badge, children = props.children, role = props.role;
  return jsx("div", {
    css: containerStyles3,
    role
  }, children, jsx("div", {
    css: badgeContainerStyles,
    id: badgeId,
    "aria-hidden": true
  }, jsx(Badge, null)));
};

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/Help/index.js
var _excluded7 = ["badge", "component", "href", "id", "isDisabled", "isSelected", "label", "onBlur", "onClick", "onFocus", "onMouseDown", "onMouseEnter", "onMouseLeave", "onMouseUp", "target", "testId", "tooltip"];
var HELP_NOTIFICATION_BADGE_ID = "atlassian-navigation-help-notification-count";
var Help = (0, import_react23.forwardRef)(function(props, ref) {
  var badge = props.badge, component = props.component, href = props.href, id = props.id, isDisabled = props.isDisabled, isSelected = props.isSelected, label = props.label, onBlur = props.onBlur, onClick = props.onClick, onFocus = props.onFocus, onMouseDown = props.onMouseDown, onMouseEnter = props.onMouseEnter, onMouseLeave = props.onMouseLeave, onMouseUp = props.onMouseUp, target = props.target, testId = props.testId, tooltip = props.tooltip, rest = _objectWithoutProperties(props, _excluded7);
  var _useTheme = useTheme(), navigation = _useTheme.mode.navigation;
  var button = import_react23.default.createElement(IconButton, _extends({
    component,
    href,
    icon: import_react23.default.createElement(import_question_circle.default, {
      label: typeof tooltip === "string" ? tooltip : "Help Icon",
      color: "currentColor",
      spacing: "spacious",
      LEGACY_secondaryColor: navigation.backgroundColor
    }),
    id,
    isDisabled,
    isSelected,
    label,
    onBlur,
    onClick,
    onFocus,
    onMouseDown,
    onMouseEnter,
    onMouseLeave,
    onMouseUp,
    ref,
    target,
    testId,
    tooltip,
    isTooltipAnnouncementDisabled: true
    // These are all explicit, leaving it in just in case
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest));
  return badge ? import_react23.default.createElement(BadgeContainer, {
    id: HELP_NOTIFICATION_BADGE_ID,
    badge,
    role: "listitem"
  }, button) : import_react23.default.createElement("div", {
    role: "listitem"
  }, button);
});

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/Notifications/index.js
init_extends();
init_objectWithoutProperties();
var import_react24 = __toESM(require_react());
var import_notification = __toESM(require_notification3());
var _excluded8 = ["badge", "component", "href", "id", "isDisabled", "isSelected", "label", "onBlur", "onClick", "onFocus", "onMouseDown", "onMouseEnter", "onMouseLeave", "onMouseUp", "target", "testId", "tooltip"];
var NOTIFICATIONS_BADGE_ID = "atlassian-navigation-notification-count";
var Notifications = (0, import_react24.forwardRef)(function(props, ref) {
  var badge = props.badge, component = props.component, href = props.href, id = props.id, isDisabled = props.isDisabled, isSelected = props.isSelected, label = props.label, onBlur = props.onBlur, onClick = props.onClick, onFocus = props.onFocus, onMouseDown = props.onMouseDown, onMouseEnter = props.onMouseEnter, onMouseLeave = props.onMouseLeave, onMouseUp = props.onMouseUp, target = props.target, testId = props.testId, tooltip = props.tooltip, rest = _objectWithoutProperties(props, _excluded8);
  return import_react24.default.createElement(BadgeContainer, {
    id: NOTIFICATIONS_BADGE_ID,
    badge,
    role: "listitem"
  }, import_react24.default.createElement(IconButton, _extends({
    "aria-describedby": NOTIFICATIONS_BADGE_ID,
    component,
    href,
    icon: import_react24.default.createElement(import_notification.default, {
      spacing: "spacious",
      color: "currentColor",
      label: typeof tooltip === "string" ? tooltip : "Notification Icon"
    }),
    id,
    isDisabled,
    isSelected,
    label,
    onBlur,
    onClick,
    onFocus,
    onMouseDown,
    onMouseEnter,
    onMouseLeave,
    onMouseUp,
    ref,
    target,
    testId,
    tooltip,
    isTooltipAnnouncementDisabled: true
    // These are all explicit, leaving it in just in case
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest)));
});

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/ProductHome/product-home.js
init_extends();
init_objectWithoutProperties();
init_defineProperty();
var import_react25 = __toESM(require_react());
init_emotion_react_browser_development_esm();
init_esm();

// node_modules/@atlaskit/atlassian-navigation/dist/esm/utils.js
init_slicedToArray();
function stripEmptyProperties(obj) {
  return Object.entries(obj).reduce(function(acc, _ref) {
    var _ref2 = _slicedToArray(_ref, 2), key = _ref2[0], value = _ref2[1];
    if (value !== null && value !== void 0 && value !== "") {
      acc[key] = value;
    }
    return acc;
  }, {});
}

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/ProductHome/utils.js
var getTag = function getTag2(onClick, href) {
  if (href) {
    return "a";
  }
  if (onClick) {
    return "button";
  }
  return "div";
};

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/ProductHome/product-home.js
var _excluded9 = ["aria-label", "href", "icon", "logo", "logoMaxWidth", "onClick", "onMouseDown", "siteTitle", "testId"];
var VAR_LOGO_MAX_WIDTH = "--logo-max-width";
var VAR_PRODUCT_HOME_COLOR_ACTIVE = "--product-home-color-active";
var VAR_PRODUCT_HOME_BACKGROUND_COLOR_ACTIVE = "--product-home-bg-color-active";
var VAR_PRODUCT_HOME_BOX_SHADOW_ACTIVE = "--product-home-box-shadow-active";
var VAR_PRODUCT_HOME_COLOR_FOCUS = "--product-home-color-focus";
var VAR_PRODUCT_HOME_BACKGROUND_COLOR_FOCUS = "--product-home-bg-color-focus";
var VAR_PRODUCT_HOME_BOX_SHADOW_FOCUS = "--product-home-box-shadow-focus";
var VAR_PRODUCT_HOME_COLOR_HOVER = "--product-home-color-hover";
var VAR_PRODUCT_HOME_BACKGROUND_COLOR_HOVER = "--product-home-bg-color-hover";
var VAR_PRODUCT_HOME_BOX_SHADOW_HOVER = "--product-home-box-shadow-hover";
var productHomeButtonStyles = css(_defineProperty(_defineProperty({
  display: "flex",
  padding: "var(--ds-space-050, 4px)",
  alignItems: "center",
  background: "none",
  border: 0,
  borderRadius: "var(--ds-border-radius, 3px)",
  color: "inherit",
  cursor: "pointer",
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  "&::-moz-focus-inner": {
    border: 0
  },
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  "&:first-of-type": {
    marginInlineStart: 0
  },
  "&:hover": {
    backgroundColor: "var(".concat(VAR_PRODUCT_HOME_BACKGROUND_COLOR_HOVER, ")"),
    boxShadow: "var(".concat(VAR_PRODUCT_HOME_BOX_SHADOW_HOVER, ")"),
    color: "var(".concat(VAR_PRODUCT_HOME_COLOR_HOVER, ")")
  },
  "&:active": {
    backgroundColor: "var(".concat(VAR_PRODUCT_HOME_BACKGROUND_COLOR_ACTIVE, ")"),
    boxShadow: "var(".concat(VAR_PRODUCT_HOME_BOX_SHADOW_ACTIVE, ")"),
    color: "var(".concat(VAR_PRODUCT_HOME_COLOR_ACTIVE, ")")
  },
  "&:focus-visible": {
    backgroundColor: "var(".concat(VAR_PRODUCT_HOME_BACKGROUND_COLOR_FOCUS, ")"),
    color: "var(".concat(VAR_PRODUCT_HOME_COLOR_FOCUS, ")"),
    outline: "var(--ds-border-width-outline, 2px)".concat(" solid ", "var(--ds-border-focused, #4C9AFF)")
  },
  // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors, @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  "div&": {
    pointerEvents: "none"
  }
}, "@media (max-width: ".concat(PRODUCT_HOME_BREAKPOINT - 0.1, "px)"), {
  margin: "0 ".concat("var(--ds-space-100, 8px)")
}), "@media (min-width: ".concat(PRODUCT_HOME_BREAKPOINT, "px)"), {
  margin: "0 ".concat("var(--ds-space-200, 16px)")
}));
var productLogoStyles = css(_defineProperty({
  // Ensure anything passed into
  // productHome is aligned correctly
  display: "flex",
  maxWidth: "var(".concat(VAR_LOGO_MAX_WIDTH, ")"),
  // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  "& > *": {
    maxHeight: 24
  },
  // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  "& > span > svg": {
    maxWidth: "var(".concat(VAR_LOGO_MAX_WIDTH, ")")
  }
}, "@media (max-width: ".concat(PRODUCT_HOME_BREAKPOINT - 0.1, "px)"), {
  display: "none"
}));
var customMaxHeightStyles = css({
  maxHeight: 28
});
var productIconStyles = css(_defineProperty({
  // Ensure anything passed into
  // productHome is aligned correctly
  display: "flex",
  // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  "& > *": {
    maxHeight: 24
  }
}, "@media (min-width: ".concat(PRODUCT_HOME_BREAKPOINT, "px)"), {
  display: "none"
}));
var siteTitleStyles = css({
  display: "flex",
  alignItems: "center",
  marginInlineEnd: "var(--ds-space-050, 4px)",
  marginInlineStart: "var(--ds-space-050, 4px)",
  paddingInlineEnd: "var(--ds-space-200, 16px)"
});
var ProductHome = function ProductHome2(_ref) {
  var ariaLabel = _ref["aria-label"], href = _ref.href, Icon = _ref.icon, Logo = _ref.logo, _ref$logoMaxWidth = _ref.logoMaxWidth, logoMaxWidth = _ref$logoMaxWidth === void 0 ? 260 : _ref$logoMaxWidth, onClick = _ref.onClick, onMouseDown = _ref.onMouseDown, siteTitle = _ref.siteTitle, testId = _ref.testId, rest = _objectWithoutProperties(_ref, _excluded9);
  var theme = useTheme();
  var primaryButton = theme.mode.primaryButton;
  var _theme$mode$productHo = theme.mode.productHome, _theme$mode$productHo2 = _theme$mode$productHo.iconColor, iconColor = _theme$mode$productHo2 === void 0 ? fg("platform-team25-app-icon-tiles") ? void 0 : "inherit" : _theme$mode$productHo2, _theme$mode$productHo3 = _theme$mode$productHo.textColor, textColor = _theme$mode$productHo3 === void 0 ? fg("platform-team25-app-icon-tiles") ? void 0 : theme.mode.productHome.color : _theme$mode$productHo3;
  if (iconColor === "#357DE8" && textColor === "var(--ds-text, ".concat(N700, ")") && fg("platform-team25-app-icon-tiles")) {
    iconColor = void 0;
    textColor = void 0;
  }
  var Tag = getTag(onClick, href);
  var preventFocusRing = function preventFocusRing2(e) {
    e.preventDefault();
    onMouseDown && onMouseDown(e);
  };
  var productHomeButtonDynamicStyles = stripEmptyProperties(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, VAR_PRODUCT_HOME_COLOR_ACTIVE, primaryButton.active.color), VAR_PRODUCT_HOME_BACKGROUND_COLOR_ACTIVE, primaryButton.active.backgroundColor), VAR_PRODUCT_HOME_BOX_SHADOW_ACTIVE, primaryButton.active.boxShadow), VAR_PRODUCT_HOME_COLOR_FOCUS, primaryButton.focus.color), VAR_PRODUCT_HOME_BACKGROUND_COLOR_FOCUS, primaryButton.focus.backgroundColor), VAR_PRODUCT_HOME_BOX_SHADOW_FOCUS, primaryButton.focus.boxShadow), VAR_PRODUCT_HOME_COLOR_HOVER, primaryButton.hover.color), VAR_PRODUCT_HOME_BACKGROUND_COLOR_HOVER, primaryButton.hover.backgroundColor), VAR_PRODUCT_HOME_BOX_SHADOW_HOVER, primaryButton.hover.boxShadow), VAR_LOGO_MAX_WIDTH, "".concat(logoMaxWidth, "px")));
  return jsx(import_react25.Fragment, null, jsx(
    Tag,
    _extends({
      style: productHomeButtonDynamicStyles,
      css: productHomeButtonStyles,
      href,
      onClick,
      onMouseDown: preventFocusRing,
      "data-testid": testId && "".concat(testId, "-container"),
      "aria-label": ariaLabel
      // Made all props explicit, leaving just in case
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, rest),
    jsx("div", {
      css: [customMaxHeightStyles, productLogoStyles],
      "data-testid": testId && "".concat(testId, "-logo")
    }, jsx(Logo, {
      iconColor,
      textColor,
      appearance: fg("platform-team25-app-icon-tiles") ? "brand" : void 0
    })),
    jsx("div", {
      css: [customMaxHeightStyles, productIconStyles],
      "data-testid": testId && "".concat(testId, "-icon")
    }, jsx(Icon, {
      iconColor,
      size: fg("platform-team25-app-icon-tiles") ? "small" : void 0,
      appearance: fg("platform-team25-app-icon-tiles") ? "brand" : void 0
    }))
  ), siteTitle && jsx("div", {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    style: {
      borderRight: theme.mode.productHome.borderRight
    },
    css: siteTitleStyles,
    "data-testid": testId && "".concat(testId, "-site-title")
  }, siteTitle));
};
var product_home_default = ProductHome;

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/ProductHome/custom-product-home.js
init_extends();
init_objectWithoutProperties();
init_defineProperty();
var import_react27 = __toESM(require_react());
init_emotion_react_browser_development_esm();
var _excluded10 = ["href", "iconAlt", "iconUrl", "logoAlt", "logoMaxWidth", "logoUrl", "onClick", "onMouseDown", "siteTitle", "testId"];
var VAR_PRODUCT_HOME_COLOR_ACTIVE2 = "--product-home-color-active";
var VAR_PRODUCT_HOME_BACKGROUND_COLOR_ACTIVE2 = "--product-home-bg-color-active";
var VAR_PRODUCT_HOME_BOX_SHADOW_ACTIVE2 = "--product-home-box-shadow-active";
var VAR_PRODUCT_HOME_COLOR_FOCUS2 = "--product-home-color-focus";
var VAR_PRODUCT_HOME_BACKGROUND_COLOR_FOCUS2 = "--product-home-bg-color-focus";
var VAR_PRODUCT_HOME_BOX_SHADOW_FOCUS2 = "--product-home-box-shadow-focus";
var VAR_PRODUCT_HOME_COLOR_HOVER2 = "--product-home-color-hover";
var VAR_PRODUCT_HOME_BACKGROUND_COLOR_HOVER2 = "--product-home-bg-color-hover";
var VAR_PRODUCT_HOME_BOX_SHADOW_HOVER2 = "--product-home-box-shadow-hover";
var productLogoStyles2 = css(_defineProperty({
  // Ensure anything passed into
  // productHome is aligned correctly
  display: "flex"
}, "@media (max-width: ".concat(PRODUCT_HOME_BREAKPOINT - 0.1, "px)"), {
  display: "none"
}));
var customMaxHeightStyles2 = css({
  maxHeight: 28
});
var productIconStyles2 = css(_defineProperty({
  // Ensure anything passed into
  // productHome is aligned correctly
  display: "flex"
}, "@media (min-width: ".concat(PRODUCT_HOME_BREAKPOINT, "px)"), {
  display: "none"
}));
var productHomeButtonStyles2 = css(_defineProperty(_defineProperty({
  display: "flex",
  padding: "var(--ds-space-050, 4px)",
  alignItems: "center",
  background: "none",
  border: 0,
  borderRadius: "var(--ds-border-radius, 3px)",
  color: "inherit",
  cursor: "pointer",
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  "&::-moz-focus-inner": {
    border: 0
  },
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  "&:first-of-type": {
    marginInlineStart: 0
  },
  "&:hover": {
    backgroundColor: "var(".concat(VAR_PRODUCT_HOME_BACKGROUND_COLOR_HOVER2, ")"),
    boxShadow: "var(".concat(VAR_PRODUCT_HOME_BOX_SHADOW_HOVER2, ")"),
    color: "var(".concat(VAR_PRODUCT_HOME_COLOR_HOVER2, ")")
  },
  "&:active": {
    backgroundColor: "var(".concat(VAR_PRODUCT_HOME_BACKGROUND_COLOR_ACTIVE2, ")"),
    boxShadow: "var(".concat(VAR_PRODUCT_HOME_BOX_SHADOW_ACTIVE2, ")"),
    color: "var(".concat(VAR_PRODUCT_HOME_COLOR_ACTIVE2, ")")
  },
  "&:focus-visible": {
    backgroundColor: "var(".concat(VAR_PRODUCT_HOME_BACKGROUND_COLOR_FOCUS2, ")"),
    color: "var(".concat(VAR_PRODUCT_HOME_COLOR_FOCUS2, ")"),
    outline: "2px solid ".concat("var(--ds-border-focused, ".concat(B200, ")"))
  },
  // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors, @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  "div&": {
    pointerEvents: "none"
  }
}, "@media (max-width: ".concat(PRODUCT_HOME_BREAKPOINT - 0.1, "px)"), {
  margin: "0 ".concat("var(--ds-space-100, 8px)")
}), "@media (min-width: ".concat(PRODUCT_HOME_BREAKPOINT, "px)"), {
  margin: "0 ".concat("var(--ds-space-200, 16px)")
}));
var siteTitleStyles2 = css({
  display: "flex",
  alignItems: "center",
  marginInlineEnd: "var(--ds-space-050, 4px)",
  marginInlineStart: "var(--ds-space-050, 4px)",
  paddingInlineEnd: "var(--ds-space-200, 16px)"
});
var CustomProductHome = function CustomProductHome2(props) {
  var href = props.href, iconAlt = props.iconAlt, iconUrl = props.iconUrl, logoAlt = props.logoAlt, _props$logoMaxWidth = props.logoMaxWidth, logoMaxWidth = _props$logoMaxWidth === void 0 ? 260 : _props$logoMaxWidth, logoUrl = props.logoUrl, onClick = props.onClick, onMouseDown = props.onMouseDown, siteTitle = props.siteTitle, testId = props.testId, rest = _objectWithoutProperties(props, _excluded10);
  var theme = useTheme();
  var primaryButton = theme.mode.primaryButton;
  var Tag = getTag(onClick, href);
  var preventFocusRing = function preventFocusRing2(event) {
    event.preventDefault();
    onMouseDown && onMouseDown(event);
  };
  var productHomeButtonDynamicStyles = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, VAR_PRODUCT_HOME_COLOR_ACTIVE2, primaryButton.active.color), VAR_PRODUCT_HOME_BACKGROUND_COLOR_ACTIVE2, primaryButton.active.backgroundColor), VAR_PRODUCT_HOME_BOX_SHADOW_ACTIVE2, primaryButton.active.boxShadow), VAR_PRODUCT_HOME_COLOR_FOCUS2, primaryButton.focus.color), VAR_PRODUCT_HOME_BACKGROUND_COLOR_FOCUS2, primaryButton.focus.backgroundColor), VAR_PRODUCT_HOME_BOX_SHADOW_FOCUS2, primaryButton.focus.boxShadow), VAR_PRODUCT_HOME_COLOR_HOVER2, primaryButton.hover.color), VAR_PRODUCT_HOME_BACKGROUND_COLOR_HOVER2, primaryButton.hover.backgroundColor), VAR_PRODUCT_HOME_BOX_SHADOW_HOVER2, primaryButton.hover.boxShadow);
  return jsx(import_react27.Fragment, null, jsx(Tag, _extends({
    href,
    style: productHomeButtonDynamicStyles,
    css: productHomeButtonStyles2,
    onClick,
    onMouseDown: preventFocusRing,
    "data-testid": testId && "".concat(testId, "-container")
    // Currently all props are mapped, but leaving in case people are
    // passing non-explicit props
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest), logoUrl && jsx("img", {
    style: {
      maxWidth: logoMaxWidth
    },
    css: [customMaxHeightStyles2, productLogoStyles2],
    src: logoUrl,
    alt: logoAlt,
    "data-testid": testId && "".concat(testId, "-logo"),
    "data-vc": "custom-product-home-logo"
  }), iconUrl && jsx("img", {
    style: {
      maxWidth: logoMaxWidth
    },
    css: [customMaxHeightStyles2, productIconStyles2],
    src: iconUrl,
    alt: iconAlt,
    "data-testid": testId && "".concat(testId, "-icon"),
    "data-vc": "custom-product-home-icon"
  })), siteTitle && jsx("div", {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    style: {
      borderRight: theme.mode.productHome.borderRight
    },
    css: siteTitleStyles2,
    "data-testid": testId && "".concat(testId, "-site-title")
  }, siteTitle));
};
var custom_product_home_default = CustomProductHome;

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/Profile/index.js
init_extends();
init_objectWithoutProperties();
var import_react29 = __toESM(require_react());
var _excluded11 = ["component", "href", "icon", "id", "isDisabled", "isSelected", "label", "onBlur", "onClick", "onFocus", "onMouseDown", "onMouseEnter", "onMouseLeave", "onMouseUp", "target", "testId", "theme", "tooltip"];
var Profile = (0, import_react29.forwardRef)(function(props, ref) {
  var component = props.component, href = props.href, icon = props.icon, id = props.id, isDisabled = props.isDisabled, isSelected = props.isSelected, labelProp = props.label, onBlur = props.onBlur, onClick = props.onClick, onFocus = props.onFocus, onMouseDown = props.onMouseDown, onMouseEnter = props.onMouseEnter, onMouseLeave = props.onMouseLeave, onMouseUp = props.onMouseUp, target = props.target, testId = props.testId, theme = props.theme, tooltip = props.tooltip, rest = _objectWithoutProperties(props, _excluded11);
  var label = labelProp || (typeof tooltip === "string" ? tooltip : "Your profile and settings");
  return import_react29.default.createElement("div", {
    role: "listitem"
  }, import_react29.default.createElement(IconButton, _extends({
    component,
    href,
    icon,
    id,
    isDisabled,
    isSelected,
    label,
    onBlur,
    onClick,
    onFocus,
    onMouseDown,
    onMouseEnter,
    onMouseLeave,
    onMouseUp,
    ref,
    target,
    testId,
    theme,
    tooltip,
    isTooltipAnnouncementDisabled: true
    // These are mostly explicit, leaving it in just in case
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest)));
});

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/Search/index.js
init_extends();
init_objectWithoutProperties();
init_defineProperty();
var import_react30 = __toESM(require_react());
init_emotion_react_browser_development_esm();
var import_search = __toESM(require_search3());
var _excluded12 = ["component", "href", "id", "isDisabled", "isSelected", "label", "onBlur", "onClick", "onFocus", "onMouseDown", "onMouseEnter", "onMouseLeave", "onMouseUp", "placeholder", "target", "testId", "tooltip", "value"];
var searchInputContainerStyles = css(_defineProperty({
  position: "relative",
  marginInlineEnd: "var(--ds-space-100, 8px)",
  marginInlineStart: "var(--ds-space-250, 20px)"
}, "@media (max-width: ".concat(CREATE_BREAKPOINT - 1, "px)"), {
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-important-styles -- Ignored via go/DSP-18766
  display: "none !important"
}));
var searchInputIconStyles = css({
  width: "20px",
  height: "20px",
  position: "absolute",
  insetBlockStart: "5px",
  insetInlineStart: "10px",
  pointerEvents: "none"
});
var newSearchBorderStyles = css({
  border: "var(--ds-border-width, 1px)".concat(" solid"),
  "&:focus": {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    boxShadow: "inset 0 0 0 ".concat("var(--ds-border-width, 1px)", " var(", varSearchFocusBorderColor, ")")
  }
});
var searchInputStyles = css({
  boxSizing: "border-box",
  width: "220px",
  height: "var(--ds-space-400, 32px)",
  padding: "0 ".concat("var(--ds-space-100, 8px)", " 0 ", "var(--ds-space-500, 40px)"),
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  backgroundColor: "var(".concat(varSearchBackgroundColor, ")"),
  border: "2px solid",
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  borderColor: "var(".concat(varSearchBorderColor, ")"),
  borderRadius: "var(--ds-border-radius-200, 6px)",
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  color: "var(".concat(varSearchColor, ")"),
  font: 'var(--ds-font-body, normal 400 14px/20px ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)',
  outline: "none",
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  "::placeholder": {
    color: "inherit"
  },
  "&:focus": {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    borderColor: "var(".concat(varSearchFocusBorderColor, ")")
  },
  "&:hover": {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    backgroundColor: "var(".concat(varSearchHoverBackgroundColor, ")")
  }
});
var searchIconStyles = css(_defineProperty({}, "@media (min-width: ".concat(CREATE_BREAKPOINT, "px)"), {
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-important-styles -- Ignored via go/DSP-18766
  display: "none !important"
}));
var SearchComponent = function SearchComponent2(props) {
  var onClick = props.onClick, placeholder = props.placeholder, label = props.label, value = props.value;
  var theme = useTheme();
  var search = theme.mode.search;
  var onChange = function onChange2() {
    onClick && onClick.apply(void 0, arguments);
  };
  var onInputClick = function onInputClick2() {
    onClick && onClick.apply(void 0, arguments);
  };
  var searchInputDynamicStyles = stripEmptyProperties(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, varSearchBackgroundColor, search.default.backgroundColor), varSearchColor, search.default.color), varSearchBorderColor, search.default.borderColor), varSearchFocusBorderColor, search.focus.borderColor), varSearchHoverBackgroundColor, search.hover.backgroundColor));
  return jsx("div", {
    css: searchInputContainerStyles,
    role: "search"
  }, jsx("div", {
    css: searchInputIconStyles
  }, jsx(import_search.default, {
    color: "currentColor",
    spacing: "spacious",
    label: ""
  })), jsx("input", {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    style: searchInputDynamicStyles,
    css: [searchInputStyles, newSearchBorderStyles],
    "aria-label": label,
    placeholder,
    onChange,
    onClick: onInputClick,
    value
  }));
};
var Search = function Search2(props) {
  var component = props.component, href = props.href, id = props.id, isDisabled = props.isDisabled, isSelected = props.isSelected, label = props.label, onBlur = props.onBlur, onClick = props.onClick, onFocus = props.onFocus, onMouseDown = props.onMouseDown, onMouseEnter = props.onMouseEnter, onMouseLeave = props.onMouseLeave, onMouseUp = props.onMouseUp, placeholder = props.placeholder, target = props.target, testId = props.testId, tooltip = props.tooltip, value = props.value, rest = _objectWithoutProperties(props, _excluded12);
  return jsx(import_react30.Fragment, null, jsx(SearchComponent, {
    onClick,
    placeholder,
    label,
    value: value || ""
  }), jsx(IconButton, _extends({
    component,
    css: searchIconStyles,
    href,
    icon: jsx(import_search.default, {
      color: "currentColor",
      spacing: "spacious",
      label
    }),
    id,
    isDisabled,
    isSelected,
    onBlur,
    onClick,
    onFocus,
    onMouseDown,
    onMouseEnter,
    onMouseLeave,
    onMouseUp,
    target,
    testId,
    tooltip
    // Made all explicit, this is left just in case
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest)));
};

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/Settings/index.js
init_extends();
init_objectWithoutProperties();
var import_react32 = __toESM(require_react());
var import_settings = __toESM(require_settings3());
var _excluded13 = ["component", "href", "id", "isDisabled", "isSelected", "label", "onBlur", "onClick", "onFocus", "onMouseDown", "onMouseEnter", "onMouseLeave", "onMouseUp", "target", "testId", "tooltip"];
var Settings = (0, import_react32.forwardRef)(function(props, ref) {
  var component = props.component, href = props.href, id = props.id, isDisabled = props.isDisabled, isSelected = props.isSelected, label = props.label, onBlur = props.onBlur, onClick = props.onClick, onFocus = props.onFocus, onMouseDown = props.onMouseDown, onMouseEnter = props.onMouseEnter, onMouseLeave = props.onMouseLeave, onMouseUp = props.onMouseUp, target = props.target, testId = props.testId, tooltip = props.tooltip, rest = _objectWithoutProperties(props, _excluded13);
  return import_react32.default.createElement("div", {
    role: "listitem"
  }, import_react32.default.createElement(IconButton, _extends({
    component,
    href,
    icon: import_react32.default.createElement(import_settings.default, {
      color: "currentColor",
      spacing: "spacious",
      label: typeof tooltip === "string" ? tooltip : "Settings Icon"
    }),
    id,
    isDisabled,
    isSelected,
    label,
    onBlur,
    onClick,
    onFocus,
    onMouseDown,
    onMouseEnter,
    onMouseLeave,
    onMouseUp,
    ref,
    target,
    testId,
    tooltip,
    isTooltipAnnouncementDisabled: true
  }, rest)));
});

// node_modules/@atlaskit/atlassian-navigation/dist/esm/components/SignIn/index.js
init_extends();
init_objectWithoutProperties();
var import_react33 = __toESM(require_react());
var import_log_in_sign_in = __toESM(require_log_in_sign_in());
var _excluded14 = ["component", "href", "id", "isDisabled", "isSelected", "label", "onBlur", "onClick", "onFocus", "onMouseDown", "onMouseEnter", "onMouseLeave", "onMouseUp", "target", "testId", "tooltip"];
var SignIn = function SignIn2(props) {
  var component = props.component, href = props.href, id = props.id, isDisabled = props.isDisabled, isSelected = props.isSelected, label = props.label, onBlur = props.onBlur, onClick = props.onClick, onFocus = props.onFocus, onMouseDown = props.onMouseDown, onMouseEnter = props.onMouseEnter, onMouseLeave = props.onMouseLeave, onMouseUp = props.onMouseUp, target = props.target, testId = props.testId, tooltip = props.tooltip, rest = _objectWithoutProperties(props, _excluded14);
  return import_react33.default.createElement("div", {
    role: "listitem"
  }, import_react33.default.createElement(IconButton, _extends({
    component,
    href,
    icon: import_react33.default.createElement(import_log_in_sign_in.default, {
      color: "currentColor",
      spacing: "spacious",
      label: typeof tooltip === "string" ? tooltip : "Sign-in Icon"
    }),
    id,
    isDisabled,
    isSelected,
    label,
    onBlur,
    onClick,
    onFocus,
    onMouseDown,
    onMouseEnter,
    onMouseLeave,
    onMouseUp,
    target,
    testId,
    tooltip
    // These are all explicit, leaving it in just in case
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest)));
};
export {
  AppSwitcher,
  AppSwitcherNav4,
  AtlassianNavigation,
  Create,
  custom_product_home_default as CustomProductHome,
  HORIZONTAL_GLOBAL_NAV_HEIGHT,
  Help,
  IconButton,
  Notifications,
  PrimaryButton,
  PrimaryDropdownButton,
  product_home_default as ProductHome,
  Profile,
  Search,
  Settings,
  SignIn,
  ThemeProvider,
  atlassianTheme,
  generateTheme,
  useOverflowStatus
};
//# sourceMappingURL=@atlaskit_atlassian-navigation.js.map
