import {
  require_prop_types
} from "./chunk-IYLTOISH.js";
import {
  _toConsumableArray
} from "./chunk-UEZMFDUV.js";
import {
  ax
} from "./chunk-55ID7ZG3.js";
import {
  init_extends
} from "./chunk-BA6HJOCH.js";
import {
  _classCallCheck,
  _createClass,
  _defineProperty,
  _get,
  _getPrototypeOf,
  _inherits,
  _possibleConstructorReturn,
  _typeof,
  fg,
  init_classCallCheck,
  init_createClass,
  init_defineProperty,
  init_esm,
  init_get,
  init_getPrototypeOf,
  init_inherits,
  init_objectWithoutProperties,
  init_possibleConstructorReturn,
  init_typeof
} from "./chunk-2WJRDDYS.js";
import {
  require_react
} from "./chunk-2YZST6ER.js";
import {
  __toESM
} from "./chunk-EWTE5DHJ.js";

// node_modules/use-memo-one/dist/use-memo-one.esm.js
var import_react = __toESM(require_react());
function areInputsEqual(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }
  for (var i = 0; i < newInputs.length; i++) {
    if (newInputs[i] !== lastInputs[i]) {
      return false;
    }
  }
  return true;
}
function useMemoOne(getResult, inputs) {
  var initial = (0, import_react.useState)(function() {
    return {
      inputs,
      result: getResult()
    };
  })[0];
  var isFirstRun = (0, import_react.useRef)(true);
  var committed = (0, import_react.useRef)(initial);
  var useCache = isFirstRun.current || Boolean(inputs && committed.current.inputs && areInputsEqual(inputs, committed.current.inputs));
  var cache = useCache ? committed.current : {
    inputs,
    result: getResult()
  };
  (0, import_react.useEffect)(function() {
    isFirstRun.current = false;
    committed.current = cache;
  }, [cache]);
  return cache.result;
}
function useCallbackOne(callback, inputs) {
  return useMemoOne(function() {
    return callback;
  }, inputs);
}

// node_modules/@atlaskit/analytics-next/dist/esm/events/UIAnalyticsEvent.js
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_get();
init_inherits();
init_defineProperty();

// node_modules/@atlaskit/analytics-next/dist/esm/events/AnalyticsEvent.js
init_typeof();
init_classCallCheck();
init_createClass();
init_defineProperty();
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var AnalyticsEvent = function() {
  function AnalyticsEvent2(props) {
    var _this = this;
    _classCallCheck(this, AnalyticsEvent2);
    _defineProperty(this, "_isAnalyticsEvent", true);
    _defineProperty(this, "clone", function() {
      var payload = _objectSpread({}, _this.payload);
      return new AnalyticsEvent2({
        payload
      });
    });
    this.payload = props.payload;
  }
  return _createClass(AnalyticsEvent2, [{
    key: "update",
    value: function update(updater) {
      if (typeof updater === "function") {
        this.payload = updater(this.payload);
      }
      if (_typeof(updater) === "object") {
        this.payload = _objectSpread(_objectSpread({}, this.payload), updater);
      }
      return this;
    }
  }]);
}();

// node_modules/@atlaskit/analytics-next/dist/esm/events/UIAnalyticsEvent.js
function _callSuper(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct = function _isNativeReflectConstruct7() {
    return !!t;
  })();
}
function _superPropGet(t, o, e, r) {
  var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e);
  return 2 & r && "function" == typeof p ? function(t2) {
    return p.apply(e, t2);
  } : p;
}
var UIAnalyticsEvent = function(_AnalyticsEvent) {
  function UIAnalyticsEvent2(props) {
    var _this;
    _classCallCheck(this, UIAnalyticsEvent2);
    _this = _callSuper(this, UIAnalyticsEvent2, [props]);
    _defineProperty(_this, "_isUIAnalyticsEvent", true);
    _defineProperty(_this, "clone", function() {
      if (_this.hasFired) {
        if (!process.env.CI) {
          console.warn("Cannot clone an event after it's been fired.");
        }
        return null;
      }
      var context = _toConsumableArray(_this.context);
      var handlers = _toConsumableArray(_this.handlers);
      var payload = JSON.parse(JSON.stringify(_this.payload));
      return new UIAnalyticsEvent2({
        context,
        handlers,
        payload
      });
    });
    _defineProperty(_this, "fire", function(channel) {
      if (_this.hasFired) {
        if (!process.env.CI) {
          console.warn("Cannot fire an event twice.");
        }
        return;
      }
      _this.handlers.forEach(function(handler) {
        return handler(_this, channel);
      });
      _this.hasFired = true;
    });
    _this.context = props.context || [];
    _this.handlers = props.handlers || [];
    _this.hasFired = false;
    return _this;
  }
  _inherits(UIAnalyticsEvent2, _AnalyticsEvent);
  return _createClass(UIAnalyticsEvent2, [{
    key: "update",
    value: function update(updater) {
      if (this.hasFired) {
        if (!process.env.CI) {
          console.warn("Cannot update an event after it's been fired.");
        }
        return this;
      }
      return _superPropGet(UIAnalyticsEvent2, "update", this, 3)([updater]);
    }
  }]);
}(AnalyticsEvent);

// node_modules/@atlaskit/analytics-next/dist/esm/hooks/useAnalyticsContext.js
var import_react3 = __toESM(require_react());

// node_modules/@atlaskit/analytics-next-stable-react-context/dist/esm/context.js
var import_react2 = __toESM(require_react());
var AnalyticsNextContext = (0, import_react2.createContext)({
  getAtlaskitAnalyticsContext: function() {
    return [];
  },
  getAtlaskitAnalyticsEventHandlers: function() {
    return [];
  }
});
var context_default = AnalyticsNextContext;

// node_modules/@atlaskit/analytics-next-stable-react-context/dist/esm/index.js
var esm_default = context_default;

// node_modules/@atlaskit/analytics-next/dist/esm/hooks/useAnalyticsContext.js
var useAnalyticsContext = function useAnalyticsContext2() {
  return (0, import_react3.useContext)(esm_default);
};

// node_modules/@atlaskit/analytics-next/dist/esm/hooks/useAnalyticsEvents.js
function useAnalyticsEvents() {
  var analyticsContext = useAnalyticsContext();
  var createAnalyticsEvent = useCallbackOne(function(payload) {
    return new UIAnalyticsEvent({
      context: analyticsContext.getAtlaskitAnalyticsContext(),
      handlers: analyticsContext.getAtlaskitAnalyticsEventHandlers(),
      payload
    });
  }, [analyticsContext]);
  return {
    createAnalyticsEvent
  };
}

// node_modules/@atlaskit/analytics-next/dist/esm/hooks/usePlatformLeafEventHandler.js
init_defineProperty();
var import_react5 = __toESM(require_react());

// node_modules/@atlaskit/analytics-next/dist/esm/hooks/useTrackedRef.js
var import_react4 = __toESM(require_react());
var useTrackedRef = function useTrackedRef2(value) {
  var ref = (0, import_react4.useRef)(value);
  ref.current = value;
  return ref;
};

// node_modules/@atlaskit/analytics-next/dist/esm/hooks/usePlatformLeafEventHandler.js
function ownKeys2(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys2(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys2(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function usePlatformLeafEventHandler(_ref) {
  var fn = _ref.fn, action = _ref.action, componentName = _ref.componentName, actionSubject = _ref.actionSubject, packageName = _ref.packageName, packageVersion = _ref.packageVersion, analyticsData = _ref.analyticsData;
  var _useAnalyticsEvents = useAnalyticsEvents(), createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;
  var dataRef = useTrackedRef(analyticsData);
  var fnRef = useTrackedRef(fn);
  var handler = (0, import_react5.useCallback)(function(value) {
    var analyticsEvent = createAnalyticsEvent({
      action,
      actionSubject: actionSubject || componentName,
      attributes: {
        componentName,
        packageName,
        packageVersion
      }
    });
    var context = _objectSpread2({
      componentName,
      packageName,
      packageVersion
    }, dataRef.current);
    analyticsEvent.context.push(context);
    var clone = analyticsEvent.clone();
    if (clone) {
      clone.fire("atlaskit");
    }
    fnRef.current(value, analyticsEvent);
  }, [
    // These are strings and won't change
    action,
    componentName,
    actionSubject,
    packageName,
    packageVersion,
    // This function is memoized in the context
    createAnalyticsEvent,
    // these are a stable ref because of the useTrackedRef hook
    dataRef,
    fnRef
  ]);
  return handler;
}

// node_modules/@atlaskit/analytics-next/dist/esm/components/AnalyticsListener/index.js
var import_react8 = __toESM(require_react());
init_esm();

// node_modules/@atlaskit/analytics-next/dist/esm/utils/isModernContextEnabledEnv.js
var _process$env;
var isModernContextEnabledEnv_default = typeof process !== "undefined" && process !== null && ((_process$env = process.env) === null || _process$env === void 0 ? void 0 : _process$env["ANALYTICS_NEXT_MODERN_CONTEXT"]);

// node_modules/@atlaskit/analytics-next/dist/esm/components/AnalyticsListener/LegacyAnalyticsListener.js
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
init_defineProperty();
var import_react6 = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());
function _callSuper2(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct2() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct2() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct2 = function _isNativeReflectConstruct7() {
    return !!t;
  })();
}
var ContextTypes = {
  getAtlaskitAnalyticsEventHandlers: import_prop_types.default.func,
  getAtlaskitAnalyticsContext: import_prop_types.default.func
};
var noop = function noop2() {
  return [];
};
var AnalyticsListener = function(_Component) {
  function AnalyticsListener2(props) {
    var _this;
    _classCallCheck(this, AnalyticsListener2);
    _this = _callSuper2(this, AnalyticsListener2, [props]);
    _defineProperty(_this, "getChildContext", function() {
      return {
        getAtlaskitAnalyticsEventHandlers: _this.getAnalyticsEventHandlers,
        getAtlaskitAnalyticsContext: _this.getAtlaskitAnalyticsContext
      };
    });
    _defineProperty(_this, "getAnalyticsEventHandlers", function() {
      var _this$props = _this.props, channel = _this$props.channel, onEvent = _this$props.onEvent;
      var _this$context$getAtla = _this.context.getAtlaskitAnalyticsEventHandlers, getAtlaskitAnalyticsEventHandlers = _this$context$getAtla === void 0 ? noop : _this$context$getAtla;
      var handler = function handler2(event, eventChannel) {
        if (channel === "*" || channel === eventChannel) {
          onEvent(event, eventChannel);
        }
      };
      return [handler].concat(_toConsumableArray(getAtlaskitAnalyticsEventHandlers()));
    });
    _defineProperty(_this, "getAtlaskitAnalyticsContext", function() {
      var _this$context$getAtla2 = _this.context.getAtlaskitAnalyticsContext, getAtlaskitAnalyticsContext = _this$context$getAtla2 === void 0 ? noop : _this$context$getAtla2;
      return getAtlaskitAnalyticsContext();
    });
    _this.contextValue = {
      getAtlaskitAnalyticsContext: _this.getAtlaskitAnalyticsContext,
      getAtlaskitAnalyticsEventHandlers: _this.getAnalyticsEventHandlers
    };
    return _this;
  }
  _inherits(AnalyticsListener2, _Component);
  return _createClass(AnalyticsListener2, [{
    key: "render",
    value: function render() {
      var children = this.props.children;
      return import_react6.default.createElement(esm_default.Provider, {
        value: this.contextValue
      }, children);
    }
  }]);
}(import_react6.Component);
_defineProperty(AnalyticsListener, "contextTypes", ContextTypes);
_defineProperty(AnalyticsListener, "childContextTypes", ContextTypes);

// node_modules/@atlaskit/analytics-next/dist/esm/components/AnalyticsListener/ModernAnalyticsListener.js
var import_react7 = __toESM(require_react());

// node_modules/@atlaskit/analytics-next/dist/esm/components/AnalyticsContext/index.js
var import_react11 = __toESM(require_react());
init_esm();

// node_modules/@atlaskit/analytics-next/dist/esm/components/AnalyticsContext/LegacyAnalyticsContext.js
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
init_defineProperty();
var import_react9 = __toESM(require_react());
var import_prop_types2 = __toESM(require_prop_types());
function _callSuper3(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct3() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct3() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct3 = function _isNativeReflectConstruct7() {
    return !!t;
  })();
}
var ContextTypes2 = {
  getAtlaskitAnalyticsContext: import_prop_types2.default.func,
  getAtlaskitAnalyticsEventHandlers: import_prop_types2.default.func
};
var noop3 = function noop4() {
  return [];
};
var AnalyticsContext = function(_Component) {
  function AnalyticsContext4(props) {
    var _this;
    _classCallCheck(this, AnalyticsContext4);
    _this = _callSuper3(this, AnalyticsContext4, [props]);
    _defineProperty(_this, "getChildContext", function() {
      return {
        getAtlaskitAnalyticsContext: _this.getAnalyticsContext
      };
    });
    _defineProperty(_this, "getAnalyticsContext", function() {
      var data = _this.props.data;
      var _this$context$getAtla = _this.context.getAtlaskitAnalyticsContext, getAtlaskitAnalyticsContext = _this$context$getAtla === void 0 ? noop3 : _this$context$getAtla;
      return [].concat(_toConsumableArray(getAtlaskitAnalyticsContext()), [data]);
    });
    _defineProperty(_this, "getAnalyticsEventHandlers", function() {
      var _this$context$getAtla2 = _this.context.getAtlaskitAnalyticsEventHandlers, getAtlaskitAnalyticsEventHandlers = _this$context$getAtla2 === void 0 ? noop3 : _this$context$getAtla2;
      return getAtlaskitAnalyticsEventHandlers();
    });
    _this.contextValue = {
      getAtlaskitAnalyticsContext: _this.getAnalyticsContext,
      getAtlaskitAnalyticsEventHandlers: _this.getAnalyticsEventHandlers
    };
    return _this;
  }
  _inherits(AnalyticsContext4, _Component);
  return _createClass(AnalyticsContext4, [{
    key: "render",
    value: function render() {
      var children = this.props.children;
      return import_react9.default.createElement(esm_default.Provider, {
        value: this.contextValue
      }, children);
    }
  }]);
}(import_react9.Component);
_defineProperty(AnalyticsContext, "contextTypes", ContextTypes2);
_defineProperty(AnalyticsContext, "childContextTypes", ContextTypes2);
var LegacyAnalyticsContext_default = AnalyticsContext;

// node_modules/@atlaskit/analytics-next/dist/esm/components/AnalyticsContext/ModernAnalyticsContext.js
var import_react10 = __toESM(require_react());
var AnalyticsContext2 = function AnalyticsContext3(_ref) {
  var data = _ref.data, children = _ref.children;
  var dataRef = useTrackedRef(data);
  var _useAnalyticsContext = useAnalyticsContext(), getAtlaskitAnalyticsEventHandlers = _useAnalyticsContext.getAtlaskitAnalyticsEventHandlers, getOriginalAnalyticsContext = _useAnalyticsContext.getAtlaskitAnalyticsContext;
  var getAtlaskitAnalyticsContext = (0, import_react10.useCallback)(function() {
    return [].concat(_toConsumableArray(getOriginalAnalyticsContext()), [dataRef.current]);
  }, [getOriginalAnalyticsContext, dataRef]);
  var value = (0, import_react10.useMemo)(function() {
    return {
      getAtlaskitAnalyticsContext,
      getAtlaskitAnalyticsEventHandlers
    };
  }, [getAtlaskitAnalyticsContext, getAtlaskitAnalyticsEventHandlers]);
  return import_react10.default.createElement(esm_default.Provider, {
    value
  }, children);
};
var ModernAnalyticsContext_default = AnalyticsContext2;

// node_modules/@atlaskit/analytics-next/dist/esm/components/AnalyticsContext/index.js
var ExportedAnalyticsContext = function ExportedAnalyticsContext2(props) {
  var isModernContext = isModernContextEnabledEnv_default || fg("analytics-next-use-modern-context_jira");
  return isModernContext ? import_react11.default.createElement(ModernAnalyticsContext_default, props) : import_react11.default.createElement(LegacyAnalyticsContext_default, props);
};
var AnalyticsContext_default = ExportedAnalyticsContext;

// node_modules/@atlaskit/analytics-next/dist/esm/hocs/withAnalyticsContext.js
init_extends();
init_defineProperty();
init_objectWithoutProperties();
var import_react12 = __toESM(require_react());

// node_modules/@atlaskit/analytics-next/dist/esm/components/AnalyticsErrorBoundary.js
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
var import_react13 = __toESM(require_react());
init_esm();
function _callSuper4(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct4() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct4() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct4 = function _isNativeReflectConstruct7() {
    return !!t;
  })();
}
var AnalyticsErrorBoundary = function(_Component) {
  function AnalyticsErrorBoundary2(props) {
    var _this;
    _classCallCheck(this, AnalyticsErrorBoundary2);
    _this = _callSuper4(this, AnalyticsErrorBoundary2, [props]);
    _this.state = {
      hasError: false
    };
    return _this;
  }
  _inherits(AnalyticsErrorBoundary2, _Component);
  return _createClass(AnalyticsErrorBoundary2, [{
    key: "componentDidCatch",
    value: function componentDidCatch(error, info) {
      var onError = this.props.onError;
      onError && onError(error, info);
      this.setState({
        hasError: true
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props, data = _this$props.data, children = _this$props.children, ErrorComponent = _this$props.ErrorComponent;
      var hasError = this.state.hasError;
      var isModernContext = isModernContextEnabledEnv_default || fg("analytics-next-use-modern-context_jira");
      if (hasError) {
        if (ErrorComponent) {
          if (isModernContext) {
            return import_react13.default.createElement(ModernAnalyticsContext_default, {
              data
            }, import_react13.default.createElement(ErrorComponent, null));
          }
          return import_react13.default.createElement(LegacyAnalyticsContext_default, {
            data
          }, import_react13.default.createElement(ErrorComponent, null));
        }
        return null;
      }
      if (isModernContext) {
        return import_react13.default.createElement(ModernAnalyticsContext_default, {
          data
        }, children);
      }
      return import_react13.default.createElement(LegacyAnalyticsContext_default, {
        data
      }, children);
    }
  }]);
}(import_react13.Component);

// node_modules/@atlaskit/analytics-next/dist/esm/hocs/withAnalyticsEvents.js
init_extends();
var import_react15 = __toESM(require_react());

// node_modules/@atlaskit/analytics-next/dist/esm/hooks/usePatchedProps.js
init_defineProperty();
init_typeof();
var import_react14 = __toESM(require_react());

// node_modules/@atlaskit/analytics-next/dist/esm/hooks/useCallbackWithAnalytics.js
var import_react16 = __toESM(require_react());

// node_modules/@atlaskit/analytics-next/dist/esm/hooks/usePlatformLeafSyntheticEventHandler.js
init_defineProperty();
var import_react17 = __toESM(require_react());
function ownKeys3(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread3(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys3(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys3(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function usePlatformLeafSyntheticEventHandler(_ref) {
  var fn = _ref.fn, action = _ref.action, componentName = _ref.componentName, packageName = _ref.packageName, packageVersion = _ref.packageVersion, analyticsData = _ref.analyticsData;
  var _useAnalyticsEvents = useAnalyticsEvents(), createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;
  var dataRef = useTrackedRef(analyticsData);
  var fnRef = useTrackedRef(fn);
  var handler = (0, import_react17.useCallback)(function() {
    var analyticsEvent = createAnalyticsEvent({
      action,
      actionSubject: componentName,
      attributes: {
        componentName,
        packageName,
        packageVersion
      }
    });
    var context = _objectSpread3({
      componentName,
      packageName,
      packageVersion
    }, dataRef.current);
    analyticsEvent.context.push(context);
    var clone = analyticsEvent.clone();
    if (clone) {
      clone.fire("atlaskit");
    }
    fnRef.current(analyticsEvent);
  }, [
    // These are strings and won't change
    action,
    componentName,
    packageName,
    packageVersion,
    // This function is memoized in the context
    createAnalyticsEvent,
    // these are a stable ref because of the useTrackedRef hook
    dataRef,
    fnRef
  ]);
  return handler;
}

// node_modules/@atlaskit/analytics-next/dist/esm/utils/cleanProps.js
init_objectWithoutProperties();

// node_modules/@atlaskit/analytics-next/dist/esm/components/AnalyticsDecorator/index.js
init_typeof();
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
init_defineProperty();
var import_react18 = __toESM(require_react());
var import_prop_types3 = __toESM(require_prop_types());

// node_modules/@atlaskit/analytics-next/dist/esm/components/matchEvent/index.js
var ENDS_WITH_DOT = /\.$/;
function matchEvent(matcher, name) {
  if (matcher === "*" || name === void 0) {
    return true;
  }
  if (typeof matcher === "string") {
    if (ENDS_WITH_DOT.test(matcher)) {
      return name.substr(0, matcher.length) === matcher;
    }
    return name === matcher;
  }
  if (typeof matcher === "function") {
    return matcher(name);
  }
  return matcher.test(name);
}
var matchEvent_default = matchEvent;

// node_modules/@atlaskit/analytics-next/dist/esm/components/AnalyticsDecorator/index.js
function ownKeys4(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread4(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys4(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys4(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _callSuper5(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct5() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct5() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct5 = function _isNativeReflectConstruct7() {
    return !!t;
  })();
}
var ContextTypes3 = {
  onAnalyticsEvent: import_prop_types3.default.func,
  getParentAnalyticsData: import_prop_types3.default.func
};
var AnalyticsDecorator = function(_Component) {
  function AnalyticsDecorator2() {
    var _this;
    _classCallCheck(this, AnalyticsDecorator2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper5(this, AnalyticsDecorator2, [].concat(args));
    _defineProperty(_this, "getDecoratedAnalyticsData", function(name, srcData, isPrivate) {
      var _this$props = _this.props, data = _this$props.data, getData = _this$props.getData, match = _this$props.match, matchPrivate = _this$props.matchPrivate;
      var decoratedData = _objectSpread4({}, srcData);
      if (matchPrivate === isPrivate && matchEvent_default(match, name)) {
        if (_typeof(data) === "object") {
          Object.assign(decoratedData, data);
        }
        if (typeof getData === "function") {
          Object.assign(decoratedData, getData(name, decoratedData));
        }
      }
      return decoratedData;
    });
    _defineProperty(_this, "onAnalyticsEvent", function(name, srcData, isPrivate) {
      var _ref = _this.context, onAnalyticsEvent = _ref.onAnalyticsEvent;
      if (typeof onAnalyticsEvent !== "function") {
        return;
      }
      var decoratedData = _this.getDecoratedAnalyticsData(name, srcData, isPrivate);
      onAnalyticsEvent(name, decoratedData, isPrivate);
    });
    _defineProperty(_this, "getParentAnalyticsData", function(name, isPrivate) {
      var parentData = _this.getDecoratedAnalyticsData(name, {}, isPrivate);
      var _ref2 = _this.context, getParentAnalyticsData = _ref2.getParentAnalyticsData;
      if (typeof getParentAnalyticsData === "function") {
        Object.assign(parentData, getParentAnalyticsData(name, isPrivate));
      }
      return parentData;
    });
    return _this;
  }
  _inherits(AnalyticsDecorator2, _Component);
  return _createClass(AnalyticsDecorator2, [{
    key: "getChildContext",
    value: function getChildContext() {
      return {
        onAnalyticsEvent: this.onAnalyticsEvent,
        getParentAnalyticsData: this.getParentAnalyticsData
      };
    }
  }, {
    key: "render",
    value: function render() {
      var children = this.props.children;
      return import_react18.default.Children.only(children);
    }
  }]);
}(import_react18.Component);
_defineProperty(AnalyticsDecorator, "defaultProps", {
  match: "*",
  matchPrivate: false
});
_defineProperty(AnalyticsDecorator, "contextTypes", ContextTypes3);
_defineProperty(AnalyticsDecorator, "childContextTypes", ContextTypes3);

// node_modules/@atlaskit/analytics-next/dist/esm/components/AnalyticsDelegate/index.js
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
init_defineProperty();
var import_react19 = __toESM(require_react());
var import_prop_types4 = __toESM(require_prop_types());
function ownKeys5(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread5(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys5(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys5(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _callSuper6(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct6() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct6() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct6 = function _isNativeReflectConstruct7() {
    return !!t;
  })();
}
var ContextTypes4 = {
  onAnalyticsEvent: import_prop_types4.default.func
};
var AnalyticsDelegate = function(_Component) {
  function AnalyticsDelegate2() {
    var _this;
    _classCallCheck(this, AnalyticsDelegate2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper6(this, AnalyticsDelegate2, [].concat(args));
    _defineProperty(_this, "onAnalyticsEvent", function(name, data, isPrivate) {
      var delegateAnalyticsEvent = _this.props.delegateAnalyticsEvent;
      var eventData = _objectSpread5({}, data);
      if (delegateAnalyticsEvent) {
        delegateAnalyticsEvent(name, eventData, isPrivate);
      }
      var _ref = _this.context, onAnalyticsEvent = _ref.onAnalyticsEvent;
      if (typeof onAnalyticsEvent === "function") {
        onAnalyticsEvent(name, data, isPrivate);
      }
    });
    return _this;
  }
  _inherits(AnalyticsDelegate2, _Component);
  return _createClass(AnalyticsDelegate2, [{
    key: "getChildContext",
    value: function getChildContext() {
      return {
        onAnalyticsEvent: this.onAnalyticsEvent
      };
    }
  }, {
    key: "render",
    value: function render() {
      var children = this.props.children;
      return import_react19.default.Children.only(children);
    }
  }]);
}(import_react19.Component);
_defineProperty(AnalyticsDelegate, "contextTypes", ContextTypes4);
_defineProperty(AnalyticsDelegate, "childContextTypes", ContextTypes4);

// node_modules/@atlaskit/analytics-next/dist/esm/utils/withAnalytics.js
init_extends();
init_objectWithoutProperties();
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
init_defineProperty();
var import_react20 = __toESM(require_react());
var import_prop_types5 = __toESM(require_prop_types());

// node_modules/@atlaskit/ds-lib/dist/esm/utils/use-id.js
init_typeof();
var import_react23 = __toESM(require_react());

// node_modules/react-uid/dist/es2015/Control.js
var React16 = __toESM(require_react());
var import_react22 = __toESM(require_react());

// node_modules/react-uid/dist/es2015/UIDComponent.js
var React14 = __toESM(require_react());

// node_modules/react-uid/dist/es2015/context.js
var React13 = __toESM(require_react());

// node_modules/react-uid/dist/es2015/uid.js
var generateUID = function() {
  var counter2 = 1;
  var map = /* @__PURE__ */ new WeakMap();
  var uid2 = function(item, index) {
    if (typeof item === "number" || typeof item === "string") {
      return index ? "idx-".concat(index) : "val-".concat(item);
    }
    if (!map.has(item)) {
      map.set(item, counter2++);
      return uid2(item);
    }
    return "uid" + map.get(item);
  };
  return uid2;
};
var uid = generateUID();

// node_modules/react-uid/dist/es2015/context.js
var createSource = function(prefix) {
  if (prefix === void 0) {
    prefix = "";
  }
  return {
    value: 1,
    prefix,
    uid: generateUID()
  };
};
var counter = createSource();
var source = React13.createContext(createSource());
var getId = function(source2) {
  return source2.value++;
};
var getPrefix = function(source2) {
  return source2 ? source2.prefix : "";
};

// node_modules/react-uid/dist/es2015/UIDComponent.js
var __extends = /* @__PURE__ */ function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var prefixId = function(id, prefix, name) {
  var uid2 = prefix + id;
  return String(name ? name(uid2) : uid2);
};
var UID = (
  /** @class */
  function(_super) {
    __extends(UID2, _super);
    function UID2() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        quartz: _this.props.idSource || counter,
        prefix: getPrefix(_this.props.idSource),
        id: getId(_this.props.idSource || counter)
      };
      _this.uid = function(item) {
        return prefixId(_this.state.id + "-" + _this.state.quartz.uid(item), _this.state.prefix, _this.props.name);
      };
      return _this;
    }
    UID2.prototype.render = function() {
      var _a = this.props, children = _a.children, name = _a.name;
      var _b = this.state, id = _b.id, prefix = _b.prefix;
      return children(prefixId(id, prefix, name), this.uid);
    };
    return UID2;
  }(React14.Component)
);

// node_modules/react-uid/dist/es2015/hooks.js
var React15 = __toESM(require_react());
var import_react21 = __toESM(require_react());
var generateUID2 = function(context) {
  var quartz = context || counter;
  var prefix = getPrefix(quartz);
  var id = getId(quartz);
  var uid2 = prefix + id;
  var gen = function(item) {
    return uid2 + quartz.uid(item);
  };
  return { uid: uid2, gen };
};
var useUIDState = function() {
  if (true) {
    if (!("useContext" in React15)) {
      throw new Error("Hooks API requires React 16.8+");
    }
  }
  var context = (0, import_react21.useContext)(source);
  var uid2 = (0, import_react21.useState)(function() {
    return generateUID2(context);
  })[0];
  return uid2;
};
var useUID = function() {
  var uid2 = useUIDState().uid;
  return uid2;
};
var useUIDSeed = function() {
  var gen = useUIDState().gen;
  return gen;
};

// node_modules/@atlaskit/ds-lib/dist/esm/utils/use-id.js
init_esm();
var _React$useId;
var react18UseId = (_React$useId = import_react23.default.useId) !== null && _React$useId !== void 0 ? _React$useId : void 0;
function useId() {
  if (react18UseId && fg("platform-dst-react-18-use-id")) {
    return react18UseId();
  }
  return "uid".concat(useUID());
}
var IdProvider = (0, import_react23.forwardRef)(function(_ref, ref) {
  var children = _ref.children, _ref$postfix = _ref.postfix, postfix = _ref$postfix === void 0 ? "" : _ref$postfix, _ref$prefix = _ref.prefix, prefix = _ref$prefix === void 0 ? "" : _ref$prefix;
  var id = "".concat(prefix).concat(useId()).concat(postfix);
  (0, import_react23.useEffect)(function() {
    if (!ref) {
      return;
    }
    switch (_typeof(ref)) {
      case "function":
        ref(id);
        break;
      case "object":
        ref.current = id;
        break;
      default:
        throw new Error('Unreachable case for unsupported type of ref "'.concat(_typeof(ref), '"'));
    }
  }, [id, ref]);
  return import_react23.default.createElement(import_react23.default.Fragment, null, typeof children === "function" ? children({
    id
  }) : children);
});
function useIdSeed() {
  if (react18UseId && fg("platform-dst-react-18-use-id")) {
    var uid2 = react18UseId();
    return function(id) {
      return "".concat(uid2, "-").concat(id.toString());
    };
  }
  return useUIDSeed();
}

// node_modules/@atlaskit/ds-lib/dist/esm/utils/noop.js
function noop5() {
}

// node_modules/@atlaskit/visually-hidden/dist/esm/visually-hidden.js
var React18 = __toESM(require_react());
import "/Users/mjerkovic/Documents/GitHub/ads-vibecode/node_modules/@atlaskit/visually-hidden/dist/esm/visually-hidden.compiled.css";
var VisuallyHidden = function VisuallyHidden2(_ref) {
  var children = _ref.children, testId = _ref.testId, role = _ref.role, id = _ref.id;
  return React18.createElement("span", {
    id,
    "data-testid": testId,
    role,
    className: ax(["_ca0qidpf _u5f3idpf _n3tdidpf _19bvidpf _19itidpf _1reo15vq _18m915vq _1bsbt94y _4t3it94y _kqswstnw _ogto7mnp _o5721q9c"])
  }, children);
};
var visually_hidden_default = VisuallyHidden;

export {
  AnalyticsContext_default,
  useAnalyticsEvents,
  usePlatformLeafEventHandler,
  usePlatformLeafSyntheticEventHandler,
  useId,
  useIdSeed,
  noop5 as noop,
  visually_hidden_default
};
//# sourceMappingURL=chunk-CVCFKGGR.js.map
