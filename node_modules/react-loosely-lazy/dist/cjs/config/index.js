"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MODE", {
  enumerable: true,
  get: function () {
    return _constants.MODE;
  }
});
exports.setConfig = exports.getConfig = void 0;
var _constants = require("./constants");
const DEFAULT_CROSS_ORIGIN = undefined;
const DEFAULT_MANIFEST = {
  publicPath: '/',
  assets: {}
};
const DEFAULT_MODE = _constants.MODE.HYDRATE;
const DEFAULT_RETRY = 2;
const config = {
  crossOrigin: DEFAULT_CROSS_ORIGIN,
  manifest: DEFAULT_MANIFEST,
  mode: DEFAULT_MODE,
  retry: DEFAULT_RETRY
};
const getConfig = () => config;
exports.getConfig = getConfig;
const setConfig = nextConfig => {
  var _nextConfig$crossOrig, _nextConfig$manifest, _nextConfig$mode, _nextConfig$retry;
  config.crossOrigin = (_nextConfig$crossOrig = nextConfig.crossOrigin) !== null && _nextConfig$crossOrig !== void 0 ? _nextConfig$crossOrig : DEFAULT_CROSS_ORIGIN;
  config.manifest = (_nextConfig$manifest = nextConfig.manifest) !== null && _nextConfig$manifest !== void 0 ? _nextConfig$manifest : DEFAULT_MANIFEST;
  config.mode = (_nextConfig$mode = nextConfig.mode) !== null && _nextConfig$mode !== void 0 ? _nextConfig$mode : DEFAULT_MODE;
  config.retry = (_nextConfig$retry = nextConfig.retry) !== null && _nextConfig$retry !== void 0 ? _nextConfig$retry : DEFAULT_RETRY;
};
exports.setConfig = setConfig;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY29uc3RhbnRzIiwicmVxdWlyZSIsIkRFRkFVTFRfQ1JPU1NfT1JJR0lOIiwidW5kZWZpbmVkIiwiREVGQVVMVF9NQU5JRkVTVCIsInB1YmxpY1BhdGgiLCJhc3NldHMiLCJERUZBVUxUX01PREUiLCJNT0RFIiwiSFlEUkFURSIsIkRFRkFVTFRfUkVUUlkiLCJjb25maWciLCJjcm9zc09yaWdpbiIsIm1hbmlmZXN0IiwibW9kZSIsInJldHJ5IiwiZ2V0Q29uZmlnIiwiZXhwb3J0cyIsInNldENvbmZpZyIsIm5leHRDb25maWciLCJfbmV4dENvbmZpZyRjcm9zc09yaWciLCJfbmV4dENvbmZpZyRtYW5pZmVzdCIsIl9uZXh0Q29uZmlnJG1vZGUiLCJfbmV4dENvbmZpZyRyZXRyeSJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb25maWcvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBNYW5pZmVzdCB9IGZyb20gJ0ByZWFjdC1sb29zZWx5LWxhenkvbWFuaWZlc3QnO1xuXG5pbXBvcnQgeyBNT0RFIH0gZnJvbSAnLi9jb25zdGFudHMnO1xuXG5jb25zdCBERUZBVUxUX0NST1NTX09SSUdJTiA9IHVuZGVmaW5lZDtcblxuY29uc3QgREVGQVVMVF9NQU5JRkVTVCA9IHtcbiAgcHVibGljUGF0aDogJy8nLFxuICBhc3NldHM6IHt9LFxufTtcblxuY29uc3QgREVGQVVMVF9NT0RFID0gTU9ERS5IWURSQVRFO1xuXG5jb25zdCBERUZBVUxUX1JFVFJZID0gMjtcblxuZXhwb3J0IHR5cGUgQ29uZmlnID0ge1xuICBjcm9zc09yaWdpbjogJ2Fub255bW91cycgfCAndXNlLWNyZWRlbnRpYWxzJyB8IHVuZGVmaW5lZDtcbiAgbWFuaWZlc3Q6IE1hbmlmZXN0O1xuICBtb2RlOiB0eXBlb2YgTU9ERS5IWURSQVRFIHwgdHlwZW9mIE1PREUuUkVOREVSO1xuICByZXRyeTogbnVtYmVyO1xufTtcblxuY29uc3QgY29uZmlnOiBDb25maWcgPSB7XG4gIGNyb3NzT3JpZ2luOiBERUZBVUxUX0NST1NTX09SSUdJTixcbiAgbWFuaWZlc3Q6IERFRkFVTFRfTUFOSUZFU1QsXG4gIG1vZGU6IERFRkFVTFRfTU9ERSxcbiAgcmV0cnk6IERFRkFVTFRfUkVUUlksXG59O1xuXG5leHBvcnQgeyBNT0RFIH07XG5cbmV4cG9ydCBjb25zdCBnZXRDb25maWcgPSAoKSA9PiBjb25maWc7XG5cbmV4cG9ydCBjb25zdCBzZXRDb25maWcgPSAobmV4dENvbmZpZzogUGFydGlhbDxDb25maWc+KSA9PiB7XG4gIGNvbmZpZy5jcm9zc09yaWdpbiA9IG5leHRDb25maWcuY3Jvc3NPcmlnaW4gPz8gREVGQVVMVF9DUk9TU19PUklHSU47XG4gIGNvbmZpZy5tYW5pZmVzdCA9IG5leHRDb25maWcubWFuaWZlc3QgPz8gREVGQVVMVF9NQU5JRkVTVDtcbiAgY29uZmlnLm1vZGUgPSBuZXh0Q29uZmlnLm1vZGUgPz8gREVGQVVMVF9NT0RFO1xuICBjb25maWcucmV0cnkgPSBuZXh0Q29uZmlnLnJldHJ5ID8/IERFRkFVTFRfUkVUUlk7XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFFQSxJQUFBQSxVQUFBLEdBQUFDLE9BQUE7QUFFQSxNQUFNQyxvQkFBb0IsR0FBR0MsU0FBUztBQUV0QyxNQUFNQyxnQkFBZ0IsR0FBRztFQUN2QkMsVUFBVSxFQUFFLEdBQUc7RUFDZkMsTUFBTSxFQUFFLENBQUM7QUFDWCxDQUFDO0FBRUQsTUFBTUMsWUFBWSxHQUFHQyxlQUFJLENBQUNDLE9BQU87QUFFakMsTUFBTUMsYUFBYSxHQUFHLENBQUM7QUFTdkIsTUFBTUMsTUFBYyxHQUFHO0VBQ3JCQyxXQUFXLEVBQUVWLG9CQUFvQjtFQUNqQ1csUUFBUSxFQUFFVCxnQkFBZ0I7RUFDMUJVLElBQUksRUFBRVAsWUFBWTtFQUNsQlEsS0FBSyxFQUFFTDtBQUNULENBQUM7QUFJTSxNQUFNTSxTQUFTLEdBQUdBLENBQUEsS0FBTUwsTUFBTTtBQUFDTSxPQUFBLENBQUFELFNBQUEsR0FBQUEsU0FBQTtBQUUvQixNQUFNRSxTQUFTLEdBQUlDLFVBQTJCLElBQUs7RUFBQSxJQUFBQyxxQkFBQSxFQUFBQyxvQkFBQSxFQUFBQyxnQkFBQSxFQUFBQyxpQkFBQTtFQUN4RFosTUFBTSxDQUFDQyxXQUFXLElBQUFRLHFCQUFBLEdBQUdELFVBQVUsQ0FBQ1AsV0FBVyxjQUFBUSxxQkFBQSxjQUFBQSxxQkFBQSxHQUFJbEIsb0JBQW9CO0VBQ25FUyxNQUFNLENBQUNFLFFBQVEsSUFBQVEsb0JBQUEsR0FBR0YsVUFBVSxDQUFDTixRQUFRLGNBQUFRLG9CQUFBLGNBQUFBLG9CQUFBLEdBQUlqQixnQkFBZ0I7RUFDekRPLE1BQU0sQ0FBQ0csSUFBSSxJQUFBUSxnQkFBQSxHQUFHSCxVQUFVLENBQUNMLElBQUksY0FBQVEsZ0JBQUEsY0FBQUEsZ0JBQUEsR0FBSWYsWUFBWTtFQUM3Q0ksTUFBTSxDQUFDSSxLQUFLLElBQUFRLGlCQUFBLEdBQUdKLFVBQVUsQ0FBQ0osS0FBSyxjQUFBUSxpQkFBQSxjQUFBQSxpQkFBQSxHQUFJYixhQUFhO0FBQ2xELENBQUM7QUFBQ08sT0FBQSxDQUFBQyxTQUFBLEdBQUFBLFNBQUEiLCJpZ25vcmVMaXN0IjpbXX0=