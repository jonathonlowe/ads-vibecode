import { ComponentType } from 'react';
import { PRIORITY } from './constants';
import { ClientLoader, Loader, ServerLoader } from './loader';
import type { LazyOptions, LazyComponent } from './types';
export { PRIORITY };
export type { LazyOptions, LazyComponent };
export declare const DEFAULT_OPTIONS: {
    [key: string]: {
        ssr: boolean;
        defer: number;
    };
};
export declare function lazyForPaint<C extends ComponentType<any>>(loader: Loader<C>, opts?: LazyOptions): LazyComponent<C>;
export declare function lazyAfterPaint<C extends ComponentType<any>>(loader: Loader<C>, opts?: LazyOptions): LazyComponent<C>;
export declare function lazy<C extends ComponentType<any>>(loader: Loader<C>, opts?: LazyOptions): LazyComponent<C>;
export type { ClientLoader, Loader, ServerLoader };
export { isLoaderError } from './errors';
//# sourceMappingURL=index.d.ts.map