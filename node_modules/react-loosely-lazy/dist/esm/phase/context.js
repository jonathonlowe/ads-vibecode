import { createContext, useContext } from 'react';
import { PHASE } from '../constants';
import { LISTENERS } from './listeners';
import { createSubscribe } from './utils';
let CURRENT_PHASE = PHASE.PAINT;
export const setCurrent = phase => {
  CURRENT_PHASE = phase;
  LISTENERS.slice(0).forEach(listener => listener(phase));
};
export const LazyPhaseContext = /*#__PURE__*/createContext({
  subscribe: createSubscribe(LISTENERS),
  currentValue: () => CURRENT_PHASE,
  api: {
    startNextPhase: () => {
      setCurrent(PHASE.AFTER_PAINT);
    },
    resetPhase: () => setCurrent(PHASE.PAINT)
  }
});
export const useLazyPhase = () => {
  const v = useContext(LazyPhaseContext);
  return v.api;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjcmVhdGVDb250ZXh0IiwidXNlQ29udGV4dCIsIlBIQVNFIiwiTElTVEVORVJTIiwiY3JlYXRlU3Vic2NyaWJlIiwiQ1VSUkVOVF9QSEFTRSIsIlBBSU5UIiwic2V0Q3VycmVudCIsInBoYXNlIiwic2xpY2UiLCJmb3JFYWNoIiwibGlzdGVuZXIiLCJMYXp5UGhhc2VDb250ZXh0Iiwic3Vic2NyaWJlIiwiY3VycmVudFZhbHVlIiwiYXBpIiwic3RhcnROZXh0UGhhc2UiLCJBRlRFUl9QQUlOVCIsInJlc2V0UGhhc2UiLCJ1c2VMYXp5UGhhc2UiLCJ2Il0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3BoYXNlL2NvbnRleHQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IFBIQVNFIH0gZnJvbSAnLi4vY29uc3RhbnRzJztcbmltcG9ydCB0eXBlIHsgU3Vic2NyaXB0aW9uQ29udGV4dFZhbHVlIH0gZnJvbSAnLi4vbGF6eS90eXBlcyc7XG5cbmltcG9ydCB7IExJU1RFTkVSUyB9IGZyb20gJy4vbGlzdGVuZXJzJztcbmltcG9ydCB0eXBlIHsgTGlzdGVuZXIgfSBmcm9tICcuL2xpc3RlbmVycyc7XG5pbXBvcnQgeyBjcmVhdGVTdWJzY3JpYmUgfSBmcm9tICcuL3V0aWxzJztcblxubGV0IENVUlJFTlRfUEhBU0UgPSBQSEFTRS5QQUlOVDtcblxuZXhwb3J0IGNvbnN0IHNldEN1cnJlbnQgPSAocGhhc2U6IG51bWJlcikgPT4ge1xuICBDVVJSRU5UX1BIQVNFID0gcGhhc2U7XG4gIExJU1RFTkVSUy5zbGljZSgwKS5mb3JFYWNoKChsaXN0ZW5lcjogTGlzdGVuZXIpID0+IGxpc3RlbmVyKHBoYXNlKSk7XG59O1xuXG5pbnRlcmZhY2UgTGF6eVBoYXNlQ29udGV4dEFwaSBleHRlbmRzIFN1YnNjcmlwdGlvbkNvbnRleHRWYWx1ZSB7XG4gIGFwaToge1xuICAgIHN0YXJ0TmV4dFBoYXNlOiAoKSA9PiB2b2lkO1xuICAgIHJlc2V0UGhhc2U6ICgpID0+IHZvaWQ7XG4gIH07XG59XG5cbmV4cG9ydCBjb25zdCBMYXp5UGhhc2VDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxMYXp5UGhhc2VDb250ZXh0QXBpPih7XG4gIHN1YnNjcmliZTogY3JlYXRlU3Vic2NyaWJlKExJU1RFTkVSUyksXG4gIGN1cnJlbnRWYWx1ZTogKCkgPT4gQ1VSUkVOVF9QSEFTRSxcbiAgYXBpOiB7XG4gICAgc3RhcnROZXh0UGhhc2U6ICgpID0+IHtcbiAgICAgIHNldEN1cnJlbnQoUEhBU0UuQUZURVJfUEFJTlQpO1xuICAgIH0sXG4gICAgcmVzZXRQaGFzZTogKCkgPT4gc2V0Q3VycmVudChQSEFTRS5QQUlOVCksXG4gIH0sXG59KTtcblxuZXhwb3J0IGNvbnN0IHVzZUxhenlQaGFzZSA9ICgpID0+IHtcbiAgY29uc3QgdiA9IHVzZUNvbnRleHQoTGF6eVBoYXNlQ29udGV4dCk7XG5cbiAgcmV0dXJuIHYuYXBpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsYUFBYSxFQUFFQyxVQUFVLFFBQVEsT0FBTztBQUVqRCxTQUFTQyxLQUFLLFFBQVEsY0FBYztBQUdwQyxTQUFTQyxTQUFTLFFBQVEsYUFBYTtBQUV2QyxTQUFTQyxlQUFlLFFBQVEsU0FBUztBQUV6QyxJQUFJQyxhQUFhLEdBQUdILEtBQUssQ0FBQ0ksS0FBSztBQUUvQixPQUFPLE1BQU1DLFVBQVUsR0FBSUMsS0FBYSxJQUFLO0VBQzNDSCxhQUFhLEdBQUdHLEtBQUs7RUFDckJMLFNBQVMsQ0FBQ00sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDQyxPQUFPLENBQUVDLFFBQWtCLElBQUtBLFFBQVEsQ0FBQ0gsS0FBSyxDQUFDLENBQUM7QUFDckUsQ0FBQztBQVNELE9BQU8sTUFBTUksZ0JBQWdCLGdCQUFHWixhQUFhLENBQXNCO0VBQ2pFYSxTQUFTLEVBQUVULGVBQWUsQ0FBQ0QsU0FBUyxDQUFDO0VBQ3JDVyxZQUFZLEVBQUVBLENBQUEsS0FBTVQsYUFBYTtFQUNqQ1UsR0FBRyxFQUFFO0lBQ0hDLGNBQWMsRUFBRUEsQ0FBQSxLQUFNO01BQ3BCVCxVQUFVLENBQUNMLEtBQUssQ0FBQ2UsV0FBVyxDQUFDO0lBQy9CLENBQUM7SUFDREMsVUFBVSxFQUFFQSxDQUFBLEtBQU1YLFVBQVUsQ0FBQ0wsS0FBSyxDQUFDSSxLQUFLO0VBQzFDO0FBQ0YsQ0FBQyxDQUFDO0FBRUYsT0FBTyxNQUFNYSxZQUFZLEdBQUdBLENBQUEsS0FBTTtFQUNoQyxNQUFNQyxDQUFDLEdBQUduQixVQUFVLENBQUNXLGdCQUFnQixDQUFDO0VBRXRDLE9BQU9RLENBQUMsQ0FBQ0wsR0FBRztBQUNkLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=